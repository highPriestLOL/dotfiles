2015-03-31 18:09:18	▬▬▶	hapislacker (~dagnachew@bas1-montreal30-1177585814.dsl.bell.ca) has joined #scala
2015-03-31 18:09:18	--	Topic for #scala is "The Scala Programming Language http://www.scala-lang.org/ stable 2.11.5 | Scala API: http://scala-lang.org/api | Scastie http://scastie.org/ | Need help with your coursera course -> #courseraprogfun (Reactive course with Odersky http://www.coursera.org/course/reactive)"
2015-03-31 18:09:18	--	Topic set by aloiscochard (uid2076@gateway/web/irccloud.com/x-pjogambwkfmhmlkk) on Thu, 26 Feb 2015 14:55:12
2015-03-31 18:09:18	--	Channel #scala: 458 nicks (0 ops, 0 voices, 458 normals)
2015-03-31 18:09:22	▬▬▶	seanmcl_ (~seanmcl@69.64.193.242) has joined #scala
2015-03-31 18:09:29	--	Channel created on Sun, 28 Jan 2007 17:58:41
2015-03-31 18:10:09	◀▬▬	seanmcl (~seanmcl@69.64.193.242) has quit (Ping timeout: 248 seconds)
2015-03-31 18:11:53	--	irc: disconnected from server
2015-03-31 18:12:11	▬▬▶	hapislacker (~dagnachew@bas1-montreal30-1177585814.dsl.bell.ca) has joined #scala
2015-03-31 18:12:11	--	Topic for #scala is "The Scala Programming Language http://www.scala-lang.org/ stable 2.11.5 | Scala API: http://scala-lang.org/api | Scastie http://scastie.org/ | Need help with your coursera course -> #courseraprogfun (Reactive course with Odersky http://www.coursera.org/course/reactive)"
2015-03-31 18:12:11	--	Topic set by aloiscochard (uid2076@gateway/web/irccloud.com/x-pjogambwkfmhmlkk) on Thu, 26 Feb 2015 14:55:12
2015-03-31 18:12:11	--	Channel #scala: 458 nicks (0 ops, 0 voices, 458 normals)
2015-03-31 18:12:21	--	Channel created on Sun, 28 Jan 2007 17:58:41
2015-03-31 18:13:43	◀▬▬	Guest10941 (~florin@188.25.7.254) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-03-31 18:14:07	▬▬▶	vendethiel (~Vendethie@190.26.4.84.rev.sfr.net) has joined #scala
2015-03-31 18:15:05	◀▬▬	seanmcl_ (~seanmcl@69.64.193.242) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-03-31 18:16:42	▬▬▶	hgf_ (~hgf@177.142.26.155) has joined #scala
2015-03-31 18:16:56	◀▬▬	rustyrazorblade (~jhaddad@pool-74-100-96-208.lsanca.fios.verizon.net) has quit (Quit: rustyrazorblade)
2015-03-31 18:18:05	◀▬▬	mrvisser (~mrvisser@135-23-70-110.cpe.pppoe.ca) has quit (Remote host closed the connection)
2015-03-31 18:18:20	▬▬▶	virtualeyes (~godenji@37.205.56.235) has joined #scala
2015-03-31 18:19:33	◀▬▬	asteve (~asteve@unaffiliated/kxsteve) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-03-31 18:20:40	◀▬▬	jasticE (~Argus@2001:a60:1354:e601:e0fe:493:d34a:246c) has quit (Quit: Leaving.)
2015-03-31 18:21:23	--	timidtrap is now known as zzz_timidtrap
2015-03-31 18:22:05	▬▬▶	tsandall (~tsandall@184.151.231.144) has joined #scala
2015-03-31 18:23:52	▬▬▶	Florin (~florin@188.25.7.254) has joined #scala
2015-03-31 18:24:15	--	Florin is now known as Guest89841
2015-03-31 18:24:52	▬▬▶	mdedetrich (~textual@60-242-21-209.static.tpgi.com.au) has joined #scala
2015-03-31 18:25:53	◀▬▬	zzz_timidtrap (~timidtrap@c-69-137-107-198.hsd1.tn.comcast.net) has quit (Ping timeout: 264 seconds)
2015-03-31 18:25:53	◀▬▬	mcescher (~mcescher@ip5b41e7a9.dynamic.kabel-deutschland.de) has quit (Ping timeout: 264 seconds)
2015-03-31 18:27:05	▬▬▶	gabizou (~gabizou@198.199.104.23) has joined #scala
2015-03-31 18:27:33	▬▬▶	tomphp (~tomphp@84-45-128-33.static.enta.net) has joined #scala
2015-03-31 18:28:01	◀▬▬	surrealanalysis (~kevin@c-68-37-97-219.hsd1.mi.comcast.net) has quit (Quit: surrealanalysis)
2015-03-31 18:28:06	◀▬▬	JonathanThompson (~JonathanT@c-67-160-26-125.hsd1.wa.comcast.net) has quit (Read error: Connection reset by peer)
2015-03-31 18:28:14	◀▬▬	bradleyayers (~bradleyay@c110-20-193-145.rivrw10.nsw.optusnet.com.au) has quit (Remote host closed the connection)
2015-03-31 18:28:37	▬▬▶	JonathanThompson (~JonathanT@c-67-160-26-125.hsd1.wa.comcast.net) has joined #scala
2015-03-31 18:29:11	◀▬▬	virtualeyes (~godenji@37.205.56.235) has quit (Ping timeout: 250 seconds)
2015-03-31 18:29:48	▬▬▶	lebek (~user@69.158.150.138) has joined #scala
2015-03-31 18:30:56	▬▬▶	robbyoconnor (~wakawaka@guifications/user/r0bby) has joined #scala
2015-03-31 18:34:15	▬▬▶	blbrown_win3 (~blbrown_w@c-50-167-152-60.hsd1.ga.comcast.net) has joined #scala
2015-03-31 18:37:32	▬▬▶	przl (~przlrkt@p4FC31A72.dip0.t-ipconnect.de) has joined #scala
2015-03-31 18:38:33	▬▬▶	zircote (~zircote@206.208.105.139) has joined #scala
2015-03-31 18:38:44	◀▬▬	zircote (~zircote@206.208.105.139) has quit (Remote host closed the connection)
2015-03-31 18:39:03	▬▬▶	zircote (~zircote@206.208.105.139) has joined #scala
2015-03-31 18:39:11	▬▬▶	rampart81 (~rampart81@2604:2000:6a2d:a900:4d4f:d1ae:9cdc:917b) has joined #scala
2015-03-31 18:39:29	◀▬▬	Guest89841 (~florin@188.25.7.254) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-03-31 18:39:51	▬▬▶	bradleyayers (~bradleyay@c110-20-193-145.rivrw10.nsw.optusnet.com.au) has joined #scala
2015-03-31 18:40:44	◀▬▬	mdedetrich (~textual@60-242-21-209.static.tpgi.com.au) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-03-31 18:40:45	▬▬▶	Florin (~florin@188.25.7.254) has joined #scala
2015-03-31 18:41:09	texasmynsted	Anybody have a "social sharing" library that you like/use?  Like sharing with fb, twitter, etc.
2015-03-31 18:41:10	--	Florin is now known as Guest93355
2015-03-31 18:42:00	◀▬▬	ajhager (~ajhager@99-8-18-142.lightspeed.iplsin.sbcglobal.net) has quit (Ping timeout: 250 seconds)
2015-03-31 18:42:17	◀▬▬	kryptt (~kryptt@179.53.40.185) has quit (Quit: Leaving.)
2015-03-31 18:42:23	▬▬▶	kryptt (~kryptt@179.53.40.185) has joined #scala
2015-03-31 18:42:57	◀▬▬	przl (~przlrkt@p4FC31A72.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2015-03-31 18:43:38	▬▬▶	wildroman2 (~wildroman@109.186.185.235) has joined #scala
2015-03-31 18:44:15	--	irc: disconnected from server
2015-03-31 23:15:58	▬▬▶	hapislacker (~dagnachew@bas1-montreal30-1177585814.dsl.bell.ca) has joined #scala
2015-03-31 23:15:58	--	Topic for #scala is "The Scala Programming Language http://www.scala-lang.org/ stable 2.11.5 | Scala API: http://scala-lang.org/api | Scastie http://scastie.org/ | Need help with your coursera course -> #courseraprogfun (Reactive course with Odersky http://www.coursera.org/course/reactive)"
2015-03-31 23:15:58	--	Topic set by aloiscochard (uid2076@gateway/web/irccloud.com/x-pjogambwkfmhmlkk) on Thu, 26 Feb 2015 14:55:12
2015-03-31 23:15:58	--	Channel #scala: 423 nicks (0 ops, 0 voices, 423 normals)
2015-03-31 23:15:58	--	Notice(barjavel.freenode.net): [freenode-info] channel flooding and no channel staff around to help? Please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
2015-03-31 23:16:08	--	Channel created on Sun, 28 Jan 2007 17:58:41
2015-03-31 23:19:03	--	irc: disconnected from server
2015-03-31 23:19:21	▬▬▶	hapislacker (~dagnachew@bas1-montreal30-1177585814.dsl.bell.ca) has joined #scala
2015-03-31 23:19:21	--	Topic for #scala is "The Scala Programming Language http://www.scala-lang.org/ stable 2.11.5 | Scala API: http://scala-lang.org/api | Scastie http://scastie.org/ | Need help with your coursera course -> #courseraprogfun (Reactive course with Odersky http://www.coursera.org/course/reactive)"
2015-03-31 23:19:21	--	Topic set by aloiscochard (uid2076@gateway/web/irccloud.com/x-pjogambwkfmhmlkk) on Thu, 26 Feb 2015 14:55:12
2015-03-31 23:19:21	--	Channel #scala: 423 nicks (0 ops, 0 voices, 423 normals)
2015-03-31 23:19:33	▬▬▶	tsandall (~tsandall@S0106789684bf846e.vc.shawcable.net) has joined #scala
2015-03-31 23:19:33	--	Channel created on Sun, 28 Jan 2007 17:58:41
2015-03-31 23:22:28	◀▬▬	hgf_ (~hgf@177.142.26.155) has quit (Ping timeout: 255 seconds)
2015-03-31 23:22:34	▬▬▶	googol (~matthew@mnmnmnmn.tk) has joined #scala
2015-03-31 23:23:15	--	irc: disconnected from server
2015-03-31 23:23:34	▬▬▶	hapislacker (~dagnachew@bas1-montreal30-1177585814.dsl.bell.ca) has joined #scala
2015-03-31 23:23:34	--	Topic for #scala is "The Scala Programming Language http://www.scala-lang.org/ stable 2.11.5 | Scala API: http://scala-lang.org/api | Scastie http://scastie.org/ | Need help with your coursera course -> #courseraprogfun (Reactive course with Odersky http://www.coursera.org/course/reactive)"
2015-03-31 23:23:34	--	Topic set by aloiscochard (uid2076@gateway/web/irccloud.com/x-pjogambwkfmhmlkk) on Thu, 26 Feb 2015 14:55:12
2015-03-31 23:23:34	--	Channel #scala: 424 nicks (0 ops, 0 voices, 424 normals)
2015-03-31 23:23:44	--	Channel created on Sun, 28 Jan 2007 17:58:41
2015-03-31 23:24:01	▬▬▶	catpiggest (~catpig@p5496D764.dip0.t-ipconnect.de) has joined #scala
2015-03-31 23:24:23	jedws	highwind I'd image you'd want to work out the heap roots of those objects, I'd suspect that you've got something holding on to them that shouldn't
2015-03-31 23:24:55	highwind	hmm, i see, i'll check it out
2015-03-31 23:25:00	◀▬▬	catpigger (~catpig@p5496DA88.dip0.t-ipconnect.de) has quit (Ping timeout: 250 seconds)
2015-03-31 23:25:42	--	irc: disconnected from server
2015-04-01 15:23:09	▬▬▶	hapislacker (~dagnachew@bas1-montreal30-1177585814.dsl.bell.ca) has joined #scala
2015-04-01 15:23:09	--	Topic for #scala is "The Scala Programming Language http://www.scala-lang.org/ stable 2.11.5 | Scala API: http://scala-lang.org/api | Scastie http://scastie.org/ | Need help with your coursera course -> #courseraprogfun (Reactive course with Odersky http://www.coursera.org/course/reactive)"
2015-04-01 15:23:09	--	Topic set by aloiscochard (uid2076@gateway/web/irccloud.com/x-pjogambwkfmhmlkk) on Thu, 26 Feb 2015 14:55:12
2015-04-01 15:23:09	--	Channel #scala: 471 nicks (0 ops, 0 voices, 471 normals)
2015-04-01 15:23:11	--	Channel created on Sun, 28 Jan 2007 17:58:41
2015-04-01 15:23:36	◀▬▬	bblfish (~bblfish@78.193.235.5) has quit (Remote host closed the connection)
2015-04-01 15:24:17	▬▬▶	avita1 (~Adium@129.21.88.233) has joined #scala
2015-04-01 15:24:17	◀▬▬	avita11 (~Adium@129.21.88.233) has quit (Read error: Connection reset by peer)
2015-04-01 15:24:52	▬▬▶	mizu_no_oto (~textual@gw1.mcgraw-hill.com) has joined #scala
2015-04-01 15:25:19	◀▬▬	infinity0 (~infinity0@freenet/developer/infinity0) has quit (Remote host closed the connection)
2015-04-01 15:27:35	Ainieco	hm, wait but how do i use it?  BananasTable.findById(1).id says that id is not a value AppliedCompiledFunction[..]
2015-04-01 15:28:01	Ainieco	is not a member*
2015-04-01 15:28:11	--	devth_ is now known as devth
2015-04-01 15:28:12	Ainieco	is not a member of*
2015-04-01 15:28:13	Ainieco	sorry
2015-04-01 15:29:05	Jacoby6000	it's still in query mode at that point, so it still hasn't fetched the record yet. You need to call .list or .head/.first on it... I can't remember which.
2015-04-01 15:29:31	Jacoby6000	eg: findById(1).head.id or findById(1).first.id or findById(1).list.head.id
2015-04-01 15:29:35	Jacoby6000	can't remember which one of those.
2015-04-01 15:30:19	▬▬▶	kryptt (~kryptt@179.53.40.185) has joined #scala
2015-04-01 15:30:34	qu1j0t3	well
2015-04-01 15:30:34	Ainieco	Jacoby6000: works with first, thanks 
2015-04-01 15:30:37	qu1j0t3	never use head or first
2015-04-01 15:30:44	Jacoby6000	yeah, use firstOption
2015-04-01 15:30:48	▬▬▶	jeff_wda (~jeff.shaw@128.177.116.85) has joined #scala
2015-04-01 15:30:54	Jacoby6000	otherwise you'll get an error if it can't find it.
2015-04-01 15:30:55	qu1j0t3	there is also   list
2015-04-01 15:31:28	Jacoby6000	qu1j0t3: right now he's just figuring out slick I think. so i wasn't really worried about the semantics
2015-04-01 15:31:29	▬▬▶	savantgarde (~savantgar@c-2d29e555.031-174-73746f10.cust.bredbandsbolaget.se) has joined #scala
2015-04-01 15:31:34	qu1j0t3	meh
2015-04-01 15:31:38	qu1j0t3	i woudl certainly mention it
2015-04-01 15:32:21	qu1j0t3	the bite-you-in-the-ass-at-3am potential here is massive
2015-04-01 15:32:26	qu1j0t3	might as well be aware from the start
2015-04-01 15:33:07	Jacoby6000	Ainieco: read ^ if you haven't yet... Especially if you're new to scala
2015-04-01 15:33:23	qu1j0t3	:)
2015-04-01 15:33:37	Ainieco	Jacoby6000: new to scala, but not new to haskell and in haskell head is equally dangerous :)
2015-04-01 15:33:46	qu1j0t3	yep
2015-04-01 15:34:04	qu1j0t3	Ainieco: cool, you're well ahead of it :)
2015-04-01 15:35:29	▬▬▶	ArrogantWatcher (~Adium@50-200-145-182-static.hfc.comcastbusiness.net) has joined #scala
2015-04-01 15:36:24	▬▬▶	marmota_temivel (marmota_te@bl12-203-55.dsl.telepac.pt) has joined #scala
2015-04-01 15:36:52	▬▬▶	DavidDudson (~DavidDuds@121-98-138-40.bng1.nct.orcon.net.nz) has joined #scala
2015-04-01 15:37:15	▬▬▶	benjamingr (uid23465@gateway/web/irccloud.com/x-ezxszbcowrcwgdct) has joined #scala
2015-04-01 15:38:25	◀▬▬	Guest9000 (~textual@97.97.226.79) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-04-01 15:38:58	▬▬▶	malaverdiere (~malaverdi@m4211-01.rdgi.polymtl.ca) has joined #scala
2015-04-01 15:39:27	Ainieco	i have thrift struct with i64 field, in Scala i've tried to assign Int to it but got "implicit numeric widening", what is approprate type of i64 in Scala?
2015-04-01 15:40:06	malaverdiere	n00b question: How can I define a class Y within class (or object) X such that I would reference it as X.Y in other code?
2015-04-01 15:40:37	avita1	malaverdiere: I think you need to define it in an object, not a class
2015-04-01 15:41:05	Jacoby6000	! object SomeObj { class SomeClass {}}; new SomeObj.SomeClass
2015-04-01 15:41:05	multibot_	 defined object SomeObj
2015-04-01 15:41:06	multibot_	 SomeObj.SomeClass = SomeObj$SomeClass@548ee95a
2015-04-01 15:41:27	 *	malaverdiere scratches head
2015-04-01 15:41:33	◀▬▬	DavidDudson (~DavidDuds@121-98-138-40.bng1.nct.orcon.net.nz) has quit (Client Quit)
2015-04-01 15:41:43	Jacoby6000	malaverdiere: just define your class within your object like any other class
2015-04-01 15:41:43	malaverdiere	I did that for a case class in the companion object and the compiler is not happy with me
2015-04-01 15:42:01	▬▬▶	tpolecat (~anonymous@c-67-160-172-16.hsd1.or.comcast.net) has joined #scala
2015-04-01 15:42:08	Jacoby6000	! object SomeObj { case class SomeClass(test: String) {println(test)}}; new SomeObj.SomeClass("this better work")
2015-04-01 15:42:09	multibot_	 this better work
2015-04-01 15:42:10	multibot_	 defined object SomeObj
2015-04-01 15:42:11	multibot_	 SomeObj.SomeClass = SomeClass(this better work)
2015-04-01 15:42:16	avita1	:! case class Foo(); object Foo { class Bar{ } }
2015-04-01 15:42:56	avita1	! case class Foo(); object Foo { class Bar{ } }; new Foo.Bar
2015-04-01 15:42:56	multibot_	 defined class Foo
2015-04-01 15:42:57	multibot_	 defined object Foo
2015-04-01 15:42:58	multibot_	 Foo.Bar = Foo$Bar@10e95fdd
2015-04-01 15:43:06	avita1	like that?
2015-04-01 15:43:13	Jacoby6000	yup
2015-04-01 15:43:15	Jacoby6000	it worked.
2015-04-01 15:43:42	malaverdiere	I think I got it to work
2015-04-01 15:43:55	malaverdiere	But I need to use it as X.Y even in the accompanying class
2015-04-01 15:44:33	malaverdiere	! object X {case class Y(test : String)} class X{new Y("Meh")}
2015-04-01 15:44:33	multibot_	 error: ';' expected but 'class' found.
2015-04-01 15:44:34	multibot_	        object X {case class Y(test : String)} class X{new Y("Meh")}
2015-04-01 15:44:35	multibot_	                                               ^
2015-04-01 15:44:44	Ainieco	ah, it's Long
2015-04-01 15:44:50	malaverdiere	! object X {case class Y(test : String)}; class X{new Y("Meh")}
2015-04-01 15:44:50	multibot_	 error: not found: type Y
2015-04-01 15:44:51	multibot_	        object X {case class Y(test : String)}; class X{new Y("Meh")}
2015-04-01 15:44:52	multibot_	                                                            ^
2015-04-01 15:44:53	▬▬▶	i56yards (~i56yards@2.222.2.19) has joined #scala
2015-04-01 15:44:59	malaverdiere	! object X {case class Y(test : String)}; class X{new X.Y("Meh")}
2015-04-01 15:45:00	multibot_	 defined object X
2015-04-01 15:45:01	multibot_	 defined class X
2015-04-01 15:45:16	echeipesh	! object X {case class Y(test : String)}; import X._; class X{new Y("Meh")}
2015-04-01 15:45:20	multibot_	 defined object X
2015-04-01 15:45:21	multibot_	 import X._
2015-04-01 15:45:22	multibot_	 defined class X
2015-04-01 15:45:25	◀▬▬	SpellChecker (~SpellChec@94.76.72.131) has quit (Ping timeout: 272 seconds)
2015-04-01 15:45:26	Jacoby6000	I was about to do that :)
2015-04-01 15:45:40	▬▬▶	Guest9000 (~textual@97.97.226.79) has joined #scala
2015-04-01 15:46:22	 *	malaverdiere figured it out
2015-04-01 15:46:43	malaverdiere	turns out that I had another class with the same name in that package and so the compiler chose that other one instead
2015-04-01 15:47:18	Jacoby6000	yeah, that'll do it. I can see why that would be confusing
2015-04-01 15:47:41	malaverdiere	thx guys
2015-04-01 15:48:16	pfn	      query flatMap { q => Database.search(q) } find (_.nonEmpty)
2015-04-01 15:48:19	pfn	how do I make that lazy?
2015-04-01 15:48:37	pfn	I don't want to execute all queries, just until one is found
2015-04-01 15:48:45	pfn	query is currently a Seq[String]
2015-04-01 15:49:24	◀▬▬	i56yards (~i56yards@2.222.2.19) has quit (Ping timeout: 252 seconds)
2015-04-01 15:49:41	tpolecat	query.toStream ... ?
2015-04-01 15:49:43	▬▬▶	18VAACGYX (~marmota_t@bl12-203-55.dsl.telepac.pt) has joined #scala
2015-04-01 15:49:44	▬▬▶	6JTAAS4HB (~marmota_t@bl12-203-55.dsl.telepac.pt) has joined #scala
2015-04-01 15:49:53	Arrgh	Do you want it to be parallel or serial?
2015-04-01 15:50:08	◀▬▬	marmota_temivel (marmota_te@bl12-203-55.dsl.telepac.pt) has quit (Ping timeout: 256 seconds)
2015-04-01 15:50:09	pfn	do I need to force? or will find make it strict?
2015-04-01 15:50:12	pfn	and I just want sequential
2015-04-01 15:50:15	Arrgh	query.collectFirst(Database.search)
2015-04-01 15:50:39	pfn	Arrgh, and that's even better, thanks
2015-04-01 15:50:39	▬▬▶	zmack (~zmack@82-210-138-99.home.aster.pl) has joined #scala
2015-04-01 15:51:01	Arrgh	filter+map is collect, find+map is collectFirst
2015-04-01 15:51:13	▬▬▶	galderz (~galder@redhat/jboss/galderz) has joined #scala
2015-04-01 15:51:30	Jacoby6000	Arrgh: is it even possible to stop at the first occurance in parallel? how do the other tasks know to stop when one of the tasks found it?
2015-04-01 15:51:38	Arrgh	Only probabalistically
2015-04-01 15:51:39	▬▬▶	folone (~folone@dslb-188-100-071-096.188.100.pools.vodafone-ip.de) has joined #scala
2015-04-01 15:52:02	pfn	need to throw in PF.unlift(Database.search) but that's perfect, thanks
2015-04-01 15:52:14	Arrgh	It's not good engineering in general to create your own race conditions, but sometimes you really do want competing workers
2015-04-01 15:52:27	◀▬▬	dcsobral (~dcsobral@64.58.13.110) has quit (Quit: dcsobral)
2015-04-01 15:52:46	◀▬▬	18VAACGYX (~marmota_t@bl12-203-55.dsl.telepac.pt) has quit (Client Quit)
2015-04-01 15:53:34	◀▬▬	DEA7TH (~quassel@unaffiliated/dea7th) has quit (Ping timeout: 246 seconds)
2015-04-01 15:55:42	◀▬▬	folex (~Adium@2.92.250.141) has quit (Quit: Leaving.)
2015-04-01 15:56:00	◀▬▬	qwerty_nor (~Thunderbi@5.248.107.224) has quit (Ping timeout: 265 seconds)
2015-04-01 15:56:02	Jacoby6000	Arrgh: so what... you kill your other tasks when the first one returns? And you have them all start searching from somewhere different? or for example if you have 3 workers, they search every 3rd record?
2015-04-01 15:56:39	Arrgh	Jacoby6000, those are both reasonable things to do, depending on your requirements
2015-04-01 15:56:41	◀▬▬	avita1 (~Adium@129.21.88.233) has quit (Quit: Leaving.)
2015-04-01 15:56:49	▬▬▶	ssmoot (~ssmoot@rrcs-71-40-227-162.sw.biz.rr.com) has joined #scala
2015-04-01 15:56:58	Jacoby6000	ah okay.
2015-04-01 15:57:30	◀▬▬	Guest2955 (~lizzin@c-24-14-141-218.hsd1.il.comcast.net) has quit (Ping timeout: 256 seconds)
2015-04-01 15:57:47	ssmoot	I'm wondering if anyone knows how to reflect on a file and find out the objects it exports?
2015-04-01 15:58:08	qu1j0t3	what kind of file
2015-04-01 15:59:10	ssmoot	ie: If I have a Scala ScriptEngine and I compile a Foo.scala that contains "object Bar", I need to get a referece to Bar. Like val x = eval("Foo.scala") basically.
2015-04-01 15:59:26	ssmoot	But since object isn't an expression I'm not sure how to do that.
2015-04-01 16:00:05	◀▬▬	zmack (~zmack@82-210-138-99.home.aster.pl) has quit (Remote host closed the connection)
2015-04-01 16:00:30	ssmoot	These classes are going to implement a particular trait, so if I could just figure out how to find the exported objects in a file, that implement a particular class/trait, I'd be golden.
2015-04-01 16:00:39	▬▬▶	dcsobral (~dcsobral@64.58.13.110) has joined #scala
2015-04-01 16:02:53	pdxleif	I know you can go from Class to filename; not aware of any pointers in the reverse direction off the top of my head.
2015-04-01 16:02:54	tpolecat	could you provide something in the environment that the script can use to register the instance?
2015-04-01 16:03:22	▬▬▶	bblfish (~bblfish@2a01:e34:ec28:72a0:5148:45de:d3af:9374) has joined #scala
2015-04-01 16:03:41	◀▬▬	forgottenone (~forgotten@151.250.163.197) has quit (Quit: Konversation terminated!)
2015-04-01 16:04:30	◀▬▬	bblfish (~bblfish@2a01:e34:ec28:72a0:5148:45de:d3af:9374) has quit (Remote host closed the connection)
2015-04-01 16:04:42	tpolecat	divining instances by reflection is what sbt does and as far as i'm concerned it's clearly unethical
2015-04-01 16:04:56	▬▬▶	bblfish (~bblfish@2a01:e34:ec28:72a0:e4a8:96c5:49b:73ba) has joined #scala
2015-04-01 16:05:02	ssmoot	tpolecat: So I've got an abstract class Migration. It could have it's constructor register the object instances with a threadsafe collection maybe? I dunno. I need to get these object references into an ActorSystem. system.actorSelection("migrateProcess") ! migration1
2015-04-01 16:06:21	tpolecat	can you make the actor available to the script itself, so it can just say thingy ! myinstance ?
2015-04-01 16:06:31	ssmoot	I can code-gen these things instead. I'd just much prefer they be actual valid class files.
2015-04-01 16:06:41	▬▬▶	_1_ (~39140105@185.23.127.129) has joined #scala
2015-04-01 16:07:04	◀▬▬	fedesilva (~fedesilva@66.43.88.242) has quit (Remote host closed the connection)
2015-04-01 16:08:20	◀▬▬	OOPMan (~adamj@105.210.173.164) has quit (Quit: Leaving.)
2015-04-01 16:08:30	◀▬▬	wildroman2 (~wildroman@109.186.185.235) has quit (Remote host closed the connection)
2015-04-01 16:08:44	ssmoot	tpolecat: I don't know how I'd do that. Maybe a global object with a var for the actorSystem. The sbt task inits the system, assigns the global, compiles the scripts and their instantiation causes the message to fire to the global. I think that might work. Seems tasteless but I don't have a better idea.
2015-04-01 16:08:55	_1_	wat
2015-04-01 16:08:57	tpolecat	yikes
2015-04-01 16:09:05	ssmoot	heh
2015-04-01 16:09:05	_1_	ha?
2015-04-01 16:09:09	▬▬▶	wildroman2 (~wildroman@109.186.185.235) has joined #scala
2015-04-01 16:09:39	tpolecat	yeah maybe ignore everything i said. i have no idea what you're doing :-)
2015-04-01 16:09:45	_1_	?
2015-04-01 16:10:04	bikerdan	What are you guys' opinions on logging frameworks for scala?
2015-04-01 16:10:41	_1_	?
2015-04-01 16:11:02	◀▬▬	Guest9000 (~textual@97.97.226.79) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-04-01 16:11:05	▬▬▶	thomasbilk (~thomasbil@p57ACFD4B.dip0.t-ipconnect.de) has joined #scala
2015-04-01 16:11:09	ssmoot	Here's an example (the comment block): https://bitbucket.org/wieckmedia/couchdb-utils/src/22fa24cd1cc4427a34728d08fc118df4c5dfca8e/src/main/scala/com/wieck/couchdb/utils/Migration.scala?at=master#cl-50
2015-04-01 16:11:09	▬▬▶	bkuberek (~bkuberek@2600:c0e:3002:118:e83e:dc7:5ccc:8fa5) has joined #scala
2015-04-01 16:11:22	▬▬▶	charlie_sanders (~q@user-0ccsp10.cable.mindspring.com) has joined #scala
2015-04-01 16:11:37	muraiki	hi all. I have a for comprehension where all but one line return a Try; the exception (haha) is that one returns an Option from using .find. does anyone have a recommendation as to how to make Option play nicely with Try?
2015-04-01 16:11:58	_1_	no
2015-04-01 16:11:59	pdxleif	bikerdan: slf4j? log4s?
2015-04-01 16:12:27	bikerdan	pdxleif: Any particular reason for those two?
2015-04-01 16:12:29	ssmoot	That works fine. But I want to write an SBT task that'll scan a folder, compile the files in it, and find the objects that extend the Migration abstract class. Then I can send those to my system, and all is right with the world.
2015-04-01 16:12:36	pdxleif	You can make the Option into a Try if you map the None to an Exception
2015-04-01 16:13:08	◀▬▬	folone (~folone@dslb-188-100-071-096.188.100.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2015-04-01 16:13:13	tpolecat	muraiki: easiest solution is to turn it into a Try
2015-04-01 16:13:31	tpolecat	as pdxleif said
2015-04-01 16:13:42	ssmoot	Nevermind. Easy problem. I'm a stupid man.
2015-04-01 16:13:56	pdxleif	bikerdan: log4s is just a wrapper around the slf4j api that uses a macro to add an "if logLevel.isEnabled" check to save some computation cost; e.g. don't build debug strings if you're not logging at the debug level.
2015-04-01 16:13:59	▬▬▶	mrvisser (~mrvisser@76-10-128-124.dsl.teksavvy.com) has joined #scala
2015-04-01 16:14:02	ssmoot	Just load them up with a different classLoader and find everything in that classLoader that extends my abstract class.
2015-04-01 16:14:13	ssmoot	(I think).
2015-04-01 16:14:23	 *	tpolecat backs away slowly
2015-04-01 16:14:30	pdxleif	You've got a .toRight method on Option; wondering why there's no .toTry?
2015-04-01 16:14:37	pdxleif	Easy enough to write one yourself.
2015-04-01 16:15:18	▬▬▶	DavidDudson (~DavidDuds@130.123.29.164) has joined #scala
2015-04-01 16:15:29	◀▬▬	bkuberek (~bkuberek@2600:c0e:3002:118:e83e:dc7:5ccc:8fa5) has quit (Ping timeout: 256 seconds)
2015-04-01 16:15:32	muraiki	thanks. I'll have to look into how to do that as I'm still a scala noob :)
2015-04-01 16:15:42	◀▬▬	DavidDudson (~DavidDuds@130.123.29.164) has quit (Remote host closed the connection)
2015-04-01 16:15:45	▬▬▶	folex (~Adium@2.92.250.141) has joined #scala
2015-04-01 16:16:04	qu1j0t3	tpolecat: ftfy http://www.gifbin.com/bin/102011/1319738930_homer_simpson_hides_in_hedge.gif
2015-04-01 16:16:04	_1_	watt Scala?
2015-04-01 16:16:19	◀▬▬	kiviuq (~mo@aftr-37-201-241-149.unity-media.net) has quit (Ping timeout: 265 seconds)
2015-04-01 16:16:52	OlegYch	! none[Int].toFailure("oops")
2015-04-01 16:16:54	multibot_	 scalaz.Validation[Int,String] = Success(oops)
2015-04-01 16:17:05	OlegYch	oops
2015-04-01 16:17:19	OlegYch	! none[Int].toSuccess("oops")
2015-04-01 16:17:20	multibot_	 scalaz.Validation[String,Int] = Failure(oops)
2015-04-01 16:17:37	tpolecat	! scala.util.Try(Some(1).getOrElse(sys.error("empty"))) 
2015-04-01 16:17:38	multibot_	 scala.util.Try[Int] = Success(1)
2015-04-01 16:17:45	▬▬▶	folone (~folone@dslb-188-100-071-096.188.100.pools.vodafone-ip.de) has joined #scala
2015-04-01 16:17:48	◀▬▬	JonathanThompson (~JonathanT@c-67-160-26-125.hsd1.wa.comcast.net) has quit (Read error: Connection reset by peer)
2015-04-01 16:17:50	tpolecat	shrug
2015-04-01 16:17:57	◀▬▬	folone (~folone@dslb-188-100-071-096.188.100.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2015-04-01 16:18:21	▬▬▶	JonathanThompson (~JonathanT@c-67-160-26-125.hsd1.wa.comcast.net) has joined #scala
2015-04-01 16:18:44	◀▬▬	Ainieco (~Ainieco@unaffiliated/ainieco) has quit (Quit: leaving)
2015-04-01 16:18:47	pdxleif	! List(1,2,3).find(_ == 2).fold[scala.util.Try[Int]](scala.util.Failure(new NoSuchElementException("No 2 found")))(scala.util.Success(_))
2015-04-01 16:18:47	multibot_	 scala.util.Try[Int] = Success(2)
2015-04-01 16:19:09	◀▬▬	_1_ (~39140105@185.23.127.129) has quit (Quit: WhatsChat IRC Android APP)
2015-04-01 16:19:53	▬▬▶	trepidaciousMBR2 (~trepidaci@217.155.204.2) has joined #scala
2015-04-01 16:19:54	pdxleif	muraiki: Something like one of those? ^
2015-04-01 16:20:06	muraiki	thanks!
2015-04-01 16:21:04	pdxleif	I guess Try.apply + getOrElse seems close to haveing an Option.toSuccess method. But you have to throw the failure. :/
2015-04-01 16:21:04	▬▬▶	Guest9000 (~textual@97.97.226.79) has joined #scala
2015-04-01 16:21:19	◀▬▬	Squarism (~Squarism4@130.238.144.183) has quit (Ping timeout: 244 seconds)
2015-04-01 16:23:05	◀▬▬	zircote (~zircote@206.208.105.139) has quit (Remote host closed the connection)
2015-04-01 16:23:10	◀▬▬	RevBayes (~RevBayes@168.215.217.226) has quit (Remote host closed the connection)
2015-04-01 16:23:27	▬▬▶	zmack (~zmack@82-210-138-99.home.aster.pl) has joined #scala
2015-04-01 16:23:31	◀▬▬	zmack (~zmack@82-210-138-99.home.aster.pl) has quit (Remote host closed the connection)
2015-04-01 16:23:39	◀▬▬	echeipesh (~echeipesh@216.158.51.82) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-04-01 16:24:42	▬▬▶	echeipesh (~echeipesh@216.158.51.82) has joined #scala
2015-04-01 16:24:52	▬▬▶	zmack (~zmack@82-210-138-99.home.aster.pl) has joined #scala
2015-04-01 16:25:13	▬▬▶	SpellChecker (~SpellChec@94.76.72.131) has joined #scala
2015-04-01 16:25:56	▬▬▶	zircote (~zircote@206.208.105.139) has joined #scala
2015-04-01 16:25:58	◀▬▬	drumr (drumr@ip70-162-99-48.ph.ph.cox.net) has quit (Quit: Leaving)
2015-04-01 16:26:36	◀▬▬	zircote (~zircote@206.208.105.139) has quit (Remote host closed the connection)
2015-04-01 16:26:49	▬▬▶	zircote (~zircote@206.208.105.139) has joined #scala
2015-04-01 16:28:23	◀▬▬	Paks (~paks@c-98-220-219-45.hsd1.il.comcast.net) has quit (Ping timeout: 265 seconds)
2015-04-01 16:28:47	◀▬▬	eriksensei (~Adium@546B12FD.cm-12-4a.dynamic.ziggo.nl) has quit (Quit: Leaving.)
2015-04-01 16:29:33	◀▬▬	zmack (~zmack@82-210-138-99.home.aster.pl) has quit (Remote host closed the connection)
2015-04-01 16:31:48	▬▬▶	zmack (~zmack@82-210-138-99.home.aster.pl) has joined #scala
2015-04-01 16:32:10	◀▬▬	xplat (~james@67.205.253.166) has quit (Ping timeout: 244 seconds)
2015-04-01 16:32:36	▬▬▶	dlitz (~dwon@goedel.dlitz.net) has joined #scala
2015-04-01 16:32:47	◀▬▬	zmack (~zmack@82-210-138-99.home.aster.pl) has quit (Remote host closed the connection)
2015-04-01 16:32:57	◀▬▬	malaverdiere (~malaverdi@m4211-01.rdgi.polymtl.ca) has quit (Quit: Leaving)
2015-04-01 16:32:59	▬▬▶	tomphp (~tomphp@84-45-128-33.static.enta.net) has joined #scala
2015-04-01 16:33:36	◀▬▬	jasticE (~Argus@aftr-88-217-180-114.dynamic.mnet-online.de) has quit (Quit: Leaving.)
2015-04-01 16:33:50	◀▬▬	boulderdan (~boulderda@50.250.135.57) has quit
2015-04-01 16:34:49	▬▬▶	boulderdan (~boulderda@50.250.135.57) has joined #scala
2015-04-01 16:35:07	◀▬▬	coltfred (~coltfred@inet-rmmc10-o.oracle.com) has quit (Remote host closed the connection)
2015-04-01 16:35:47	◀▬▬	logzet (~logzet@unaffiliated/logzet) has quit (Quit: Just realized that im out of cookies, Nooo-... (beeeep))
2015-04-01 16:36:41	▬▬▶	zmack (~zmack@82-210-138-99.home.aster.pl) has joined #scala
2015-04-01 16:37:06	◀▬▬	virtualeyes (~godenji@137.213.114.78.rev.sfr.net) has quit (Ping timeout: 265 seconds)
2015-04-01 16:37:15	◀▬▬	trepidaciousMBR2 (~trepidaci@217.155.204.2) has quit (Quit: trepidaciousMBR2)
2015-04-01 16:38:03	▬▬▶	DavidDudson (~DavidDuds@130.123.29.164) has joined #scala
2015-04-01 16:38:58	▬▬▶	fedesilva (~fedesilva@66.43.88.242) has joined #scala
2015-04-01 16:39:26	▬▬▶	xplat (~james@67.205.253.166) has joined #scala
2015-04-01 16:39:28	◀▬▬	fedesilva (~fedesilva@66.43.88.242) has quit (Read error: Connection reset by peer)
2015-04-01 16:39:39	◀▬▬	msaegesser (~msaegesse@50.249.210.221) has quit (Ping timeout: 264 seconds)
2015-04-01 16:40:05	▬▬▶	fedesilva (~fedesilva@66.43.88.242) has joined #scala
2015-04-01 16:41:24	◀▬▬	thomasbilk (~thomasbil@p57ACFD4B.dip0.t-ipconnect.de) has quit (Quit: Konversation terminated!)
2015-04-01 16:43:05	◀▬▬	Guest9000 (~textual@97.97.226.79) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-04-01 16:43:33	▬▬▶	bkuberek (~bkuberek@2600:c0e:3002:118:ac88:8806:d8ca:c044) has joined #scala
2015-04-01 16:43:43	▬▬▶	trepidaciousMBR2 (~trepidaci@217.155.204.2) has joined #scala
2015-04-01 16:43:52	▬▬▶	pulpfiction_ (~pulpficti@unaffiliated/pulpfiction) has joined #scala
2015-04-01 16:43:59	pulpfiction_	anyone with experience in mockito?
2015-04-01 16:44:53	datura	i had to use in in java a little bit...
2015-04-01 16:45:48	qu1j0t3	me too!
2015-04-01 16:46:50	pulpfiction_	i'm configuring a mock with:
2015-04-01 16:46:56	pulpfiction_	prodSuggestMock.suggest("DIPIRONA") returns successSuggestJSON
2015-04-01 16:47:23	pulpfiction_	so if prodSuggestMock.suggest() is called passing "DIPIRONA", it'll return successSuggestJSON
2015-04-01 16:47:54	pulpfiction_	is it possible to add more strict rules, for instance?
2015-04-01 16:48:02	pulpfiction_	prodSuggestMock.suggest("DIPIRONA").numOfSuggestions(1) returns successSuggestJSON
2015-04-01 16:48:37	pulpfiction_	(if prodSuggestMock.suggest() is called passing "DIPIRONA" and .numOfSuggestions() is called passing 1, it'll return successSuggestJSON)
2015-04-01 16:50:17	OlegYch	suggest returns anotherMock; anotherMock.num returns success ?
2015-04-01 16:50:19	◀▬▬	zmack (~zmack@82-210-138-99.home.aster.pl) has quit (Remote host closed the connection)
2015-04-01 16:50:24	◀▬▬	galderz (~galder@redhat/jboss/galderz) has quit (Quit: Leaving)
2015-04-01 16:51:03	◀▬▬	mcescher (~mcescher@ip5b41e7a9.dynamic.kabel-deutschland.de) has quit (Ping timeout: 264 seconds)
2015-04-01 16:54:40	◀▬▬	wildroman2 (~wildroman@109.186.185.235) has quit (Remote host closed the connection)
2015-04-01 16:58:57	◀▬▬	enebo (~enebo@c-75-73-8-169.hsd1.mn.comcast.net) has quit (Quit: enebo)
2015-04-01 17:00:03	pfn	is there an adapter from a java iterable into a scala collection type?
2015-04-01 17:01:03	▬▬▶	wildroman2 (~wildroman@109.186.185.235) has joined #scala
2015-04-01 17:01:21	▬▬▶	drumr (~drumr@ip70-162-99-48.ph.ph.cox.net) has joined #scala
2015-04-01 17:02:15	qu1j0t3	pfn: got the scaladoc handy?
2015-04-01 17:02:24	tpolecat	pfn: yeah JavaConverters gives you a conversion
2015-04-01 17:02:45	pfn	oh, thought I imported them already
2015-04-01 17:03:44	pfn	thanks
2015-04-01 17:03:54	datura	i never know which is the sensible one of JavaConverters and JavaConversions.. i should remove the crappy one from my scaladoc :/
2015-04-01 17:04:14	◀▬▬	paddyez (~paddy@wikipedia/paddyez) has quit (Ping timeout: 256 seconds)
2015-04-01 17:04:21	◀▬▬	pulpfiction_ (~pulpficti@unaffiliated/pulpfiction) has quit (Ping timeout: 264 seconds)
2015-04-01 17:04:24	◀▬▬	jarod7736 (~jarod7736@66-90-136-8.static.grandenetworks.net) has quit (Ping timeout: 255 seconds)
2015-04-01 17:04:51	pfn	n = never use
2015-04-01 17:05:04	◀▬▬	makaveli0227TL (~makaveli0@66.9.135.66) has quit (Remote host closed the connection)
2015-04-01 17:05:04	pfn	javaconverters is what you should use
2015-04-01 17:05:08	pfn	I always just use conversions
2015-04-01 17:05:08	tpolecat	+1
2015-04-01 17:05:20	tpolecat	yikes
2015-04-01 17:05:43	◀▬▬	wildroman2 (~wildroman@109.186.185.235) has quit (Remote host closed the connection)
2015-04-01 17:06:07	▬▬▶	tomh- (uid501@gateway/web/irccloud.com/x-goaziovxytufidgx) has joined #scala
2015-04-01 17:06:25	▬▬▶	wildroman2 (~wildroman@109.186.185.235) has joined #scala
2015-04-01 17:06:42	tpolecat	when i type setLayout(new GridBagLayout) i know my next few hours are going to suck
2015-04-01 17:06:44	◀▬▬	mrvisser (~mrvisser@76-10-128-124.dsl.teksavvy.com) has quit (Remote host closed the connection)
2015-04-01 17:07:38	◀▬▬	wicope (~wicope@117.Red-88-27-63.staticIP.rima-tde.net) has quit (Read error: Connection reset by peer)
2015-04-01 17:07:53	qu1j0t3	:-)
2015-04-01 17:08:13	◀▬▬	boogie (~boogie@66.238.18.243.ptr.us.xo.net) has quit (Quit: Leaving...)
2015-04-01 17:09:23	OlegYch	wow
2015-04-01 17:09:36	OlegYch	someone's using gridbag
2015-04-01 17:09:44	◀▬▬	zircote (~zircote@206.208.105.139) has quit (Remote host closed the connection)
2015-04-01 17:10:05	▬▬▶	zircote (~zircote@206.208.105.139) has joined #scala
2015-04-01 17:10:20	wabash	tpolecat: val constraint = new Constraint(.....);
2015-04-01 17:10:23	wabash	over and over.
2015-04-01 17:10:46	tpolecat	add(woozle, new GridBagConstraints <| { c => ... 
2015-04-01 17:10:57	tpolecat	at least scalaz id syntax makes it a little less horrible
2015-04-01 17:11:39	OlegYch	you could've just ommitted <| with the same effect
2015-04-01 17:11:44	▬▬▶	jedws (~jedws@c58-109-93-39.randw3.nsw.optusnet.com.au) has joined #scala
2015-04-01 17:12:05	◀▬▬	trepidaciousMBR2 (~trepidaci@217.155.204.2) has quit (Quit: trepidaciousMBR2)
2015-04-01 17:12:29	datura	tpolecat: with a little bit of DSL magic it's not too bad https://github.com/ritschwumm/jackdaw/blob/master/src/main/scala/jackdaw/gui/DeckUI.scala?ts=4#L92
2015-04-01 17:12:31	OlegYch	! new java.awt.GridBagConstraints { c => c }
2015-04-01 17:12:31	tpolecat	true, i try to avoid the anonymous subtyping
2015-04-01 17:12:31	multibot_	 warning: a pure expression does nothing in statement position; you may be omitting necessary parentheses
2015-04-01 17:12:32	multibot_	               new java.awt.GridBagConstraints { c => c }
2015-04-01 17:12:33	multibot_	                                                      ^
2015-04-01 17:12:34	multibot_	 java.lang.SecurityException: ("java.lang.RuntimePermission" "accessClassInPackage.sun.awt.resources")
2015-04-01 17:12:35	multibot_	 	at org.multibot.ScriptSecurityManager$.doChecks(ScriptSecurityManager.scala:78)
2015-04-01 17:12:45	◀▬▬	lebek (~user@64.215.160.27) has quit (Ping timeout: 264 seconds)
2015-04-01 17:12:55	datura	insets suck, though
2015-04-01 17:13:13	OlegYch	miglayout works best imo
2015-04-01 17:13:23	datura	stringly typed constraints ;?)
2015-04-01 17:14:26	qu1j0t3	woot
2015-04-01 17:14:31	datura	i still want something like cassowary. proper constraints are surprisingly convenient.
2015-04-01 17:14:33	OlegYch	afair it had a dsl
2015-04-01 17:14:49	datura	could be, haven't looked at miglayout for a long, long time.
2015-04-01 17:15:25	Jacoby6000	hm... I think I'm going to release a package that contains an implicits package that allows you to treat scala as a unityped language, just to make people mad. that sounds fun
2015-04-01 17:15:37	datura	please do :
2015-04-01 17:15:38	datura	)
2015-04-01 17:15:44	Jacoby6000	import Unitype._
2015-04-01 17:16:08	Jacoby6000	true == "asdf" <- evaluates to true
2015-04-01 17:16:30	▬▬▶	avita1 (~Adium@129.21.88.233) has joined #scala
2015-04-01 17:16:45	▬▬▶	paddyez (~paddy@x5f748325.dyn.telefonica.de) has joined #scala
2015-04-01 17:16:45	◀▬▬	paddyez (~paddy@x5f748325.dyn.telefonica.de) has quit (Changing host)
2015-04-01 17:16:45	▬▬▶	paddyez (~paddy@wikipedia/paddyez) has joined #scala
2015-04-01 17:17:33	◀▬▬	vixlur (~vixlur@89-74-10-46.dynamic.chello.pl) has quit (Quit: Leaving)
2015-04-01 17:18:16	◀▬▬	mizu_no_oto (~textual@gw1.mcgraw-hill.com) has quit (Ping timeout: 246 seconds)
2015-04-01 17:18:37	◀▬▬	adamdecaf (~adamdecaf@65-121-142-238.dia.static.qwest.net) has quit (Ping timeout: 246 seconds)
2015-04-01 17:18:40	Jacoby6000	Then I get to add === and !== methods, for "type-safe" checking
2015-04-01 17:18:44	▬▬▶	Guest9000 (~textual@97.97.226.79) has joined #scala
2015-04-01 17:18:49	Jacoby6000	this sounds like it could be fun
2015-04-01 17:19:05	datura	OlegYch: http://www.miglayout.com/QuickStart.pdf looks very much like "use strings", right?
2015-04-01 17:19:15	▬▬▶	folone (~folone@dslb-188-100-071-096.188.100.pools.vodafone-ip.de) has joined #scala
2015-04-01 17:19:19	qu1j0t3	Jacoby6000: **** APRIL 1 ****
2015-04-01 17:19:22	◀▬▬	DavidDudson (~DavidDuds@130.123.29.164) has left #scala ("Goodbye all, and thankyou.")
2015-04-01 17:19:26	▬▬▶	DavidDudson (~DavidDuds@130.123.29.164) has joined #scala
2015-04-01 17:19:33	Jacoby6000	qu1j0t3: what?
2015-04-01 17:19:41	qu1j0t3	Jacoby6000: nice April Fool's joke!
2015-04-01 17:19:44	Jacoby6000	oh yeah. that. I'm really going to do it
2015-04-01 17:20:04	Jacoby6000	I always forget it's april 1st. I believed aliens two years ago
2015-04-01 17:20:05	--	irc: disconnected from server
2015-04-01 17:29:27	▬▬▶	hapislacker (~dagnachew@bas1-montreal30-1177585814.dsl.bell.ca) has joined #scala
2015-04-01 17:29:27	--	Topic for #scala is "The Scala Programming Language http://www.scala-lang.org/ stable 2.11.5 | Scala API: http://scala-lang.org/api | Scastie http://scastie.org/ | Need help with your coursera course -> #courseraprogfun (Reactive course with Odersky http://www.coursera.org/course/reactive)"
2015-04-01 17:29:27	--	Topic set by aloiscochard (uid2076@gateway/web/irccloud.com/x-pjogambwkfmhmlkk) on Thu, 26 Feb 2015 14:55:12
2015-04-01 17:29:27	--	Channel #scala: 459 nicks (0 ops, 0 voices, 459 normals)
2015-04-01 17:29:40	--	Channel created on Sun, 28 Jan 2007 17:58:41
2015-04-01 17:29:44	◀▬▬	zircote (~zircote@206.208.105.139) has quit (Remote host closed the connection)
2015-04-01 17:29:59	▬▬▶	zircote (~zircote@206.208.105.139) has joined #scala
2015-04-01 17:30:16	▬▬▶	asteve (~asteve@unaffiliated/kxsteve) has joined #scala
2015-04-01 17:30:27	▬▬▶	marr (~ccc@159-205-222-176.adsl.inetia.pl) has joined #scala
2015-04-01 17:30:38	◀▬▬	savantgarde (~savantgar@c-2d29e555.031-174-73746f10.cust.bredbandsbolaget.se) has quit (Remote host closed the connection)
2015-04-01 17:31:10	▬▬▶	timidtrap (~timidtrap@209.119.227.66) has joined #scala
2015-04-01 17:31:14	◀▬▬	crobbins (~crobbins@2602:306:3403:d520:d0a5:d82:4814:546d) has quit (Ping timeout: 265 seconds)
2015-04-01 17:31:32	Jacoby6000	ressetting the bot kills it though :c
2015-04-01 17:31:35	◀▬▬	pgokeeffe (~pgokeeffe@101.165.93.194) has quit (Ping timeout: 244 seconds)
2015-04-01 17:32:07	tpolecat	! 1
2015-04-01 17:32:12	multibot_	 Int = 1
2015-04-01 17:32:33	◀▬▬	jcalonso86 (~Juan_Carl@bcdcb1c4.skybroadband.com) has quit (Ping timeout: 264 seconds)
2015-04-01 17:33:09	Jacoby6000	damn scala! "error: an expression of type Null is ineligible for implicit conversion"
2015-04-01 17:33:41	▬▬▶	marmota_temivel (~marmota_t@bl12-203-55.dsl.telepac.pt) has joined #scala
2015-04-01 17:34:07	▬▬▶	mintmint (40c08581@gateway/web/freenode/ip.64.192.133.129) has joined #scala
2015-04-01 17:34:25	qu1j0t3	looks like it is tryign to save you from yourself
2015-04-01 17:34:30	mintmint	Hello. I know this might seem like a silly question, but what is the best (and modern) way to load a file from disc, then read in all its lines?
2015-04-01 17:34:44	Jacoby6000	qu1j0t3: it's destroying my evil plan.
2015-04-01 17:34:55	mintmint	Currently we do Source.fromFile, but we never close the stream. As I researched more, everyone was all "source is a hack shit sucks"
2015-04-01 17:36:09	◀▬▬	timidtrap (~timidtrap@209.119.227.66) has quit (Ping timeout: 264 seconds)
2015-04-01 17:36:26	tpolecat	mintmint: well you need to close the source when you're done. is there any reason you can't do this?
2015-04-01 17:37:10	mintmint	tpolecat: Its a thickly overcomplex system i'm dealing with
2015-04-01 17:37:31	mintmint	Right now, there is a "helper" function that just does Source.fromFile(inFileName).getLines
2015-04-01 17:37:32	refefer	loner pattern works well for problems like Source
2015-04-01 17:37:55	mintmint	so the user of this api apparently expects to get the entire file, in memory, in an iterable, that they can do whatever with.
2015-04-01 17:38:07	◀▬▬	folex (~Adium@2.92.250.141) has quit (Quit: Leaving.)
2015-04-01 17:38:11	mintmint	Does that make sense?
2015-04-01 17:38:25	refefer	mintmint: yeah, that's a bummer
2015-04-01 17:38:37	refefer	you can write a wrapper method that closes after the file has been consumed
2015-04-01 17:38:40	tpolecat	mintmint: that is terrible because you're handing back an iterator, but if the file will fit into memory you can say .toList and give them a list .. would that work? in that case you can certainly close the stream
2015-04-01 17:38:53	▬▬▶	folex (~Adium@2.92.250.141) has joined #scala
2015-04-01 17:38:55	tpolecat	refefer: what if they don't consume the whole iterator
2015-04-01 17:39:02	refefer	tpolecat: yep, won't help
2015-04-01 17:39:09	◀▬▬	Ir1sh (~Ir1sh@109.255.196.35) has quit (Remote host closed the connection)
2015-04-01 17:39:14	refefer	that said, if the file is too big for memory, not sure what the recourse is in this case
2015-04-01 17:39:20	mintmint	tpolecat: agreed, this was something I just found, and am not thrilled
2015-04-01 17:39:24	tpolecat	mintmint: or even .toList.iterator if they insist on insanity
2015-04-01 17:39:26	mintmint	If its too big for memory and I do a tolist
2015-04-01 17:39:27	--	jayunit100 is now known as jayunit100-mac
2015-04-01 17:39:30	mintmint	will it just detonate?
2015-04-01 17:39:44	refefer	mintmint: you'll GC spiral and go down
2015-04-01 17:39:53	▬▬▶	malaverdiere (~marc-andr@5-73-252-216.dsl.colba.net) has joined #scala
2015-04-01 17:40:02	▬▬▶	eriksensei (~Adium@546B12FD.cm-12-4a.dynamic.ziggo.nl) has joined #scala
2015-04-01 17:40:06	refefer	mintmint: can you invert the flow as a loaner?
2015-04-01 17:40:09	tpolecat	yeah. not good. there's a thing called scalaz-stream that gives you a safe way to do this, but it's far from where you're at
2015-04-01 17:40:16	mintmint	Sounds good. I'll do a toList, and try to change anything that's using it to a more better system
2015-04-01 17:40:23	mintmint	where I do fromFile and close it properly
2015-04-01 17:40:27	mintmint	rather than handing back a list
2015-04-01 17:40:43	mintmint	refefer: What does that mean?
2015-04-01 17:41:05	▬▬▶	Paks (~paks@c-71-239-122-174.hsd1.il.comcast.net) has joined #scala
2015-04-01 17:41:07	◀▬▬	RevBayes (~RevBayes@2602:301:77a8:dfc0:71f5:aee0:f6ff:ec8e) has quit (Remote host closed the connection)
2015-04-01 17:41:18	◀▬▬	alexgaribay (~textual@cpe-24-94-190-211.kc.res.rr.com) has quit
2015-04-01 17:41:34	tpolecat	what are clients doing with the iterator?
2015-04-01 17:41:34	refefer	def withLines[A](path: String)(f: Iterator[String] => A): A
2015-04-01 17:42:00	refefer	mintmint: basically, you handle the file control, they pass in the function that uses it, and it cleans up after the function is done
2015-04-01 17:42:05	◀▬▬	Neo-- (~neo@BSN-77-159-184.static.siol.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-04-01 17:42:21	▬▬▶	alexgaribay (~textual@cpe-24-94-190-211.kc.res.rr.com) has joined #scala
2015-04-01 17:42:21	◀▬▬	alexgaribay (~textual@cpe-24-94-190-211.kc.res.rr.com) has quit (Client Quit)
2015-04-01 17:42:23	mintmint	tpolecat: iterating over it, parsing it for values. On a distributed platform :(
2015-04-01 17:42:47	tpolecat	your interface could be [B](b: B)(f: (B, String) => B): B and you could foldLeft over the iterator for them
2015-04-01 17:43:02	mintmint	refefer: thats not a bad idea, thanks :)
2015-04-01 17:43:03	tpolecat	there are a lot of ways to make it non-crazy
2015-04-01 17:43:07	mintmint	yeah
2015-04-01 17:43:16	mintmint	thanks guys, I just needed a sanity check on this
2015-04-01 17:43:36	▬▬▶	doctau (doctau@nat/redhat/x-piunvwjgtdimsytz) has joined #scala
2015-04-01 17:43:38	◀▬▬	folex (~Adium@2.92.250.141) has quit (Client Quit)
2015-04-01 17:44:22	▬▬▶	RevBayes (~RevBayes@23-122-141-252.lightspeed.sndgca.sbcglobal.net) has joined #scala
2015-04-01 17:44:33	◀▬▬	muraiki (~muraiki@pit81.pair.com) has quit (Quit: Leaving)
2015-04-01 17:45:13	◀▬▬	Guest9000 (~textual@97.97.226.79) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-04-01 17:47:30	◀▬▬	mintmint (40c08581@gateway/web/freenode/ip.64.192.133.129) has quit (Ping timeout: 246 seconds)
2015-04-01 17:48:05	◀▬▬	Bhaskar (~Bhaskar@66.6.34.252) has quit (Quit: Leaving.)
2015-04-01 17:48:34	◀▬▬	lefou__ (~lefou@p5B034A89.dip0.t-ipconnect.de) has quit (Ping timeout: 252 seconds)
2015-04-01 17:50:00	▬▬▶	xacktm (xacktm@unaffiliated/xacktm) has joined #scala
2015-04-01 17:50:18	Jacoby6000	qu1j0t3: you'll be happy to know that scala is pretty smart about implicit conversions. Both statements at the bottom still evaluate to false. I'll just have to do some overriding and we'll be good to go. https://gist.github.com/Jacoby6000/4f11b6bac0212df22772
2015-04-01 17:51:06	▬▬▶	avita1 (~Adium@129.21.88.233) has joined #scala
2015-04-01 17:51:55	dwins	Jacoby6000: == accepts Any so literally any value conforms without implicit conversion
2015-04-01 17:52:06	Jacoby6000	ah. Well, I'll fix that.
2015-04-01 17:52:12	Jacoby6000	(rather, break it.)
2015-04-01 17:52:40	qu1j0t3	b 9
2015-04-01 17:54:00	▬▬▶	upsell5 (~upsell5@CPE0c473de7de61-CM0c473de7de60.cpe.net.cable.rogers.com) has joined #scala
2015-04-01 17:54:08	◀▬▬	RevBayes (~RevBayes@23-122-141-252.lightspeed.sndgca.sbcglobal.net) has quit (Remote host closed the connection)
2015-04-01 17:54:54	▬▬▶	sdelmore (~Adium@207-170-225-74.static.twtelecom.net) has joined #scala
2015-04-01 17:56:10	◀▬▬	arjen-jonathan (~arjen-jon@2a00:f10:121:100:99ca:4332:34b8:6b0) has left #scala
2015-04-01 17:56:15	▬▬▶	arjen-jonathan (~arjen-jon@2a00:f10:121:100:99ca:4332:34b8:6b0) has joined #scala
2015-04-01 17:57:11	◀▬▬	jkarlsson (~jkarlsson@50.49.142.244) has quit
2015-04-01 17:57:32	▬▬▶	coltfred (~coltfred@71.15.210.194) has joined #scala
2015-04-01 17:59:21	Jacoby6000	scala seems to not like me trying to do this
2015-04-01 17:59:24	◀▬▬	marmota_temivel (~marmota_t@bl12-203-55.dsl.telepac.pt) has quit
2015-04-01 17:59:52	tpolecat	if your goal is to be mean, just put that any to nothing conversion in your co-worker's package object
2015-04-01 17:59:54	dwins	Jacoby6000: implicit conversions are only invoked for code that would not compile without them
2015-04-01 18:00:12	tpolecat	it will basically get rid of all type errors
2015-04-01 18:00:24	Jacoby6000	dwins: ahh... I thought scala would try to pick the conversion that gets it as close as possible to the same type.
2015-04-01 18:00:25	dwins	yeah Any => Nothing is maximally evil as far as implicits go
2015-04-01 18:00:32	Jacoby6000	it's not to be mean, it's to be esoteric
2015-04-01 18:00:40	Jacoby6000	to make something esoteric*
2015-04-01 18:01:01	tpolecat	you could even make the conversion delete a random source file as a side-effect
2015-04-01 18:01:07	tpolecat	hilarity
2015-04-01 18:01:15	Jacoby6000	lol
2015-04-01 18:01:18	Jacoby6000	have people done that?
2015-04-01 18:01:27	tpolecat	i hope not
2015-04-01 18:01:48	dwins	i'm sure some disgruntled version control advocate has done that at some point
2015-04-01 18:02:07	Jacoby6000	I'd do something less aggressive... like order a pizza every time that conversion happened or something
2015-04-01 18:02:31	Jacoby6000	or put a thread.sleep that happens at a random time in a future running in the global context
2015-04-01 18:04:19	▬▬▶	RevBayes (~RevBayes@2602:301:77a8:dfc0:a1e1:c369:b7c2:a529) has joined #scala
2015-04-01 18:04:21	◀▬▬	wildroman2 (~wildroman@109.186.185.235) has quit (Remote host closed the connection)
2015-04-01 18:04:50	◀▬▬	fedesilva (~fedesilva@66.43.88.242) has quit (Remote host closed the connection)
2015-04-01 18:05:11	▬▬▶	fedesilva (~fedesilva@66.43.88.242) has joined #scala
2015-04-01 18:05:39	◀▬▬	fedesilva (~fedesilva@66.43.88.242) has quit (Read error: Connection reset by peer)
2015-04-01 18:06:55	Jacoby6000	seems like the compiler won't go through multiple steps to resolve things either.
2015-04-01 18:07:04	◀▬▬	RevBayes (~RevBayes@2602:301:77a8:dfc0:a1e1:c369:b7c2:a529) has quit (Remote host closed the connection)
2015-04-01 18:07:08	▬▬▶	aarvar (~aaron@50-47-100-244.evrt.wa.frontiernet.net) has joined #scala
2015-04-01 18:07:19	tpolecat	the compiler will apply at most one conversion
2015-04-01 18:07:24	▬▬▶	pgokeeffe (~pgokeeffe@101.165.93.194) has joined #scala
2015-04-01 18:07:37	Jacoby6000	figured
2015-04-01 18:07:43	◀▬▬	bkuberek (~bkuberek@2600:c0e:3002:118:ac88:8806:d8ca:c044) has quit (Remote host closed the connection)
2015-04-01 18:08:54	◀▬▬	malaverdiere (~marc-andr@5-73-252-216.dsl.colba.net) has quit (Quit: Leaving.)
2015-04-01 18:09:09	▬▬▶	test99 (~benibadbo@x4d0c3971.dyn.telefonica.de) has joined #scala
2015-04-01 18:10:23	pfn	is there a trait that defines toInt/toDouble etc. on String/numeric types?
2015-04-01 18:10:44	pfn	or typeclass
2015-04-01 18:10:51	◀▬▬	hexagoxel (~hexagoxel@x5f769dec.dyn.telefonica.de) has quit (Ping timeout: 264 seconds)
2015-04-01 18:11:32	tpolecat	String is its own wrapper. for numeric types it's the Numeric typeclass
2015-04-01 18:11:53	◀▬▬	pgokeeffe (~pgokeeffe@101.165.93.194) has quit (Ping timeout: 244 seconds)
2015-04-01 18:12:05	▬▬▶	hexagoxel (~hexagoxel@x4d067213.dyn.telefonica.de) has joined #scala
2015-04-01 18:12:31	pfn	so there's no common ancestry for string's toNumeric functions
2015-04-01 18:12:32	pfn	:(
2015-04-01 18:13:23	tpolecat	well you could make your own typeclass
2015-04-01 18:13:27	▬▬▶	pgokeeffe (~pgokeeffe@101.165.93.194) has joined #scala
2015-04-01 18:13:31	◀▬▬	test99 (~benibadbo@x4d0c3971.dyn.telefonica.de) has quit (Ping timeout: 256 seconds)
2015-04-01 18:13:40	tpolecat	and an instance for String plus any A given Numeric[A]
2015-04-01 18:13:53	◀▬▬	tpolecat (~anonymous@c-67-160-172-16.hsd1.or.comcast.net) has quit (Quit: tpolecat)
2015-04-01 18:13:57	◀▬▬	randomstatistic (~randomsta@64.124.61.215) has quit
2015-04-01 18:14:01	◀▬▬	HairyFotr (~hairy@89-212-13-127.dynamic.t-2.net) has quit (Quit: Leaving.)
2015-04-01 18:14:09	◀▬▬	upsell5 (~upsell5@CPE0c473de7de61-CM0c473de7de60.cpe.net.cable.rogers.com) has quit (Quit: upsell5)
2015-04-01 18:14:41	--	robbyoconnor is now known as ]
2015-04-01 18:14:47	◀▬▬	pfurla (~textual@static-100-33-141-114.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-04-01 18:14:59	◀▬▬	pantsman- (~pantsman@cpc12-haye16-2-0-cust45.haye.cable.virginm.net) has quit (Ping timeout: 252 seconds)
2015-04-01 18:15:59	▬▬▶	pfurla (~textual@static-100-33-141-114.nycmny.fios.verizon.net) has joined #scala
2015-04-01 18:16:45	pfn	hmm
2015-04-01 18:17:18	pfn	https://gist.github.com/pfn/0e47eddac0609f64fb63
2015-04-01 18:17:21	pfn	so I want to do something like this...
2015-04-01 18:17:23	--	irc: disconnected from server
2015-04-01 18:22:43	▬▬▶	hapislacker (~dagnachew@bas1-montreal30-1177585814.dsl.bell.ca) has joined #scala
2015-04-01 18:22:43	--	Topic for #scala is "The Scala Programming Language http://www.scala-lang.org/ stable 2.11.5 | Scala API: http://scala-lang.org/api | Scastie http://scastie.org/ | Need help with your coursera course -> #courseraprogfun (Reactive course with Odersky http://www.coursera.org/course/reactive)"
2015-04-01 18:22:43	--	Topic set by aloiscochard (uid2076@gateway/web/irccloud.com/x-pjogambwkfmhmlkk) on Thu, 26 Feb 2015 14:55:12
2015-04-01 18:22:43	--	Channel #scala: 451 nicks (0 ops, 0 voices, 451 normals)
2015-04-01 18:22:57	--	Channel created on Sun, 28 Jan 2007 17:58:41
2015-04-01 18:23:00	dwins	yes, you can't use context bounds like that
2015-04-01 18:23:04	◀▬▬	jedws (~jedws@c58-109-93-39.randw3.nsw.optusnet.com.au) has quit (Quit: Computer has gone to sleep.)
2015-04-01 18:24:26	 *	pfn ponders how to do this
2015-04-01 18:25:03	◀▬▬	pgokeeffe (~pgokeeffe@101.165.93.194) has quit (Ping timeout: 248 seconds)
2015-04-01 18:25:21	pfn	I guess I could hmap it
2015-04-01 18:25:30	◀▬▬	bblfish (~bblfish@2a01:e34:ec28:72a0:e4a8:96c5:49b:73ba) has quit (Remote host closed the connection)
2015-04-01 18:25:59	pfn	then again, maybe not
2015-04-01 18:26:28	▬▬▶	Ron__ (c7f1cac2@gateway/web/freenode/ip.199.241.202.194) has joined #scala
2015-04-01 18:26:32	◀▬▬	milessabin_ (~miles@host86-156-109-36.range86-156.btcentralplus.com) has quit (Ping timeout: 246 seconds)
2015-04-01 18:26:52	▬▬▶	infinity0 (~infinity0@freenet/developer/infinity0) has joined #scala
2015-04-01 18:27:04	▬▬▶	T_Rex (~sam@unaffiliated/root/x-1346393) has joined #scala
2015-04-01 18:27:08	pfn	can I pattern match on the presence of a context bound?
2015-04-01 18:27:18	dwins	no.
2015-04-01 18:27:24	▬▬▶	randomstatistic (~randomsta@64.124.61.215) has joined #scala
2015-04-01 18:27:40	pfn	there goes my Numeric[Any]  :-/
2015-04-01 18:27:54	pfn	well, I guess I can just .toString.toX it
2015-04-01 18:27:55	pfn	that works
2015-04-01 18:27:58	pfn	so evil
2015-04-01 18:28:06	dwins	:-/ indeed
2015-04-01 18:28:30	qu1j0t3	:-\
2015-04-01 18:28:57	Ron__	Hi, can someone tell me what this syntax is for a class constructor?  class X(field1:Type1)(field2:Type2) extends Runnable with Logging { ... }  I am not sure what the (field2:Type2) part is called.
2015-04-01 18:29:01	pfn	https://gist.github.com/pfn/0e47eddac0609f64fb63
2015-04-01 18:29:02	pfn	eeek!
2015-04-01 18:29:28	dwins	Ron__: it's a parameter list. constructors and functions in scala can have many of them
2015-04-01 18:29:36	◀▬▬	ssmoot (~ssmoot@rrcs-71-40-227-162.sw.biz.rr.com) has quit (Quit: Linkinus - http://linkinus.com)
2015-04-01 18:30:08	Ron__	dwins: Thank you for the name, now I can look it up :)
2015-04-01 18:30:40	◀▬▬	charlie_sanders (~q@user-0ccsp10.cable.mindspring.com) has quit (Remote host closed the connection)
2015-04-01 18:30:50	◀▬▬	tomphp (~tomphp@84-45-128-33.static.enta.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-04-01 18:31:13	▬▬▶	tomphp (~tomphp@84-45-128-33.static.enta.net) has joined #scala
2015-04-01 18:31:29	▬▬▶	savantgarde (~savantgar@c-2d29e555.031-174-73746f10.cust.bredbandsbolaget.se) has joined #scala
2015-04-01 18:32:23	▬▬▶	Ir1sh (~Ir1sh@109.255.196.35) has joined #scala
2015-04-01 18:32:32	pfn	hmm, not quite what I want either
2015-04-01 18:32:56	pfn	not the typeclass in any case
2015-04-01 18:32:59	▬▬▶	pgokeeffe (~pgokeeffe@101.165.93.194) has joined #scala
2015-04-01 18:33:04	◀▬▬	Ir1sh (~Ir1sh@109.255.196.35) has quit (Client Quit)
2015-04-01 18:34:24	▬▬▶	mdedetrich (~textual@60-242-21-209.static.tpgi.com.au) has joined #scala
2015-04-01 18:34:26	Jacoby6000	lol. I've got so many implicits, Intellij gave up.
2015-04-01 18:34:33	pfn	https://gist.github.com/pfn/0e47eddac0609f64fb63
2015-04-01 18:34:35	pfn	there we go
2015-04-01 18:34:37	pfn	so ugly  :-/
2015-04-01 18:35:23	◀▬▬	jtsnow (~jsnow@199.16.150.186) has quit (Quit: jtsnow)
2015-04-01 18:35:36	qu1j0t3	Jacoby6000: Achievement Unlocked
2015-04-01 18:36:11	◀▬▬	savantgarde (~savantgar@c-2d29e555.031-174-73746f10.cust.bredbandsbolaget.se) has quit (Ping timeout: 256 seconds)
2015-04-01 18:36:54	retrospectacus	using slick. I have a column[String] orderNumber whose data is like  1-1  1-10  1-2  1-20  1-6   and of course they get sorted alphabetically. How ca I sort by this column numerically?
2015-04-01 18:37:19	◀▬▬	echeipesh (~echeipesh@216.158.51.82) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-04-01 18:37:23	◀▬▬	pgokeeffe (~pgokeeffe@101.165.93.194) has quit (Ping timeout: 246 seconds)
2015-04-01 18:37:51	pfn	scalanumericanyconversions
2015-04-01 18:38:06	Jacoby6000	retrospectacus: one way I do this, is to run "order by someColumn+0" the +0 converts it to a numeric column. I don't know how you'd do this in slick without implementing something lower level
2015-04-01 18:38:36	Arrgh	retrospectacus, it'd be tricky to do that sort at the db level, but it's really easy in Scala
2015-04-01 18:38:48	▬▬▶	milessabin_ (~miles@host86-156-109-36.range86-156.btcentralplus.com) has joined #scala
2015-04-01 18:39:00	▬▬▶	pgokeeffe (~pgokeeffe@101.165.93.194) has joined #scala
2015-04-01 18:39:27	retrospectacus	yeah.. I kind of need to do the sorting in slick
2015-04-01 18:39:42	pdxleif	So I have a scala question.
2015-04-01 18:39:48	Arrgh	val r = "(\d+)-(\d+)".r; val tuples = orderNumber.split("""\s+""").map { case r(s1, s2) => s1.toInt -> s2.toInt }; tuples.sorted
2015-04-01 18:39:58	pdxleif	Why did "BEEP BOOP SPIZ" change to "BEEP WHIR GYVE"?
2015-04-01 18:40:44	▬▬▶	metasim (~metasim@216.197.68.125) has joined #scala
2015-04-01 18:40:54	Jacoby6000	Arrgh: er... he's trying to do it in slick, before the result set comes to sclaa.
2015-04-01 18:41:07	retrospectacus	is there a slick channel?
2015-04-01 18:41:47	Arrgh	Yeah, in that case you're writing text parsing code with SQL functions, no fun at all
2015-04-01 18:41:52	retrospectacus	I need to sort and filter before paging, is why
2015-04-01 18:42:01	Arrgh	If you have the choice, better to normalize into separate numeric columns etc.
2015-04-01 18:42:10	◀▬▬	6JTAAS4HB (~marmota_t@bl12-203-55.dsl.telepac.pt) has quit
2015-04-01 18:42:14	Jacoby6000	Arrgh: or you could do order by `column`+0
2015-04-01 18:42:16	Arrgh	It's not super hard anyway, it's just not DB-vendor-agnostic
2015-04-01 18:42:29	Arrgh	The hyphens will break the type coercion
2015-04-01 18:42:36	retrospectacus	hmm
2015-04-01 18:42:38	Jacoby6000	(in mysql, dunno about postgres or others)
2015-04-01 18:43:30	retrospectacus	well I have a sorting by "marketName" which is a client-side concept, is a concatenation of these other things, and this works
2015-04-01 18:43:33	retrospectacus	orderFacts.sortBy(orderFact => Tuple3(orderFact.contractName.asc, orderFact.productName.asc, orderFact.profileName.asc))
2015-04-01 18:43:55	retrospectacus	I thought maybe there is some kind of similar thing I could do for this
2015-04-01 18:44:12	▬▬▶	tpolecat (~anonymous@c-76-27-230-159.hsd1.or.comcast.net) has joined #scala
2015-04-01 18:45:04	Jacoby6000	hm.. So I got false === Some(0) to evaluate properly, but I can't get Some(0) === false to work.
2015-04-01 18:45:05	◀▬▬	metasim (~metasim@216.197.68.125) has quit (Ping timeout: 246 seconds)
2015-04-01 18:45:13	Jacoby6000	"properly"
2015-04-01 18:45:21	◀▬▬	DougieBot5000 (~DougieBot@unaffiliated/dougiebot5000) has quit (Quit: Leaving)
2015-04-01 18:46:19	◀▬▬	asteve (~asteve@unaffiliated/kxsteve) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-04-01 18:49:44	◀▬▬	pgokeeffe (~pgokeeffe@101.165.93.194) has quit (Ping timeout: 272 seconds)
2015-04-01 18:49:51	◀▬▬	mdedetrich (~textual@60-242-21-209.static.tpgi.com.au) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-04-01 18:50:17	▬▬▶	asteve (~asteve@unaffiliated/kxsteve) has joined #scala
2015-04-01 18:50:29	◀▬▬	coltfred (~coltfred@71.15.210.194) has quit (Ping timeout: 245 seconds)
2015-04-01 18:53:35	▬▬▶	makaveli0227TL (~makaveli0@66.9.135.66) has joined #scala
2015-04-01 18:57:43	◀▬▬	makaveli0227TL (~makaveli0@66.9.135.66) has quit (Ping timeout: 245 seconds)
2015-04-01 18:59:10	◀▬▬	surrealanalysis (~kevin@c-68-37-97-219.hsd1.mi.comcast.net) has quit (Quit: surrealanalysis)
2015-04-01 18:59:49	asteve	I have a repository and I want to mock the data access layer in a test; in this case I'm storing objects in redis https://gist.github.com/sannessa/ec2d74d1a267e661d994
2015-04-01 19:00:28	asteve	how can I go about mocking the redis piece to verify that my business logic in the repository is working properly?
2015-04-01 19:03:49	▬▬▶	bradleyayers (~bradleyay@eth59-167-133-100.static.internode.on.net) has joined #scala
2015-04-01 19:04:24	◀▬▬	pfurla (~textual@static-100-33-141-114.nycmny.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-04-01 19:04:47	pdxleif	Make some other interface on top of the redis client, and mock that?
2015-04-01 19:05:30	◀▬▬	ArrogantWatcher (~Adium@50-200-145-182-static.hfc.comcastbusiness.net) has quit (Quit: Leaving.)
2015-04-01 19:05:49	pdxleif	Could simulate some redis-type features w/ something like a guava cache.
2015-04-01 19:06:16	◀▬▬	boulderdan (~boulderda@50.250.135.57) has quit
2015-04-01 19:06:45	◀▬▬	kryptt (~kryptt@179.53.40.185) has quit (Ping timeout: 245 seconds)
2015-04-01 19:07:50	◀▬▬	zcourts (~zcourts@cpc5-croy18-2-0-cust555.croy.cable.virginm.net) has quit (Quit: zcourts)
2015-04-01 19:08:59	▬▬▶	pfurla (~textual@static-100-33-141-114.nycmny.fios.verizon.net) has joined #scala
2015-04-01 19:10:46	▬▬▶	timidtrap (~timidtrap@c-69-137-107-198.hsd1.tn.comcast.net) has joined #scala
2015-04-01 19:11:47	▬▬▶	pgokeeffe (~pgokeeffe@101.165.93.194) has joined #scala
2015-04-01 19:14:09	◀▬▬	gowlin (~ryan.golb@debian/developer/rmgolbeck) has quit (Ping timeout: 256 seconds)
2015-04-01 19:15:05	▬▬▶	potix2 (~potix2@116-65-215-245.rev.home.ne.jp) has joined #scala
2015-04-01 19:17:05	▬▬▶	stevenheidel (d1772b39@gateway/web/freenode/ip.209.119.43.57) has joined #scala
2015-04-01 19:17:30	◀▬▬	potix2 (~potix2@116-65-215-245.rev.home.ne.jp) has quit (Remote host closed the connection)
2015-04-01 19:18:01	stevenheidel	Is there a good data type to represent "one or the other or both"? Either is an exclusive or but I want an inclusive or
2015-04-01 19:18:05	◀▬▬	uberwach (~uberwach@x5ce13711.dyn.telefonica.de) has quit (Ping timeout: 250 seconds)
2015-04-01 19:18:51	tpolecat	stevenheidel: yeah, scalaz has a type called \&/ or These
2015-04-01 19:21:12	tpolecat	there is nothing in stdlib scala but you can write it yourself if you want (but honestly just use scalaz, you will eventually anyway)
2015-04-01 19:21:23	◀▬▬	Arrgh (~alex@S01064ce676224df4.vc.shawcable.net) has quit (Quit: Konversation terminated!)
2015-04-01 19:22:37	▬▬▶	Arrgh (~alex@S01064ce676224df4.vc.shawcable.net) has joined #scala
2015-04-01 19:22:45	▬▬▶	jedws (~jedws@eth59-167-133-100.static.internode.on.net) has joined #scala
2015-04-01 19:23:09	◀▬▬	jetho (~jens@191.242.128.186) has quit (Quit: WeeChat 1.0.1)
2015-04-01 19:23:47	stevenheidel	tpolecat: exactly what I was looking for, thanks!
2015-04-01 19:23:52	tpolecat	:-)
2015-04-01 19:25:41	▬▬▶	mizu_no_oto (~textual@50.153.134.1) has joined #scala
2015-04-01 19:26:00	▬▬▶	bblfish (~bblfish@2a01:e34:ec28:72a0:e4a8:96c5:49b:73ba) has joined #scala
2015-04-01 19:26:16	◀▬▬	pgokeeffe (~pgokeeffe@101.165.93.194) has quit (Ping timeout: 265 seconds)
2015-04-01 19:26:23	▬▬▶	kyle_balkissoon (~kyle_balk@TOROON017SW-LP140-04-845542925.dsl.bell.ca) has joined #scala
2015-04-01 19:28:15	▬▬▶	ArrogantWatcher (~Adium@50-200-145-182-static.hfc.comcastbusiness.net) has joined #scala
2015-04-01 19:28:34	◀▬▬	dwins (~dwins@c-73-200-135-248.hsd1.va.comcast.net) has quit
2015-04-01 19:29:18	▬▬▶	surrealanalysis (~kevin@c-68-37-97-219.hsd1.mi.comcast.net) has joined #scala
2015-04-01 19:30:09	◀▬▬	surrealanalysis (~kevin@c-68-37-97-219.hsd1.mi.comcast.net) has quit (Remote host closed the connection)
2015-04-01 19:30:26	◀▬▬	bikerdan (~Bikerdan@67.214.225.82) has quit (Quit: Be back later ...)
2015-04-01 19:31:12	▬▬▶	tkuchiki (~tkuchiki@113x36x238x26.ap113.ftth.ucom.ne.jp) has joined #scala
2015-04-01 19:31:20	◀▬▬	Osum (~radu@cpe-104-162-150-78.nyc.res.rr.com) has quit (Ping timeout: 245 seconds)
2015-04-01 19:31:44	--	irc: disconnected from server
2015-04-01 19:32:08	▬▬▶	hapislacker (~dagnachew@bas1-montreal30-1177585814.dsl.bell.ca) has joined #scala
2015-04-01 19:32:08	--	Topic for #scala is "The Scala Programming Language http://www.scala-lang.org/ stable 2.11.5 | Scala API: http://scala-lang.org/api | Scastie http://scastie.org/ | Need help with your coursera course -> #courseraprogfun (Reactive course with Odersky http://www.coursera.org/course/reactive)"
2015-04-01 19:32:08	--	Topic set by aloiscochard (uid2076@gateway/web/irccloud.com/x-pjogambwkfmhmlkk) on Thu, 26 Feb 2015 14:55:12
2015-04-01 19:32:08	--	Channel #scala: 444 nicks (0 ops, 0 voices, 444 normals)
2015-04-01 19:32:08	--	Notice(rajaniemi.freenode.net): [freenode-info] channel trolls and no channel staff around to help? please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
2015-04-01 19:32:19	▬▬▶	echeipesh (~echeipesh@216.158.51.82) has joined #scala
2015-04-01 19:32:19	▬▬▶	savantgarde (~savantgar@c-2d29e555.031-174-73746f10.cust.bredbandsbolaget.se) has joined #scala
2015-04-01 19:32:21	--	Channel created on Sun, 28 Jan 2007 17:58:41
2015-04-01 19:34:38	◀▬▬	SpellChecker (~SpellChec@94.76.72.131) has quit (Quit: !!! Bye !!!)
2015-04-01 19:35:11	◀▬▬	stevenheidel (d1772b39@gateway/web/freenode/ip.209.119.43.57) has quit (Quit: Page closed)
2015-04-01 19:35:50	▬▬▶	Lymee (~lymia@inportb/loli/cirno-chan) has joined #scala
2015-04-01 19:35:59	◀▬▬	bblfish (~bblfish@2a01:e34:ec28:72a0:e4a8:96c5:49b:73ba) has quit (Ping timeout: 272 seconds)
2015-04-01 19:36:33	◀▬▬	mizu_no_oto (~textual@50.153.134.1) has quit (Ping timeout: 250 seconds)
2015-04-01 19:36:50	◀▬▬	savantgarde (~savantgar@c-2d29e555.031-174-73746f10.cust.bredbandsbolaget.se) has quit (Ping timeout: 256 seconds)
2015-04-01 19:38:57	◀▬▬	Lymia (~lymia@inportb/loli/cirno-chan) has quit (Ping timeout: 256 seconds)
2015-04-01 19:39:55	◀▬▬	NightRa (uid40361@gateway/web/irccloud.com/x-ipewmeshxbjhimei) has quit (Quit: Connection closed for inactivity)
2015-04-01 19:44:46	◀▬▬	eriksensei (~Adium@546B12FD.cm-12-4a.dynamic.ziggo.nl) has quit (Quit: Leaving.)
2015-04-01 19:45:44	▬▬▶	eriksensei (~Adium@546B12FD.cm-12-4a.dynamic.ziggo.nl) has joined #scala
2015-04-01 19:45:52	◀▬▬	echeipesh (~echeipesh@216.158.51.82) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-04-01 19:46:50	▬▬▶	zcourts (~zcourts@cpc5-croy18-2-0-cust555.croy.cable.virginm.net) has joined #scala
2015-04-01 19:48:00	◀▬▬	paddyez (~paddy@wikipedia/paddyez) has quit (Ping timeout: 244 seconds)
2015-04-01 19:48:18	▬▬▶	pgokeeffe (~pgokeeffe@101.165.93.194) has joined #scala
2015-04-01 19:50:56	▬▬▶	zmack (~zmack@82-210-138-99.home.aster.pl) has joined #scala
2015-04-01 19:51:06	◀▬▬	jaana (jaana@nat/yahoo/x-jprasqrikbqcxwny) has quit (Ping timeout: 244 seconds)
2015-04-01 19:52:39	◀▬▬	pgokeeffe (~pgokeeffe@101.165.93.194) has quit (Ping timeout: 244 seconds)
2015-04-01 19:52:42	▬▬▶	Lymia (~lymia@inportb/loli/cirno-chan) has joined #scala
2015-04-01 19:52:50	◀▬▬	elkorn (~elkorn@031011240084.bielskobiala.vectranet.pl) has quit (Remote host closed the connection)
2015-04-01 19:53:49	◀▬▬	Lymee (~lymia@inportb/loli/cirno-chan) has quit (Ping timeout: 265 seconds)
2015-04-01 19:55:43	◀▬▬	Lymia (~lymia@inportb/loli/cirno-chan) has quit (Remote host closed the connection)
2015-04-01 19:55:44	◀▬▬	zmack (~zmack@82-210-138-99.home.aster.pl) has quit (Ping timeout: 248 seconds)
2015-04-01 19:56:26	◀▬▬	wabash (~wabash@unaffiliated/wabash) has left #scala
2015-04-01 19:56:27	▬▬▶	Lymia (~lymia@inportb/loli/cirno-chan) has joined #scala
2015-04-01 19:57:04	▬▬▶	mdedetrich (~textual@ppp121-44-67-237.lns20.syd4.internode.on.net) has joined #scala
2015-04-01 19:57:40	◀▬▬	hexagoxel (~hexagoxel@x4d067213.dyn.telefonica.de) has quit (Ping timeout: 264 seconds)
2015-04-01 19:57:43	◀▬▬	mdedetrich (~textual@ppp121-44-67-237.lns20.syd4.internode.on.net) has quit (Client Quit)
2015-04-01 19:59:15	▬▬▶	hexagoxel (~hexagoxel@x4d0663c2.dyn.telefonica.de) has joined #scala
2015-04-01 20:00:12	▬▬▶	jarod7736 (~jarod7736@cpe-66-69-233-166.austin.res.rr.com) has joined #scala
2015-04-01 20:01:10	--	dual-pyon is now known as n-pyon-complete
2015-04-01 20:02:55	▬▬▶	top (~DirtyTaco@unaffiliated/mrgold) has joined #scala
2015-04-01 20:03:42	◀▬▬	tomh- (uid501@gateway/web/irccloud.com/x-goaziovxytufidgx) has quit (Quit: Connection closed for inactivity)
2015-04-01 20:07:22	▬▬▶	lebek (~user@69.159.73.74) has joined #scala
2015-04-01 20:08:07	◀▬▬	PeteDaGuru (~PeteDaGur@129.33.205.136) has quit (Quit: Leaving.)
2015-04-01 20:08:32	◀▬▬	jamesfung14 (~james@208.91.156.70) has quit (Ping timeout: 248 seconds)
2015-04-01 20:09:18	◀▬▬	marr (~ccc@159-205-222-176.adsl.inetia.pl) has quit
2015-04-01 20:09:48	sdelmore	Can anyone recommend a mocking library that will enable mocking a companion object? 
2015-04-01 20:10:23	◀▬▬	cdk (~cdk@192-0-128-211.cpe.teksavvy.com) has quit (Ping timeout: 264 seconds)
2015-04-01 20:11:01	▬▬▶	cdk (~cdk@192-0-128-211.cpe.teksavvy.com) has joined #scala
2015-04-01 20:11:15	◀▬▬	stephenjudkins (~stephenju@50-78-183-69-static.hfc.comcastbusiness.net) has quit (Remote host closed the connection)
2015-04-01 20:11:42	--	top is now known as plamb
2015-04-01 20:12:43	◀▬▬	randomstatistic (~randomsta@64.124.61.215) has quit
2015-04-01 20:13:22	◀▬▬	avita1 (~Adium@129.21.88.233) has quit (Quit: Leaving.)
2015-04-01 20:15:52	◀▬▬	zcourts (~zcourts@cpc5-croy18-2-0-cust555.croy.cable.virginm.net) has quit (Quit: zcourts)
2015-04-01 20:15:54	▬▬▶	wabash (~wabash@unaffiliated/wabash) has joined #scala
2015-04-01 20:16:13	▬▬▶	pgokeeffe (~pgokeeffe@101.165.93.194) has joined #scala
2015-04-01 20:18:29	◀▬▬	tomphp (~tomphp@84-45-128-33.static.enta.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-04-01 20:20:36	--	irc: disconnected from server
