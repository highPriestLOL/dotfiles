2014-08-31 10:43:58	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925415027.dsl.bell.ca) has joined ##c++
2014-08-31 10:43:58	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-08-31 10:43:58	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-08-31 10:43:58	--	Channel ##c++: 436 nicks (0 ops, 0 voices, 436 normals)
2014-08-31 10:43:59	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-08-31 10:44:03	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-08-31 10:44:29	◀▬▬	srjek (~srjek@46dhcp63.ece.uic.edu) has quit (Remote host closed the connection)
2014-08-31 10:46:51	moonchild	tsimpson: help me out... how would you end up calling the bar() that i have above? ...is it only accessible by other code in foo's scope?
2014-08-31 10:47:31	tsimpson	the only reason you'd make it a friend is so it has access to members of foo, this implies it takes a foo
2014-08-31 10:47:36	tsimpson	and so it's reachable via ADL
2014-08-31 10:47:39	◀▬▬	Bitani (~zmcgohan@dhcp-164-107-203-146.osuwireless.ohio-state.edu) has quit (Ping timeout: 240 seconds)
2014-08-31 10:48:17	tsimpson	{ foo f; cout << bar(f); } class foo { int x = 1; friend int bar(const foo& f) { return f.x; } };
2014-08-31 10:48:17	geordi	1
2014-08-31 10:48:18	moonchild	so what i have above is pointless, and should probably result in a 'code defined but inaccessible' error
2014-08-31 10:49:42	tsimpson	{ cout << bar(); } int bar(); class foo { friend int bar() { return 1; } }; // it works if you declare bar before foo
2014-08-31 10:49:42	geordi	1
2014-08-31 10:49:54	▬▬▶	Mio-chan (~Mio-chan@unaffiliated/mio-chan) has joined ##c++
2014-08-31 10:50:05	tsimpson	I suppose bar could be accessing private/protected static members
2014-08-31 10:50:16	▬▬▶	lh_mouse (~lh_mouse@61.171.141.202) has joined ##c++
2014-08-31 10:50:49	▬▬▶	andenixa (~chatzilla@79-172-106-224.dyn.broadband.iskratelecom.ru) has joined ##c++
2014-08-31 10:50:59	moonchild	yes, but you couldn't call it
2014-08-31 10:54:47	▬▬▶	FreezingCold (~FreezingC@CPE602ad06bea2a-CM602ad06bea27.cpe.net.cable.rogers.com) has joined ##c++
2014-08-31 10:54:50	▬▬▶	Bitani (~zmcgohan@dhcp-164-107-203-146.osuwireless.ohio-state.edu) has joined ##c++
2014-08-31 10:55:02	moonchild	<< "hi" << foo::zoink(); class foo { friend int bar() { return 1; } int zoink() { return bar() } }; foo f;
2014-08-31 10:55:02	geordi	error: 'bar' was not declared in this scope
2014-08-31 10:55:23	moonchild	<< "hi" << foo::zoink(); class foo { friend int bar() { return 1; } int zoink() { return bar(); } }; foo f;
2014-08-31 10:55:23	geordi	Same error.
2014-08-31 10:55:54	◀▬▬	Tectu (~Tectu@78-167.60-188.cust.bluewin.ch) has quit (Remote host closed the connection)
2014-08-31 10:56:07	moonchild	tsimpson: is that a compiler deficiency, or really the way it should work
2014-08-31 10:56:08	tsimpson	it's confusing and unexpected, but that's how it works
2014-08-31 10:56:33	moonchild	i.e. zoink() not having access to bar()
2014-08-31 10:56:41	tsimpson	it's not a bug, that's really how it works
2014-08-31 10:56:42	moonchild	errr
2014-08-31 10:56:53	▬▬▶	Tectu (~Tectu@78-167.60-188.cust.bluewin.ch) has joined ##c++
2014-08-31 10:56:54	moonchild	<< "hi" << f.zoink(); class foo { friend int bar() { return 1; } int zoink() { return bar() } }; foo f;
2014-08-31 10:56:54	geordi	Same error.
2014-08-31 10:57:00	paule32	now, this: http://codepad.org/XUA7H3bX
2014-08-31 10:57:08	tsimpson	when there is no previous declaration it becomes reachable only via ADL
2014-08-31 10:57:20	moonchild	god, that's an evil, evil dark corner of the spec
2014-08-31 10:58:55	◀▬▬	Bitani (~zmcgohan@dhcp-164-107-203-146.osuwireless.ohio-state.edu) has quit (Ping timeout: 240 seconds)
2014-08-31 10:59:20	tsimpson	paule32: first: you'd cast pointer to pointer or reference to reference, second: why do you think that it's valid to dynamic_cast between two unrelated monomorphic types?!
2014-08-31 11:01:01	paule32	tsimpson: i don't know, how to implement toUpper for std::string
2014-08-31 11:02:49	tsimpson	extract the std::string from your boost::variant
2014-08-31 11:03:52	▬▬▶	thejohnfreeman (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has joined ##c++
2014-08-31 11:04:14	moonchild	hmmm
2014-08-31 11:04:23	▬▬▶	Andy-chan2 (~Andy-chan@xdsl-84-44-173-175.netcologne.de) has joined ##c++
2014-08-31 11:04:30	moonchild	tsimpson: all of this has gotten me thinking....
2014-08-31 11:04:57	moonchild	maybe there should be an extension to the core language to make adl explicit
2014-08-31 11:05:15	▬▬▶	bluedreams (~bluedream@66-215-92-80.dhcp.psdn.ca.charter.com) has joined ##c++
2014-08-31 11:05:32	tsimpson	what do you mean?
2014-08-31 11:05:54	moonchild	well, adl often ends up with really wacky rules
2014-08-31 11:06:23	moonchild	a case that i ran into a while ago
2014-08-31 11:06:25	▬▬▶	bashed (~bashed@65-130-199-192.slkc.qwest.net) has joined ##c++
2014-08-31 11:06:53	moonchild	was trying to define an operator << for a std::pair
2014-08-31 11:07:33	◀▬▬	kurahaupo (~kurahaupo@118.148.157.209) has quit (Ping timeout: 245 seconds)
2014-08-31 11:07:39	◀▬▬	Andy-chan (~Andy-chan@xdsl-84-44-169-103.netcologne.de) has quit (Ping timeout: 240 seconds)
2014-08-31 11:08:07	moonchild	in any event, being able to do something like [[adl=std::pair<args>]] ostream & operator << (...., std::pair<args>);
2014-08-31 11:08:25	moonchild	might make such things a little less confusing
2014-08-31 11:08:26	◀▬▬	Zunino (~zunino@189.34.41.115) has quit (Ping timeout: 260 seconds)
2014-08-31 11:08:47	moonchild	forgive the rough cut at the syntax
2014-08-31 11:09:38	◀▬▬	bluedreams (~bluedream@66-215-92-80.dhcp.psdn.ca.charter.com) has quit (Ping timeout: 245 seconds)
2014-08-31 11:09:40	moonchild	i merely am trying to show a possible mechanism for saying 'the adl lookup scope should be this instead of the default rules'
2014-08-31 11:11:16	◀▬▬	aslant (~aslant@37.157.33.76) has quit (Read error: Connection reset by peer)
2014-08-31 11:11:28	Griwes	Oh look, someone on std-proposals thinks size of auto variables is determined at runtime.
2014-08-31 11:11:43	moonchild	lol
2014-08-31 11:11:47	moonchild	link?
2014-08-31 11:11:51	▬▬▶	aslant (~aslant@37.157.33.76) has joined ##c++
2014-08-31 11:12:01	Griwes	We should have a mandatory test to be allowed to post there.
2014-08-31 11:12:13	moonchild	btw, where do VLA's stand right now in the standard process?
2014-08-31 11:12:23	Griwes	Go to std proposals, probably still the top of threads.
2014-08-31 11:12:30	◀▬▬	LiohAu (~LiohAu@bac69-8-88-165-4-152.fbx.proxad.net) has quit (Quit: LiohAu)
2014-08-31 11:12:36	tsimpson	ARB's are dead in the water I think
2014-08-31 11:12:47	tsimpson	(Array of Runtime Bounds)
2014-08-31 11:12:52	Griwes	I'm on my phone right now, linking to google groups is troublesome.
2014-08-31 11:12:58	▬▬▶	LiohAu (~LiohAu@bac69-8-88-165-4-152.fbx.proxad.net) has joined ##c++
2014-08-31 11:13:03	moonchild	gotcha
2014-08-31 11:13:26	moonchild	i'm not really wired into the standards process, though i'm starting to find my way around
2014-08-31 11:13:53	moonchild	tsimpson: any thoughts on what i'm noodling?
2014-08-31 11:14:32	seishun	Griwes: what's the thread's title?
2014-08-31 11:14:37	tsimpson	https://groups.google.com/a/isocpp.org/forum/?fromgroups#!topic/std-proposals/GP8BVeW_LkI
2014-08-31 11:14:53	Griwes	Raii wrappers something something.
2014-08-31 11:16:04	seishun	"the size needs to be known at compile time."
2014-08-31 11:16:16	moonchild	someone should point that dude to the first few definitions here: https://github.com/jschmerge/xos/blob/master/src/utility/util.h
2014-08-31 11:16:35	tsimpson	moonchild: I think the problem with that is more to do with the instantiation of templates that were defined before the overload, and ADL is a workaround for that. I'm not sure if having something like that is much different from opening namespace std and defining the overload there (which you aren't allowed to do)
2014-08-31 11:16:52	▬▬▶	Hannibal_Smith (~Hannibal_@host251-74-dynamic.53-79-r.retail.telecomitalia.it) has joined ##c++
2014-08-31 11:16:58	▬▬▶	natkite (~AndChat69@106.193.64.97) has joined ##c++
2014-08-31 11:17:13	moonchild	yeah, tsimpson, i'm not really sure its a good or bad idea
2014-08-31 11:17:43	◀▬▬	c0le (~c0le@59.99.251.45) has quit (Ping timeout: 240 seconds)
2014-08-31 11:18:02	▬▬▶	hs366 (~ACE@94.254.45.76) has joined ##c++
2014-08-31 11:18:23	◀▬▬	thejohnfreeman (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has quit (Ping timeout: 245 seconds)
2014-08-31 11:20:22	▬▬▶	Orion] (~nname@unaffiliated/orion/x-3970838) has joined ##c++
2014-08-31 11:20:37	▬▬▶	Hello71 (~Hello71@wikipedia/Hello71) has joined ##c++
2014-08-31 11:21:47	◀▬▬	Sadale (~Sadale@unaffiliated/sadale) has quit (Quit: bye)
2014-08-31 11:22:54	▬▬▶	davidstone (~david@174-16-211-60.hlrn.qwest.net) has joined ##c++
2014-08-31 11:26:57	◀▬▬	aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-08-31 11:28:13	◀▬▬	Anodl (~Anodl@p5DC5A537.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-08-31 11:30:17	moonchild	...and tsimpson, i think it is much different from opening std to stuff... the result is the same, but the rules would be right there in the function definition
2014-08-31 11:30:30	◀▬▬	esas (~esas@unaffiliated/esas) has quit
2014-08-31 11:30:32	▬▬▶	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has joined ##c++
2014-08-31 11:30:42	▬▬▶	Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has joined ##c++
2014-08-31 11:30:44	moonchild	it would need *much* more thought than i'm giving it
2014-08-31 11:31:04	--	drgreenthumb is now known as dfletcher
2014-08-31 11:31:34	▬▬▶	jitsuin (~chatzilla@cpe-23-240-223-21.socal.res.rr.com) has joined ##c++
2014-08-31 11:31:44	tsimpson	well ADL is about considering functions based on the namespace of the arguments
2014-08-31 11:31:52	▬▬▶	michimuellae (~michimuel@p4FDFCC66.dip0.t-ipconnect.de) has joined ##c++
2014-08-31 11:32:31	moonchild	tsimpson: perhaps an attribute or decorator that explicitly limits what args participate in adl?
2014-08-31 11:34:04	tsimpson	hard to say, it's an annoying problem and no one's yet to come up with a good solution
2014-08-31 11:34:45	tsimpson	annoying especially as it often manifests itself in generic code
2014-08-31 11:35:07	moonchild	what i'm thinking of is something similar to what occurred with noexcept
2014-08-31 11:35:20	moonchild	yeah, throw() was a mistake
2014-08-31 11:36:03	◀▬▬	michimuellae (~michimuel@p4FDFCC66.dip0.t-ipconnect.de) has quit (Client Quit)
2014-08-31 11:36:10	moonchild	but offering an explicit statement that says this does something, and have it be optional, might not be a bad idea
2014-08-31 11:37:29	▬▬▶	unapiedra (~christoph@141.70.80.5) has joined ##c++
2014-08-31 11:39:04	◀▬▬	Stryyker (stryyker16@about/windows/staff/stryyker) has quit (Ping timeout: 250 seconds)
2014-08-31 11:39:24	▬▬▶	XPLZ (53e92664@gateway/web/freenode/ip.83.233.38.100) has joined ##c++
2014-08-31 11:39:45	XPLZ	Someone know about Haaf's game engine in here?
2014-08-31 11:40:44	▬▬▶	ambro718 (~ambro@gentoo/contributor/ambro718) has joined ##c++
2014-08-31 11:40:45	realloc1	i suggest you SFML
2014-08-31 11:41:30	realloc1	it has a very nice C++ API and its cross-platform
2014-08-31 11:42:56	realloc1	but SFML is more a Renderer than a whole Engine, but it includes Controls etc. too (sfml-dev.org)
2014-08-31 11:43:38	▬▬▶	notpara (~para@213.187.75.26) has joined ##c++
2014-08-31 11:44:37	realloc1	its always under active development and you can get fast and reliable help in their forums...
2014-08-31 11:45:27	▬▬▶	Stryyker (stryyker16@about/windows/staff/stryyker) has joined ##c++
2014-08-31 11:50:01	◀▬▬	Hannibal_Smith (~Hannibal_@host251-74-dynamic.53-79-r.retail.telecomitalia.it) has quit (Quit: Sto andando via)
2014-08-31 11:50:07	◀▬▬	hazzadous (~harrywaye@80.175.8.38) has quit (Quit: hazzadous)
2014-08-31 11:50:17	▬▬▶	alxgnon (~alxgnon@unaffiliated/alxgnon) has joined ##c++
2014-08-31 11:50:40	▬▬▶	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-08-31 11:50:42	realloc1	as far as i know, Haafs Engine also does not include network support etc.. in SFML there is network (UDP/TCP/HTTP/FTP) and Audio support included in nice wrappers....
2014-08-31 11:50:42	realloc1	...this sounds now like an advertisement :D
2014-08-31 11:51:02	realloc1	..oh and its open source under zlib license
2014-08-31 11:51:05	XPLZ	i know
2014-08-31 11:51:06	▬▬▶	Guest70004 (~esas@unaffiliated/esas) has joined ##c++
2014-08-31 11:51:11	XPLZ	ut my school say i need to work with HGE
2014-08-31 11:51:18	XPLZ	so if someone know Haaf game engine a little bit
2014-08-31 11:51:23	XPLZ	i have already done a bit on the project
2014-08-31 11:51:32	XPLZ	but i need little help
2014-08-31 11:51:39	XPLZ	so if someone have visual studio
2014-08-31 11:51:41	XPLZ	then i can share
2014-08-31 11:52:39	◀▬▬	jitsuin (~chatzilla@cpe-23-240-223-21.socal.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-08-31 11:53:27	Nizumzen	XPLZ: the IDE / compiler you are using shouldn't really matter as long as you are writing standard conforming code
2014-08-31 11:55:33	alxgnon	Is this book still relevant today? http://www.amazon.co.uk/Modern-Design-Generic-Programming-Patterns/dp/0201704315
2014-08-31 11:55:40	realloc1	HGE is DirectX so that shouldn't really matter, he is always bound to Windows...
2014-08-31 11:55:51	M-ou-se	!book
2014-08-31 11:55:52	nolyc	The Definitive C++ Book Guide and List -> http://stackoverflow.com/q/388242/1090079
2014-08-31 11:55:54	▬▬▶	Bitani (~zmcgohan@dhcp-164-107-203-146.osuwireless.ohio-state.edu) has joined ##c++
2014-08-31 11:55:59	XPLZ	Niuzumzen true true
2014-08-31 11:56:03	alxgnon	oh thanks
2014-08-31 11:57:45	◀▬▬	LiohAu (~LiohAu@bac69-8-88-165-4-152.fbx.proxad.net) has quit (Quit: LiohAu)
2014-08-31 11:58:22	◀▬▬	flugo (~flugo@103.225.100.51) has quit (Ping timeout: 260 seconds)
2014-08-31 11:58:54	▬▬▶	aslant (~aslant@37.157.33.76) has joined ##c++
2014-08-31 11:59:09	▬▬▶	Anodl (~Anodl@p5DC5A537.dip0.t-ipconnect.de) has joined ##c++
2014-08-31 11:59:46	▬▬▶	LiohAu (~LiohAu@bac69-8-88-165-4-152.fbx.proxad.net) has joined ##c++
2014-08-31 12:00:09	◀▬▬	Bitani (~zmcgohan@dhcp-164-107-203-146.osuwireless.ohio-state.edu) has quit (Ping timeout: 240 seconds)
2014-08-31 12:00:15	▬▬▶	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-08-31 12:01:26	▬▬▶	michimuellae (~michimuel@p4FDFCC66.dip0.t-ipconnect.de) has joined ##c++
2014-08-31 12:03:38	▬▬▶	paul424 (~chatzilla@apn-46-215-10-113.dynamic.gprs.plus.pl) has joined ##c++
2014-08-31 12:03:44	◀▬▬	XPLZ (53e92664@gateway/web/freenode/ip.83.233.38.100) has quit (Quit: Page closed)
2014-08-31 12:06:03	▬▬▶	bluedreams (~bluedream@66-215-92-80.dhcp.psdn.ca.charter.com) has joined ##c++
2014-08-31 12:08:33	▬▬▶	spott (~spott@c-76-120-73-233.hsd1.co.comcast.net) has joined ##c++
2014-08-31 12:09:40	◀▬▬	paul424 (~chatzilla@apn-46-215-10-113.dynamic.gprs.plus.pl) has quit (Quit: ChatZilla 0.9.90.1 [Firefox 31.0/2014072000])
2014-08-31 12:10:39	◀▬▬	bluedreams (~bluedream@66-215-92-80.dhcp.psdn.ca.charter.com) has quit (Ping timeout: 240 seconds)
2014-08-31 12:11:02	▬▬▶	asakura (~asakura@gateway/tor-sasl/asakura) has joined ##c++
2014-08-31 12:13:22	◀▬▬	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has quit (Quit: Leaving)
2014-08-31 12:13:50	◀▬▬	Symbiosisz (~Symbiosis@d67-193-128-93.home3.cgocable.net) has quit (Quit: Leaving)
2014-08-31 12:14:21	▬▬▶	hazzadous (~harrywaye@host-92-25-22-208.as13285.net) has joined ##c++
2014-08-31 12:16:48	▬▬▶	gravitation (~gravitati@rrcs-24-213-169-150.nyc.biz.rr.com) has joined ##c++
2014-08-31 12:17:50	▬▬▶	Sonny|3oy (~Sonny|3oy@gateway/tor-sasl/sonny3oy/x-86005991) has joined ##c++
2014-08-31 12:19:26	◀▬▬	natkite (~AndChat69@106.193.64.97) has quit (Quit: Bye)
2014-08-31 12:21:45	◀▬▬	h3nk (~h3nk@192.249.59.73) has left ##c++ ("-")
2014-08-31 12:22:37	◀▬▬	jophish (~jophish@c-24-22-143-176.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2014-08-31 12:22:59	▬▬▶	jophish (~jophish@c-24-22-143-176.hsd1.wa.comcast.net) has joined ##c++
2014-08-31 12:23:08	realloc1	hmm what do you think:
2014-08-31 12:23:08	realloc1	I have some "images" with coordinates, width and height. At a click i want to detect which image i clicked on.
2014-08-31 12:23:08	realloc1	Would iterating through all "images" (there can be a lot) and testing for the coordinates be a good solution?
2014-08-31 12:23:45	realloc1	(i'm developing some kind of 2D Engine on my own)
2014-08-31 12:26:05	▬▬▶	flugo (~flugo@115.248.45.78) has joined ##c++
2014-08-31 12:26:10	Sculptor	it has nothing to do with c++
2014-08-31 12:26:19	◀▬▬	jsoft_ (~jsoft@unaffiliated/jsoft) has quit (Ping timeout: 245 seconds)
2014-08-31 12:26:29	▬▬▶	megaTherion (~therion@coruscant.unix.io) has joined ##c++
2014-08-31 12:26:48	▬▬▶	jsoft_ (~jsoft@unaffiliated/jsoft) has joined ##c++
2014-08-31 12:27:41	realloc1	i'm searching for a good, performant algorithm in CPP
2014-08-31 12:27:47	markand	std::
2014-08-31 12:27:59	◀▬▬	hamid (~nithp@unaffiliated/hamid) has quit (Ping timeout: 245 seconds)
2014-08-31 12:28:13	realloc1	the coordinate nformation is stored in vectors
2014-08-31 12:28:33	realloc1	now... is iterating through them a performant solution?
2014-08-31 12:28:46	realloc1	maybe the only?
2014-08-31 12:29:15	▬▬▶	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has joined ##c++
2014-08-31 12:29:15	unapiedra	realloc1: Iterating through them is O(n) where n is the number of images.
2014-08-31 12:29:41	unapiedra	You can do better, but it could be a viable option for a medium number of images.
2014-08-31 12:30:28	unapiedra	Are the images in a grid? How are they arranged?
2014-08-31 12:30:29	realloc1	so maybe i should store them sorted by quadrants/regions?
2014-08-31 12:30:38	realloc1	no they arent in a grid
2014-08-31 12:30:57	glenfe	The "there can be a lot" implies that you probably want a better algorithm than just iterating through each. Even something as simple as creating a quadtree and using that.
2014-08-31 12:31:14	▬▬▶	hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-08-31 12:32:03	unapiedra	You can obviously store them in an inverted index. I.e. let's assume you can click with at most 1pixel precision. Therefore a table of window size x width is enough to store references to the images that can be seen at a given pixel
2014-08-31 12:32:55	realloc1	but then i have hundreds of vectors...
2014-08-31 12:33:01	◀▬▬	lh_mouse (~lh_mouse@61.171.141.202) has quit (Read error: Connection reset by peer)
2014-08-31 12:33:29	realloc1	so more memory consumption but also more speed with this method?
2014-08-31 12:33:34	glenfe	realloc1: http://en.wikipedia.org/wiki/Quadtree
2014-08-31 12:33:54	unapiedra	as @glenfe mentioned, you can also have some other structure like a quadtree. However, any solution that lets you access what images are at a given location will be faster, than one that lets you get a location after you've looked at the image.
2014-08-31 12:34:28	▬▬▶	kurahaupo (~kurahaupo@118.148.182.61) has joined ##c++
2014-08-31 12:35:00	unapiedra	@realloc1: Yes, my method is likely to need memory. However, probably not that much. You need to store an image ID (int) or pointer per location if that location is filled.
2014-08-31 12:35:26	unapiedra	You could also create larger blocks and then throw out false positives.
2014-08-31 12:36:25	unapiedra	map< <int, int>, vector<ints> > , i.e x,y coordinates gives you a list of image ids.
2014-08-31 12:36:50	unapiedra	how many images are we talking about?
2014-08-31 12:36:59	unapiedra	One million_
2014-08-31 12:37:01	unapiedra	One million?
2014-08-31 12:37:40	realloc1	ok.. thanks a lot for all these suggestions.. i'll try to find the best solution for me..
2014-08-31 12:37:40	realloc1	(the engine should be very general, so that it can be used in a zelda like game (many "images" in a grid, less in a free coordinate system) but also for some with many "free" images like used for particles)
2014-08-31 12:37:45	◀▬▬	skfax (51a6ee90@gateway/web/freenode/ip.81.166.238.144) has quit (Ping timeout: 246 seconds)
2014-08-31 12:37:55	▬▬▶	thejohnfreeman (~Thunderbi@gzac10-107-1.nje.twosigma.com) has joined ##c++
2014-08-31 12:38:52	realloc1	so the number of images changes, depending on what you want to create with the enginew
2014-08-31 12:38:59	unapiedra	give us a number!
2014-08-31 12:39:15	▬▬▶	eckesicle (uid12692@gateway/web/irccloud.com/x-bhvzpryrwbzrpcch) has joined ##c++
2014-08-31 12:39:27	unapiedra	this looks like premature optimisation
2014-08-31 12:39:52	--	RobinHood is now known as hammond
2014-08-31 12:40:25	▬▬▶	kronikarz (~kronikarz@host-217-172-245-116.lodz.mm.pl) has joined ##c++
2014-08-31 12:40:27	realloc1	if somebody later wants to create a top down shooter he maybe needs much, games which use the grid based part of the engine will not need so much
2014-08-31 12:40:39	kronikarz	Hi
2014-08-31 12:40:47	kronikarz	Ooh, games!
2014-08-31 12:40:51	kronikarz	This is my jam
2014-08-31 12:40:57	realloc1	in short: the solution has to fit many purposes
2014-08-31 12:40:58	▬▬▶	jitsuin (~chatzilla@cpe-23-240-223-21.socal.res.rr.com) has joined ##c++
2014-08-31 12:41:00	realloc1	hi
2014-08-31 12:41:01	kronikarz	What are you talking about?
2014-08-31 12:41:20	unapiedra	realloc1: And yet you have avoided using a number... "many" can mean many different things to many people.
2014-08-31 12:41:34	◀▬▬	flugo (~flugo@115.248.45.78) has quit (Ping timeout: 250 seconds)
2014-08-31 12:42:03	realloc1	ok lets say hundreds to 10
2014-08-31 12:42:05	realloc1	:D
2014-08-31 12:42:09	kronikarz	realloc1: What are you guys talking about?
2014-08-31 12:42:30	unapiedra	realloc1: But some constructive suggestion: Make this pluggable. Start with a class where you use the iterating-through-images approach. Then use an inverted index (a map probably), and if you want you can use a quadtree.
2014-08-31 12:43:09	unapiedra	kronikarz: realloc1 wants to find an efficient code for finding out on what image a user has clicked on. There can be many images at many more locations.
2014-08-31 12:43:21	◀▬▬	chatsiri_ (~chatsiri_@cm-58-10-194-30.revip7.asianet.co.th) has quit (Quit: leaving)
2014-08-31 12:44:02	kronikarz	Hmm
2014-08-31 12:44:06	realloc1	the plug-in idea sounds good.
2014-08-31 12:44:06	unapiedra	scratch that. if 100 is your number, then it won't matter any way.
2014-08-31 12:44:09	kronikarz	Well, a quadtree is the best option imho
2014-08-31 12:44:43	glenfe	I already suggested a quadtree to him. I don't know if he ignored my suggestion.
2014-08-31 12:44:50	kronikarz	But for a 100 images it probably won't matter much :P
2014-08-31 12:45:27	realloc1	no i looked at it... but i have to read on first :D
2014-08-31 12:46:48	realloc1	sounds complicated :D
2014-08-31 12:46:51	unapiedra	I actually did an occupancy map some time ago, I thought the Quadtree would be fast, and my team leader told me to use a plain dumb grid map. I did both. Grid map was way faster. My map size was around 1000x1000 or there abouts.
2014-08-31 12:48:24	kronikarz	True. The first rule of efficiency is - benchmark!
2014-08-31 12:49:00	unapiedra	realloc1: Not very complicated. Take a region, split it in four, decide in which of the four the user clicked. Recurse into that smaller region. Etc.
2014-08-31 12:49:22	realloc1	hmm yep i think i'll get this working first and then try some solutions and choose the best working one..
2014-08-31 12:49:27	◀▬▬	Sergonium (~serg@unaffiliated/sergonium) has left ##c++
2014-08-31 12:49:37	realloc1	oh
2014-08-31 12:50:02	▬▬▶	AllTuna (AllTuna@unaffiliated/altuno) has joined ##c++
2014-08-31 12:50:04	AllTuna	Hey guys
2014-08-31 12:50:09	realloc1	typical wikipedia texts sound so complicated ^^
2014-08-31 12:50:09	unapiedra	kronikarz: Indeed. I'm sure the quadtree would have been good for very large maps, but maps never became large...
2014-08-31 12:50:21	AllTuna	Am I able to get some help with client-server architecture here?
2014-08-31 12:50:23	kronikarz	You know, this is the first channel on this network I found that talks mostly about it's actual topic
2014-08-31 12:51:26	◀▬▬	Anodl (~Anodl@p5DC5A537.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-08-31 12:51:32	◀▬▬	impy (~impy@91.181.161.190) has quit (Ping timeout: 250 seconds)
2014-08-31 12:51:33	AllTuna	I'm using sockets and C++, could someone direct me to the right channel?
2014-08-31 12:51:40	realloc1	ok thanks again for the efforts of everyone! YOu helped me very much
2014-08-31 12:52:26	▬▬▶	TommyC (~TommyC@unaffiliated/sepulchralbloom) has joined ##c++
2014-08-31 12:53:29	◀▬▬	spott (~spott@c-76-120-73-233.hsd1.co.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-08-31 12:53:32	▬▬▶	nszceta (~nszceta@c-71-206-246-109.hsd1.pa.comcast.net) has joined ##c++
2014-08-31 12:54:31	realloc1	TCP/UDP?
2014-08-31 12:54:51	Griwes	AllTuna, boost.asio
2014-08-31 12:55:15	Griwes	(that's not a channel, just something you should use)
2014-08-31 12:55:22	▬▬▶	Hannibal_Smith (~Hannibal_@host251-74-dynamic.53-79-r.retail.telecomitalia.it) has joined ##c++
2014-08-31 12:55:36	realloc1	for games enet seemed a good solution for me, but its very old
2014-08-31 12:55:54	▬▬▶	flugo (~flugo@115.248.45.78) has joined ##c++
2014-08-31 12:56:01	Griwes	boost.asio
2014-08-31 12:56:03	Griwes	!next
2014-08-31 12:56:04	nolyc	Another satisfied customer, next!
2014-08-31 12:56:24	K-ballo	is boost.asio a channel?
2014-08-31 12:56:44	realloc1	boost is a populatr cpp library
2014-08-31 12:57:16	K-ballo	lol, I know what boost is, but I don't see boost.asio being the right channel for sockets and C++
2014-08-31 12:57:19	K-ballo	I'm all alone there it seems
2014-08-31 12:57:33	realloc1	http://www.boost.org/doc/libs/1_56_0/doc/html/boost_asio.html
2014-08-31 12:58:28	K-ballo	is there an IRC channel dedicated to boost.asio?
2014-08-31 12:58:40	▬▬▶	EvergreenTree (~quassel@unaffiliated/evergreentree) has joined ##c++
2014-08-31 12:58:51	Nizumzen	K-ballo: no but there is one to boost in general #boost for what it is worth
2014-08-31 12:59:03	Nizumzen	s/to/for
2014-08-31 12:59:09	K-ballo	Nizumzen: thanks, I'm aware of that
2014-08-31 12:59:17	realloc1	if you want a more simple solution: http://sfml-dev.org/documentation/2.1/group__network.php
2014-08-31 12:59:26	K-ballo	AllTuna: maybe try #boost then?
2014-08-31 12:59:28	realloc1	sfml again ^^
2014-08-31 12:59:51	▬▬▶	Symbiosisz (~Symbiosis@d67-193-128-93.home3.cgocable.net) has joined ##c++
2014-08-31 13:00:06	◀▬▬	Sceorem (~Sceorem@psp44-1-78-229-244-120.fbx.proxad.net) has quit (Read error: Connection reset by peer)
2014-08-31 13:00:22	◀▬▬	hamid (~nithp@unaffiliated/hamid) has quit (Quit: Lost terminal)
2014-08-31 13:00:35	kronikarz	Man, I love SDL2 and all that, but I have to admire SFML for it's more modern approach and a few more features :/
2014-08-31 13:01:19	◀▬▬	e^0 (~e^0@unaffiliated/e0/x-7387528) has quit (Ping timeout: 245 seconds)
2014-08-31 13:02:11	▬▬▶	SiGe (~SiGe@75-141-108-74.dhcp.mtpk.ca.charter.com) has joined ##c++
2014-08-31 13:02:53	realloc1	SDL was always too C-Style for me ^^
2014-08-31 13:02:59	◀▬▬	blackwind_123 (~IceChat9@117.192.140.118) has quit (Ping timeout: 245 seconds)
2014-08-31 13:03:02	kronikarz	Yeah...
2014-08-31 13:03:08	realloc1	sry bad english
2014-08-31 13:03:09	Chris	That's because it's... C
2014-08-31 13:03:16	kronikarz	I started to write a C++11 wrapper but meh
2014-08-31 13:03:22	realloc1	that may be a reason^^
2014-08-31 13:03:29	--	Zifre_ is now known as Zifre
2014-08-31 13:03:32	▬▬▶	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-08-31 13:03:39	kronikarz	Still, it's the most versatile so far
2014-08-31 13:03:48	◀▬▬	io2 (~io2@unaffiliated/irrequietus) has quit (Quit: ...take irc away, what are you? genius, billionaire, playboy, philanthropist)
2014-08-31 13:05:30	▬▬▶	blackwind_123 (~IceChat9@117.202.17.255) has joined ##c++
2014-08-31 13:06:28	◀▬▬	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-08-31 13:06:49	▬▬▶	bluedreams (~bluedream@66-215-92-80.dhcp.psdn.ca.charter.com) has joined ##c++
2014-08-31 13:07:48	Griwes	<K-ballo> is boost.asio a channel?
2014-08-31 13:07:49	realloc1	SDL has no hardware acceleration... has it?
2014-08-31 13:07:52	Griwes	<Griwes> (that's not a channel, just something you should use)
2014-08-31 13:08:12	Griwes	like 7 messages above yours, K-ballo
2014-08-31 13:08:13	kronikarz	It does
2014-08-31 13:08:18	kronikarz	SDL2 at least
2014-08-31 13:08:20	▬▬▶	e^0 (~e^0@unaffiliated/e0/x-7387528) has joined ##c++
2014-08-31 13:08:25	◀▬▬	Dev-Gitter (~Dev-Gitte@5.238.77.162) has quit (Quit: Leaving [Bye Everybody])
2014-08-31 13:08:25	◀▬▬	FarlaTux (~FarlaTux@unaffiliated/farlatux) has quit (Quit: Leaving [Bye Everybody])
2014-08-31 13:08:25	◀▬▬	PHP4Ever (~PHP4Ever@unaffiliated/php4ever) has quit (Quit: Leaving [Bye Everybody])
2014-08-31 13:08:54	realloc1	ok..
2014-08-31 13:11:19	◀▬▬	bluedreams (~bluedream@66-215-92-80.dhcp.psdn.ca.charter.com) has quit (Ping timeout: 245 seconds)
2014-08-31 13:12:40	◀▬▬	unapiedra (~christoph@141.70.80.5) has quit (Remote host closed the connection)
2014-08-31 13:12:51	▬▬▶	skfax (51a6ee90@gateway/web/freenode/ip.81.166.238.144) has joined ##c++
2014-08-31 13:13:30	◀▬▬	paullik (~paullik@unaffiliated/paullik) has quit (Remote host closed the connection)
2014-08-31 13:14:30	◀▬▬	ison__ (2eba4dc0@gateway/web/freenode/ip.46.186.77.192) has quit (Ping timeout: 246 seconds)
2014-08-31 13:16:57	◀▬▬	skfax (51a6ee90@gateway/web/freenode/ip.81.166.238.144) has quit (Ping timeout: 246 seconds)
2014-08-31 13:20:57	◀▬▬	Neomex (~Neomex@eab190.neoplus.adsl.tpnet.pl) has quit (Quit: Leaving)
2014-08-31 13:21:15	▬▬▶	vl4kn0 (~vl4kn0@85.135.250.224) has joined ##c++
2014-08-31 13:22:37	◀▬▬	Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2014-08-31 13:25:18	▬▬▶	spott (~spott@c-76-120-73-233.hsd1.co.comcast.net) has joined ##c++
2014-08-31 13:26:39	◀▬▬	monique__ (~monique@unaffiliated/monique) has quit (Ping timeout: 250 seconds)
2014-08-31 13:26:44	◀▬▬	xace (~noname@unaffiliated/xace) has quit (Ping timeout: 245 seconds)
2014-08-31 13:27:02	◀▬▬	SiGe (~SiGe@75-141-108-74.dhcp.mtpk.ca.charter.com) has quit (Remote host closed the connection)
2014-08-31 13:27:33	◀▬▬	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has quit (Quit: Leaving)
2014-08-31 13:27:39	▬▬▶	Bitani (~zmcgohan@dhcp-164-107-203-146.osuwireless.ohio-state.edu) has joined ##c++
2014-08-31 13:27:49	◀▬▬	hs366 (~ACE@94.254.45.76) has quit (Ping timeout: 255 seconds)
2014-08-31 13:28:44	▬▬▶	SiGe (~SiGe@75-141-108-74.dhcp.mtpk.ca.charter.com) has joined ##c++
2014-08-31 13:28:52	◀▬▬	SiGe (~SiGe@75-141-108-74.dhcp.mtpk.ca.charter.com) has quit (Remote host closed the connection)
2014-08-31 13:29:05	▬▬▶	SiGe (~SiGe@75-141-108-74.dhcp.mtpk.ca.charter.com) has joined ##c++
2014-08-31 13:29:10	◀▬▬	jophish (~jophish@c-24-22-143-176.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2014-08-31 13:29:37	◀▬▬	spott (~spott@c-76-120-73-233.hsd1.co.comcast.net) has quit (Ping timeout: 255 seconds)
2014-08-31 13:29:43	▬▬▶	tworkin (~Adium@97.77.193.138) has joined ##c++
2014-08-31 13:30:03	▬▬▶	spott (~spott@c-76-120-73-233.hsd1.co.comcast.net) has joined ##c++
2014-08-31 13:30:04	◀▬▬	thejohnfreeman (~Thunderbi@gzac10-107-1.nje.twosigma.com) has quit (Ping timeout: 245 seconds)
2014-08-31 13:30:04	◀▬▬	fruitz (~fruitz@d90-136-155-74.cust.tele2.de) has quit (Ping timeout: 245 seconds)
2014-08-31 13:30:31	▬▬▶	thejohnfreeman (~Thunderbi@gzac10-107-1.nje.twosigma.com) has joined ##c++
2014-08-31 13:30:43	◀▬▬	tworkin (~Adium@97.77.193.138) has left ##c++
2014-08-31 13:32:51	▬▬▶	cult- (~ubuntu@unaffiliated/cult-) has joined ##c++
2014-08-31 13:33:05	cult-	how can i reference to a static function if i don't use classes?
2014-08-31 13:33:44	◀▬▬	flugo (~flugo@115.248.45.78) has quit (Ping timeout: 245 seconds)
2014-08-31 13:33:56	Oxyd	What do you mean by "reference"?
2014-08-31 13:34:08	◀▬▬	stealth``` (~stealth@p4FDCD028.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2014-08-31 13:34:13	▬▬▶	bitlord (~bitlord@unaffiliated/bitlord) has joined ##c++
2014-08-31 13:34:24	cult-	to call a function, such as if i use classes className::functionName(); but without className if i dont use any class
2014-08-31 13:34:37	Oxyd	functionName()
2014-08-31 13:34:43	Oxyd	;
2014-08-31 13:34:51	Oxyd	(Newline between () and ; not necessary.)
2014-08-31 13:35:10	cult-	it says undefined reference. in the header file i declare it as static void functionName(); in the other cpp file i defined it as void functionName() {something here}
2014-08-31 13:35:30	Oxyd	Well if it's static, you obviously can't call it from other .cpp than the one it was defined in.
2014-08-31 13:35:33	cult-	i want to call this function that is in another cpp
2014-08-31 13:35:43	Oxyd	Then drop the static.
2014-08-31 13:36:12	cult-	i can call static variables in c# or java from other files. is it standard in c++ that its not possible any way?
2014-08-31 13:36:26	Oxyd	You can't call variables in C++.
2014-08-31 13:36:46	cult-	then refer, but you understand my question
2014-08-31 13:37:17	Oxyd	static means "This function is only visible in this .cpp file". Why would you want to mark a function as only visible from within the .cpp file and then try to call it from outside?
2014-08-31 13:37:38	◀▬▬	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-08-31 13:37:42	▬▬▶	xace (~noname@unaffiliated/xace) has joined ##c++
2014-08-31 13:37:49	cult-	thank you
2014-08-31 13:38:24	seishun	{ auto f = []() { cout << 5; }; f(); } // I just called a variable
2014-08-31 13:38:25	geordi	5
2014-08-31 13:38:43	Oxyd	No, you called the function decltype(f)::operator ().
2014-08-31 13:39:38	▬▬▶	Neomex (~Neomex@eab134.neoplus.adsl.tpnet.pl) has joined ##c++
2014-08-31 13:40:00	Oxyd	If you wanna be a smartass, perhaps creating a void (*p)() = &some_function;, and then calling p(); would be a better example.
2014-08-31 13:42:08	▬▬▶	hs366 (~ACE@94.254.45.76) has joined ##c++
2014-08-31 13:42:27	◀▬▬	saedelaere (~quassel@unaffiliated/saedelaere) has quit (Ping timeout: 260 seconds)
2014-08-31 13:42:32	▬▬▶	Forser_Laptop (~Forser_La@c83-251-208-71.bredband.comhem.se) has joined ##c++
2014-08-31 13:42:38	◀▬▬	NaiveFrost (~NaiveFros@andromeda.ryanwelch.me) has quit (Quit: Quit.)
2014-08-31 13:42:54	▬▬▶	monique__ (~monique@unaffiliated/monique) has joined ##c++
2014-08-31 13:43:26	kurahaupo	Oxyd: are you saying that f could not be assigned to p, as each was declared above?
2014-08-31 13:43:55	Oxyd	It could.
2014-08-31 13:44:09	▬▬▶	micom (~micom@unaffiliated/micom) has joined ##c++
2014-08-31 13:44:27	▬▬▶	dreampwnzor (~dreampwnz@unaffiliated/dreampwnzor) has joined ##c++
2014-08-31 13:44:43	Neomex	do you know any good advanced c++ books?
2014-08-31 13:44:44	Neomex	I feel kind of stuck with what to know I'd like to get from being intermediate to advanced
2014-08-31 13:45:00	Griwes	!books
2014-08-31 13:45:01	nolyc	The Definitive C++ Book Guide and List -> http://stackoverflow.com/q/388242/1090079
2014-08-31 13:45:06	▬▬▶	sedeki (~textual@gateway/tor-sasl/sedeki) has joined ##c++
2014-08-31 13:47:08	realloc1	@cult: define your function in a file like this: void myFunction() { ... }
2014-08-31 13:47:08	realloc1	then inside the other file use this to make it available:
2014-08-31 13:47:08	realloc1	extern void myFunction();
2014-08-31 13:47:20	◀▬▬	spott (~spott@c-76-120-73-233.hsd1.co.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-08-31 13:47:22	◀▬▬	michimuellae (~michimuel@p4FDFCC66.dip0.t-ipconnect.de) has quit (Quit: WeeChat 1.0)
2014-08-31 13:47:33	▬▬▶	flugo (~flugo@103.225.100.51) has joined ##c++
2014-08-31 13:47:47	▬▬▶	scai (~scai@p4FF0E257.dip0.t-ipconnect.de) has joined ##c++
2014-08-31 13:48:33	◀▬▬	sedeki (~textual@gateway/tor-sasl/sedeki) has quit (Remote host closed the connection)
2014-08-31 13:49:08	▬▬▶	jophish (~jophish@c-24-22-143-176.hsd1.wa.comcast.net) has joined ##c++
2014-08-31 13:49:50	◀▬▬	aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-08-31 13:50:28	cult-	thanks realloc1
2014-08-31 13:50:32	realloc1	np
2014-08-31 13:51:22	◀▬▬	spider (nd@bitchx/debug/oxy) has quit (Read error: Connection reset by peer)
2014-08-31 13:51:27	▬▬▶	NaiveFrost (~NaiveFros@andromeda.ryanwelch.me) has joined ##c++
2014-08-31 13:51:34	Oxyd	The extern is not necessary.
2014-08-31 13:52:09	realloc1	but remember that global functions are always a bit "strange" in cpp and look c-like. Try to use namespaces and classes instead
2014-08-31 13:52:31	realloc1	ahem ^^
2014-08-31 13:53:08	▬▬▶	Atque (~Atque@unaffiliated/atque) has joined ##c++
2014-08-31 13:53:13	▬▬▶	miodi (~oodi@dsl-hvkbrasgw1-54f89b-158.dhcp.inet.fi) has joined ##c++
2014-08-31 13:53:56	realloc1	does "extern" make a difference to the linker? im just interested
2014-08-31 13:54:07	▬▬▶	BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has joined ##c++
2014-08-31 13:54:31	◀▬▬	Sonny|3oy (~Sonny|3oy@gateway/tor-sasl/sonny3oy/x-86005991) has quit (Quit: Leaving)
2014-08-31 13:54:56	▬▬▶	kadoban (~kadoban@ip68-104-204-58.ph.ph.cox.net) has joined ##c++
2014-08-31 13:55:11	◀▬▬	NaiveFrost (~NaiveFros@andromeda.ryanwelch.me) has quit (Client Quit)
2014-08-31 13:56:18	Oxyd	Not in this case, no.
2014-08-31 13:56:42	Oxyd	Functions are extern by default.
2014-08-31 13:56:50	◀▬▬	Mio-chan (~Mio-chan@unaffiliated/mio-chan) has quit (Quit: Leaving)
2014-08-31 13:57:22	◀▬▬	deanrock0 (~deanrock0@cpe-77.38.57.189.cable.t-1.si) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-08-31 13:57:57	▬▬▶	NaiveFrost (~NaiveFros@andromeda.ryanwelch.me) has joined ##c++
2014-08-31 13:59:59	realloc1	ok
2014-08-31 14:00:03	▬▬▶	slassh (~slassh@94.9.255.214) has joined ##c++
2014-08-31 14:00:24	▬▬▶	uwjesq (~henry@HSI-KBW-091-089-165-074.hsi2.kabel-badenwuerttemberg.de) has joined ##c++
2014-08-31 14:00:35	◀▬▬	uwjesq (~henry@HSI-KBW-091-089-165-074.hsi2.kabel-badenwuerttemberg.de) has left ##c++
2014-08-31 14:00:42	BtbN	Global functions are usualy only used for stuff like library exports
2014-08-31 14:01:39	◀▬▬	Jackneill (~Jackneill@unaffiliated/jackneill) has quit (Ping timeout: 240 seconds)
2014-08-31 14:01:50	▬▬▶	PhyloGenesis_ (~PhyloGene@cpe-72-129-105-83.socal.res.rr.com) has joined ##c++
2014-08-31 14:02:09	◀▬▬	DrWhatshisface (~DrWhatshi@162-196-73-187.lightspeed.nworla.sbcglobal.net) has quit (Ping timeout: 245 seconds)
2014-08-31 14:02:11	--	irc: disconnected from server
2014-08-31 14:02:30	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925415027.dsl.bell.ca) has joined ##c++
2014-08-31 14:02:30	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-08-31 14:02:30	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-08-31 14:02:30	--	Channel ##c++: 447 nicks (0 ops, 0 voices, 447 normals)
2014-08-31 14:02:31	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-08-31 14:02:34	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-08-31 14:03:39	◀▬▬	BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has quit
2014-08-31 14:04:04	▬▬▶	DrWhatshisface (~DrWhatshi@162-196-73-187.lightspeed.nworla.sbcglobal.net) has joined ##c++
2014-08-31 14:05:57	▬▬▶	aslant (~aslant@37.157.33.76) has joined ##c++
2014-08-31 14:06:57	--	irc: disconnected from server
2014-08-31 14:07:47	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925415027.dsl.bell.ca) has joined ##c++
2014-08-31 14:07:47	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-08-31 14:07:47	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-08-31 14:07:47	--	Channel ##c++: 449 nicks (0 ops, 0 voices, 449 normals)
2014-08-31 14:07:48	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-08-31 14:07:51	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-08-31 14:08:54	--	irc: disconnected from server
2014-08-31 14:09:16	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925415027.dsl.bell.ca) has joined ##c++
2014-08-31 14:09:16	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-08-31 14:09:16	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-08-31 14:09:16	--	Channel ##c++: 449 nicks (0 ops, 0 voices, 449 normals)
2014-08-31 14:09:17	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-08-31 14:09:21	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-08-31 14:09:38	▬▬▶	Jackneill (~Jackneill@unaffiliated/jackneill) has joined ##c++
2014-08-31 14:09:57	▬▬▶	ketamin (~Thunderbi@189.219.47.2) has joined ##c++
2014-08-31 14:12:09	◀▬▬	bluedreams (~bluedream@66-215-92-80.dhcp.psdn.ca.charter.com) has quit (Ping timeout: 250 seconds)
2014-08-31 14:15:31	◀▬▬	ketamin (~Thunderbi@189.219.47.2) has quit (Read error: Connection reset by peer)
2014-08-31 14:15:49	▬▬▶	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-08-31 14:15:49	▬▬▶	mr_snowf1ake (~user@cpe-24-92-43-86.nycap.res.rr.com) has joined ##c++
2014-08-31 14:16:08	▬▬▶	ketamin (~Thunderbi@189.219.47.2) has joined ##c++
2014-08-31 14:16:29	▬▬▶	Mio-chan (~Mio-chan@unaffiliated/mio-chan) has joined ##c++
2014-08-31 14:17:26	▬▬▶	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-08-31 14:18:58	◀▬▬	jophish (~jophish@c-24-22-143-176.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2014-08-31 14:19:25	▬▬▶	lihp (~utilita@ip1886254f.dynamic.kabel-deutschland.de) has joined ##c++
2014-08-31 14:20:10	◀▬▬	rendar (~I@95.238.180.236) has quit (Ping timeout: 240 seconds)
2014-08-31 14:21:19	◀▬▬	lord4163 (~lord4163@81-232-61-81-no226.tbcn.telia.com) has quit (Ping timeout: 245 seconds)
2014-08-31 14:22:43	--	irc: disconnected from server
2014-08-31 18:41:47	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925415027.dsl.bell.ca) has joined ##c++
2014-08-31 18:41:47	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-08-31 18:41:47	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-08-31 18:41:47	--	Channel ##c++: 439 nicks (0 ops, 0 voices, 439 normals)
2014-08-31 18:41:47	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-08-31 18:41:51	▬▬▶	jitsuin (~chatzilla@cpe-23-240-223-21.socal.res.rr.com) has joined ##c++
2014-08-31 18:41:55	debuser	thanks, and bye
2014-08-31 18:41:58	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-08-31 18:42:04	realloc1	b
2014-08-31 18:42:07	◀▬▬	debuser (~Android@ip-2-206-1-208.web.vodafone.de) has quit (Quit: -a- IRC for Android 2.1.18)
2014-08-31 18:42:48	◀▬▬	Element9 (~Element9@cable-178-148-213-208.dynamic.sbb.rs) has quit (Read error: Connection reset by peer)
2014-08-31 18:45:22	▬▬▶	Pilum (~Pilum@2a02:1660:6207:c400:21f:3cff:fecc:cf50) has joined ##c++
2014-08-31 18:52:40	◀▬▬	realloc1 (~Anton@aftr-88-217-180-102.dynamic.mnet-online.de) has quit (Quit: Leaving.)
2014-08-31 18:52:50	Bitwise	Hello, I'm trying to compile CRegistry but I'm getting this error: http://puu.sh/bg5m4/6717c86e23.png
2014-08-31 18:53:28	BtbN	ask the ones who wrote that thing. And also don't post images of errors.
2014-08-31 18:53:46	▬▬▶	realloc1 (~realloc1@2001:a60:1012:a501:99b5:6dc0:dc58:1012) has joined ##c++
2014-08-31 18:53:47	◀▬▬	bluedreams (~bluedream@66-215-92-80.dhcp.psdn.ca.charter.com) has quit (Remote host closed the connection)
2014-08-31 18:53:57	◀▬▬	KptainKirk (~kptainkir@37.163.42.206) has quit (Remote host closed the connection)
2014-08-31 18:53:57	Bitwise	BtbN, May I ask what is wrong with images?
2014-08-31 18:54:33	BtbN	They are not plain text.
2014-08-31 18:54:38	BtbN	errors are
2014-08-31 18:55:10	Bitwise	Gotcha.
2014-08-31 18:55:23	Oxyd	It's even better when someone posts an image of their code. /o\
2014-08-31 18:59:11	▬▬▶	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-08-31 19:00:06	◀▬▬	FriskyKat (SomeWhere@94.9.8.115) has quit (Read error: Connection reset by peer)
2014-08-31 19:00:07	◀▬▬	KrzaQ (~krzaq@krzaq.cc) has quit (Read error: Connection reset by peer)
2014-08-31 19:00:26	▬▬▶	KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-08-31 19:00:26	▬▬▶	nug700_ (~nug700@174-26-158-8.phnx.qwest.net) has joined ##c++
2014-08-31 19:00:59	◀▬▬	David (~David@unaffiliated/david) has quit (Quit: Goodbye.)
2014-08-31 19:01:13	▬▬▶	David (~David@unaffiliated/david) has joined ##c++
2014-08-31 19:01:29	▬▬▶	gold-digger (~textual@c-50-129-58-220.hsd1.in.comcast.net) has joined ##c++
2014-08-31 19:01:48	▬▬▶	Munt (~munt@149.3.142.250) has joined ##c++
2014-08-31 19:02:36	◀▬▬	realloc1 (~realloc1@2001:a60:1012:a501:99b5:6dc0:dc58:1012) has quit (Ping timeout: 260 seconds)
2014-08-31 19:02:55	◀▬▬	nug700 (~nug700@174-26-158-8.phnx.qwest.net) has quit (Ping timeout: 245 seconds)
2014-08-31 19:03:22	◀▬▬	jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has quit (Quit: leaving)
2014-08-31 19:03:26	◀▬▬	kailoAtWork (~kailoAtWo@cpe-75-83-169-163.socal.res.rr.com) has quit (Quit: This computer has gone to sleep)
2014-08-31 19:03:36	◀▬▬	Haikarainen (~Haikarain@unaffiliated/haikarainen) has quit (Remote host closed the connection)
2014-08-31 19:03:37	◀▬▬	jkyle (~jkyle@unaffiliated/jkyle) has quit (Ping timeout: 260 seconds)
2014-08-31 19:04:53	▬▬▶	mangekyo (~mangekyo@1.136.52.248) has joined ##c++
2014-08-31 19:05:25	◀▬▬	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 245 seconds)
2014-08-31 19:05:44	▬▬▶	hiptobecubic_ (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-08-31 19:06:07	--	hiptobecubic_ is now known as hiptobecubic
2014-08-31 19:06:29	◀▬▬	BlaXpirit (~blaxpirit@101-74-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-08-31 19:07:01	▬▬▶	realloc1 (~Anton@aftr-88-217-180-102.dynamic.mnet-online.de) has joined ##c++
2014-08-31 19:07:47	◀▬▬	Neomex (~Neomex@eac241.neoplus.adsl.tpnet.pl) has quit (Quit: Leaving)
2014-08-31 19:08:41	◀▬▬	GinoMan (~Gino@ip-64-134-41-120.public.wayport.net) has quit (Ping timeout: 240 seconds)
2014-08-31 19:12:42	◀▬▬	hexagoxel (~hexagoxel@kiel-5f7689b3.pool.mediaWays.net) has quit (Quit: Ex-Chat)
2014-08-31 19:15:49	▬▬▶	ncd|leeN (~leeN@e180183244.adsl.alicedsl.de) has joined ##c++
2014-08-31 19:16:06	◀▬▬	leeN (~leeN@e180183244.adsl.alicedsl.de) has quit (Read error: Connection reset by peer)
2014-08-31 19:16:16	▬▬▶	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-08-31 19:16:35	▬▬▶	jophish (~jophish@c-24-22-143-176.hsd1.wa.comcast.net) has joined ##c++
2014-08-31 19:17:39	◀▬▬	MrFlibble (LunarJetma@05400825.skybroadband.com) has quit (Quit: MrFlibble)
2014-08-31 19:17:56	▬▬▶	jkyle (~jkyle@unaffiliated/jkyle) has joined ##c++
2014-08-31 19:19:08	▬▬▶	Balzy (~Balzy@host51-163-dynamic.14-87-r.retail.telecomitalia.it) has joined ##c++
2014-08-31 19:19:52	◀▬▬	seishun (~Kakera@46.109.100.133) has quit (Ping timeout: 260 seconds)
2014-08-31 19:20:14	◀▬▬	Balzy (~Balzy@host51-163-dynamic.14-87-r.retail.telecomitalia.it) has quit (Read error: Connection reset by peer)
2014-08-31 19:20:25	▬▬▶	IanMalco_ (~IanMalcol@179.179.112.115) has joined ##c++
2014-08-31 19:20:33	◀▬▬	IanMalco_ (~IanMalcol@179.179.112.115) has quit (Remote host closed the connection)
2014-08-31 19:20:33	◀▬▬	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 240 seconds)
2014-08-31 19:20:39	◀▬▬	ncd|leeN (~leeN@e180183244.adsl.alicedsl.de) has quit (Ping timeout: 255 seconds)
2014-08-31 19:20:46	▬▬▶	Balzy (~Balzy@host51-163-dynamic.14-87-r.retail.telecomitalia.it) has joined ##c++
2014-08-31 19:23:42	Zunino	Given a simple Base <- Derived hierarchy, if one creates Derived objects like: Derived d1 {}, then the "full" object will be accessed through d1 (by full, I mean its Base and Derived slices).
2014-08-31 19:25:12	▬▬▶	kailoAtWork (~kailoAtWo@cpe-75-83-169-163.socal.res.rr.com) has joined ##c++
2014-08-31 19:25:53	Zunino	If, however, the object is declared and defined like Base b1 = Derived {}, then the Derived part will be "sliced off" and you won't be able to reach specialized implementations in Derived, i.e., no polymorphic behavior.
2014-08-31 19:26:20	Zunino	Are my considerations correct?
2014-08-31 19:28:48	Oxyd	Well, yes.
2014-08-31 19:29:13	Zunino	OK, moving on to get to my actual question.
2014-08-31 19:30:25	Zunino	Considering that you want to have polymorphic behavior and that you don't want to dynamically allocate objects, you could do: Derived d {}; and then Base& b = d;
2014-08-31 19:30:39	Oxyd	Yes.
2014-08-31 19:30:44	Zunino	OK
2014-08-31 19:31:22	◀▬▬	skfax (51a6ee90@gateway/web/freenode/ip.81.166.238.144) has quit (Quit: Page closed)
2014-08-31 19:32:30	Zunino	But what if you want to do away with the 'd' variable? After all, it's only being used to be upcast to Base later.
2014-08-31 19:32:48	Zunino	I came up with Base&& b = Derived {}
2014-08-31 19:33:04	Zunino	Is this legal/does what I think it does?
2014-08-31 19:33:05	Oxyd	Why would you even want to have a Base& if you can have Derived?
2014-08-31 19:34:30	Zunino	I know I could have Derived here, but suppose the hierarchy goes beyond Derived and I want to treat a collection of those objects polymorphically
2014-08-31 19:34:41	◀▬▬	jophish (~jophish@c-24-22-143-176.hsd1.wa.comcast.net) has quit
2014-08-31 19:34:45	cult-	can you communicate with a running process by its PID?
2014-08-31 19:35:04	Zunino	I guess my question is around the use of references in order to achieve polymorphic behavior.
2014-08-31 19:35:29	Zunino	And the fact that you'd usually need a const ref if you wanted to bind a temporary.
2014-08-31 19:35:37	BtbN	cult-, you can send it signals
2014-08-31 19:36:00	cult-	how? can you refer to a topic?
2014-08-31 19:36:04	Oxyd	If you want a collection of those object, you probably want something like vector<shared_ptr<base>> collection;, and then you'll have to make_shared all your derived types, of course.
2014-08-31 19:36:15	BtbN	using kill or killall for example
2014-08-31 19:36:17	cult-	the two processes must run separately
2014-08-31 19:36:36	◀▬▬	Tectu (~Tectu@78-167.60-188.cust.bluewin.ch) has quit (Quit: Leaving)
2014-08-31 19:37:37	realloc1	maybe you should choose a other way of communication: files / sockets;
2014-08-31 19:37:37	realloc1	By the way: Isnt it possible to access the "volatile" variables of a other process?
2014-08-31 19:37:52	◀▬▬	amizraa (~amizraa@gateway/tor-sasl/amizraa) has quit (Ping timeout: 264 seconds)
2014-08-31 19:38:28	◀▬▬	fold (~JimmyRcom@66-169-184-128.dhcp.ftwo.tx.charter.com) has quit (Ping timeout: 250 seconds)
2014-08-31 19:39:02	Zunino	I'll have to read up on make_shared.
2014-08-31 19:39:40	Oxyd	make_shared<T> simply creates a T and gives you the shared_ptr to it.
2014-08-31 19:39:50	Oxyd	Likewise for make_unique and unique_ptr.
2014-08-31 19:39:57	realloc1	i have no idea, but i read that this "accessibility" is one of the uses of the "volatile" keyword
2014-08-31 19:40:01	◀▬▬	rnickb (~rnickb@cpe-72-229-133-225.nyc.res.rr.com) has quit (Quit: rnickb)
2014-08-31 19:40:14	Zunino	But, in any case, can you confirm whether this usage is valid/conformant: Base&& b = Derived {}
2014-08-31 19:40:28	Oxyd	Zunino: Yes.
2014-08-31 19:41:37	Zunino	Thansk, Oxyd. Is it correct to read it as: the rhs is an rvalue, which is being bound to an rvalue reference.
2014-08-31 19:41:50	Oxyd	Yes.
2014-08-31 19:41:54	Zunino	Nice.
2014-08-31 19:41:59	Zunino	Thank you for your time.
2014-08-31 19:42:42	◀▬▬	jitsuin (~chatzilla@cpe-23-240-223-21.socal.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-08-31 19:42:48	▬▬▶	GinoMan (~Gino@ip-64-134-41-120.public.wayport.net) has joined ##c++
2014-08-31 19:43:52	realloc1	cult: maybe try shared memory: http://www.boost.org/doc/libs/1_49_0/doc/html/interprocess/sharedmemorybetweenprocesses.html
2014-08-31 19:44:00	▬▬▶	jitsuin (~chatzilla@cpe-23-240-223-21.socal.res.rr.com) has joined ##c++
2014-08-31 19:44:32	◀▬▬	mangekyo (~mangekyo@1.136.52.248) has quit (Ping timeout: 250 seconds)
2014-08-31 19:45:12	▬▬▶	nszceta (~nszceta@c-71-206-246-109.hsd1.pa.comcast.net) has joined ##c++
2014-08-31 22:37:51	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925415027.dsl.bell.ca) has joined ##c++
2014-08-31 22:37:51	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-08-31 22:37:51	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-08-31 22:37:51	--	Channel ##c++: 416 nicks (0 ops, 0 voices, 416 normals)
2014-08-31 22:37:52	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-08-31 22:38:02	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-08-31 22:38:36	▬▬▶	Carbonflux (~BOB@174-21-109-233.tukw.qwest.net) has joined ##c++
2014-08-31 22:40:14	moonchild	Bitwise: this isn't the place to find an answer for that, try one of the windows dev rooms
2014-08-31 22:40:42	Bitwise	moonchild, you're right. I already asked in #winapi and found my answer.
2014-08-31 22:41:02	▬▬▶	Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-08-31 22:41:25	moonchild	:)
2014-08-31 22:41:32	◀▬▬	TzilTzal (~yh@119.75.36.90) has quit (Quit: Leaving.)
2014-08-31 22:41:59	▬▬▶	TzilTzal (~yh@119.75.36.90) has joined ##c++
2014-08-31 22:42:00	◀▬▬	TzilTzal (~yh@119.75.36.90) has left ##c++
2014-08-31 22:43:41	▬▬▶	TzilTzal (~yh@119.75.36.90) has joined ##c++
2014-08-31 22:43:45	◀▬▬	Balzy (~Balzy@host51-163-dynamic.14-87-r.retail.telecomitalia.it) has quit (Ping timeout: 260 seconds)
2014-08-31 22:43:46	◀▬▬	mmhun (~anonymous@cpe-67-242-2-86.twcny.res.rr.com) has quit (Quit: mmhun)
2014-08-31 22:45:23	◀▬▬	Orion] (~nname@unaffiliated/orion/x-3970838) has quit
2014-08-31 22:45:46	◀▬▬	TzilTzal (~yh@119.75.36.90) has quit (Client Quit)
2014-08-31 22:50:41	▬▬▶	kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has joined ##c++
2014-08-31 22:56:09	▬▬▶	c0le (~c0le@59.99.251.45) has joined ##c++
2014-08-31 22:56:21	◀▬▬	W0rmDr1nk (~wormdrink@unaffiliated/wormdrink) has quit (Ping timeout: 260 seconds)
2014-08-31 22:57:19	◀▬▬	nszceta (~nszceta@c-71-206-246-109.hsd1.pa.comcast.net) has quit (Ping timeout: 250 seconds)
2014-08-31 22:58:30	◀▬▬	Munt (~munt@149.3.142.250) has quit (Remote host closed the connection)
2014-08-31 22:59:39	▬▬▶	nszceta (~nszceta@c-71-206-246-109.hsd1.pa.comcast.net) has joined ##c++
2014-08-31 23:03:37	▬▬▶	adek (~adek@207.253.19.2) has joined ##c++
2014-08-31 23:04:51	--	Bigcheese_ is now known as Bigcheese
2014-08-31 23:07:46	▬▬▶	Chris (~chris@unaffiliated/chris) has joined ##c++
2014-08-31 23:08:54	◀▬▬	gravitation (~gravitati@rrcs-24-213-169-150.nyc.biz.rr.com) has quit (Ping timeout: 240 seconds)
2014-08-31 23:09:01	▬▬▶	W0rmDr1nk (~wormdrink@unaffiliated/wormdrink) has joined ##c++
2014-08-31 23:09:04	▬▬▶	fdi11inger (~fdi11inge@pool-74-102-0-213.nwrknj.fios.verizon.net) has joined ##c++
2014-08-31 23:13:35	◀▬▬	fdi11inger (~fdi11inge@pool-74-102-0-213.nwrknj.fios.verizon.net) has left ##c++
2014-08-31 23:15:00	▬▬▶	immibis (~ChatZill1@122-59-227-101.jetstream.xtra.co.nz) has joined ##c++
2014-08-31 23:20:08	◀▬▬	dardevelin (~dardeveli@a95-95-29-159.cpe.netcabo.pt) has quit (Ping timeout: 240 seconds)
2014-08-31 23:22:01	◀▬▬	redpill (~redpill@unaffiliated/redpill) has quit (Ping timeout: 250 seconds)
2014-08-31 23:23:35	▬▬▶	redpill (~redpill@unaffiliated/redpill) has joined ##c++
2014-08-31 23:25:13	◀▬▬	systemfault (~Systemfau@oftn/member/systemfault) has quit
2014-08-31 23:26:44	▬▬▶	cbot` (~FS@ool-4355a0bf.dyn.optonline.net) has joined ##c++
2014-08-31 23:27:38	--	phantomcircuit_ is now known as phantomcircuit
2014-08-31 23:27:38	◀▬▬	ruediger (~quassel@ptmx.org) has quit (Quit: No Ping reply in 180 seconds.)
2014-08-31 23:28:00	◀▬▬	redpill (~redpill@unaffiliated/redpill) has quit (Max SendQ exceeded)
2014-08-31 23:28:13	▬▬▶	ruediger (~quassel@ptmx.org) has joined ##c++
2014-08-31 23:28:20	▬▬▶	nszceta_ (~nszceta@c-71-206-246-109.hsd1.pa.comcast.net) has joined ##c++
2014-08-31 23:28:36	▬▬▶	redpill (~redpill@unaffiliated/redpill) has joined ##c++
2014-08-31 23:30:41	◀▬▬	nszceta (~nszceta@c-71-206-246-109.hsd1.pa.comcast.net) has quit (Ping timeout: 250 seconds)
2014-08-31 23:30:58	▬▬▶	robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-08-31 23:31:08	◀▬▬	cbot` (~FS@ool-4355a0bf.dyn.optonline.net) has quit (Ping timeout: 240 seconds)
2014-08-31 23:33:13	◀▬▬	ruediger (~quassel@ptmx.org) has quit (Quit: No Ping reply in 180 seconds.)
2014-08-31 23:33:18	◀▬▬	redpill (~redpill@unaffiliated/redpill) has quit (Ping timeout: 240 seconds)
2014-08-31 23:33:24	◀▬▬	Zunino (~zunino@189.34.41.115) has quit (Quit: WeeChat 0.4.2)
2014-08-31 23:33:35	▬▬▶	ruediger (~quassel@ptmx.org) has joined ##c++
2014-08-31 23:35:08	◀▬▬	fold (~JimmyRcom@66-169-184-128.dhcp.ftwo.tx.charter.com) has quit (Ping timeout: 240 seconds)
2014-08-31 23:37:39	▬▬▶	redpill (~redpill@unaffiliated/redpill) has joined ##c++
2014-08-31 23:37:57	▬▬▶	surd (~surd@unaffiliated/surd) has joined ##c++
2014-08-31 23:39:31	▬▬▶	flugo (~flugo@115.248.45.78) has joined ##c++
2014-08-31 23:43:24	◀▬▬	redpill (~redpill@unaffiliated/redpill) has quit (Ping timeout: 255 seconds)
2014-08-31 23:44:39	▬▬▶	mrevil (~mrevil@c-76-126-201-83.hsd1.ca.comcast.net) has joined ##c++
2014-08-31 23:49:10	▬▬▶	redpill (~redpill@unaffiliated/redpill) has joined ##c++
2014-08-31 23:49:24	◀▬▬	impy (~impy@2a02:1812:1282:3000:d5f5:d35f:8df1:fd75) has quit (Quit: impy)
2014-08-31 23:53:12	◀▬▬	redpill (~redpill@unaffiliated/redpill) has quit (Max SendQ exceeded)
2014-08-31 23:53:57	--	irc: disconnected from server
2014-09-01 07:36:42	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925415027.dsl.bell.ca) has joined ##c++
2014-09-01 07:36:42	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-01 07:36:42	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-01 07:36:42	--	Channel ##c++: 427 nicks (0 ops, 0 voices, 427 normals)
2014-09-01 07:36:43	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-01 07:36:53	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-01 07:39:15	▬▬▶	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-09-01 07:39:29	◀▬▬	flugo (~flugo@115.248.45.78) has quit (Ping timeout: 255 seconds)
2014-09-01 07:40:11	ville	rahu__: the ": stuff upto but not including {" is called ctor-initializer
2014-09-01 07:42:10	▬▬▶	flugo (~flugo@115.248.45.78) has joined ##c++
2014-09-01 07:43:19	▬▬▶	memcpy (~memcpy@unaffiliated/memcpy) has joined ##c++
2014-09-01 07:43:59	◀▬▬	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 255 seconds)
2014-09-01 07:45:08	◀▬▬	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has quit (Quit: Leaving.)
2014-09-01 08:27:13	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-01 08:27:13	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-01 08:27:13	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-01 08:27:13	--	Channel ##c++: 436 nicks (0 ops, 0 voices, 436 normals)
2014-09-01 08:27:14	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-01 08:27:26	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-01 08:28:12	▬▬▶	wITTus (~wITTus@et-0-nat-4.gw-nat-a.spb.muc.de.oneandone.net) has joined ##c++
2014-09-01 08:28:49	◀▬▬	rahu__ (~RahulAN@117.221.193.0) has quit (Remote host closed the connection)
2014-09-01 08:29:04	▬▬▶	irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has joined ##c++
2014-09-01 08:29:29	◀▬▬	Burgundy (~burgundy@86.127.135.125) has quit (Remote host closed the connection)
2014-09-01 08:30:45	▬▬▶	Burgundy (~burgundy@188.26.170.123) has joined ##c++
2014-09-01 08:32:00	◀▬▬	chatsiri_ (~chatsiri_@cm-58-10-194-30.revip7.asianet.co.th) has quit (Quit: leaving)
2014-09-01 08:32:50	▬▬▶	saml_ (~saml@pool-71-190-8-37.nycmny.east.verizon.net) has joined ##c++
2014-09-01 08:34:34	▬▬▶	thejohnfreeman (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has joined ##c++
2014-09-01 08:37:53	◀▬▬	jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has quit (Quit: leaving)
2014-09-01 08:38:35	◀▬▬	io2 (~io2@unaffiliated/irrequietus) has quit (Quit: ...take irc away, what are you? genius, billionaire, playboy, philanthropist)
2014-09-01 08:38:45	▬▬▶	talin (~dhf@unaffiliated/talin) has joined ##c++
2014-09-01 08:39:29	▬▬▶	Andy-chan (~Andy-chan@xdsl-87-78-159-107.netcologne.de) has joined ##c++
2014-09-01 08:39:40	talin	hello. i see people using #include <sys/socket.h> and whatnot when writing C++. isn't that C-style? i don't understand the boundaries between C and C++.
2014-09-01 08:40:00	▬▬▶	Zunino (~zunino@186.215.116.36) has joined ##c++
2014-09-01 08:40:02	▬▬▶	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-09-01 08:40:35	◀▬▬	pappa (~pappa@77.119.133.253.wireless.dyn.drei.com) has quit (Ping timeout: 260 seconds)
2014-09-01 08:40:41	▬▬▶	io2 (~io2@unaffiliated/irrequietus) has joined ##c++
2014-09-01 08:40:53	◀▬▬	MissionCritical (~MissionCr@unaffiliated/missioncritical) has quit (Ping timeout: 240 seconds)
2014-09-01 08:41:23	RlyDontKnow	talin: those are OS specific headers so whatever you can use is dictated by the OS
2014-09-01 08:42:21	cult-	do you know what is the equivalent of std::cout.write(buf.data(), len); to convert it into std::string ?
2014-09-01 08:42:39	teotwaki	talin: C++: Increment, but use the old value.
2014-09-01 08:43:11	talin	so the boundary is context specific and somewhat blurry?
2014-09-01 08:43:40	cult-	as far as i heard here, c++ is a superset of c
2014-09-01 08:43:50	talin	i don't even know C++ yet, so please answer with that in mind
2014-09-01 08:43:58	ville	cult-: then you heard wrong. c++ isn't superset of c
2014-09-01 08:43:59	cult-	what you can write in c you can write in c++ but not inverse
2014-09-01 08:44:15	cult-	then what is it?
2014-09-01 08:44:15	ville	talin: c++ can easily interact with 3rd party libraries that are written in c. such as posix sockets.
2014-09-01 08:44:17	K-ballo	well, not exactly, but close
2014-09-01 08:44:29	RlyDontKnow	cult-: it's not
2014-09-01 08:44:36	◀▬▬	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 245 seconds)
2014-09-01 08:44:55	RlyDontKnow	talin: there's not exactly a boundary, c and c++ are completely different languages
2014-09-01 08:44:56	◀▬▬	io2 (~io2@unaffiliated/irrequietus) has quit (Client Quit)
2014-09-01 08:45:02	cult-	i am completely beginner with c++, but i do use other languages for a decade
2014-09-01 08:45:27	ville	talin: ideally you would always find a c++-style library to use for some purpose rather than c-style. because c-style means you don't get raii
2014-09-01 08:45:31	RlyDontKnow	however c++ is to some degree compatible with c and it allows you use c libraries
2014-09-01 08:45:57	RlyDontKnow	either way, stick with c++ if you can and if you have to use some c lib try to find a well-written c++ wrapper for it
2014-09-01 08:46:00	cult-	can i repeat this question: do you know what is the equivalent of std::cout.write(buf.data(), len); to convert it into std::string ?
2014-09-01 08:46:10	talin	aha, so it's better if i think of C++ as a language that supports C to some extent?
2014-09-01 08:46:25	ville	talin: random person on the internet might choose to use a c-library because he is already familiar with that library.
2014-09-01 08:46:59	talin	ville: aah, okay. that sounds like a good rule to live by
2014-09-01 08:48:11	Stummi	as a general rule of thumb, <foo.c> headers are c headers, and <foo> headers are c++
2014-09-01 08:48:42	jeaye	<foo.h> you mean
2014-09-01 08:48:51	Stummi	ah, yeah, right, sorry *g*
2014-09-01 08:49:02	talin	okay :)
2014-09-01 08:49:17	ville	and they are talking specifically c and c++ standard library headers. not headers in the language in general
2014-09-01 08:49:29	▬▬▶	SiGe (~SiGe@75-141-108-74.dhcp.mtpk.ca.charter.com) has joined ##c++
2014-09-01 08:49:30	◀▬▬	SiGe (~SiGe@75-141-108-74.dhcp.mtpk.ca.charter.com) has quit (Remote host closed the connection)
2014-09-01 08:49:53	ville	(and you can include standard headers with using "" just fine)
2014-09-01 08:49:54	▬▬▶	MissionCritical (~MissionCr@unaffiliated/missioncritical) has joined ##c++
2014-09-01 08:50:05	Stummi	sometimes you can't avoid using c headers. In this case I think its a good idea to write an dedicated bridge from c-style to c++-style and use this in your application code
2014-09-01 08:50:15	talin	ville: but if i write my own headers, i would name them file.h and include with #include <file>?
2014-09-01 08:50:21	ville	the use of <> is so idiomatic that some people have conflated them having something to do with standard headers.
2014-09-01 08:50:24	▬▬▶	pappa (~pappa@77.119.133.253.wireless.dyn.drei.com) has joined ##c++
2014-09-01 08:50:32	ville	talin: no
2014-09-01 08:50:34	▬▬▶	geri (~anonymous@089144203243.atnat0012.highway.a1.net) has joined ##c++
2014-09-01 08:50:43	talin	ville: #include "file", then?
2014-09-01 08:50:51	ville	talin: no you still  use the extension
2014-09-01 08:50:59	talin	hmm, okay
2014-09-01 08:51:08	ville	you can use either <> or "". doesn't matter all that much.
2014-09-01 08:51:17	cbreak-work	cult-: cout << str; ?
2014-09-01 08:51:32	talin	ville: but <> searches for them somewhere outside of the current dir as well?
2014-09-01 08:51:37	Stummi	standard headers just exist without extension in your filesystem, thats because you use them without it
2014-09-01 08:51:44	cbreak-work	cult-: or what do you want to convert to a string?
2014-09-01 08:51:48	ville	Stummi: they don't have to exist in the filesystem
2014-09-01 08:52:09	ville	talin: what <> and "" do exactly is defined in very general terms and they infact may work exactly the same
2014-09-01 08:52:10	m_e	oh what? i also thought that <> is for the standard lib and "" is for something based in my file path relative to my c++ file ^^
2014-09-01 08:52:22	cbreak-work	cult-: http://en.cppreference.com/w/cpp/string/basic_string/basic_string, look at (4)
2014-09-01 08:52:22	Stummi	ville, what happens if not? Using some builtin stuff from the compiler?
2014-09-01 08:52:44	ville	Stummi: SQL database of course
2014-09-01 08:52:47	cult-	i am using boost asio to receive data over tcp socket by read_some(boost::asio::buffer(buf), error); and i want that in string
2014-09-01 08:53:14	cult-	in the boost example it then writes out the received string by that way in cout, but i need a string variable out from it
2014-09-01 08:53:43	ville	m_e: it is common practice to use <> for standard headers and "" for your project's. then depending on project they may use <> or "" for 3rd party libs.
2014-09-01 08:53:51	cbreak-work	cult-: just bind the buffer to the string in the first place
2014-09-01 08:54:00	cbreak-work	cult-: or use (4) from above
2014-09-01 08:54:23	moonchild	m_e: most compilers implement <> and "" by just having different search paths depending on which you use
2014-09-01 08:55:50	▬▬▶	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-09-01 08:56:11	◀▬▬	Streusel (~Anonymous@unaffiliated/streusel) has quit (Quit: Computer has gone to sleep.)
2014-09-01 08:56:34	◀▬▬	ville (~ville@a88-113-0-43.elisa-laajakaista.fi) has quit (Quit: Lost terminal)
2014-09-01 08:56:52	▬▬▶	ville (~ville@a88-113-0-43.elisa-laajakaista.fi) has joined ##c++
2014-09-01 08:57:02	ville	whoops
2014-09-01 08:57:02	m_e	hm.. looks like visual studio does not check in the same directory as the file itself if you use <>. (or i missread it) http://msdn.microsoft.com/de-de/library/36k2cdd4.aspx
2014-09-01 08:57:32	ville	m_e: but even on such compiler platform you usually can add ./ to the search path
2014-09-01 08:57:51	m_e	oh yes i could
2014-09-01 08:58:04	moonchild	yeah, every compiler does that stuff a little differently
2014-09-01 08:58:46	cult-	thanks cbreak-work
2014-09-01 08:59:50	RlyDontKnow	for <> vs. "" - "" may search additional directories, but falls back to <> anyway
2014-09-01 09:00:29	▬▬▶	zima (gemme@c75.152.27-202.clta.globetrotter.net) has joined ##c++
2014-09-01 09:03:09	ville	so sean parent is writing a book. i'll be first to pirate it
2014-09-01 09:04:36	Griwes	!gr ville
2014-09-01 09:04:37	nolyc	By your command.
2014-09-01 09:04:45	◀▬▬	Tectu (~Tectu@78-167.60-188.cust.bluewin.ch) has quit (Quit: Leaving)
2014-09-01 09:05:15	▬▬▶	Tectu (~Tectu@78-167.60-188.cust.bluewin.ch) has joined ##c++
2014-09-01 09:05:27	▬▬▶	iveevue (~na@unaffiliated/iveevue) has joined ##c++
2014-09-01 09:05:59	▬▬▶	lalaland1125 (~lalaland1@128.42.93.43) has joined ##c++
2014-09-01 09:06:01	◀▬▬	zima (gemme@c75.152.27-202.clta.globetrotter.net) has quit (Quit: gemme)
2014-09-01 09:06:26	▬▬▶	bumbar (~bumbar@188-230-142-117.dynamic.t-2.net) has joined ##c++
2014-09-01 09:06:44	▬▬▶	gemme (gemme@c75.152.27-202.clta.globetrotter.net) has joined ##c++
2014-09-01 09:07:00	◀▬▬	Tectu (~Tectu@78-167.60-188.cust.bluewin.ch) has quit (Client Quit)
2014-09-01 09:07:05	bumbar	i'm not sure what i'm doing wrong, but linked list is not in correct order, if someone could take a look http://ideone.com/MjQVHg
2014-09-01 09:08:07	◀▬▬	yrter (~yrter@unaffiliated/yrter) has quit (Ping timeout: 240 seconds)
2014-09-01 09:08:20	lh_mouse	well why isn't there make_shared<int []>() ??
2014-09-01 09:08:36	◀▬▬	zap0 (~moofy@123-243-103-30.static.tpgi.com.au) has quit (Quit: zap0)
2014-09-01 09:08:46	◀▬▬	kurahaupo (~kurahaupo@118.148.182.61) has quit (Ping timeout: 245 seconds)
2014-09-01 09:08:53	◀▬▬	Jackneill (~Jackneill@unaffiliated/jackneill) has quit (Quit: Leaving)
2014-09-01 09:09:20	iveevue	bumbar, std::list
2014-09-01 09:09:59	▬▬▶	yrter (~yrter@unaffiliated/yrter) has joined ##c++
2014-09-01 09:11:28	--	irc: disconnected from server
2014-09-01 09:18:55	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-01 09:18:55	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-01 09:18:55	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-01 09:18:55	--	Channel ##c++: 442 nicks (0 ops, 0 voices, 442 normals)
2014-09-01 09:18:55	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-01 09:19:07	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-01 09:19:19	--	irc: disconnected from server
2014-09-01 09:20:25	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-01 09:20:25	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-01 09:20:25	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-01 09:20:25	--	Channel ##c++: 442 nicks (0 ops, 0 voices, 442 normals)
2014-09-01 09:20:25	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-01 09:20:36	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-01 09:20:45	cult-	can i set tcp::socket socket(io_service); as a global variable to reference it later and use read/write at other functions?
2014-09-01 09:21:24	BtbN	If you want to use global variables, you're doing it wrong.
2014-09-01 09:21:52	cult-	i want to use the same socket everywhere
2014-09-01 09:23:25	Griwes	that's probably wrong
2014-09-01 09:23:32	Griwes	because you probably should abstract it away
2014-09-01 09:23:36	▬▬▶	GinoMan (~Gino@pool-72-94-39-83.phlapa.fios.verizon.net) has joined ##c++
2014-09-01 09:23:48	cult-	i have two functions, one initializing the socket and reads from it, and theres another that just writes to the socket
2014-09-01 09:23:52	Griwes	but what do I know, I abstract everything
2014-09-01 09:24:06	Griwes	cult-, abstract it away
2014-09-01 09:24:16	◀▬▬	Mayzie (~Mayazcher@unaffiliated/mayazcherquoi) has quit (Quit: Leaving)
2014-09-01 09:24:43	Griwes	first of all you have to add some synchronization, because one day someone will want to use threads
2014-09-01 09:24:51	◀▬▬	avvs (~avvs@gateway/tor-sasl/avvs) has quit (Remote host closed the connection)
2014-09-01 09:24:52	cult-	i dont use classes
2014-09-01 09:25:05	Griwes	!gr cult-
2014-09-01 09:25:06	nolyc	By your command.
2014-09-01 09:25:08	Griwes	then go away
2014-09-01 09:25:21	◀▬▬	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Ping timeout: 245 seconds)
2014-09-01 09:25:29	Griwes	here's a news: tcp::socket is a class
2014-09-01 09:25:56	cult-	i meant to not use classes in headers at this point
2014-09-01 09:26:31	▬▬▶	bzf (~bzf@146.185.165.15) has joined ##c++
2014-09-01 09:26:32	▬▬▶	rvncerr (~rvncerr@unaffiliated/rvncerr) has joined ##c++
2014-09-01 09:27:25	RlyDontKnow	cult-: why do you try to start with something as awful as sockets, anyway?
2014-09-01 09:27:28	▬▬▶	stealth`` (~stealth@p5B02DFD8.dip0.t-ipconnect.de) has joined ##c++
2014-09-01 09:27:36	Griwes	I lack words to voice your stupidity
2014-09-01 09:27:44	Griwes	first you want a global socket in a header
2014-09-01 09:27:51	Griwes	the n you don't want classes in headers?
2014-09-01 09:27:53	Stummi	cult-, whats your problem with classes?
2014-09-01 09:27:55	Griwes	what the actual fuck
2014-09-01 09:28:01	Griwes	I mean, what the actual fuck.
2014-09-01 09:28:03	Adrinael	What's going on here
2014-09-01 09:28:11	Griwes	<cult-> can i set tcp::socket socket(io_service); as a global variable to reference it later and use read/write at other functions?
2014-09-01 09:28:16	Griwes	<cult-> i dont use classes
2014-09-01 09:28:22	Griwes	this summarizes it pretty well
2014-09-01 09:28:39	Stummi	a global variable at all is a bad idea. A global socket is even worse
2014-09-01 09:28:52	◀▬▬	SneakySnake (~hurrdurr@54036539.catv.pool.telekom.hu) has left ##c++ ("Leaving")
2014-09-01 09:29:25	m_e	I was just wondering what happens if I delete a variable twice in both virtual d'tors of a base + derived class. yet it does not seem to cause any troubles... http://ideone.com/QRMkvT so the compiler does check that case and only deletes it once then?
2014-09-01 09:29:44	◀▬▬	lalaland1125 (~lalaland1@128.42.93.43) has quit (Read error: Connection reset by peer)
2014-09-01 09:29:58	◀▬▬	p|q (~plq@78.189.180.67) has quit (Ping timeout: 250 seconds)
2014-09-01 09:30:22	▬▬▶	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has joined ##c++
2014-09-01 09:30:32	moonchild	m_e: chances are that you're corrupting the heap
2014-09-01 09:31:16	▬▬▶	asmx (cod3r@shell.uw-team.org) has joined ##c++
2014-09-01 09:31:51	Griwes	m_e, erm, your experiment is broken, because your experiment doesn't check anything
2014-09-01 09:31:51	Griwes	http://ideone.com/irJh9t
2014-09-01 09:32:29	▬▬▶	kronikarz (~androirc@213.158.218.100.pat.umts.dynamic.t-mobile.pl) has joined ##c++
2014-09-01 09:32:48	kronikarz	Hello
2014-09-01 09:33:16	◀▬▬	yrter (~yrter@unaffiliated/yrter) has quit (Quit: yrter)
2014-09-01 09:33:22	m_e	Griwes: ah so it does actually delete it twice. (i thought the compiler might "see" that issue and only calls delete once)
2014-09-01 09:33:31	Griwes	...
2014-09-01 09:33:50	Griwes	don't think
2014-09-01 09:33:51	Griwes	know
2014-09-01 09:34:15	m_e	Griwes: now i know. thats why i am asking. thank you.
2014-09-01 09:34:40	kronikarz	What are you guys talking about?
2014-09-01 09:34:46	◀▬▬	FunkyAss (~Funky@unaffiliated/funkyass) has quit (Quit: Make my Funk the P-Funk)
2014-09-01 09:35:04	◀▬▬	impy (~impy@62.205.112.38) has quit (Quit: impy)
2014-09-01 09:35:11	▬▬▶	FunkyAss (~Funky@unaffiliated/funkyass) has joined ##c++
2014-09-01 09:35:43	iveevue	Stuff
2014-09-01 09:35:58	▬▬▶	cry0g3n (0e8bd4e4@gateway/web/cgi-irc/kiwiirc.com/ip.14.139.212.228) has joined ##c++
2014-09-01 09:36:21	cry0g3n	hey
2014-09-01 09:36:25	◀▬▬	cry0g3n (0e8bd4e4@gateway/web/cgi-irc/kiwiirc.com/ip.14.139.212.228) has left ##c++
2014-09-01 09:36:31	▬▬▶	cry0g3n (0e8bd4e4@gateway/web/cgi-irc/kiwiirc.com/ip.14.139.212.228) has joined ##c++
2014-09-01 09:36:35	kronikarz	Hey?
2014-09-01 09:37:47	◀▬▬	MulleDK19 (MulleDK19@0120000080.0.fullrate.dk) has quit
2014-09-01 09:39:36	◀▬▬	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 245 seconds)
2014-09-01 09:40:45	▬▬▶	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-09-01 09:42:07	◀▬▬	pappa (~pappa@77.119.133.253.wireless.dyn.drei.com) has quit (Ping timeout: 240 seconds)
2014-09-01 09:43:17	◀▬▬	Kaini (~Kaini@unaffiliated/kaini) has quit (Quit: WeeChat 1.0)
2014-09-01 09:43:24	◀▬▬	saml_ (~saml@pool-71-190-8-37.nycmny.east.verizon.net) has quit (Ping timeout: 250 seconds)
2014-09-01 09:43:32	▬▬▶	Kaini (~Kaini@unaffiliated/kaini) has joined ##c++
2014-09-01 09:44:00	◀▬▬	Gluesticky (~IceChat9@unaffiliated/gluesticky) has quit (Read error: Connection reset by peer)
2014-09-01 09:44:42	cry0g3n	I am facing problem here can anybody please help..http://stackoverflow.com/questions/25606848/concatenate-2-circular-double-linked-list-without-using-extra-pointer?noredirect=1#comment40001835_25606848
2014-09-01 09:44:46	nolyc	<http://tinyurl.com/k2g2huj> (at stackoverflow.com)
2014-09-01 09:45:29	◀▬▬	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 255 seconds)
2014-09-01 09:47:05	▬▬▶	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has joined ##c++
2014-09-01 09:48:07	moonchild	:q
2014-09-01 09:48:09	moonchild	grr
2014-09-01 09:48:21	◀▬▬	hexagoxel (~hexagoxel@kiel-5f77cf2f.pool.mediaWays.net) has quit (*.net *.split)
2014-09-01 09:48:21	◀▬▬	sig-wall (~adjkru@unaffiliated/sig-wall) has quit (*.net *.split)
2014-09-01 09:48:24	◀▬▬	talanor1 (~talanor@ns3282938.ip-5-135-176.eu) has quit (*.net *.split)
2014-09-01 09:48:24	◀▬▬	hubutm20 (~hubutm20@cablelink-86-127-180-251.rdstm.ro) has quit (*.net *.split)
2014-09-01 09:48:24	◀▬▬	scharan (~scharan@caps04.cs.ucr.edu) has quit (*.net *.split)
2014-09-01 09:48:24	◀▬▬	urlgrabber (~urlgrabbe@li450-145.members.linode.com) has quit (*.net *.split)
2014-09-01 09:48:24	◀▬▬	heedypo1 (~heedypo@2.216.103.118) has quit (*.net *.split)
2014-09-01 09:48:24	◀▬▬	Ardonik (~user@75.28.101.53) has quit (*.net *.split)
2014-09-01 09:48:24	◀▬▬	Affliction (affliction@2600:3c01::13:ffff) has quit (*.net *.split)
2014-09-01 09:48:24	◀▬▬	Tee_Pee (uid23783@gateway/web/irccloud.com/x-tkkgpstyguvmfdlz) has quit (*.net *.split)
2014-09-01 09:48:24	◀▬▬	hs_ (~hs@c-98-247-172-150.hsd1.wa.comcast.net) has quit (*.net *.split)
2014-09-01 09:48:24	◀▬▬	talisein (~talisein@april-fools/2013/sixth/talisein) has quit (*.net *.split)
2014-09-01 09:48:38	▬▬▶	talisein (~talisein@april-fools/2013/sixth/talisein) has joined ##c++
2014-09-01 09:48:41	▬▬▶	Tee_Pee (uid23783@gateway/web/irccloud.com/x-wyxihilkzckfvasy) has joined ##c++
2014-09-01 09:48:42	▬▬▶	Affliction (affliction@2600:3c01::13:ffff) has joined ##c++
2014-09-01 09:48:51	▬▬▶	heedypo1 (~heedypo@2.216.103.118) has joined ##c++
2014-09-01 09:48:54	▬▬▶	scharan (~scharan@caps04.cs.ucr.edu) has joined ##c++
2014-09-01 09:49:28	▬▬▶	urlgrabber (~urlgrabbe@li450-145.members.linode.com) has joined ##c++
2014-09-01 09:49:47	◀▬▬	cry0g3n (0e8bd4e4@gateway/web/cgi-irc/kiwiirc.com/ip.14.139.212.228) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2014-09-01 09:49:53	▬▬▶	talanor1 (~talanor@ns3282938.ip-5-135-176.eu) has joined ##c++
2014-09-01 09:51:59	▬▬▶	hubutm20 (~hubutm20@cablelink-86-127-180-251.rdstm.ro) has joined ##c++
2014-09-01 09:52:56	◀▬▬	Heartbroken (Heartbroke@gateway/shell/trekweb.org/x-wxlffgllxdqrvbkk) has quit (Ping timeout: 260 seconds)
2014-09-01 09:53:24	◀▬▬	kronikarz (~androirc@213.158.218.100.pat.umts.dynamic.t-mobile.pl) has quit (Ping timeout: 260 seconds)
2014-09-01 09:54:37	◀▬▬	sharingan (~mangekyo@c110-22-178-57.frank4.vic.optusnet.com.au) has quit (Ping timeout: 240 seconds)
2014-09-01 09:55:31	cult-	Griwes: why its a terrible thing to not use a class name in your header file and only just a namespace, as if i would have it in plain c? if the project is not on the scale? im listening
2014-09-01 09:55:47	▬▬▶	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-09-01 09:55:47	▬▬▶	FriskyKat (SomeWhere@94.9.8.115) has joined ##c++
2014-09-01 09:55:55	▬▬▶	sig-wall (~adjkru@xn--hwgz2tba.lamo.su) has joined ##c++
2014-09-01 09:56:11	▬▬▶	MulleDK19 (MulleDK19@0120000080.0.fullrate.dk) has joined ##c++
2014-09-01 09:56:59	▬▬▶	paulschellin (~paulschel@osuosc/paulschellin) has joined ##c++
2014-09-01 09:57:26	◀▬▬	sig-wall (~adjkru@xn--hwgz2tba.lamo.su) has quit (Changing host)
2014-09-01 09:57:26	▬▬▶	sig-wall (~adjkru@unaffiliated/sig-wall) has joined ##c++
2014-09-01 10:01:17	◀▬▬	geri (~anonymous@089144203243.atnat0012.highway.a1.net) has quit (Remote host closed the connection)
2014-09-01 10:02:31	◀▬▬	thejohnfreeman (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has quit (Ping timeout: 245 seconds)
2014-09-01 10:02:45	◀▬▬	iveevue (~na@unaffiliated/iveevue) has quit (Quit: Leaving)
2014-09-01 10:04:16	Griwes	cult-, lolwat
2014-09-01 10:04:44	Griwes	first, the fact you are mentioning C as an argument means you should be in ##C, not here
2014-09-01 10:04:53	Griwes	second, wtf does "not on the scale" mean?
2014-09-01 10:04:55	K-ballo	cult-: ever heard of the "hourglass" interfaces?
2014-09-01 10:05:31	CJKay	What's happening here?
2014-09-01 10:05:43	Griwes	you have a global variable you want access to from different places
2014-09-01 10:05:46	▬▬▶	PJBoy (~PJBoy@unaffiliated/pjboy) has joined ##c++
2014-09-01 10:06:05	▬▬▶	oleo (~oleo@xdsl-78-35-183-253.netcologne.de) has joined ##c++
2014-09-01 10:06:08	Griwes	and even though that is bad enough for me to bash you for that, let's assume that is not a subject to change
2014-09-01 10:06:21	▬▬▶	realloc1 (~realloc1@p4FE95E6D.dip0.t-ipconnect.de) has joined ##c++
2014-09-01 10:06:32	cult-	just namely i have heard about hourglass interfaces. pls correct me if im wrong, i thought c++ is c with classes, but you are not obligated to use classes in your header files such as class className {...} before you start arguing about what does classes means
2014-09-01 10:06:46	Griwes	you HAVE to provide synchronization for the value (since one day someone may want to start using it in threads)
2014-09-01 10:06:54	Griwes	and that synchronization MUST BE OBLIGATORY
2014-09-01 10:07:02	RlyDontKnow	!give cult- c/c++
2014-09-01 10:07:02	Griwes	you cannot let anyone opt-out of it
2014-09-01 10:07:04	nolyc	cult-: I take most uses of the compound C/C++ as an indication of ignorance. ~ Bjarne Stroustrup - See also http://www.stroustrup.com/bs_faq.html#C-slash
2014-09-01 10:07:10	▬▬▶	pappa (~pappa@77.119.133.253.wireless.dyn.drei.com) has joined ##c++
2014-09-01 10:07:20	CJKay	(15:06:48) cult-: pls correct me if im wrong, i thought c++ is c with classes
2014-09-01 10:07:20	CJKay	Oh god
2014-09-01 10:07:29	cult-	i already use threads that access the same io_service
2014-09-01 10:07:39	Griwes	hence, write a wrapper class that encapsulates the socket AND its synchronization primitives
2014-09-01 10:07:40	PlasmaHH	cult-: yes, C++ does only add classes to C, there is nothing else
2014-09-01 10:08:00	Griwes	and if you really have to have that as a global, have the wrapper global, not raw unsynchronized socket
2014-09-01 10:08:03	Griwes	seriously.
2014-09-01 10:08:24	cult-	no, not only classes. you subverts my words
2014-09-01 10:08:33	▬▬▶	fold (~JimmyRcom@66-169-184-128.dhcp.ftwo.tx.charter.com) has joined ##c++
2014-09-01 10:08:35	Griwes	no
2014-09-01 10:08:39	Griwes	we just make fun of you
2014-09-01 10:08:51	Griwes	since what you are writing makes no sense whatsoever
2014-09-01 10:08:58	◀▬▬	condy (~condy@113.140.86.66) has quit (Ping timeout: 250 seconds)
2014-09-01 10:09:02	cult-	yeah, but pls keep in mind i just started with it one week ago
2014-09-01 10:09:04	ville	cult-: "why its a terrible thing to not use a class name in your header file and only just a namespace" what does it even mean?
2014-09-01 10:09:24	Griwes	cult-, then read what I have written
2014-09-01 10:09:33	Griwes	if you have a global, you must have it synchronized
2014-09-01 10:09:54	Griwes	to make it synchronized in any way that works, the synchronization must be obligatory
2014-09-01 10:10:15	Griwes	to achieve that, you generally have to wrap the type together with a mutex-ish thing
2014-09-01 10:10:31	Griwes	and this is the point where you should start realizing why you should not have a global socket
2014-09-01 10:10:35	cult-	ville: it means krapula
2014-09-01 10:10:42	Griwes	(namely the moment I spelled "mutex")
2014-09-01 10:11:23	cult-	thank you
2014-09-01 10:12:36	◀▬▬	b_jonas (~x@russell2.math.bme.hu) has quit (Quit: Changing server)
2014-09-01 10:13:50	◀▬▬	pappa (~pappa@77.119.133.253.wireless.dyn.drei.com) has quit (Ping timeout: 255 seconds)
2014-09-01 10:13:57	▬▬▶	Bitani (~zmcgohan@dhcp-164-107-203-146.osuwireless.ohio-state.edu) has joined ##c++
2014-09-01 10:14:53	◀▬▬	Zunino (~zunino@186.215.116.36) has quit (Ping timeout: 240 seconds)
2014-09-01 10:15:50	◀▬▬	Errorical (~errorical@213.128.190.150) has quit (Quit: Leaving)
2014-09-01 10:19:46	▬▬▶	jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has joined ##c++
2014-09-01 10:21:30	▬▬▶	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-09-01 10:24:07	▬▬▶	AbiBuccaneer (~jetbeard@unaffiliated/jetbeard) has joined ##c++
2014-09-01 10:24:13	▬▬▶	ValicekB (~tbox@dot.snat.baz.cz) has joined ##c++
2014-09-01 10:25:56	 *	PlasmaHH tries to avoid mutexes wherever he can
2014-09-01 10:26:13	 *	Griwes throws some mutexes at PlasmaHH 
2014-09-01 10:26:17	▬▬▶	Sculptor (~Sculptor@trivialand/master/sculptor) has joined ##c++
2014-09-01 10:26:53	▬▬▶	lalaland1125 (~lalaland1@128.42.93.43) has joined ##c++
2014-09-01 10:27:35	◀▬▬	abdoo (~north_alg@105.108.82.162) has quit (Quit: Quitte)
2014-09-01 10:27:52	 *	PlasmaHH deflects them into Griwes critical section
2014-09-01 10:27:54	◀▬▬	Sculptor (~Sculptor@trivialand/master/sculptor) has quit (Client Quit)
2014-09-01 10:28:13	▬▬▶	Sculptor (~Sculptor@trivialand/master/sculptor) has joined ##c++
2014-09-01 10:28:16	 *	Griwes quickly encapsulates his critical sections
2014-09-01 10:28:21	Griwes	oh, sorry
2014-09-01 10:28:26	 *	Griwes quickly abstracts his critical sections away
2014-09-01 10:28:35	Griwes	I am the one who abstracts, I forgot
2014-09-01 10:28:37	◀▬▬	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 240 seconds)
2014-09-01 10:29:32	PlasmaHH	I wonder if you can still clone...
2014-09-01 10:30:07	Griwes	there's three of me currently here
2014-09-01 10:30:12	◀▬▬	realloc1 (~realloc1@p4FE95E6D.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-09-01 10:30:29	Griwes	(you can ctcp version me if you don't believe me)
2014-09-01 10:30:33	PlasmaHH	procreation of the wicked...
2014-09-01 10:30:41	Griwes	hivemind
2014-09-01 10:30:53	Griwes	I abstracted my brain away into the cloud
2014-09-01 10:32:05	◀▬▬	eutheria (~eutheria@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has quit (Ping timeout: 240 seconds)
2014-09-01 10:32:08	◀▬▬	ruediger (~quassel@ptmx.org) has quit (Quit: No Ping reply in 180 seconds.)
2014-09-01 10:32:17	▬▬▶	ruediger (~quassel@ptmx.org) has joined ##c++
2014-09-01 10:33:17	▬▬▶	Apocalypse (~Apocalyps@unaffiliated/apocalypse) has joined ##c++
2014-09-01 10:35:52	PlasmaHH	now "rainman" becomes a totally different sense
2014-09-01 10:40:51	▬▬▶	harmony (~harmony@unaffiliated/harmony) has joined ##c++
2014-09-01 10:41:30	▬▬▶	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-09-01 10:43:14	▬▬▶	eutheria (~eutheria@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has joined ##c++
2014-09-01 10:43:25	◀▬▬	oberstein (~ober@2605:6400:20:748::ddee:deee) has quit (Ping timeout: 260 seconds)
2014-09-01 10:46:08	◀▬▬	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 260 seconds)
2014-09-01 10:46:41	▬▬▶	kuldeepdhaka (~kuldeepdh@unaffiliated/kuldeepdhaka) has joined ##c++
2014-09-01 10:48:28	◀▬▬	PlasmaHH (~kvirc@speedy.projectiwear.org) has quit (Ping timeout: 260 seconds)
2014-09-01 10:50:02	◀▬▬	hubutm20 (~hubutm20@cablelink-86-127-180-251.rdstm.ro) has quit (Ping timeout: 245 seconds)
2014-09-01 10:50:48	▬▬▶	hubutm20 (~hubutm20@79.114.78.27) has joined ##c++
2014-09-01 10:51:49	▬▬▶	Lilian- (~Lilian@gateway/tor-sasl/lilian) has joined ##c++
2014-09-01 10:52:33	▬▬▶	PotatoGim^Home (~potatogim@211.115.242.166) has joined ##c++
2014-09-01 10:55:18	▬▬▶	oberstein (~ober@2605:6400:20:748::ddee:deee) has joined ##c++
2014-09-01 10:56:09	▬▬▶	Haswell (~Haswell@unaffiliated/haswell) has joined ##c++
2014-09-01 10:56:17	▬▬▶	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has joined ##c++
2014-09-01 10:57:10	◀▬▬	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-09-01 10:57:17	◀▬▬	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Ping timeout: 240 seconds)
2014-09-01 10:57:36	◀▬▬	Lilian` (~Lilian@gateway/tor-sasl/lilian) has quit (Ping timeout: 264 seconds)
2014-09-01 10:58:13	◀▬▬	m_e (b21bb635@gateway/web/freenode/ip.178.27.182.53) has quit (Ping timeout: 246 seconds)
2014-09-01 10:58:55	▬▬▶	Rudolf (~rodolfo@unaffiliated/rudolf) has joined ##c++
2014-09-01 10:59:21	▬▬▶	Mio-chan (~Mio-chan@unaffiliated/mio-chan) has joined ##c++
2014-09-01 11:02:29	◀▬▬	GinoMan (~Gino@pool-72-94-39-83.phlapa.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2014-09-01 11:04:56	◀▬▬	Bitani (~zmcgohan@dhcp-164-107-203-146.osuwireless.ohio-state.edu) has quit (Quit: Bitani)
2014-09-01 11:05:40	▬▬▶	GinoMan (~Gino@pool-72-94-39-83.phlapa.fios.verizon.net) has joined ##c++
2014-09-01 11:06:13	▬▬▶	noTHD (~noTHD@77.71.97.108) has joined ##c++
2014-09-01 11:07:50	◀▬▬	Solarlux (Solarlux@84.237.174.193) has quit (Ping timeout: 255 seconds)
2014-09-01 11:09:19	Griwes	is this whole boost.afio from gsoc2013 really as horrible as its examples look?
2014-09-01 11:10:05	▬▬▶	Vrook (~derrike@c-71-61-180-11.hsd1.pa.comcast.net) has joined ##c++
2014-09-01 11:10:11	◀▬▬	dv08psm (c08psm@peppar.cs.umu.se) has left ##c++
2014-09-01 11:10:28	▬▬▶	cellybot (c08psm@peppar.cs.umu.se) has joined ##c++
2014-09-01 11:12:36	◀▬▬	cbreak-work (~cbreak@drz-luxo.drz.ethz.ch) has quit
2014-09-01 11:13:20	◀▬▬	Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2014-09-01 11:13:20	Griwes	god, those examples when viewed in documentation look even worse than in repo
2014-09-01 11:15:59	▬▬▶	Chell0 (~chatzilla@c-68-40-167-130.hsd1.mi.comcast.net) has joined ##c++
2014-09-01 11:16:10	Chell0	Hello everyone
2014-09-01 11:16:44	▬▬▶	hs_ (~hs@c-98-247-172-150.hsd1.wa.comcast.net) has joined ##c++
2014-09-01 11:18:22	--	irc: disconnected from server
2014-09-01 11:20:26	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-01 11:20:26	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-01 11:20:26	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-01 11:20:26	--	Channel ##c++: 441 nicks (0 ops, 0 voices, 441 normals)
2014-09-01 11:20:27	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-01 11:20:38	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-01 11:20:48	▬▬▶	AnujSharma (~anuj@202.3.77.231) has joined ##c++
2014-09-01 11:21:23	◀▬▬	AnujSharma (~anuj@202.3.77.231) has left ##c++
2014-09-01 11:24:19	Chell0	Is there a more elegant way of copying the characters from a string to a stack<char> than:
2014-09-01 11:24:21	Chell0	  for_each(s.begin(), s.end(), [&](char c) { char_stack.push(c); });
2014-09-01 11:24:32	◀▬▬	redpill (~redpill@unaffiliated/redpill) has quit (Ping timeout: 245 seconds)
2014-09-01 11:24:39	Chell0	I'm trying to find a one-liner without a lambda
2014-09-01 11:25:07	hs_	std::back_inserter?
2014-09-01 11:25:24	Griwes	that requires push_back
2014-09-01 11:25:35	Griwes	Chell0, what's wrong with a lambda?
2014-09-01 11:26:25	▬▬▶	jaafar (~quassel@adsl-75-61-130-145.dsl.pltn13.sbcglobal.net) has joined ##c++
2014-09-01 11:26:36	Chell0	let's say I have to use C99
2014-09-01 11:26:40	▬▬▶	redpill (~redpill@unaffiliated/redpill) has joined ##c++
2014-09-01 11:26:59	Griwes	C99? why are you asking here? there are no stack<char>s in C99, either
2014-09-01 11:27:21	▬▬▶	systemfault (~Systemfau@oftn/member/systemfault) has joined ##c++
2014-09-01 11:27:23	◀▬▬	glenfe (~glen@unaffiliated/glenfe) has quit (Quit: Restart)
2014-09-01 11:27:37	▬▬▶	realloc1 (~realloc1@p4FE95E6D.dip0.t-ipconnect.de) has joined ##c++
2014-09-01 11:27:39	◀▬▬	realloc1 (~realloc1@p4FE95E6D.dip0.t-ipconnect.de) has left ##c++
2014-09-01 11:28:52	Chell0	I just feel like I'm using lambdas to solve every problem, I'm trying to second-guess myself
2014-09-01 11:29:15	▬▬▶	glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2014-09-01 11:30:15	▬▬▶	b1rkh0ff (~b1rkh0ff@cable-146-255-146-83.dynamic.telemach.ba) has joined ##c++
2014-09-01 11:33:17	◀▬▬	Vrook (~derrike@c-71-61-180-11.hsd1.pa.comcast.net) has quit (Quit: Leaving)
2014-09-01 11:35:04	◀▬▬	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has quit (Remote host closed the connection)
2014-09-01 11:35:17	◀▬▬	GinoMan (~Gino@pool-72-94-39-83.phlapa.fios.verizon.net) has quit (Ping timeout: 255 seconds)
2014-09-01 11:35:18	▬▬▶	scai (~scai@pD9EA662A.dip0.t-ipconnect.de) has joined ##c++
2014-09-01 11:37:30	▬▬▶	impy (~impy@d8D862CE9.access.telenet.be) has joined ##c++
2014-09-01 11:39:00	Chell0	so if this was a list instead of a stack I would use copy(s.begin(), s.end(), back_inserter(char_list))
2014-09-01 11:41:34	▬▬▶	saml_ (~saml@pool-71-190-8-37.nycmny.east.verizon.net) has joined ##c++
2014-09-01 11:42:15	▬▬▶	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-09-01 11:42:38	▬▬▶	stelvin (~stelvin@gateway/tor-sasl/stelvin) has joined ##c++
2014-09-01 11:45:24	◀▬▬	interop_madness (~invalid@unaffiliated/interop-madness/x-8858653) has quit (Quit: Leaving)
2014-09-01 11:45:34	▬▬▶	freakazoid0223 (~matt@pool-98-115-118-153.phlapa.fios.verizon.net) has joined ##c++
2014-09-01 11:46:37	◀▬▬	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 245 seconds)
2014-09-01 11:46:46	▬▬▶	Tectu_ (~Tectu@48-227.197-178.cust.bluewin.ch) has joined ##c++
2014-09-01 11:47:59	▬▬▶	Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has joined ##c++
2014-09-01 11:49:06	◀▬▬	pa (~pa@unaffiliated/pa) has quit (Quit: Sto andando via)
2014-09-01 11:49:17	▬▬▶	PlasmaHH (~kvirc@speedy.projectiwear.org) has joined ##c++
2014-09-01 11:51:00	◀▬▬	saml_ (~saml@pool-71-190-8-37.nycmny.east.verizon.net) has quit (Ping timeout: 260 seconds)
2014-09-01 11:51:45	▬▬▶	GinoMan (~Gino@pool-72-94-39-83.phlapa.fios.verizon.net) has joined ##c++
2014-09-01 11:53:40	▬▬▶	realloc1 (~realloc1@p4FE95E6D.dip0.t-ipconnect.de) has joined ##c++
2014-09-01 11:55:46	▬▬▶	bacon000 (~nobody@50-1-81-63.dsl.dynamic.sonic.net) has joined ##c++
2014-09-01 11:55:48	▬▬▶	kuldeepdhaka_ (~kuldeepdh@unaffiliated/kuldeepdhaka) has joined ##c++
2014-09-01 11:56:08	◀▬▬	kuldeepdhaka (~kuldeepdh@unaffiliated/kuldeepdhaka) has quit (Ping timeout: 260 seconds)
2014-09-01 11:56:57	▬▬▶	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has joined ##c++
2014-09-01 11:57:52	▬▬▶	Cyp__ (~Cyp_@62.61.130.229.generic-hostname.arrownet.dk) has joined ##c++
2014-09-01 11:59:29	▬▬▶	ketamin (~Thunderbi@131.178.200.64) has joined ##c++
2014-09-01 12:00:02	◀▬▬	redpill (~redpill@unaffiliated/redpill) has quit (Ping timeout: 255 seconds)
2014-09-01 12:00:42	◀▬▬	kuldeepdhaka_ (~kuldeepdh@unaffiliated/kuldeepdhaka) has quit (Max SendQ exceeded)
2014-09-01 12:00:50	▬▬▶	redpill (~redpill@unaffiliated/redpill) has joined ##c++
2014-09-01 12:01:22	◀▬▬	chewyDelicious (~nooblet@124-197-63-144.callplus.net.nz) has quit (Ping timeout: 260 seconds)
2014-09-01 12:01:34	◀▬▬	CrizMobius (~CrizMobiu@c83-251-189-189.bredband.comhem.se) has quit (Read error: Connection reset by peer)
2014-09-01 12:01:48	◀▬▬	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has quit (Ping timeout: 264 seconds)
2014-09-01 12:01:51	▬▬▶	Bitani (~zmcgohan@dhcp-164-107-203-146.osuwireless.ohio-state.edu) has joined ##c++
2014-09-01 12:02:09	◀▬▬	realloc1 (~realloc1@p4FE95E6D.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-09-01 12:02:36	◀▬▬	bacon000 (~nobody@50-1-81-63.dsl.dynamic.sonic.net) has quit (Quit: Computer has gone to sleep.)
2014-09-01 12:03:18	ville	funny. a room-full of c++ programmers at c++now and none of them seem to know deleting through base* pointing to a derived instance is ub if base doesn't have virtual dtor.
2014-09-01 12:03:38	▬▬▶	kuldeepdhaka_ (~kuldeepdh@unaffiliated/kuldeepdhaka) has joined ##c++
2014-09-01 12:03:41	CJKay	Seriously?
2014-09-01 12:03:42	◀▬▬	Tectu_ (~Tectu@48-227.197-178.cust.bluewin.ch) has quit (Ping timeout: 245 seconds)
2014-09-01 12:04:21	CJKay	How'd you find that out anyway?
2014-09-01 12:04:26	K-ballo	the type erasure talk?
2014-09-01 12:04:32	◀▬▬	aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-09-01 12:04:35	ville	K-ballo: yep.
2014-09-01 12:04:45	▬▬▶	saml_ (~saml@pool-71-190-8-37.nycmny.east.verizon.net) has joined ##c++
2014-09-01 12:04:56	ville	CJKay: watching the videos. some new ones posted few days ago
2014-09-01 12:05:04	CJKay	Oh yay
2014-09-01 12:05:38	ville	i blame bjarne's faq
2014-09-01 12:06:03	lh_mouse	we need shared_ptr.
2014-09-01 12:06:06	AbiBuccaneer	Chell0, stack is actually std::stack<T, class Container = std::deque<T>>, and there is a stack(const Container&& const) constructor
2014-09-01 12:06:15	K-ballo	ville: wasn't he using shared_ptr ?
2014-09-01 12:07:05	ville	K-ballo: it's a slide where he isn't and someone asks whether his internal base class should also have virtual dtor if he deletes through it. people seem to agree it's ok because the derived has no members on top
2014-09-01 12:07:10	AbiBuccaneer	Chell0, perhaps it would make more sense to either operate directly on a deque, which does have a push_back, or turn the string into some other sort of container which may be more applicable (vector?)
2014-09-01 12:07:19	ville	but shared_ptr wouldn't make it any different
2014-09-01 12:07:39	▬▬▶	marscher (~marscher@e179132037.adsl.alicedsl.de) has joined ##c++
2014-09-01 12:07:39	▬▬▶	SiGe (~SiGe@75-141-108-74.dhcp.mtpk.ca.charter.com) has joined ##c++
2014-09-01 12:08:24	lh_mouse	geordi, { shared_ptr<base> p; p.reset(new derived); } struct base { base(){ BARK; } ~base(){ BARK; } }; struct derived : base { derived(){ BARK; } ~derived(){ BARK; } };
2014-09-01 12:08:25	geordi	base::base() derived::derived() derived::~derived() base::~base()
2014-09-01 12:08:38	K-ballo	ville: shared_ptr deleter does "the right thing"
2014-09-01 12:08:43	▬▬▶	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-09-01 12:08:57	◀▬▬	Bitani (~zmcgohan@dhcp-164-107-203-146.osuwireless.ohio-state.edu) has quit (Quit: Bitani)
2014-09-01 12:09:01	◀▬▬	SiGe (~SiGe@75-141-108-74.dhcp.mtpk.ca.charter.com) has quit (Remote host closed the connection)
2014-09-01 12:09:07	lh_mouse	K-ballo, it is reset() that picks(creates?) the correct deleter.
2014-09-01 12:09:21	▬▬▶	iveevue (~na@unaffiliated/iveevue) has joined ##c++
2014-09-01 12:09:34	lh_mouse	geordi, insert (base *) before new
2014-09-01 12:09:35	geordi	base::base() derived::derived() base::~base()
2014-09-01 12:11:21	▬▬▶	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has joined ##c++
2014-09-01 12:11:22	CJKay	Cool
2014-09-01 12:11:24	CJKay	Didn't know that
2014-09-01 12:11:29	K-ballo	lh_mouse: wherever the deleter is created
2014-09-01 12:11:36	hs_	shared_ptr<void> does the same thing
2014-09-01 12:11:59	CJKay	Unsurprisingly
2014-09-01 12:12:07	hs_	i've seen people advocate using it for something like "any"
2014-09-01 12:12:24	lh_mouse	any does not make much sense IMHO.
2014-09-01 12:12:32	K-ballo	well, it's certainly better than void*, but I wouldn't go that far
2014-09-01 12:12:38	lh_mouse	variant is much more useful.
2014-09-01 12:12:43	▬▬▶	Andy-chan2 (~Andy-chan@xdsl-87-78-151-98.netcologne.de) has joined ##c++
2014-09-01 12:12:55	lh_mouse	shared_ptr<void> sometimes makes sense.
2014-09-01 12:13:13	CJKay	Good for cross-platform handles or something
2014-09-01 12:14:05	lh_mouse	I have been told by others to use a null deleter to store a non-owning pointer inside a shared_ptr:   foo f; shared_ptr<foo> sp(&f, [](auto){ });   // this is a wrong solution.
2014-09-01 12:14:07	▬▬▶	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has joined ##c++
2014-09-01 12:14:12	▬▬▶	snyp (~Snyp@223.29.204.2) has joined ##c++
2014-09-01 12:14:28	lh_mouse	foo f;  shared_ptr<foo> sp(shared_ptr<void>(), &f); // the correct solution.
2014-09-01 12:15:39	lh_mouse	CJKay, if we talk about handles I prefer shared_ptr<some_incomplete_struct>.
2014-09-01 12:15:57	◀▬▬	Andy-chan (~Andy-chan@xdsl-87-78-159-107.netcologne.de) has quit (Ping timeout: 250 seconds)
2014-09-01 12:16:21	◀▬▬	cullum (cullum@c0ffee.net) has quit (Remote host closed the connection)
2014-09-01 12:17:49	▬▬▶	cullum (cullum@c0ffee.net) has joined ##c++
2014-09-01 12:18:40	▬▬▶	spott (~spott@c-76-120-73-233.hsd1.co.comcast.net) has joined ##c++
2014-09-01 12:19:44	◀▬▬	sfix (~sfix@host86-169-207-3.range86-169.btcentralplus.com) has quit (Remote host closed the connection)
2014-09-01 12:20:18	▬▬▶	Hannibal_Smith (~Hannibal_@host251-74-dynamic.53-79-r.retail.telecomitalia.it) has joined ##c++
2014-09-01 12:21:32	◀▬▬	b1rkh0ff (~b1rkh0ff@cable-146-255-146-83.dynamic.telemach.ba) has quit (Quit: Leaving)
2014-09-01 12:21:39	◀▬▬	Nescafe (~nescafe@unaffiliated/nescafe) has quit (Remote host closed the connection)
2014-09-01 12:22:28	◀▬▬	PotatoGim^Home (~potatogim@211.115.242.166) has quit (Quit: 전 이만 갑니다.)
2014-09-01 12:22:38	◀▬▬	shintah (bebble@h-140-107.a336.priv.bahnhof.se) has quit (Quit: Hejdå!)
2014-09-01 12:23:05	▬▬▶	Bitani (~zmcgohan@dhcp-164-107-203-146.osuwireless.ohio-state.edu) has joined ##c++
2014-09-01 12:23:05	◀▬▬	Bitani (~zmcgohan@dhcp-164-107-203-146.osuwireless.ohio-state.edu) has quit (Client Quit)
2014-09-01 12:23:25	◀▬▬	harmony (~harmony@unaffiliated/harmony) has quit (Quit: Leaving)
2014-09-01 12:24:13	▬▬▶	Bitani (~zmcgohan@dhcp-164-107-203-146.osuwireless.ohio-state.edu) has joined ##c++
2014-09-01 12:24:21	▬▬▶	jj995 (~jdm@ndcpat24.partners.org) has joined ##c++
2014-09-01 12:24:52	▬▬▶	jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has joined ##c++
2014-09-01 12:25:24	◀▬▬	Bitani (~zmcgohan@dhcp-164-107-203-146.osuwireless.ohio-state.edu) has quit (Client Quit)
2014-09-01 12:25:25	jj995	strncpy "If count is reached before the entire string src was copied, the resulting character array is not null-terminated." -- is there a similar function that always null terminates the dest string?
2014-09-01 12:27:07	talisein	jj995: not in the standard library. Since this is ##c++ you should just use std::string
2014-09-01 12:27:57	AbiBuccaneer	jj995, if you hate modern code and you hate being cross-platform then strlcpy might be your thing: http://en.wikibooks.org/wiki/C_Programming/C_Reference/nonstandard/strlcpy
2014-09-01 12:28:35	CJKay	!give std::strncpy
2014-09-01 12:28:35	nolyc	Missing parameter, or command not found.
2014-09-01 12:28:40	CJKay	urgh
2014-09-01 12:28:47	CJKay	!give talisein std::strncpy
2014-09-01 12:28:56	CJKay	Stupid tab-correct
2014-09-01 12:29:06	◀▬▬	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Remote host closed the connection)
2014-09-01 12:29:14	▬▬▶	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-09-01 12:29:22	CJKay	!give talisein stdref std::strncpy
2014-09-01 12:29:23	jj995	talisein: #include <cstring> isn't considered C++?
2014-09-01 12:29:24	nolyc	talisein: http://en.cppreference.com/w/cpp/string/byte/strncpy
2014-09-01 12:29:28	CJKay	Of course it is
2014-09-01 12:29:53	CJKay	If you did #include <cstring> in C it wouldn't find it
2014-09-01 12:30:46	AbiBuccaneer	jj995, snprintf?
2014-09-01 12:31:09	AbiBuccaneer	http://randomascii.wordpress.com/2013/04/03/stop-using-strncpy-already/ a discussion of this matter
2014-09-01 12:31:22	jj995	AbiBuccaneer: thanks, I'll try that
2014-09-01 12:33:30	CJKay	jj995: What are you trying to do, exactly?
2014-09-01 12:36:27	◀▬▬	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has quit (Quit: Leaving)
2014-09-01 12:36:30	cult-	code::blocks vs codelite?
2014-09-01 12:37:07	jj995	CJKay: I'm using the HDF5 library which accepts cstrings (not std::string), and copying data from a std::string to an HDF5 cstring
2014-09-01 12:37:11	CJKay	!give cult- topic
2014-09-01 12:37:13	nolyc	cult-: Welcome to ##c++. This channel is for the discussion of standard C++, including potential and future standardizations. This channel is NOT for discussion of: development platforms (OSes and other tools not directly related to C++), non-standard libraries, programs written in C++, other programming languages, a/s/l, or anything else that isn't C++.
2014-09-01 12:37:17	CJKay	cult-: ##workingset
2014-09-01 12:38:07	CJKay	jj995: You know std::string has c_str() right?
2014-09-01 12:38:15	◀▬▬	Elles (~nnscript@77-252-231-104.static.ip.netia.com.pl) has quit (Quit: ( www.nnscript.com :: NoNameScript 4.22 :: www.esnation.com ))
2014-09-01 12:38:31	jj995	CJKay: of course, but I still need to copy the c_str() to the HDF5 record's cstring
2014-09-01 12:38:44	CJKay	Ah I see
2014-09-01 12:38:59	◀▬▬	gemme (gemme@c75.152.27-202.clta.globetrotter.net) has left ##c++
2014-09-01 12:39:18	▬▬▶	aslant (~aslant@37.157.33.76) has joined ##c++
2014-09-01 12:39:20	CJKay	Can't you just set it to the value c_str() returns?
2014-09-01 12:39:21	jj995	I'm currently doing: strncpy(empty_record.chromosome, "", sizeof(CountH5Record::chromosome));
2014-09-01 12:39:37	jj995	that runs into a problem in that it isn't always null terminated
2014-09-01 12:39:50	CJKay	That doesn't make any sense
2014-09-01 12:39:59	▬▬▶	zima (zima@c75.152.27-202.clta.globetrotter.net) has joined ##c++
2014-09-01 12:40:06	jj995	CJKay: what doesn't make any sense?
2014-09-01 12:40:08	CJKay	empty_record.chromosome[0] = '\0'; // shrug
2014-09-01 12:40:10	▬▬▶	jitsuin (~chatzilla@cpe-23-240-223-21.socal.res.rr.com) has joined ##c++
2014-09-01 12:40:11	▬▬▶	yrter (~yrter@unaffiliated/yrter) has joined ##c++
2014-09-01 12:40:29	◀▬▬	kuldeepdhaka_ (~kuldeepdh@unaffiliated/kuldeepdhaka) has quit (Ping timeout: 260 seconds)
2014-09-01 12:40:39	jj995	oh, lol, that was the wrong thing i pasted, sorry
2014-09-01 12:40:53	▬▬▶	pa (~pa@unaffiliated/pa) has joined ##c++
2014-09-01 12:40:57	▬▬▶	bacon000 (~nobody@50-1-81-63.dsl.dynamic.sonic.net) has joined ##c++
2014-09-01 12:41:28	▬▬▶	kuldeepdhaka__ (~kuldeepdh@unaffiliated/kuldeepdhaka) has joined ##c++
2014-09-01 12:41:33	jj995	strncpy(empty_record.cell_type,  cell_type.c_str(), sizeof(CountH5Record::cell_type));
2014-09-01 12:41:37	jj995	that is a bette example
2014-09-01 12:42:49	K-ballo	that sizeof can't be right
2014-09-01 12:42:52	jj995	anyway, I'm just going to try snprintf as was already suggested
2014-09-01 12:42:57	K-ballo	is it an array?
2014-09-01 12:43:01	▬▬▶	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-09-01 12:43:05	CJKay	^
2014-09-01 12:43:22	CJKay	If cell-type is a char * that would quite quickly explain your situation
2014-09-01 12:43:49	▬▬▶	ambro718 (~ambro@gentoo/contributor/ambro718) has joined ##c++
2014-09-01 12:43:50	K-ballo	well, I guess it wouldn't make sense for cell_type to be char* anyway
2014-09-01 12:43:57	jj995	struct CountH5Record { uint32_t bin_number; char cell_type[16]; ...
2014-09-01 12:44:01	CJKay	Ah okay
2014-09-01 12:44:02	jj995	yes, it is an array
2014-09-01 12:44:27	◀▬▬	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-09-01 12:45:07	CJKay	jj995: cell_type.copy(empty_record.cell_type, sizeof(empty_record.cell_type));
2014-09-01 12:45:46	CJKay	You'll need to append the '\0' manually though
2014-09-01 12:46:36	CJKay	So really it should be:
2014-09-01 12:46:36	CJKay	size_t len = cell_type.copy(empty_record.cell_type, sizeof(empty_record.cell_type) - 1); empty_record.cell_type[len] = '\0';
2014-09-01 12:47:27	▬▬▶	Jeeb_ (~Jeeb_@u193-11-162-37.studentnatet.se) has joined ##c++
2014-09-01 12:47:45	◀▬▬	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 255 seconds)
2014-09-01 12:47:48	◀▬▬	kobrien (~kobrien@loki.ucd.ie) has left ##c++
2014-09-01 12:48:10	◀▬▬	kuldeepdhaka__ (~kuldeepdh@unaffiliated/kuldeepdhaka) has quit (Max SendQ exceeded)
2014-09-01 12:48:16	jj995	CJKay: thanks, I'll try that.  that seems easier than snprintf
2014-09-01 12:48:29	CJKay	That'd be because it is
2014-09-01 12:49:24	Chell0	anyone wish to do a code review(<100 lines)? I'm doing practice problems and I would love some constructive criticism
2014-09-01 12:50:00	CJKay	Chell0: Maybe when I leave work
2014-09-01 12:50:07	AbiBuccaneer	Chell0, sure, i'm bored, i'll bite
2014-09-01 12:50:11	▬▬▶	schleppel (~quassel@141.39.226.237) has joined ##c++
2014-09-01 12:50:34	▬▬▶	ToApolytoXaos (~ToApolyto@46.21.62.128) has joined ##c++
2014-09-01 12:51:35	▬▬▶	kuldeepdhaka__ (~kuldeepdh@unaffiliated/kuldeepdhaka) has joined ##c++
2014-09-01 12:51:54	◀▬▬	kuldeepdhaka__ (~kuldeepdh@unaffiliated/kuldeepdhaka) has quit (Read error: Connection reset by peer)
2014-09-01 12:53:02	▬▬▶	Bitani (~zmcgohan@dhcp-164-107-203-146.osuwireless.ohio-state.edu) has joined ##c++
2014-09-01 12:53:10	▬▬▶	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has joined ##c++
2014-09-01 12:54:26	Chell0	AbiBuccaneer: Thanks you!
2014-09-01 12:54:38	◀▬▬	freakazoid0223 (~matt@pool-98-115-118-153.phlapa.fios.verizon.net) has left ##c++ ("Leaving")
2014-09-01 12:54:40	Chell0	Thank*
2014-09-01 12:55:49	◀▬▬	W0rmDr1nk (~wormdrink@unaffiliated/wormdrink) has quit (Ping timeout: 250 seconds)
2014-09-01 12:58:15	◀▬▬	FriskyKat (SomeWhere@94.9.8.115) has quit (Remote host closed the connection)
2014-09-01 12:58:32	▬▬▶	FriskyKat (SomeWhere@94.9.8.115) has joined ##c++
2014-09-01 12:58:39	▬▬▶	mrevil (~mrevil@2601:9:5080:948:6489:38b1:348a:948) has joined ##c++
2014-09-01 12:58:43	▬▬▶	LiohAu (~LiohAu@bac69-8-88-165-4-152.fbx.proxad.net) has joined ##c++
2014-09-01 12:58:52	▬▬▶	ac_slater (~weechat@96.237.110.242) has joined ##c++
2014-09-01 12:59:04	◀▬▬	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has quit (Quit: Ïîëåòåëè!)
2014-09-01 13:01:31	▬▬▶	sohail (~user@unaffiliated/sohail) has joined ##c++
2014-09-01 13:02:46	◀▬▬	spott (~spott@c-76-120-73-233.hsd1.co.comcast.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-09-01 13:03:11	◀▬▬	Mio-chan (~Mio-chan@unaffiliated/mio-chan) has quit (Quit: Leaving)
2014-09-01 13:03:33	▬▬▶	Mio-chan (~Mio-chan@unaffiliated/mio-chan) has joined ##c++
2014-09-01 13:04:06	◀▬▬	davidstone (~david@174-16-211-60.hlrn.qwest.net) has quit (Quit: Konversation terminated!)
2014-09-01 13:04:46	▬▬▶	p|q (~plq@212.252.65.190) has joined ##c++
2014-09-01 13:05:19	▬▬▶	davidstone (~david@174-16-211-60.hlrn.qwest.net) has joined ##c++
2014-09-01 13:05:46	▬▬▶	BadQuanta (~badquanta@2601:7:80:a82:a42d:b70b:22b3:6329) has joined ##c++
2014-09-01 13:05:51	▬▬▶	abdoo (~north_alg@105.108.82.162) has joined ##c++
2014-09-01 13:06:10	◀▬▬	hellangel7 (~hellangel@117.192.183.187) has quit (Quit: Leaving)
2014-09-01 13:10:17	▬▬▶	kurahaupo (~kurahaupo@118.148.189.190) has joined ##c++
2014-09-01 13:11:18	◀▬▬	LiohAu (~LiohAu@bac69-8-88-165-4-152.fbx.proxad.net) has left ##c++
2014-09-01 13:11:22	▬▬▶	LiohAu (~LiohAu@bac69-8-88-165-4-152.fbx.proxad.net) has joined ##c++
2014-09-01 13:13:32	◀▬▬	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has quit (Quit: Leaving)
2014-09-01 13:15:07	▬▬▶	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has joined ##c++
2014-09-01 13:15:22	◀▬▬	rocketeer (~rocketeer@gateway/tor-sasl/rocketeer) has quit (Remote host closed the connection)
2014-09-01 13:15:26	◀▬▬	zwer (~zwer@gateway/tor-sasl/zwer) has quit (Remote host closed the connection)
2014-09-01 13:16:00	▬▬▶	rocketeer (~rocketeer@gateway/tor-sasl/rocketeer) has joined ##c++
2014-09-01 13:16:14	▬▬▶	zwer (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-09-01 13:16:14	--	CJKay is now known as CJKay[Work]
2014-09-01 13:16:36	CJKay[Work]	jj995: Tell me if you get your thing sorted. I'll be back in a mo
2014-09-01 13:19:37	▬▬▶	MrFlibble (LunarJetma@05400825.skybroadband.com) has joined ##c++
2014-09-01 13:19:38	◀▬▬	mrevil (~mrevil@2601:9:5080:948:6489:38b1:348a:948) has quit (Remote host closed the connection)
2014-09-01 13:20:36	◀▬▬	sohail (~user@unaffiliated/sohail) has quit (Ping timeout: 255 seconds)
2014-09-01 13:20:52	▬▬▶	mrevil (~mrevil@2601:9:5080:948:e41b:e1ff:2153:2a7a) has joined ##c++
2014-09-01 13:21:24	▬▬▶	io2 (~io2@unaffiliated/irrequietus) has joined ##c++
2014-09-01 13:21:49	▬▬▶	CJKay[Desktop] (~CJKay@unaffiliated/cjkay) has joined ##c++
2014-09-01 13:22:25	▬▬▶	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has joined ##c++
2014-09-01 13:24:48	◀▬▬	BlaXpirit (~blaxpirit@161-133-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-09-01 13:26:12	◀▬▬	Anodl (~Anodl@p5DC5A323.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-09-01 13:26:13	◀▬▬	ac_slater (~weechat@96.237.110.242) has quit (Ping timeout: 260 seconds)
2014-09-01 13:26:24	▬▬▶	BlaXpirit (~blaxpirit@161-133-132-95.pool.ukrtel.net) has joined ##c++
2014-09-01 13:28:08	◀▬▬	c0le (~c0le@59.99.251.45) has quit (Ping timeout: 240 seconds)
2014-09-01 13:30:07	◀▬▬	saml_ (~saml@pool-71-190-8-37.nycmny.east.verizon.net) has quit (Quit: Leaving)
2014-09-01 13:30:20	▬▬▶	godel (~gciruelos@190.191.220.184) has joined ##c++
2014-09-01 13:31:28	▬▬▶	k0nichiwa (~jdoe@ip-64-134-184-40.public.wayport.net) has joined ##c++
2014-09-01 13:31:47	▬▬▶	hellangel7 (~hellangel@117.192.183.187) has joined ##c++
2014-09-01 13:31:48	k0nichiwa	is it faster to insert into std::set, o rinto a std::vector and then call sort ?
2014-09-01 13:32:23	k0nichiwa	i guess for large N probably into set is better, small N into vector
2014-09-01 13:32:33	K-ballo	measure
2014-09-01 13:32:49	Oxyd	Measure and then tell us at what values N starts being large.
2014-09-01 13:34:09	◀▬▬	flugo (~flugo@115.248.45.78) has quit (Ping timeout: 260 seconds)
2014-09-01 13:35:05	▬▬▶	kronikarz (~kronikarz@host-217-172-245-116.lodz.mm.pl) has joined ##c++
2014-09-01 13:35:09	kronikarz	join #refud0ge
2014-09-01 13:35:21	kronikarz	Crap, sorry
2014-09-01 13:35:24	◀▬▬	cbreak (~cbreak@77-58-71-175.dclient.hispeed.ch) has quit (Quit: done)
2014-09-01 13:35:26	kronikarz	Forgot the / :/
2014-09-01 13:35:28	▬▬▶	paul424 (~chatzilla@apn-31-2-110-233.dynamic.gprs.plus.pl) has joined ##c++
2014-09-01 13:36:33	--	CJKay[Desktop] is now known as CJKay
2014-09-01 13:37:27	◀▬▬	FunkyAss (~Funky@unaffiliated/funkyass) has quit (Ping timeout: 245 seconds)
2014-09-01 13:37:47	▬▬▶	skfax (51a6ee90@gateway/web/freenode/ip.81.166.238.144) has joined ##c++
2014-09-01 13:40:28	▬▬▶	top4o (~chatzilla@93.152.162.95) has joined ##c++
2014-09-01 13:42:14	▬▬▶	monique (~monique@unaffiliated/monique) has joined ##c++
2014-09-01 13:43:03	ville	K-ballo: is that ability of shared_ptr destructing a derived type properly specified or just implementation artifact?
2014-09-01 13:43:28	K-ballo	ville: properly specified, it was a big deal
2014-09-01 13:43:29	▬▬▶	Orion] (~nname@unaffiliated/orion/x-3970838) has joined ##c++
2014-09-01 13:43:45	▬▬▶	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-09-01 13:44:12	▬▬▶	bitlord (~bitlord@unaffiliated/bitlord) has joined ##c++
2014-09-01 13:44:46	ville	surprising. why? seems kind of fickle whether it works with out a virtual dtor or not
2014-09-01 13:44:47	◀▬▬	monique__ (~monique@unaffiliated/monique) has quit (Ping timeout: 250 seconds)
2014-09-01 13:45:03	◀▬▬	aslant (~aslant@37.157.33.76) has quit (Quit: Leaving...)
2014-09-01 13:45:36	MrFlibble	k0nichiwa: for large N I imagine vector may trump set as the allocator will be called less but I am only guessing; the complexity of either is the same I think.
2014-09-01 13:46:40	▬▬▶	aslant (~aslant@37.157.33.76) has joined ##c++
2014-09-01 13:46:48	▬▬▶	flugo (~flugo@103.225.100.51) has joined ##c++
2014-09-01 13:47:32	◀▬▬	lh_mouse (~lh_mouse@101.80.26.22) has quit (Read error: Connection reset by peer)
2014-09-01 13:47:54	godel	do you know a relatively easy to use lib to make compressed picture files? (jpg, png, etc)
2014-09-01 13:48:31	◀▬▬	K-ballo (~sonoio@110-136-126-200.fibertel.com.ar) has quit (Read error: Connection reset by peer)
2014-09-01 13:48:33	kronikarz	stb_image ?
2014-09-01 13:48:34	▬▬▶	Fogger (~Fogger@host31-49-108-210.range31-49.btcentralplus.com) has joined ##c++
2014-09-01 13:48:36	◀▬▬	top4o (~chatzilla@93.152.162.95) has quit (Quit: ChatZilla 0.9.90.1 [Firefox 31.0/20140716183446])
2014-09-01 13:48:37	◀▬▬	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 260 seconds)
2014-09-01 13:48:50	kronikarz	It does png only though
2014-09-01 13:49:01	godel	doesn't matter
2014-09-01 13:49:16	ville	!give godel general
2014-09-01 13:49:17	nolyc	godel: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-09-01 13:49:35	k0nichiwa	MrFlibble, for large N the movment of items in the vecto rdominates
2014-09-01 13:49:53	k0nichiwa	mkaing it slower, std::set doesn't have to move its elements about in order to maintain their ordering
2014-09-01 13:50:25	MrFlibble	k0nichiwa: appending to the vector is O(1) amortized then you have an O(n . log n) sort at the end
2014-09-01 13:50:34	MrFlibble	to me that looks like the same complexity
2014-09-01 13:50:41	◀▬▬	iveevue (~na@unaffiliated/iveevue) has quit (Quit: Leaving)
2014-09-01 13:51:20	MrFlibble	but yeah if moving is expensive then set might win however vector is using the allocator less
2014-09-01 13:51:36	◀▬▬	abdoo (~north_alg@105.108.82.162) has quit (Quit: Quitte)
2014-09-01 13:51:38	k0nichiwa	MrFlibble, all elements in the vector will need to e moved
2014-09-01 13:52:14	MrFlibble	time it and see
2014-09-01 13:52:39	MrFlibble	std::set will allocate for each node which could be quite expensive for large N
2014-09-01 13:52:45	TinoDidriksen	You can try boost::flat_set for a ready-made vector-based std::set replacement.
2014-09-01 13:52:46	MrFlibble	unless you use a memory pool
2014-09-01 13:53:26	MrFlibble	set::set also has node pointers to manage and rotations to do which vector doesn't
2014-09-01 13:53:53	◀▬▬	kronikarz (~kronikarz@host-217-172-245-116.lodz.mm.pl) has left ##c++ ("Leaving")
2014-09-01 13:54:14	MrFlibble	if the value_type is int std::vector might win
2014-09-01 13:55:57	◀▬▬	paul424 (~chatzilla@apn-31-2-110-233.dynamic.gprs.plus.pl) has quit (Quit: ChatZilla 0.9.90.1 [Firefox 31.0/2014072000])
2014-09-01 13:55:59	◀▬▬	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has quit (Quit: Leaving.)
2014-09-01 13:56:18	▬▬▶	Solarlux (Solarlux@84.237.174.193) has joined ##c++
2014-09-01 13:56:22	Solarlux	*int
2014-09-01 13:56:26	Solarlux	What it is?
2014-09-01 13:56:38	Solarlux	int*
2014-09-01 13:56:47	MrFlibble	pointer-to-int
2014-09-01 13:56:56	Solarlux	for example
2014-09-01 13:56:56	◀▬▬	lalaland1125 (~lalaland1@128.42.93.43) has quit (Read error: Connection reset by peer)
2014-09-01 13:57:15	Solarlux	int* sum_PTR;
2014-09-01 13:57:20	▬▬▶	TomyLobo (~TomyLobo@91.65.115.103) has joined ##c++
2014-09-01 13:57:25	▬▬▶	slassh (~slassh@94.9.255.214) has joined ##c++
2014-09-01 13:57:32	◀▬▬	Chell0 (~chatzilla@c-68-40-167-130.hsd1.mi.comcast.net) has quit (Quit: ChatZilla 0.9.90.1 [Firefox 31.0/20140716183446])
2014-09-01 13:57:34	ville	!give Solarlux ac++
2014-09-01 13:57:34	MrFlibble	pointer-to-int
2014-09-01 13:57:34	nolyc	Solarlux: Accelerated C++: Practical Programming by Example. Andrew Koenig and Barbara Moo. Addison-Wesley, 2000. ISBN 0-201-70353-X. http://www.acceleratedcpp.com/
2014-09-01 14:00:08	▬▬▶	disappearedng (~disappear@unaffiliated/disappearedng) has joined ##c++
2014-09-01 14:00:29	disappearedng	I know this is Arduino but it's still c++. http://stackoverflow.com/questions/25601716/arduino-memory-leakage anyone here with a sharp eye able to help?
2014-09-01 14:00:33	◀▬▬	io2 (~io2@unaffiliated/irrequietus) has quit (Quit: ...take irc away, what are you? genius, billionaire, playboy, philanthropist)
2014-09-01 14:00:51	▬▬▶	wilx (~wilx@27.228.broadband3.iol.cz) has joined ##c++
2014-09-01 14:01:55	▬▬▶	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-09-01 14:02:24	MrFlibble	disappearedng: I see no delete of clientPtr
2014-09-01 14:02:27	MrFlibble	also use smart pointers.
2014-09-01 14:02:41	MrFlibble	also, avoid global variables
2014-09-01 14:02:47	◀▬▬	asmx (cod3r@shell.uw-team.org) has quit (Quit: Leaving)
2014-09-01 14:03:33	◀▬▬	GinoMan (~Gino@pool-72-94-39-83.phlapa.fios.verizon.net) has quit (Ping timeout: 260 seconds)
2014-09-01 14:04:05	▬▬▶	TheFuzzball (~TheFuzzba@cpc4-ward10-2-0-cust737.10-2.cable.virginm.net) has joined ##c++
2014-09-01 14:04:28	disappearedng	MrFlibble: well clientPtr wouldn't cause the leakage
2014-09-01 14:04:30	▬▬▶	FunkyAss (~Funky@unaffiliated/funkyass) has joined ##c++
2014-09-01 14:04:31	▬▬▶	Heartbroken (Heartbroke@gateway/shell/trekweb.org/x-qssxocosqctuqkby) has joined ##c++
2014-09-01 14:04:42	◀▬▬	dumdedum (~dumdedum@46.27.200.9) has quit (Ping timeout: 255 seconds)
2014-09-01 14:04:48	MrFlibble	ORLY?
2014-09-01 14:05:23	▬▬▶	shintahW2 (~oer894n@c83-248-109-179.bredband.comhem.se) has joined ##c++
2014-09-01 14:05:39	▬▬▶	EhevuTov (~EhevuTov@24-148-20-58.c3-0.stn-ubr1.chi-stn.il.cable.rcn.com) has joined ##c++
2014-09-01 14:06:34	▬▬▶	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-09-01 14:07:03	▬▬▶	deanrock0 (~deanrock0@cpe-77.38.57.189.cable.t-1.si) has joined ##c++
2014-09-01 14:07:04	▬▬▶	emma (~em@unaffiliated/emma) has joined ##c++
2014-09-01 14:08:18	◀▬▬	mIGu (mig21@87.248.86.218) has quit (Ping timeout: 260 seconds)
2014-09-01 14:08:23	◀▬▬	shintahW (~oer894n@c83-248-109-179.bredband.comhem.se) has quit (Ping timeout: 245 seconds)
2014-09-01 14:08:23	--	shintahW2 is now known as shintahW
2014-09-01 14:09:14	Nik05	where is setup() called?
2014-09-01 14:09:29	▬▬▶	abdoo (~north_alg@105.108.82.162) has joined ##c++
2014-09-01 14:10:08	▬▬▶	ac_slater (~weechat@96.237.110.242) has joined ##c++
2014-09-01 14:10:32	barometz_	In the main() that the Arduino toolchain inserts
2014-09-01 14:10:35	NinjaPenguin	Nik05: Arduino calls it. Just like it calls loop and other functions.
2014-09-01 14:10:50	Nik05	and only called onces?
2014-09-01 14:10:53	barometz_	it is.
2014-09-01 14:11:01	--	barometz_ is now known as barometz
2014-09-01 14:11:49	Nik05	and arduino doesnt use exceptions?
2014-09-01 14:12:37	◀▬▬	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has quit (Ping timeout: 264 seconds)
2014-09-01 14:12:44	Griwes	!stdcpp arduino
2014-09-01 14:12:44	nolyc	Standard C++ has no notion of `arduino', so you must be talking about some specific OS- or library API (or tool), which is beyond the scope of this channel (which focuses on standard C++).
2014-09-01 14:13:18	jj995	CJKay[Work]: fyi, I ended up just doing strncpy(dest, str.c_str(), dest_size - 1); dest[dest_size - 1] = '\0'; .  I'm not sure why, but my string usage seems to require that any excess in dest be filled with \0 bytes.  seems to be some strange interaction between my C++ code, HDF5 usage, pytables, and python code.  seems to complex to better understand at the moment
2014-09-01 14:13:55	Solarlux	int* sum_PTR equal int *sum_PTR??
2014-09-01 14:14:10	jj995	I guess I'm using arcade libraries, but HDF5 performance is so good that it is easy to overlook the poor string support
2014-09-01 14:14:12	Solarlux	I know  *sum_PTR is value of pointer
2014-09-01 14:14:17	Solarlux	*
2014-09-01 14:14:25	Solarlux	And pointer is &
2014-09-01 14:14:30	Nik05	Solarlux yes why space doesnt mater
2014-09-01 14:14:45	Solarlux	Thisjotation in some codes confuse my mind
2014-09-01 14:14:49	Solarlux	notation
2014-09-01 14:14:51	Nik05	lol wtf, *white space
2014-09-01 14:15:29	◀▬▬	EhevuTov (~EhevuTov@24-148-20-58.c3-0.stn-ubr1.chi-stn.il.cable.rcn.com) has quit (Quit: This computer has gone to sleep)
2014-09-01 14:16:09	◀▬▬	abdoo (~north_alg@105.108.82.162) has quit (Ping timeout: 260 seconds)
2014-09-01 14:16:14	◀▬▬	disappearedng (~disappear@unaffiliated/disappearedng) has quit (Remote host closed the connection)
2014-09-01 14:16:59	▬▬▶	io2 (~io2@unaffiliated/irrequietus) has joined ##c++
2014-09-01 14:17:12	▬▬▶	cbreak (~cbreak@77-58-71-175.dclient.hispeed.ch) has joined ##c++
2014-09-01 14:17:32	Nik05	wtf that arduino guy already left -_-
2014-09-01 14:17:52	▬▬▶	yrter_ (~yrter@unaffiliated/yrter) has joined ##c++
2014-09-01 14:18:06	▬▬▶	ideletemyself (~delete@24-121-244-192.npg.sta.suddenlink.net) has joined ##c++
2014-09-01 14:18:08	NinjaPenguin	Well, he was here a good 15 minutes.
2014-09-01 14:18:21	 *	NinjaPenguin slaps Nik05
2014-09-01 14:18:22	Nik05	not long enough for Idle Relay Chat
2014-09-01 14:18:29	◀▬▬	yrter (~yrter@unaffiliated/yrter) has quit (Ping timeout: 260 seconds)
2014-09-01 14:18:37	▬▬▶	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has joined ##c++
2014-09-01 14:19:12	NinjaPenguin	15 minutes is good considering how little time some people are. Besides, maybe he had to go. So shush.
2014-09-01 14:19:28	▬▬▶	aalhamad (~aalhamad@91.140.216.69) has joined ##c++
2014-09-01 14:19:29	Nik05	:)
2014-09-01 14:20:06	◀▬▬	aalhamad (~aalhamad@91.140.216.69) has left ##c++
2014-09-01 14:20:07	◀▬▬	rawtass (~ms@20.109-247-198.customer.lyse.net) has quit (Ping timeout: 240 seconds)
2014-09-01 14:22:19	◀▬▬	NinpoZNC (Ninpo_@gateway/shell/panicbnc/x-aauxhpucvkucadcz) has quit (Quit: bit.ly\s-a-m-a-s)
2014-09-01 14:22:38	▬▬▶	aalhamad (~aalhamad@91.140.216.69) has joined ##c++
2014-09-01 14:23:08	ac_slater	hey all, I want to return an std::map by value. Is this weird? Should I make it a 'fill' arg instead?
2014-09-01 14:23:31	ville	no. no.
2014-09-01 14:23:33	◀▬▬	Longlius (~longlius@68.170.238.146) has quit (Remote host closed the connection)
2014-09-01 14:23:52	ac_slater	eh
2014-09-01 14:24:02	NinjaPenguin	Not weird at all ever since RVO came along.
2014-09-01 14:24:02	▬▬▶	kailoAtWork (~kailoAtWo@cpe-75-83-169-163.socal.res.rr.com) has joined ##c++
2014-09-01 14:24:12	NinjaPenguin	!rvo
2014-09-01 14:24:13	nolyc	rvo is Return Value Optimization. With RVO, a function returning by value will construct its result directly in a variable of the calling function, thus avoiding the need for a temporary.
2014-09-01 14:24:24	ville	given how std::map is implemented it'll move nicely
2014-09-01 14:24:45	ville	ac_slater: what's there to "eh"? you asked two yes-no questions and i answered
2014-09-01 14:24:58	▬▬▶	K-ballo (~sonoio@190.190.32.41) has joined ##c++
2014-09-01 14:25:34	▬▬▶	Forser_Laptop (~Forser_La@c83-251-208-71.bredband.comhem.se) has joined ##c++
2014-09-01 14:25:48	cbreak	NinjaPenguin: I think I've been here years.
2014-09-01 14:25:49	ac_slater	ville: oooh I misread. I thought you were saying no to `return by value` ... but I didnt ask if I should do that, ;)
2014-09-01 14:25:51	ac_slater	sorry
2014-09-01 14:25:52	▬▬▶	yrter (~yrter@unaffiliated/yrter) has joined ##c++
2014-09-01 14:26:00	ac_slater	I appreciate the advice!
2014-09-01 14:26:16	NinjaPenguin	cbreak: Pardon?
2014-09-01 14:26:17	cbreak	[20:26:16] -NickServ-	 Registered : May 18 12:35:50 2007 (7 years, 15 weeks, 3 days, 07:50:25 ago)
2014-09-01 14:26:28	▬▬▶	tworkin (~Adium@97.77.193.138) has joined ##c++
2014-09-01 14:26:28	cbreak	NinjaPenguin: I win against hte arduino guy
2014-09-01 14:27:01	ville	noob
2014-09-01 14:27:09	cbreak	:(
2014-09-01 14:27:21	◀▬▬	yrter_ (~yrter@unaffiliated/yrter) has quit (Ping timeout: 260 seconds)
2014-09-01 14:27:25	NinjaPenguin	Heh. Well, he just happened to need quick help. He's not one of the idling type of people. ;)
2014-09-01 14:28:33	◀▬▬	mrevil (~mrevil@2601:9:5080:948:e41b:e1ff:2153:2a7a) has quit (Remote host closed the connection)
2014-09-01 14:30:37	◀▬▬	aalhamad (~aalhamad@91.140.216.69) has quit (Quit: aalhamad)
2014-09-01 14:37:11	◀▬▬	aslant (~aslant@37.157.33.76) has quit (Quit: Leaving...)
2014-09-01 14:38:00	◀▬▬	ac_slater (~weechat@96.237.110.242) has quit (Ping timeout: 255 seconds)
2014-09-01 14:38:51	◀▬▬	hazzadous_ (~harrywaye@128.127.31.17) has quit (Quit: hazzadous_)
2014-09-01 14:39:14	◀▬▬	ketamin (~Thunderbi@131.178.200.64) has quit (Read error: Connection reset by peer)
2014-09-01 14:39:29	▬▬▶	realloc1 (~realloc1@p4FD4FDC2.dip0.t-ipconnect.de) has joined ##c++
2014-09-01 14:39:32	◀▬▬	realloc1 (~realloc1@p4FD4FDC2.dip0.t-ipconnect.de) has left ##c++
2014-09-01 14:43:11	◀▬▬	zwer (~zwer@gateway/tor-sasl/zwer) has quit (Remote host closed the connection)
2014-09-01 14:43:30	▬▬▶	micom (~micom@unaffiliated/micom) has joined ##c++
2014-09-01 14:43:35	▬▬▶	gelignite (~gelignite@i528C31D6.versanet.de) has joined ##c++
2014-09-01 14:43:57	▬▬▶	tysonz (~tysonz@dgpsb-gw141.cs.toronto.edu) has joined ##c++
2014-09-01 14:44:31	▬▬▶	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-09-01 14:44:51	◀▬▬	tworkin (~Adium@97.77.193.138) has left ##c++
2014-09-01 14:47:14	◀▬▬	snyp (~Snyp@223.29.204.2) has quit (Quit: WeeChat 1.0)
2014-09-01 14:49:08	◀▬▬	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 245 seconds)
2014-09-01 14:49:12	◀▬▬	hellangel7 (~hellangel@117.192.183.187) has quit (Remote host closed the connection)
2014-09-01 14:56:57	▬▬▶	GinoMan (~Gino@pool-71-185-25-185.phlapa.fios.verizon.net) has joined ##c++
2014-09-01 14:57:14	◀▬▬	micom (~micom@unaffiliated/micom) has left ##c++ ("Leaving")
2014-09-01 14:57:20	▬▬▶	micom (~micom@unaffiliated/micom) has joined ##c++
2014-09-01 14:59:50	▬▬▶	arescorpio (~arescorpi@63-203-17-190.fibertel.com.ar) has joined ##c++
2014-09-01 14:59:50	▬▬▶	sohail (~user@unaffiliated/sohail) has joined ##c++
2014-09-01 14:59:58	▬▬▶	devbug (~quassel@d108-180-247-142.bchsia.telus.net) has joined ##c++
2014-09-01 15:00:21	▬▬▶	jpcanepa (c81ba7f4@gateway/web/freenode/ip.200.27.167.244) has joined ##c++
2014-09-01 15:00:36	▬▬▶	hazzadous (~harrywaye@128.127.31.17) has joined ##c++
2014-09-01 15:00:38	◀▬▬	Irrelium (~Irrelium@71.19.153.241) has quit (Ping timeout: 240 seconds)
2014-09-01 15:02:41	▬▬▶	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has joined ##c++
2014-09-01 15:02:45	▬▬▶	Anodl (~Anodl@p5DC5A323.dip0.t-ipconnect.de) has joined ##c++
2014-09-01 15:04:33	◀▬▬	eutheria (~eutheria@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has quit (Ping timeout: 245 seconds)
2014-09-01 15:06:06	▬▬▶	abdoo (~north_alg@105.108.82.162) has joined ##c++
2014-09-01 15:06:37	◀▬▬	rocketeer (~rocketeer@gateway/tor-sasl/rocketeer) has quit (Ping timeout: 264 seconds)
2014-09-01 15:08:34	▬▬▶	Longlius (~longlius@c-69-247-183-18.hsd1.tn.comcast.net) has joined ##c++
2014-09-01 15:08:42	◀▬▬	Jesin (~Jesin@Dyn156085.cc.lehigh.edu) has quit (Quit: Leaving)
2014-09-01 15:08:59	▬▬▶	rocketeer (~rocketeer@gateway/tor-sasl/rocketeer) has joined ##c++
2014-09-01 15:09:07	▬▬▶	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has joined ##c++
2014-09-01 15:09:43	◀▬▬	naraku9333 (~quassel@c-68-51-98-34.hsd1.il.comcast.net) has quit (Ping timeout: 240 seconds)
2014-09-01 15:10:27	◀▬▬	kailoAtWork (~kailoAtWo@cpe-75-83-169-163.socal.res.rr.com) has quit (Quit: This computer has gone to sleep)
2014-09-01 15:12:29	codebrainz	hi. if calling a virtual method from a base class constructor, is it guaranteed that it will call it's own (effectively non-virtual) method or is that completely undefined behaviour?
2014-09-01 15:12:54	K-ballo	codebrainz: guaranteed, it's type safe
2014-09-01 15:13:54	cbreak	codebrainz: as long as you are in your destructor, your object is of that type
2014-09-01 15:14:06	cbreak	the derived parts do not exist yet, so it's not yet of the derived type
2014-09-01 15:14:21	ville	s/destructor/constructor/
2014-09-01 15:14:40	codebrainz	what if the virtual method is called indirectly from the constructor, using a pointer to the instance?
2014-09-01 15:14:47	cbreak	(the type of the object changes during construction, so if you'd call a virtual method, it'd dispatch accordingly)
2014-09-01 15:14:47	ville	or s/yet/anymore/ alternatively
2014-09-01 15:15:04	cbreak	codebrainz: doesn't matter
2014-09-01 15:15:25	codebrainz	like the constructor calls some function, that indirectly calls back into the class's virtual function using a pointer
2014-09-01 15:15:49	K-ballo	within the constructor of C, the complete type of the object is C, virtual functions dispatch to C
2014-09-01 15:16:15	▬▬▶	yin_nadie (~nadie@85.136.155.93.dyn.user.ono.com) has joined ##c++
2014-09-01 15:16:27	K-ballo	the whole behavior is not an implementation quirk, it's to ensure type safety
2014-09-01 15:16:50	cbreak	yeah. It's great.
2014-09-01 15:16:53	codebrainz	yeah, I thought that's how it worked. I'm getting a weird segfault though. I must be doing something wrong.
2014-09-01 15:17:01	ville	codebrainz: still solves to the class's own version being called. that's one way of being "able" to call pure virtuals
2014-09-01 15:17:31	K-ballo	well, you seem to be describing a situation where a function calls an incomplete object, so I believe that to be UB
2014-09-01 15:18:04	cbreak	the object isn't incomplete
2014-09-01 15:18:15	codebrainz	what if the base class's virtual method (not even implemented in subclass) is called from the subclass's constructor?
2014-09-01 15:18:29	codebrainz	will it call the base class's function?
2014-09-01 15:18:32	K-ballo	there's only so much you can do with a pointer to an "object" that is being constructed (there isn't technically an object yet)
2014-09-01 15:18:39	▬▬▶	kurahaupo1 (~Kurahaupo@192.208.252.27.dyn.cust.vf.net.nz) has joined ##c++
2014-09-01 15:18:53	cbreak	codebrainz: it will call the correct one for the type the object has at the moment
2014-09-01 15:18:58	▬▬▶	smartmobili (52e69ca4@gateway/web/freenode/ip.82.230.156.164) has joined ##c++
2014-09-01 15:19:06	cbreak	K-ballo: object == memory, it's there
2014-09-01 15:19:24	◀▬▬	Internet13 (chatzilla@cpc15-croy20-2-0-cust382.croy.cable.virginm.net) has quit (Quit: Leaving)
2014-09-01 15:19:30	 *	K-ballo digs into the standard for a quote...
2014-09-01 15:19:33	cbreak	it hasn't finished constructing though
2014-09-01 15:19:47	cbreak	K-ballo: even int i; // i is an object
2014-09-01 15:19:50	▬▬▶	paul424 (~chatzilla@91.207.69.217) has joined ##c++
2014-09-01 15:19:54	cbreak	and that doesn't even have a constructor :)
2014-09-01 15:20:02	K-ballo	nod
2014-09-01 15:20:15	codebrainz	cbreak, so if the subclass didn't override the virtual member function, it should call the base class's function, even if the object isn't completely constructed?
2014-09-01 15:20:29	codebrainz	(from the subclass's constructor)
2014-09-01 15:20:37	▬▬▶	jsoft_ (~jsoft@unaffiliated/jsoft) has joined ##c++
2014-09-01 15:20:38	cbreak	which ever is the correct one.
2014-09-01 15:20:45	K-ballo	the object exists but it is not yet "live"
2014-09-01 15:20:45	◀▬▬	rendar (~I@host39-6-dynamic.7-79-r.retail.telecomitalia.it) has quit (Ping timeout: 255 seconds)
2014-09-01 15:20:56	cbreak	if there's none (because it's pure virtual and not implemented), then you'll get an exception.
2014-09-01 15:21:04	◀▬▬	schleppel (~quassel@141.39.226.237) has quit (Read error: Connection reset by peer)
2014-09-01 15:21:16	◀▬▬	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-09-01 15:21:43	◀▬▬	jsoft (~jsoft@unaffiliated/jsoft) has quit (Ping timeout: 245 seconds)
2014-09-01 15:21:49	codebrainz	cbreak, hmm. ok it must be totally different bug I'm experiencing then
2014-09-01 15:21:53	codebrainz	I'm trying to avoid having a separate init() function that has to be called or a special create() static function to construct the object
2014-09-01 15:22:21	smartmobili	http://ideone.com/RBIJV8
2014-09-01 15:22:50	smartmobili	I have found this code here http://codereview.stackexchange.com/questions/1205/c-string-cast-template-function
2014-09-01 15:23:12	smartmobili	but it seems the template doesn't deduce automatically the type of the argument
2014-09-01 15:23:29	smartmobili	string test2 = string_cast(test); doesn't work
2014-09-01 15:23:39	smartmobili	but string test2 = string_cast<std::string>(test); does
2014-09-01 15:25:27	cbreak	smartmobili: argument type deduction only works for arguments
2014-09-01 15:25:33	cbreak	smartmobili: the return value is not an argument.
2014-09-01 15:25:37	▬▬▶	koderok (~koderok@223.239.255.161) has joined ##c++
2014-09-01 15:25:43	◀▬▬	koderok (~koderok@223.239.255.161) has quit (Client Quit)
2014-09-01 15:26:56	▬▬▶	rendar (~I@host39-6-dynamic.7-79-r.retail.telecomitalia.it) has joined ##c++
2014-09-01 15:28:08	▬▬▶	KnownSyntax (uid7983@gateway/web/irccloud.com/x-salyhtpffzngfzqi) has joined ##c++
2014-09-01 15:30:40	smartmobili	ok
2014-09-01 15:30:46	▬▬▶	jimvideo (~jimvideo@184-12-234-43.dr01.brny.ca.frontiernet.net) has joined ##c++
2014-09-01 15:32:08	◀▬▬	BadQuanta (~badquanta@2601:7:80:a82:a42d:b70b:22b3:6329) has quit (Quit: Leaving.)
2014-09-01 15:36:24	codebrainz	cbreak, I think I have reproduced a generic example of my problem: http://ideone.com/NOd2hT
2014-09-01 15:36:30	codebrainz	on my computer it segfaults though
2014-09-01 15:37:10	◀▬▬	davidstone (~david@174-16-211-60.hlrn.qwest.net) has quit (Quit: Konversation terminated!)
2014-09-01 15:37:31	▬▬▶	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-09-01 15:38:00	cbreak	now that's some convoluted code.
2014-09-01 15:38:06	cbreak	codebrainz: have you considered using smart pointers?
2014-09-01 15:38:15	cbreak	but yes, it looks ok at first glance
2014-09-01 15:38:40	codebrainz	cbreak, yeah, it's win32 api stuff in real-life :)
2014-09-01 15:38:45	▬▬▶	Internet13 (~chatzilla@cpc15-croy20-2-0-cust382.croy.cable.virginm.net) has joined ##c++
2014-09-01 15:38:56	cbreak	codebrainz: hmm... no, wait...
2014-09-01 15:39:14	cbreak	codebrainz: it's not ok
2014-09-01 15:39:19	K-ballo	yeah, segfaults on msvc here too
2014-09-01 15:39:26	cbreak	at the point in time where resource gets the pointer, it's not even a Base
2014-09-01 15:39:49	cbreak	after all, it's before the Base constructor has been entered
2014-09-01 15:40:00	codebrainz	hmm, ok that makes sense
2014-09-01 15:41:11	▬▬▶	muricula (~kronquii@osuosl/staff/muricula) has joined ##c++
2014-09-01 15:41:48	muricula	How should I fix error: member access into incomplete type 'js::jit::MBasicBlock'?
2014-09-01 15:42:59	muricula	MResumePoint needs to call a function in MBasicBlock but MResumePoint is defined before MBasicBlock
2014-09-01 15:43:55	muricula	(There is a forward declaration of class MBasicBlock but if I understand correctly that will only allow me to use the type and not its members)
2014-09-01 15:43:58	codebrainz	cbreak, is there anyway of doing this without a factory function or separate init()-type of function?
2014-09-01 15:44:32	ville	muricula: move the definition of the function with the call after the definition of the type
2014-09-01 15:45:45	muricula	ville: This happens in two header files which I did not write, and am hesitant to take a machete to slice functions and move functions all over
2014-09-01 15:45:54	muricula	Is there another solution?
2014-09-01 15:46:05	▬▬▶	davidstone (~david@174-16-211-60.hlrn.qwest.net) has joined ##c++
2014-09-01 15:46:07	◀▬▬	smartmobili (52e69ca4@gateway/web/freenode/ip.82.230.156.164) has quit (Quit: Page closed)
2014-09-01 15:46:12	ville	one of them has to yeld
2014-09-01 15:46:58	◀▬▬	Bitani (~zmcgohan@dhcp-164-107-203-146.osuwireless.ohio-state.edu) has quit (Quit: Bitani)
2014-09-01 15:47:10	◀▬▬	Plasmastar (Plasma@unaffiliated/plasmastar) has quit (Ping timeout: 260 seconds)
2014-09-01 15:47:25	▬▬▶	OldManToTo (OldManToTo@164.8.213.44) has joined ##c++
2014-09-01 15:48:09	cbreak	codebrainz: make base create the resource
2014-09-01 15:48:28	cbreak	codebrainz: or pass the resource to base after it is created
2014-09-01 15:48:32	codebrainz	cbreak, the resource is specific to the derived type
2014-09-01 15:48:41	codebrainz	yeah, this isn't so bad: http://ideone.com/XkLNiI
2014-09-01 15:48:56	cbreak	it wouldn't be init
2014-09-01 15:49:00	cbreak	more like set_resource
2014-09-01 15:49:13	cbreak	also, why the raw pointers :/
2014-09-01 15:49:21	codebrainz	simplicity for example
2014-09-01 15:49:24	◀▬▬	LiohAu (~LiohAu@bac69-8-88-165-4-152.fbx.proxad.net) has quit (Quit: LiohAu)
2014-09-01 15:49:27	cbreak	codebrainz: you're leaking memory left and right :)
2014-09-01 15:50:06	codebrainz	in real life derived is a shared_ptr<struct ::HWND__>
2014-09-01 15:50:24	cbreak	struct?!
2014-09-01 15:50:26	cbreak	what's that, C?
2014-09-01 15:50:28	codebrainz	erm, s/derived/resource/
2014-09-01 15:50:48	◀▬▬	jsoft_ (~jsoft@unaffiliated/jsoft) has quit (Ping timeout: 245 seconds)
2014-09-01 15:50:49	cbreak	and double underscore :/ bad choice of names, that's reserved for the compiler afaik
2014-09-01 15:50:53	codebrainz	cbreak, yeah, it's from a C header, and i find putting struct reminds me of that
2014-09-01 15:51:13	K-ballo	er, except that's an invalid identifier for you to use :P
2014-09-01 15:51:45	Griwes	!reserved
2014-09-01 15:51:46	nolyc	You are not allowed to create any name which: 1) contains two consecutive underscores, 2) begins with an underscore followed by an uppercase letter or 3) begins with an underscore and is in the global namespace ([lib.requirements]/[requirements]). Literal suffixes are an exception and must start with an underscore.
2014-09-01 15:51:59	codebrainz	tell microsoft
2014-09-01 15:52:16	codebrainz	though I'm pretty sure they put those underscores to mean "don't use this" :)
2014-09-01 15:52:18	K-ballo	codebrainz: no, I tell you, you should be using HWND
2014-09-01 15:52:19	cbreak	those people again?! They can't write valid C++ :(
2014-09-01 15:52:23	codebrainz	except shared_ptr disagrees
2014-09-01 15:53:16	▬▬▶	Plasmastar (Plasma@unaffiliated/plasmastar) has joined ##c++
2014-09-01 15:53:16	Griwes	codebrainz, I am like half sure that on windows, microsoft is the implementation (at least that's their premise)
2014-09-01 15:53:30	◀▬▬	TomyLobo (~TomyLobo@91.65.115.103) has quit (Quit: Standby mode...)
2014-09-01 15:53:40	Griwes	so they can really have _M__ shit everywhere they want
2014-09-01 15:53:43	Griwes	oh wait, _M__ is gcc
2014-09-01 15:53:45	codebrainz	true enough
2014-09-01 15:53:46	Griwes	I forgot
2014-09-01 15:54:08	cbreak	Griwes: compiler != platform api
2014-09-01 15:55:11	Griwes	a standpoint where they assume their library is the implementation and claim that is 100% correct standard-wise is sound
2014-09-01 15:55:30	◀▬▬	sphenxes (~sphenxes@91-119-94-123.dynamic.xdsl-line.inode.at) has quit (Quit: Leaving)
2014-09-01 15:56:04	codebrainz	either way *I* shouldn't be using that type name :)
2014-09-01 15:56:08	--	irc: disconnected from server
2014-09-01 15:57:22	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-01 15:57:22	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-01 15:57:22	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-01 15:57:22	--	Channel ##c++: 467 nicks (0 ops, 0 voices, 467 normals)
2014-09-01 15:57:23	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-01 15:57:35	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-01 15:58:05	K-ballo	a quick hack is std::remove_ptr<HWND>::type, but a proper way would be to specify a custom deleter with a pointer type
2014-09-01 15:58:27	▬▬▶	txomon|home (~txomon@unaffiliated/txomon) has joined ##c++
2014-09-01 15:58:39	cbreak	well, you'll need a custom deleter anyway
2014-09-01 15:58:46	cbreak	considering you can't new those HWND thingies
2014-09-01 15:59:12	K-ballo	sorry, meant a custom deleter type
2014-09-01 16:00:11	codebrainz	yeah, i just made a lambda that calls DestroyWindow() for deleter
2014-09-01 16:00:20	ville	is that resource wrapper making progress?
2014-09-01 16:00:25	K-ballo	that's not what I meant
2014-09-01 16:01:26	davidstone	The general replacement for raw owning pointers should be std::unique_ptr, not std::shared_ptr
2014-09-01 16:01:30	davidstone	shared_ptr is way overused
2014-09-01 16:01:38	◀▬▬	kurahaupo (~kurahaupo@118.148.189.190) has quit (Ping timeout: 245 seconds)
2014-09-01 16:02:16	codebrainz	it's shared though
2014-09-01 16:02:27	codebrainz	like I want to have different stuff sharing this pointer
2014-09-01 16:02:52	codebrainz	just copy the wrapper class around by value and when last reference disappears, delete the resource
2014-09-01 16:03:01	ville	davidstone: that claim is only true if you are in a domain where you see mostly unique ownership. if general was meant to indicate frequency
2014-09-01 16:03:39	davidstone	I'm saying that structured code naturally leads to unique ownership in most situations
2014-09-01 16:03:55	ville	davidstone: i would agree if you rephrase that std::unique_ptr should be the first choice and only move to std::shared_ptr if unique doesn't hack it
2014-09-01 16:04:06	◀▬▬	hazzadous (~harrywaye@128.127.31.17) has quit (Quit: hazzadous)
2014-09-01 16:04:13	davidstone	I would agree with that
2014-09-01 16:04:26	davidstone	And further add that you should consider restructuring your code so that std::unique_ptr does work
2014-09-01 16:04:56	◀▬▬	paullik (~paullik@unaffiliated/paullik) has quit (Remote host closed the connection)
2014-09-01 16:05:33	◀▬▬	scai (~scai@pD9EA662A.dip0.t-ipconnect.de) has left ##c++ ("[IRSSI]")
2014-09-01 16:06:03	ville	davidstone: you were the c++now bounded integer guy? looks pretty good. haven't put it to use yet though.
2014-09-01 16:06:12	davidstone	Yes, thank you
2014-09-01 16:06:19	▬▬▶	zwer (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-09-01 16:06:53	▬▬▶	thejohnfreeman (~Thunderbi@gzac12-mdf2-1.aoa.twosigma.com) has joined ##c++
2014-09-01 16:07:10	◀▬▬	ideletemyself (~delete@24-121-244-192.npg.sta.suddenlink.net) has quit (Remote host closed the connection)
2014-09-01 16:07:17	▬▬▶	Kelsie (~Kelsie@unaffiliated/kelsie) has joined ##c++
2014-09-01 16:08:09	▬▬▶	thejohnfreeman1 (~Thunderbi@gzac12-mdf2-1.aoa.twosigma.com) has joined ##c++
2014-09-01 16:08:31	◀▬▬	thejohnfreeman (~Thunderbi@gzac12-mdf2-1.aoa.twosigma.com) has quit (Read error: Connection reset by peer)
2014-09-01 16:09:33	▬▬▶	mrevil (~mrevil@c-76-126-201-83.hsd1.ca.comcast.net) has joined ##c++
2014-09-01 16:09:43	◀▬▬	Kelsie|2 (~Kelsie@unaffiliated/kelsie) has quit (Ping timeout: 240 seconds)
2014-09-01 16:09:59	◀▬▬	Mio-chan (~Mio-chan@unaffiliated/mio-chan) has quit (Read error: Connection reset by peer)
2014-09-01 16:10:35	▬▬▶	newbiz (~newbiz@116.166.190.90.dyn.estpak.ee) has joined ##c++
2014-09-01 16:11:21	▬▬▶	bollullera (~ana@95.63.152.106) has joined ##c++
2014-09-01 16:12:12	◀▬▬	newbiz (~newbiz@116.166.190.90.dyn.estpak.ee) has quit (Remote host closed the connection)
2014-09-01 16:12:49	▬▬▶	Bitani (~zmcgohan@dhcp-164-107-203-146.osuwireless.ohio-state.edu) has joined ##c++
2014-09-01 16:13:31	◀▬▬	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has quit (Remote host closed the connection)
2014-09-01 16:16:11	▬▬▶	desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-09-01 16:16:34	◀▬▬	PlasmaHH (~kvirc@speedy.projectiwear.org) has quit (Ping timeout: 260 seconds)
2014-09-01 16:16:49	◀▬▬	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has quit (Ping timeout: 264 seconds)
2014-09-01 16:17:25	◀▬▬	HeTo (henkka@2002:5eed:4417:1::24) has quit (Read error: Connection reset by peer)
2014-09-01 16:17:31	▬▬▶	HeTo (henkka@2002:5eed:4417:1::24) has joined ##c++
2014-09-01 16:21:41	▬▬▶	botcrusher (46365a1c@gateway/web/freenode/ip.70.54.90.28) has joined ##c++
2014-09-01 16:22:20	botcrusher	hello, is anyone else having issues with the beep() function in windows?
2014-09-01 16:22:50	botcrusher	before you ask i am using windows 8, so yes the function does work
2014-09-01 16:23:12	botcrusher	it's just that it makes these popping noises after producing a tone
2014-09-01 16:23:49	Oxyd	!stdcpp beep()
2014-09-01 16:23:50	nolyc	Standard C++ has no notion of `beep()', so you must be talking about some specific OS- or library API (or tool), which is beyond the scope of this channel (which focuses on standard C++).
2014-09-01 16:24:25	◀▬▬	noTHD (~noTHD@77.71.97.108) has quit (Read error: Connection reset by peer)
2014-09-01 16:25:07	▬▬▶	davek (~davek@unaffiliated/tracekill) has joined ##c++
2014-09-01 16:25:26	◀▬▬	io2 (~io2@unaffiliated/irrequietus) has quit (Ping timeout: 260 seconds)
2014-09-01 16:26:24	ville	V-ille: how about providing std::begin()/std::end() for std::pair and std::tuple? possibly enable-if them for homogenous ones? then you could do range-for on std::map::equal_range()
2014-09-01 16:27:11	◀▬▬	mrevil (~mrevil@c-76-126-201-83.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-09-01 16:28:21	det	ville, I beleive std::pair had begin/end at some point and was removed by the committee intentionally
2014-09-01 16:28:49	det	The rationale being that a pair of iterators is not necessarily a range
2014-09-01 16:29:08	◀▬▬	Hannibal_Smith (~Hannibal_@host251-74-dynamic.53-79-r.retail.telecomitalia.it) has quit (Quit: Sto andando via)
2014-09-01 16:29:14	o11c	would it be backwards-compatible enough to create a subclass of std::pair and redefine the functions in terms of it?
2014-09-01 16:29:19	◀▬▬	FreezingCold (~FreezingC@CPE602ad06bea2a-CM602ad06bea27.cpe.net.cable.rogers.com) has quit (Ping timeout: 240 seconds)
2014-09-01 16:29:53	▬▬▶	lalaland1125 (~lalaland1@128.42.80.218) has joined ##c++
2014-09-01 16:30:17	ville	o11c: why not non-member ones just to get range-for working
2014-09-01 16:30:20	▬▬▶	Chell0 (~chatzilla@c-68-40-167-130.hsd1.mi.comcast.net) has joined ##c++
2014-09-01 16:30:37	Griwes	because a pair of pointers is not a range
2014-09-01 16:30:46	Griwes	it's a silly range-ish hack
2014-09-01 16:31:11	Griwes	oh wait, you want to iterate over elements of the pair itself?
2014-09-01 16:31:12	o11c	it's a mistake to use std::pair in pretty much every place it's used in the library
2014-09-01 16:31:22	--	RazielZ is now known as Raziel
2014-09-01 16:31:32	o11c	maybe literally every place even
2014-09-01 16:31:40	K-ballo	they already regret having used pair for map
2014-09-01 16:32:24	▬▬▶	vl4kn0 (~vl4kn0@bband-dyn36.178-41-101.t-com.sk) has joined ##c++
2014-09-01 16:32:29	ville	Griwes: good question. i thought i did but no i wanted to iterate over the "real" result of equal_range().
2014-09-01 16:32:49	ville	V-ille: nevermind. brain malfunction.
2014-09-01 16:35:08	ville	guess you have to write a rangefy() function that returns a proxy and do for(auto&& x : rangefy(m.equal_range(k)) {
2014-09-01 16:35:32	davidstone	Presumably called make_range
2014-09-01 16:35:50	◀▬▬	Jeeb_ (~Jeeb_@u193-11-162-37.studentnatet.se) has quit (Read error: Connection reset by peer)
2014-09-01 16:36:42	◀▬▬	Jackneill (~Jackneill@unaffiliated/jackneill) has quit (Remote host closed the connection)
2014-09-01 16:37:08	◀▬▬	thejohnfreeman1 (~Thunderbi@gzac12-mdf2-1.aoa.twosigma.com) has quit (Ping timeout: 245 seconds)
2014-09-01 16:38:44	▬▬▶	FreezingCold (~FreezingC@CPE602ad06bea2a-CM602ad06bea27.cpe.net.cable.rogers.com) has joined ##c++
2014-09-01 16:41:26	▬▬▶	lihp (~utilita@ip1886254f.dynamic.kabel-deutschland.de) has joined ##c++
2014-09-01 16:41:55	◀▬▬	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-09-01 16:43:08	▬▬▶	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has joined ##c++
2014-09-01 16:43:43	◀▬▬	vl4kn0 (~vl4kn0@bband-dyn36.178-41-101.t-com.sk) has quit (Ping timeout: 245 seconds)
2014-09-01 16:44:33	◀▬▬	kurahaupo1 (~Kurahaupo@192.208.252.27.dyn.cust.vf.net.nz) has quit (Ping timeout: 245 seconds)
2014-09-01 16:45:06	--	irc: disconnected from server
2014-09-01 16:49:43	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-01 16:49:43	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-01 16:49:43	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-01 16:49:43	--	Channel ##c++: 463 nicks (0 ops, 0 voices, 463 normals)
2014-09-01 16:49:43	--	Notice(rajaniemi.freenode.net): [freenode-info] channel trolls and no channel staff around to help? please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
2014-09-01 16:49:43	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-01 16:49:52	◀▬▬	k0nichiwa (~jdoe@ip-64-134-184-40.public.wayport.net) has quit (Ping timeout: 255 seconds)
2014-09-01 16:49:54	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-01 16:52:40	▬▬▶	BeachedWhale (~Beached@216-26-197-33.dynamic.tbaytel.net) has joined ##c++
2014-09-01 16:52:46	BeachedWhale	If I have a sink method e.g void append( T value ) { m_value = std::move( value ); }  can I declare it noexcept or would a throw in the possible copy constructor call on T be an issue.  Or does that happen before it comes in play?
2014-09-01 16:53:04	o11c	that happens before
2014-09-01 16:53:16	Oxyd	You can declare it noexcept if that is what you want.
2014-09-01 16:53:45	BeachedWhale	Thanks, wasn't sure about how that would play out
2014-09-01 16:53:55	ville	your move assignment is likely noexcept anyway, so you should be alright
2014-09-01 16:53:59	◀▬▬	deanrock0 (~deanrock0@cpe-77.38.57.189.cable.t-1.si) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-09-01 16:54:08	◀▬▬	monique (~monique@unaffiliated/monique) has quit (Quit: monique)
2014-09-01 16:54:24	Oxyd	You could also use the noexcept operator to make it noexcept iff the op = is noexcept.
2014-09-01 16:54:32	BeachedWhale	Yeah, it's the copy that often can though
2014-09-01 16:54:36	▬▬▶	BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has joined ##c++
2014-09-01 16:54:49	o11c	I think he means if the *caller* implicitly calls the copy ctor
2014-09-01 16:55:56	BeachedWhale	so a T somvalue = somethign; append( somevalue )
2014-09-01 16:56:12	◀▬▬	FunkyAss (~Funky@unaffiliated/funkyass) has quit (Quit: Make my Funk the P-Funk)
2014-09-01 16:56:13	BeachedWhale	if T.T(const T&) throws
2014-09-01 16:56:43	BeachedWhale	somvalue.T(const T& ) I mean
2014-09-01 16:57:08	ville	you're ok. the append(x) copy of 'x' occurs outside the append() function
2014-09-01 16:57:20	BeachedWhale	thanks
2014-09-01 16:57:41	▬▬▶	heedypo2 (~heedypo@2.222.221.106) has joined ##c++
2014-09-01 16:59:09	◀▬▬	heedypo1 (~heedypo@2.216.103.118) has quit (Ping timeout: 240 seconds)
2014-09-01 16:59:51	▬▬▶	FreezingCold (~FreezingC@CPE602ad06bea2a-CM602ad06bea27.cpe.net.cable.rogers.com) has joined ##c++
2014-09-01 17:00:49	▬▬▶	thejohnfreeman (~Thunderbi@gzac12-mdf2-1.aoa.twosigma.com) has joined ##c++
2014-09-01 17:01:40	◀▬▬	clynamen (~clynamen@host94-48-dynamic.53-82-r.retail.telecomitalia.it) has quit (Remote host closed the connection)
2014-09-01 17:02:24	▬▬▶	vl4kn0 (~vl4kn0@bband-dyn36.178-41-101.t-com.sk) has joined ##c++
2014-09-01 17:04:59	▬▬▶	asmx (cod3r@shell.uw-team.org) has joined ##c++
2014-09-01 17:05:29	◀▬▬	dh (~dh@bsd.ee) has quit (Disconnected by services)
2014-09-01 17:06:28	▬▬▶	Balzy_ (~Balzy@host51-163-dynamic.14-87-r.retail.telecomitalia.it) has joined ##c++
2014-09-01 17:08:59	hs_	why bother with noexcept if not on a move ctor/assignment?
2014-09-01 17:09:04	◀▬▬	thejohnfreeman (~Thunderbi@gzac12-mdf2-1.aoa.twosigma.com) has quit (Read error: Connection reset by peer)
2014-09-01 17:09:10	hs_	if it does throw you get a terminate
2014-09-01 17:09:22	▬▬▶	thejohnfreeman (~Thunderbi@gzac12-mdf2-1.aoa.twosigma.com) has joined ##c++
2014-09-01 17:09:23	hs_	what's the benefit..?
2014-09-01 17:10:20	Eelis	it tells callers what to expect
2014-09-01 17:10:24	Eelis	i.e. no exceptions
2014-09-01 17:11:50	▬▬▶	io2 (~io2@unaffiliated/irrequietus) has joined ##c++
2014-09-01 17:12:02	▬▬▶	ketamin (~Thunderbi@131.178.200.64) has joined ##c++
2014-09-01 17:12:13	▬▬▶	TommyC (~TommyC@unaffiliated/sepulchralbloom) has joined ##c++
2014-09-01 17:12:17	◀▬▬	stealth`` (~stealth@p5B02DFD8.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2014-09-01 17:13:19	Bitwise	Is C++11 only between the compiler and I or does it affect the platform requirements?
2014-09-01 17:14:03	Xark	Bitwise: I believe it is just a "compiler thing".
2014-09-01 17:14:08	◀▬▬	slassh (~slassh@94.9.255.214) has quit (Ping timeout: 245 seconds)
2014-09-01 17:14:30	skfax	Kinda fun coding with c++14.. but if people struggled with const correctnes before - surely people will have issues getting constness / noexcept-ness and constexpr-ness of functions right :)
2014-09-01 17:14:43	micom	it depends, i guess it would be hard to use std::thread on systems where there is no threads:)
2014-09-01 17:15:35	Xark	micom: It would make it a more tricky implementation. :)
2014-09-01 17:16:11	Oxyd	It wouldn't be hard, it'd simply throw.
2014-09-01 17:16:20	▬▬▶	xarxer (~kvirc@94.254.51.212) has joined ##c++
2014-09-01 17:16:59	Oxyd	The std::thread ctor may throw if "unable to start the new thread" -- if the system doesn't allow threads, that simply means "always". :)
2014-09-01 17:19:33	micom	that's interesting, every day something new regarding c++: :)
2014-09-01 17:20:53	▬▬▶	tworkin (~Adium@97.77.193.138) has joined ##c++
2014-09-01 17:21:12	◀▬▬	tworkin (~Adium@97.77.193.138) has quit (Client Quit)
2014-09-01 17:24:24	▬▬▶	LiohAu (~LiohAu@bac69-8-88-165-4-152.fbx.proxad.net) has joined ##c++
2014-09-01 17:24:54	▬▬▶	jsoft (~jsoft@unaffiliated/jsoft) has joined ##c++
2014-09-01 17:25:30	▬▬▶	hazzadous (~harrywaye@host-92-24-92-167.ppp.as43234.net) has joined ##c++
2014-09-01 17:28:05	▬▬▶	nug700 (~nug700@174-26-158-8.phnx.qwest.net) has joined ##c++
2014-09-01 17:28:16	▬▬▶	JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-09-01 17:30:19	▬▬▶	FreezingAlt (~FreezingC@CPE602ad06bea2a-CM602ad06bea27.cpe.net.cable.rogers.com) has joined ##c++
2014-09-01 17:33:18	◀▬▬	FreezingCold (~FreezingC@CPE602ad06bea2a-CM602ad06bea27.cpe.net.cable.rogers.com) has quit (Ping timeout: 245 seconds)
2014-09-01 17:33:51	◀▬▬	Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has quit (Quit: ZNC - http://znc.sourceforge.net)
2014-09-01 17:34:22	◀▬▬	ketamin (~Thunderbi@131.178.200.64) has quit (Remote host closed the connection)
2014-09-01 17:34:42	▬▬▶	ketamin (~Thunderbi@131.178.200.64) has joined ##c++
2014-09-01 17:35:51	◀▬▬	jpcanepa (c81ba7f4@gateway/web/freenode/ip.200.27.167.244) has quit (Ping timeout: 246 seconds)
2014-09-01 17:36:02	▬▬▶	Yepoleb_ (~quassel@178-191-130-148.adsl.highway.telekom.at) has joined ##c++
2014-09-01 17:36:02	--	Yepoleb is now known as Guest43224
2014-09-01 17:36:02	--	Yepoleb_ is now known as Yepoleb
2014-09-01 17:37:11	◀▬▬	micom (~micom@unaffiliated/micom) has quit (Remote host closed the connection)
2014-09-01 17:38:42	◀▬▬	Guest43224 (~quassel@91-115-114-48.adsl.highway.telekom.at) has quit (Ping timeout: 260 seconds)
2014-09-01 17:42:34	◀▬▬	yin_nadie (~nadie@85.136.155.93.dyn.user.ono.com) has quit (Remote host closed the connection)
2014-09-01 17:42:54	◀▬▬	FreezingAlt (~FreezingC@CPE602ad06bea2a-CM602ad06bea27.cpe.net.cable.rogers.com) has quit (Ping timeout: 260 seconds)
2014-09-01 17:43:09	▬▬▶	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has joined ##c++
2014-09-01 17:43:23	◀▬▬	Anodl (~Anodl@p5DC5A323.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-09-01 17:43:41	▬▬▶	gravitation (~gravitati@rrcs-24-213-169-150.nyc.biz.rr.com) has joined ##c++
2014-09-01 17:43:41	▬▬▶	Zifre (~Zifre@unaffiliated/zifre) has joined ##c++
2014-09-01 17:45:35	◀▬▬	Bitani (~zmcgohan@dhcp-164-107-203-146.osuwireless.ohio-state.edu) has left ##c++
2014-09-01 17:46:44	◀▬▬	ketamin (~Thunderbi@131.178.200.64) has quit (Read error: Connection reset by peer)
2014-09-01 17:47:28	▬▬▶	ketamin (~Thunderbi@131.178.200.64) has joined ##c++
2014-09-01 17:49:43	◀▬▬	LBV_User (~leonardo@177.2.128.75) has quit (Quit: Bye all :))
2014-09-01 17:50:11	BeachedWhale	doesn't constexpr imply noexcept?
2014-09-01 17:50:30	Oxyd	No.
2014-09-01 17:51:04	◀▬▬	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 255 seconds)
2014-09-01 17:51:31	◀▬▬	jsoft (~jsoft@unaffiliated/jsoft) has quit (Ping timeout: 255 seconds)
2014-09-01 17:51:56	Oxyd	geordi: constexpr int foo(int i) { return i > 0 ? i : throw -7; } int main() { constexpr int i = foo(5); cout << i << ' '; try { foo(0); } catch (int j) { cout << j; } }
2014-09-01 17:51:56	geordi	5 -7
2014-09-01 17:52:17	◀▬▬	Rudolf (~rodolfo@unaffiliated/rudolf) has quit (Quit: [IRSSI])
2014-09-01 17:52:19	BeachedWhale	curious, how would it be a constexp with the possibility of throwing
2014-09-01 17:52:27	▬▬▶	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-09-01 17:52:31	moonchild	hmmm
2014-09-01 17:52:35	K-ballo	if it throws then it's not a constant expression, but it can still be a constexpr function
2014-09-01 17:52:37	Oxyd	Just like I just showed.
2014-09-01 17:53:01	Oxyd	Recall that constexpr functions may still be called outside of constant expressions.
2014-09-01 17:53:24	BeachedWhale	would it ever evaluate at compile time
2014-09-01 17:53:25	K-ballo	the only requirement on a constexpr function is that there exist at least one case for which the function can be called in a constant expression
2014-09-01 17:53:32	Oxyd	Yes: In a constant expression.
2014-09-01 17:54:12	BeachedWhale	ah i see now
2014-09-01 17:54:39	▬▬▶	Frisky-Ka (SomeWhere@2.219.67.222) has joined ##c++
2014-09-01 17:54:55	◀▬▬	gopalmer (~quassel@cpc11-trow6-2-0-cust119.18-1.cable.virginm.net) has quit (Remote host closed the connection)
2014-09-01 17:57:22	◀▬▬	FriskyKat (SomeWhere@94.9.8.115) has quit (Ping timeout: 255 seconds)
2014-09-01 17:58:42	▬▬▶	FreezingAlt (~FreezingC@CPE602ad06bea2a-CM602ad06bea27.cpe.net.cable.rogers.com) has joined ##c++
2014-09-01 18:00:20	▬▬▶	rnickb (~rnickb@pool-108-30-50-78.nycmny.fios.verizon.net) has joined ##c++
2014-09-01 18:01:21	◀▬▬	thejohnfreeman (~Thunderbi@gzac12-mdf2-1.aoa.twosigma.com) has quit (Read error: Connection reset by peer)
2014-09-01 18:01:58	▬▬▶	thejohnfreeman (~Thunderbi@gzac12-mdf2-1.aoa.twosigma.com) has joined ##c++
2014-09-01 18:02:19	◀▬▬	p|q (~plq@212.252.65.190) has quit (Ping timeout: 255 seconds)
2014-09-01 18:02:29	◀▬▬	ambro718 (~ambro@gentoo/contributor/ambro718) has quit (Ping timeout: 245 seconds)
2014-09-01 18:02:52	◀▬▬	OldManToTo (OldManToTo@164.8.213.44) has quit (Read error: Connection reset by peer)
2014-09-01 18:03:48	◀▬▬	MrFlibble (LunarJetma@05400825.skybroadband.com) has left ##c++
2014-09-01 18:05:30	--	Frisky-Ka is now known as FriskyKat
2014-09-01 18:05:32	▬▬▶	kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has joined ##c++
2014-09-01 18:05:53	▬▬▶	Bludot (uid26982@gateway/web/irccloud.com/x-zeuhsgkklffjmpun) has joined ##c++
2014-09-01 18:05:57	◀▬▬	yrter (~yrter@unaffiliated/yrter) has quit (Quit: yrter)
2014-09-01 18:07:29	◀▬▬	jitsuin (~chatzilla@cpe-23-240-223-21.socal.res.rr.com) has quit (Ping timeout: 245 seconds)
2014-09-01 18:07:51	▬▬▶	W0rmDr1nk (~wormdrink@unaffiliated/wormdrink) has joined ##c++
2014-09-01 18:08:30	▬▬▶	Blonga (~Blonga@gateway/tor-sasl/blonga) has joined ##c++
2014-09-01 18:09:09	◀▬▬	FreezingAlt (~FreezingC@CPE602ad06bea2a-CM602ad06bea27.cpe.net.cable.rogers.com) has quit (Ping timeout: 245 seconds)
2014-09-01 18:10:43	◀▬▬	zwer (~zwer@gateway/tor-sasl/zwer) has quit (Remote host closed the connection)
2014-09-01 18:11:12	▬▬▶	zwer (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-09-01 18:11:31	Jupelius	!valgrind
2014-09-01 18:11:32	nolyc	valgrind is http://valgrind.org - a program execution supervisor for x86, x86_64, ARM and PPC Linux that can debug heap memory usage errors like invalid accesses and memory leaks efficiently. It also contains a cache-, a heap- and a call-graph profiler.
2014-09-01 18:12:07	◀▬▬	LiohAu (~LiohAu@bac69-8-88-165-4-152.fbx.proxad.net) has quit (Quit: LiohAu)
2014-09-01 18:12:21	▬▬▶	Dreadnaught (~Dreadnaug@tlug/member/kulrak) has joined ##c++
2014-09-01 18:12:26	◀▬▬	TheFuzzball (~TheFuzzba@cpc4-ward10-2-0-cust737.10-2.cable.virginm.net) has quit (Quit: Computer has gone to sleep.)
2014-09-01 18:13:32	◀▬▬	ToApolytoXaos (~ToApolyto@46.21.62.128) has quit (Quit: Leaving)
2014-09-01 18:15:13	▬▬▶	p|q (~plq@212.252.65.131) has joined ##c++
2014-09-01 18:15:20	◀▬▬	BlaXpirit (~blaxpirit@161-133-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-09-01 18:16:14	▬▬▶	vocodork (~vocoder@94-227-99-249.access.telenet.be) has joined ##c++
2014-09-01 18:16:44	vocodork	when creating a shared_ptr with a custom deleter, is that deleter passed on when assigned to another shared_ptr?
2014-09-01 18:16:48	◀▬▬	lihp (~utilita@ip1886254f.dynamic.kabel-deutschland.de) has quit (Remote host closed the connection)
2014-09-01 18:17:28	▬▬▶	foogle (~foogle@gateway/tor-sasl/foogle) has joined ##c++
2014-09-01 18:17:33	▬▬▶	jitsuin (~chatzilla@cpe-23-240-223-21.socal.res.rr.com) has joined ##c++
2014-09-01 18:18:01	Nik05	vocodork yes it stays known
2014-09-01 18:18:03	◀▬▬	gelignite (~gelignite@i528C31D6.versanet.de) has quit (Quit: http://bit.ly/nkczDT)
2014-09-01 18:18:52	▬▬▶	FreezingAlt (~FreezingC@CPE602ad06bea2a-CM602ad06bea27.cpe.net.cable.rogers.com) has joined ##c++
2014-09-01 18:19:28	◀▬▬	oleo (~oleo@xdsl-78-35-183-253.netcologne.de) has quit (Read error: Connection reset by peer)
2014-09-01 18:19:40	▬▬▶	yin_nadie (~nadie@85.136.155.93.dyn.user.ono.com) has joined ##c++
2014-09-01 18:20:14	▬▬▶	surd (~surd@unaffiliated/surd) has joined ##c++
2014-09-01 18:20:19	◀▬▬	Andy-chan2 (~Andy-chan@xdsl-87-78-151-98.netcologne.de) has quit (Ping timeout: 255 seconds)
2014-09-01 18:20:36	◀▬▬	plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Remote host closed the connection)
2014-09-01 18:21:50	▬▬▶	oleo (~oleo@xdsl-78-35-131-58.netcologne.de) has joined ##c++
2014-09-01 18:23:02	◀▬▬	txomon|home (~txomon@unaffiliated/txomon) has quit (Ping timeout: 260 seconds)
2014-09-01 18:23:02	◀▬▬	davidstone (~david@174-16-211-60.hlrn.qwest.net) has quit (Ping timeout: 260 seconds)
2014-09-01 18:23:33	Nik05	vocodork it probably does some polymorphism to implement share_ptr
2014-09-01 18:23:59	▬▬▶	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has joined ##c++
2014-09-01 18:24:49	Nik05	i think Stehpan T Lavavej did a video about shared_ptr onces and how he(VS) implemented it
2014-09-01 18:25:04	◀▬▬	FreezingAlt (~FreezingC@CPE602ad06bea2a-CM602ad06bea27.cpe.net.cable.rogers.com) has quit (Quit: Out)
2014-09-01 18:25:22	▬▬▶	FreezingAlt (~FreezingC@CPE602ad06bea2a-CM602ad06bea27.cpe.net.cable.rogers.com) has joined ##c++
2014-09-01 18:25:57	▬▬▶	Cymage (~james@unaffiliated/cymage) has joined ##c++
2014-09-01 18:25:58	◀▬▬	Smjert (~Smjert@host74-75-dynamic.20-79-r.retail.telecomitalia.it) has quit
2014-09-01 18:27:09	◀▬▬	thejohnfreeman (~Thunderbi@gzac12-mdf2-1.aoa.twosigma.com) has quit (Ping timeout: 245 seconds)
2014-09-01 18:28:44	▬▬▶	davidstone (~david@174-29-76-211.hlrn.qwest.net) has joined ##c++
2014-09-01 18:29:51	◀▬▬	Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has quit (Read error: Connection reset by peer)
2014-09-01 18:29:59	--	irc: disconnected from server
2014-09-01 18:30:33	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-01 18:30:33	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-01 18:30:33	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-01 18:30:33	--	Channel ##c++: 459 nicks (0 ops, 0 voices, 459 normals)
2014-09-01 18:30:34	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-01 18:30:45	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-01 18:32:32	◀▬▬	rendar (~I@host39-6-dynamic.7-79-r.retail.telecomitalia.it) has quit
2014-09-01 18:33:01	▬▬▶	immibis (~ChatZill1@122-59-227-101.jetstream.xtra.co.nz) has joined ##c++
2014-09-01 18:33:43	◀▬▬	fr33domlover (~fr33domlo@fsf/member/fr33domlover) has quit (Quit: fr33domlover)
2014-09-01 18:36:31	◀▬▬	BeachedWhale (~Beached@216-26-197-33.dynamic.tbaytel.net) has quit (Ping timeout: 255 seconds)
2014-09-01 18:37:35	▬▬▶	Gluesticky (~nobody@unaffiliated/gluesticky) has joined ##c++
2014-09-01 18:38:15	Bludot	Hi. I have a class and want to use a variable defined outside of the class. how is this possible?
2014-09-01 18:39:28	Eelis	geordi: int i = 3; struct X { void f() { cout << i; } };  int main() { X x; x.f(); }
2014-09-01 18:39:28	Nik05	can you explain more? what does the variable have to do with the class?
2014-09-01 18:39:28	geordi	3
2014-09-01 18:40:23	◀▬▬	mrevil (~mrevil@c-76-126-201-83.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-09-01 18:40:43	hs_	the variable is in a scope that is visible to struct X
2014-09-01 18:41:43	▬▬▶	mrevil (~mrevil@2601:9:5080:948:9ca5:7674:3cf8:81ae) has joined ##c++
2014-09-01 18:44:45	◀▬▬	skfax (51a6ee90@gateway/web/freenode/ip.81.166.238.144) has quit (Quit: Page closed)
2014-09-01 18:46:36	◀▬▬	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-09-01 18:47:03	▬▬▶	kailoAtWork (~kailoAtWo@cpe-75-83-169-163.socal.res.rr.com) has joined ##c++
2014-09-01 18:48:56	▬▬▶	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-09-01 18:49:15	▬▬▶	titanium17 (~titanium1@2604:6000:6440:2200:9566:ea55:482a:d469) has joined ##c++
2014-09-01 18:49:46	▬▬▶	Galik_ (~galik@unaffiliated/galik) has joined ##c++
2014-09-01 18:50:34	▬▬▶	mangekyo (~mangekyo@1.156.114.75) has joined ##c++
2014-09-01 18:50:35	◀▬▬	yin_nadie (~nadie@85.136.155.93.dyn.user.ono.com) has quit (Remote host closed the connection)
2014-09-01 18:51:55	◀▬▬	jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has quit (Quit: leaving)
2014-09-01 18:53:26	◀▬▬	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-09-01 18:53:39	◀▬▬	dostoyevsky (~sck@n096h062.rs.de.inter.net) has quit (Ping timeout: 240 seconds)
2014-09-01 18:53:46	▬▬▶	dostoyevsky (~sck@n096h062.rs.de.inter.net) has joined ##c++
2014-09-01 18:55:29	◀▬▬	seishun (~Kakera@46.109.100.133) has quit (Ping timeout: 245 seconds)
2014-09-01 18:55:54	◀▬▬	abdoo (~north_alg@105.108.82.162) has quit (Quit: Quitte)
2014-09-01 18:57:26	▬▬▶	seishun (~Kakera@46.109.100.133) has joined ##c++
2014-09-01 18:57:34	▬▬▶	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has joined ##c++
2014-09-01 18:57:38	Bludot	ok sorry for not replying something came up.
2014-09-01 18:57:48	titanium17	hi guys
2014-09-01 18:58:00	titanium17	new to irc, new to usa, and a first year grad student here
2014-09-01 18:58:15	Bludot	my laptop is barley running with the 5 applications i have open :/
2014-09-01 18:58:19	titanium17	just got this irc thing setup!
2014-09-01 18:58:43	titanium17	phew! ill probably be bombarding you all with questions :P
2014-09-01 18:59:03	▬▬▶	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has joined ##c++
2014-09-01 18:59:06	Bludot	gotta wait for VS2013 to load again since I closed it for another task. Ill pastbin my code in a sec
2014-09-01 19:01:04	◀▬▬	kailoAtWork (~kailoAtWo@cpe-75-83-169-163.socal.res.rr.com) has quit (Quit: This computer has gone to sleep)
2014-09-01 19:02:05	Bludot	ugh.. VS not responding :(
2014-09-01 19:02:22	▬▬▶	kurahaupo (~Kurahaupo@192.208.252.27.dyn.cust.vf.net.nz) has joined ##c++
2014-09-01 19:02:30	◀▬▬	io2 (~io2@unaffiliated/irrequietus) has quit (Quit: ...take irc away, what are you? genius, billionaire, playboy, philanthropist)
2014-09-01 19:02:45	▬▬▶	nszceta (~nszceta@c-71-206-246-109.hsd1.pa.comcast.net) has joined ##c++
2014-09-01 19:06:52	▬▬▶	voidah (~voidah@207.96.245.30) has joined ##c++
2014-09-01 19:06:58	◀▬▬	armyriad (~armyriad@pool-108-38-230-48.lsanca.fios.verizon.net) has quit (Quit: Leaving)
2014-09-01 19:07:52	▬▬▶	armyriad (~armyriad@198.23.103.79-static.reverse.softlayer.com) has joined ##c++
2014-09-01 19:08:04	Bludot	ok,. heres the paste: http://pastebin.com/KABptg19
2014-09-01 19:08:11	◀▬▬	armyriad (~armyriad@198.23.103.79-static.reverse.softlayer.com) has quit (Client Quit)
2014-09-01 19:08:31	Bludot	I wanna use the variable db in the menu class
2014-09-01 19:09:04	▬▬▶	snakenerd (~Thunderbi@177.133.97.111.dynamic.adsl.gvt.net.br) has joined ##c++
2014-09-01 19:09:36	Bludot	I dont really want to pass the variable though. cause then I have to keep passing it
2014-09-01 19:09:47	Oxyd	Then you can't have what you want.
2014-09-01 19:09:49	Oxyd	!next
2014-09-01 19:09:50	nolyc	Another satisfied customer, next!
2014-09-01 19:09:59	Bludot	:(
2014-09-01 19:10:33	Bludot	FYI that next thing really pisses people off. I'm obviously not satisfied.
2014-09-01 19:10:35	◀▬▬	snakenerd (~Thunderbi@177.133.97.111.dynamic.adsl.gvt.net.br) has quit (Client Quit)
2014-09-01 19:10:43	Oxyd	FYI that's obviously the point.
2014-09-01 19:10:54	Bludot	then don't do it please
2014-09-01 19:11:10	Oxyd	Well, since you asked.
2014-09-01 19:11:21	▬▬▶	armyriad (~armyriad@198.23.103.79-static.reverse.softlayer.com) has joined ##c++
2014-09-01 19:11:21	Bludot	is there a way to add any type in the class when I initialize the menu class?
2014-09-01 19:11:27	Bludot	like a template?
2014-09-01 19:11:40	Oxyd	What do you mean by "add"?
2014-09-01 19:11:52	◀▬▬	mangekyo (~mangekyo@1.156.114.75) has quit
2014-09-01 19:11:58	Bludot	well... include it in the menu class when I initialize it
2014-09-01 19:12:18	▬▬▶	YarnFive8 (YarnFive8@unaffiliated/yarnfive8) has joined ##c++
2014-09-01 19:12:22	Oxyd	So... You want to add a member variable to the menu class?
2014-09-01 19:12:37	Bludot	yes. when I initialize it
2014-09-01 19:13:04	Bludot	obviously I will have something there and it will be NULL if I dont pass anything in the initilization
2014-09-01 19:13:39	Oxyd	Well, you can just add the variable to your class and then initialise it in the constructor.
2014-09-01 19:14:08	Bludot	yeah thats what I was thinking
2014-09-01 19:14:19	◀▬▬	immibis (~ChatZill1@122-59-227-101.jetstream.xtra.co.nz) has quit (Ping timeout: 255 seconds)
2014-09-01 19:14:40	Bludot	thanks
2014-09-01 19:15:20	hs_	Bludot, I suggest ##C++-basic or ##C++-general
2014-09-01 19:15:27	▬▬▶	mangekyo (~mangekyo@1.156.114.75) has joined ##c++
2014-09-01 19:15:33	Bludot	ok
2014-09-01 19:17:56	◀▬▬	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has quit (Ping timeout: 255 seconds)
2014-09-01 19:20:47	◀▬▬	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-09-01 19:21:23	◀▬▬	cbreak (~cbreak@77-58-71-175.dclient.hispeed.ch) has quit (Ping timeout: 260 seconds)
2014-09-01 19:22:00	◀▬▬	voidah (~voidah@207.96.245.30) has quit (Quit: leaving)
2014-09-01 19:25:07	◀▬▬	JamesNZ (~james@fedora/JamesNZ) has quit (Quit: Busying myself...)
2014-09-01 19:27:23	◀▬▬	nfk (~nfk@unaffiliated/nfk) has quit (Quit: yawn)
2014-09-01 19:29:47	◀▬▬	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 260 seconds)
2014-09-01 19:31:13	▬▬▶	fstd_ (~fstd@unaffiliated/fisted) has joined ##c++
2014-09-01 19:33:42	▬▬▶	Ouyang (~alpha@c-98-221-87-9.hsd1.nj.comcast.net) has joined ##c++
2014-09-01 19:34:10	◀▬▬	Bludot (uid26982@gateway/web/irccloud.com/x-zeuhsgkklffjmpun) has left ##c++
2014-09-01 19:34:55	◀▬▬	fstd (~fstd@unaffiliated/fisted) has quit (Ping timeout: 260 seconds)
2014-09-01 19:34:55	--	fstd_ is now known as fstd
2014-09-01 19:35:53	Ouyang	for a beginner should I stick to -std=c++11, or can I coincide my learning with -std=c++14
2014-09-01 19:39:02	▬▬▶	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-09-01 19:39:07	◀▬▬	seishun (~Kakera@46.109.100.133) has quit (Ping timeout: 260 seconds)
2014-09-01 19:41:24	▬▬▶	thejohnfreeman (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has joined ##c++
2014-09-01 19:44:07	◀▬▬	thejohnfreeman (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has quit (Read error: Connection reset by peer)
2014-09-01 19:44:13	▬▬▶	thejohnfreeman1 (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has joined ##c++
2014-09-01 19:46:07	◀▬▬	mangekyo (~mangekyo@1.156.114.75) has quit (Ping timeout: 260 seconds)
2014-09-01 19:46:57	TommyC	If you're doing basic stuff you won't even need -std=
2014-09-01 19:47:27	◀▬▬	Ouyang (~alpha@c-98-221-87-9.hsd1.nj.comcast.net) has quit (Quit: leaving)
2014-09-01 19:48:16	◀▬▬	rnickb (~rnickb@pool-108-30-50-78.nycmny.fios.verizon.net) has quit (Quit: rnickb)
2014-09-01 19:49:05	▬▬▶	SiGe (~SiGe@75-141-108-74.dhcp.mtpk.ca.charter.com) has joined ##c++
2014-09-01 19:49:59	◀▬▬	vl4kn0 (~vl4kn0@bband-dyn36.178-41-101.t-com.sk) has quit (Ping timeout: 245 seconds)
2014-09-01 19:53:19	◀▬▬	SiGe (~SiGe@75-141-108-74.dhcp.mtpk.ca.charter.com) has quit (Ping timeout: 245 seconds)
2014-09-01 19:53:20	▬▬▶	Bitani (~zmcgohan@dhcp-164-107-203-146.osuwireless.ohio-state.edu) has joined ##c++
2014-09-01 19:54:34	◀▬▬	W0rmDr1nk (~wormdrink@unaffiliated/wormdrink) has quit (Quit: Leaving)
2014-09-01 19:54:59	◀▬▬	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 260 seconds)
2014-09-01 19:56:25	◀▬▬	K-ballo (~sonoio@190.190.32.41) has quit (Read error: Connection reset by peer)
2014-09-01 19:56:33	▬▬▶	W0rmDr1nk (~wormdrink@unaffiliated/wormdrink) has joined ##c++
2014-09-01 19:57:54	◀▬▬	Bitani (~zmcgohan@dhcp-164-107-203-146.osuwireless.ohio-state.edu) has quit (Ping timeout: 245 seconds)
2014-09-01 19:59:26	▬▬▶	CJKay[Desktop] (~CJKay@unaffiliated/cjkay) has joined ##c++
2014-09-01 19:59:33	▬▬▶	ryanu (~ryan@c-98-200-198-228.hsd1.tx.comcast.net) has joined ##c++
2014-09-01 20:00:07	◀▬▬	CJKay (~CJKay@unaffiliated/cjkay) has quit (Ping timeout: 260 seconds)
2014-09-01 20:02:06	◀▬▬	ryanu (~ryan@c-98-200-198-228.hsd1.tx.comcast.net) has quit (Changing host)
2014-09-01 20:02:06	▬▬▶	ryanu (~ryan@unaffiliated/ryanu) has joined ##c++
2014-09-01 20:02:15	▬▬▶	Bitani (~zmcgohan@dhcp-164-107-203-146.osuwireless.ohio-state.edu) has joined ##c++
2014-09-01 20:02:57	--	CJKay[Desktop] is now known as CJKay
2014-09-01 20:03:00	◀▬▬	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-09-01 20:05:15	◀▬▬	titanium17 (~titanium1@2604:6000:6440:2200:9566:ea55:482a:d469) has quit (Ping timeout: 260 seconds)
2014-09-01 20:05:22	▬▬▶	vl4kn0 (~vl4kn0@bband-dyn36.178-41-101.t-com.sk) has joined ##c++
2014-09-01 20:05:54	▬▬▶	voidah (~voidah@207.96.245.30) has joined ##c++
2014-09-01 20:08:02	Oxyd	The -std= is good so that he doesn't accidentally do something non-C++.
2014-09-01 20:08:47	◀▬▬	gravitation (~gravitati@rrcs-24-213-169-150.nyc.biz.rr.com) has quit (Ping timeout: 255 seconds)
2014-09-01 20:10:24	◀▬▬	kurahaupo (~Kurahaupo@192.208.252.27.dyn.cust.vf.net.nz) has quit (Ping timeout: 245 seconds)
2014-09-01 20:12:57	▬▬▶	K-ballo (~sonoio@110-136-126-200.fibertel.com.ar) has joined ##c++
2014-09-01 20:13:11	▬▬▶	realloc1 (~realloc1@aftr-88-217-180-103.dynamic.mnet-online.de) has joined ##c++
2014-09-01 20:13:50	◀▬▬	bumbar (~bumbar@188-230-142-117.dynamic.t-2.net) has quit (Quit: Leaving)
2014-09-01 20:14:21	pragma-	yeah, because g++ might accidentally compile Perl or something, right?
2014-09-01 20:14:48	◀▬▬	ryanu (~ryan@unaffiliated/ryanu) has quit (Disconnected by services)
2014-09-01 20:15:25	▬▬▶	ryanu (~ryan@unaffiliated/ryanu) has joined ##c++
2014-09-01 20:17:18	▬▬▶	mr_yogurt (~mr_yogurt@71-213-5-144.slkc.qwest.net) has joined ##c++
2014-09-01 20:17:23	▬▬▶	Rudolf (~rodolfo@unaffiliated/rudolf) has joined ##c++
2014-09-01 20:19:58	◀▬▬	voidah (~voidah@207.96.245.30) has quit (Read error: Connection reset by peer)
2014-09-01 20:20:16	▬▬▶	voidah (~voidah@207.96.245.30) has joined ##c++
2014-09-01 20:20:26	◀▬▬	voidah (~voidah@207.96.245.30) has quit (Read error: Connection reset by peer)
2014-09-01 20:20:54	▬▬▶	dardevelin (~dardeveli@a95-95-29-159.cpe.netcabo.pt) has joined ##c++
2014-09-01 20:20:56	◀▬▬	GinoMan (~Gino@pool-71-185-25-185.phlapa.fios.verizon.net) has quit (Ping timeout: 255 seconds)
2014-09-01 20:21:47	◀▬▬	mrevil (~mrevil@2601:9:5080:948:9ca5:7674:3cf8:81ae) has quit (Remote host closed the connection)
2014-09-01 20:22:53	▬▬▶	chewyDelicious (~nooblet@124-197-38-147.callplus.net.nz) has joined ##c++
2014-09-01 20:22:56	◀▬▬	jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has quit (Quit: Leaving)
2014-09-01 20:23:50	▬▬▶	gravitation (~gravitati@rrcs-24-213-169-150.nyc.biz.rr.com) has joined ##c++
2014-09-01 20:25:19	◀▬▬	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 260 seconds)
2014-09-01 20:26:18	◀▬▬	davek (~davek@unaffiliated/tracekill) has quit (Read error: Connection reset by peer)
2014-09-01 20:28:23	▬▬▶	voidah (~voidah@207.96.245.30) has joined ##c++
2014-09-01 20:28:42	▬▬▶	jsoft (~jsoft@unaffiliated/jsoft) has joined ##c++
2014-09-01 20:28:43	◀▬▬	paul424 (~chatzilla@91.207.69.217) has quit (Quit: ChatZilla 0.9.90.1 [Firefox 31.0/2014072000])
2014-09-01 20:29:16	vl4kn0	Hi, is it possible to use 'extern' keyword for a class {Ns1::Ns2::Class1} defined in file file1.cpp, inside a function in file file2.cpp? It gives me 'does not name a type' compilation error.
2014-09-01 20:29:34	Oxyd	Wut?
2014-09-01 20:29:43	Oxyd	You can't use the extern keyword when defining a class, no.
2014-09-01 20:29:57	Oxyd	pragma-: It might accidentally compile gnu++ instead of C++.
2014-09-01 20:30:22	◀▬▬	voidah (~voidah@207.96.245.30) has quit (Client Quit)
2014-09-01 20:30:38	▬▬▶	voidah (~voidah@207.96.245.30) has joined ##c++
2014-09-01 20:30:57	pragma-	GNU C++ is best C++
2014-09-01 20:31:23	Oxyd	It's not C++, so we don't talk about it here.
2014-09-01 20:31:41	◀▬▬	jimvideo (~jimvideo@184-12-234-43.dr01.brny.ca.frontiernet.net) has quit (Quit: Leaving)
2014-09-01 20:31:51	◀▬▬	realloc1 (~realloc1@aftr-88-217-180-103.dynamic.mnet-online.de) has quit (Ping timeout: 260 seconds)
2014-09-01 20:33:12	▬▬▶	mrevil (~mrevil@c-76-126-201-83.hsd1.ca.comcast.net) has joined ##c++
2014-09-01 20:33:41	fstd	!grab pragma-
2014-09-01 20:33:42	nolyc	By your command.
2014-09-01 20:33:50	pragma-	Best grab ever.
2014-09-01 20:34:02	o]	pragma-: agree
2014-09-01 20:34:28	▬▬▶	realloc1 (~realloc1@aftr-88-217-180-103.dynamic.mnet-online.de) has joined ##c++
2014-09-01 20:34:34	Oxyd	!rq pragma-
2014-09-01 20:34:34	nolyc	[13216]<pragma-> i am he as you are he as you are me and we are all together == polymorphism
2014-09-01 20:34:54	pragma-	goo goo g'joob
2014-09-01 20:35:02	Oxyd	Goo goo. ^_^
2014-09-01 20:35:14	pragma-	!rq _pragma
2014-09-01 20:35:15	nolyc	[10243]<_pragma> Oh !@#&, my taunts to plasmahh actually got him to get off his lazy ass
2014-09-01 20:35:24	pragma-	right, thats the only one for _pragma, I keep forgetting that.
2014-09-01 20:35:35	pragma-	!rq pragma_
2014-09-01 20:35:35	nolyc	[8913]<pragma_> Or some other similiar cluster!@#& of a multi-path code!@#&.
2014-09-01 20:35:38	o]	pragma-: I am the eggman
2014-09-01 20:35:56	▬▬▶	Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-09-01 20:36:01	pragma-	!rq pragma_
2014-09-01 20:36:01	nolyc	[7087]<pragma_> scottg: I'm calling him crappo from now on
2014-09-01 20:36:12	pragma-	Who grabs this crap.
2014-09-01 20:36:25	Oxyd	!get 7087
2014-09-01 20:36:25	nolyc	<pragma_> scottg: I'm calling him crappo from now on (Said by: pragma_!n=pragma@blackshell.com; grabbed by coppro!n=chatzill@d137-186-206-120.abhsia.telus.net at 02:37 AM, October 03, 2008)
2014-09-01 20:36:30	▬▬▶	ftsf (~ftsf@2407:7800:400:107f:3e97:eff:fe91:dc12) has joined ##c++
2014-09-01 20:36:35	Oxyd	coppro does, apparently.
2014-09-01 20:36:36	pragma-	well, that's better.
2014-09-01 20:36:59	▬▬▶	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has joined ##c++
2014-09-01 20:37:13	pragma-	!rq pragma_
2014-09-01 20:37:14	nolyc	[6501]<pragma_> you could build a hundred thousand ships, but suck one single dick and you not a shipbuilder, you are a fag.
2014-09-01 20:37:23	Oxyd	Profound.
2014-09-01 20:37:28	 *	pragma- cringes.
2014-09-01 20:37:29	◀▬▬	mrevil (~mrevil@c-76-126-201-83.hsd1.ca.comcast.net) has quit (Ping timeout: 245 seconds)
2014-09-01 20:37:38	Oxyd	!rq pragma_
2014-09-01 20:37:38	nolyc	[10035]<pragma_> !graq poacheR
2014-09-01 20:37:44	Oxyd	Best grab ever.
2014-09-01 20:37:56	o]	!focus
2014-09-01 20:37:57	nolyc	##c++ focuses on C++. Discuss offtopic things elsewhere; ##c++-general or ##c++-social
2014-09-01 20:38:02	▬▬▶	evanz (~Evan@cpe-74-138-16-115.swo.res.rr.com) has joined ##c++
2014-09-01 20:38:32	fstd	!grab nolyc
2014-09-01 20:38:39	o]	!fact
2014-09-01 20:38:41	nolyc	Linkage specifications nest.
2014-09-01 20:38:41	pragma-	!frab fstd
2014-09-01 20:38:45	◀▬▬	asmx (cod3r@shell.uw-team.org) has quit (Quit: Leaving)
2014-09-01 20:38:49	o]	!fact
2014-09-01 20:38:51	nolyc	Objects of class high_resolution_clock represent clocks with the shortest tick period.
2014-09-01 20:39:05	pragma-	!fact | orbitz
2014-09-01 20:39:07	nolyc	A lacol casls shlal not hvae satitc data mermbes.
2014-09-01 20:39:38	pragma-	!standardese | orbitz
2014-09-01 20:39:40	nolyc	If two oapdrnes p and q cpamroe euaql, p<=q and p>=q both yelid ture and p<q and p>q both yiled fasle. Oiswrethe, if a pnoetir p caromeps greetar than a pnioter q, p>=q, p>q, q<=p, and q<p all yeild ture and p<=q, p<q, q>=p, and q>p all ylied flsae.
2014-09-01 20:39:47	fstd	this is hilarious
2014-09-01 20:40:22	fstd	i wasn't aware he's infamous for it in here, too
2014-09-01 20:40:37	pragma-	!dt | orbitz
2014-09-01 20:40:37	nolyc	54: If you're a young Mfiaa gtnesagr out on your frsit date, I bet it's rlealy esrnimbsaarg if snmoeoe treis to klil you.
2014-09-01 20:40:50	▬▬▶	JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-09-01 20:40:51	Oxyd	Infamous? It's what we love him for!
2014-09-01 20:41:24	◀▬▬	Balzy_ (~Balzy@host51-163-dynamic.14-87-r.retail.telecomitalia.it) has quit (Read error: Connection reset by peer)
2014-09-01 20:41:30	fstd	well, you also love c++, right.
2014-09-01 20:41:46	▬▬▶	Balzy (~Balzy@host51-163-dynamic.14-87-r.retail.telecomitalia.it) has joined ##c++
2014-09-01 20:41:51	pragma-	More like a love-hate relationship.
2014-09-01 20:41:57	Oxyd	Nono, we only love each other here.
2014-09-01 20:42:02	zwer	more of a hate relationship
2014-09-01 20:42:59	◀▬▬	evanz (~Evan@cpe-74-138-16-115.swo.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-09-01 20:43:13	▬▬▶	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-09-01 20:44:25	◀▬▬	voidah (~voidah@207.96.245.30) has quit (Quit: Lost terminal)
2014-09-01 20:44:42	▬▬▶	evanz (~Evan@cpe-74-138-152-71.swo.res.rr.com) has joined ##c++
2014-09-01 20:45:01	▬▬▶	voidah (~voidah@207.96.245.30) has joined ##c++
2014-09-01 20:47:36	--	irc: disconnected from server
2014-09-02 21:41:04	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-02 21:41:04	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-02 21:41:04	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-02 21:41:04	--	Channel ##c++: 460 nicks (0 ops, 0 voices, 460 normals)
2014-09-02 21:41:05	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-02 21:41:16	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-02 21:41:49	K-ballo	pankajk81: #boost
2014-09-02 21:41:53	pankajk81	thanks
2014-09-02 21:42:26	◀▬▬	Balzy (~Balzy@host51-163-dynamic.14-87-r.retail.telecomitalia.it) has quit (Ping timeout: 260 seconds)
2014-09-02 21:42:59	◀▬▬	TommyC (~TommyC@unaffiliated/sepulchralbloom) has quit (Quit: TTFN, Ta Ta For Now!)
2014-09-02 21:46:10	◀▬▬	FriskyKat (SomeWhere@2.219.67.222) has quit (Quit: I Think Its Time To Make The Floor Burn!!)
2014-09-02 21:48:35	◀▬▬	bacon000 (~nobody@50-1-81-63.dsl.dynamic.sonic.net) has quit (Quit: Lingo - http://www.lingoirc.com)
2014-09-02 21:49:18	▬▬▶	vl4kn0 (~vl4kn0@bband-dyn36.178-41-101.t-com.sk) has joined ##c++
2014-09-02 21:50:12	▬▬▶	YarnFive8 (YarnFive8@unaffiliated/yarnfive8) has joined ##c++
2014-09-02 21:50:37	OmegaAlpha	whats #include <lxqt/LxQtPower> ? is that a library? there was no extension on the end . Line 34 of src/batterywatcher.cpp https://gitorious.org/lxde-rious.org/lxde-mirror/lxqt-powermanagement/commit/569d3ee20b3aba6887e22f133e00b2ff2a3399afmirror/lxqt-powermanagement/commit/569d3ee20b3aba6887e22f133e00b2ff2a3399af
2014-09-02 21:50:40	nolyc	<http://tinyurl.com/q3jdeuy> (at gitorious.org)
2014-09-02 21:51:24	K-ballo	OmegaAlpha: extensions are meaningless
2014-09-02 21:51:29	◀▬▬	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 246 seconds)
2014-09-02 21:51:42	tsimpson	files don't require extensions
2014-09-02 21:51:49	▬▬▶	antons_ (~antons@199.48.120.2) has joined ##c++
2014-09-02 21:52:27	◀▬▬	zima (zima@c75.152.27-202.clta.globetrotter.net) has quit (Quit: zima)
2014-09-02 21:52:53	▬▬▶	Drew_ (~Drew@2602:306:c491:ef10:d944:e17b:5942:353b) has joined ##c++
2014-09-02 21:52:58	OmegaAlpha	K-ballo: oh.. ok. so a .h is the same thing as the files included without the .h then? there not some special header files or something
2014-09-02 21:53:30	K-ballo	OmegaAlpha: #include doesn't care about extensions, it just token pastes everything from that file in place
2014-09-02 21:54:01	OmegaAlpha	please excuse my dumb questions.. i only had a semester of c++ and that was ten years ago.. just trying to fix this ebuild's compile time error
2014-09-02 21:54:37	tsimpson	that it doesn't end in .h isn't relevant to your problem
2014-09-02 21:54:44	OmegaAlpha	K-ballo: ok.. im not as concerned with #include but more focused on <file>
2014-09-02 21:55:01	K-ballo	:| ?
2014-09-02 21:55:13	OmegaAlpha	but you answered that
2014-09-02 21:55:17	OmegaAlpha	so thank you
2014-09-02 21:55:20	◀▬▬	antons (~antons@199.48.120.2) has quit (Ping timeout: 255 seconds)
2014-09-02 21:56:03	K-ballo	technically #include <xxx> is implementation specific for anything other than the standard headers, if you want to be pedantic
2014-09-02 21:56:07	OmegaAlpha	what are these .h files
2014-09-02 21:56:16	OmegaAlpha	ok'
2014-09-02 21:56:21	tsimpson	K-ballo: other way around
2014-09-02 21:56:41	tsimpson	the standard library headers don't have to actually be files, just that they work
2014-09-02 21:57:05	K-ballo	tsimpson: I didn't say that, I said that #include <xxx> where xxx is not the name of a standard header can do whatever the implementation wants it to do
2014-09-02 21:57:50	OmegaAlpha	so this ebuild i have.. they forgot to add this <lxqt/LxQtPower> to the ebuild so it wont finish compiling.. trying to track down the ebuild on git so i can try out their file if they have it that is
2014-09-02 21:58:01	K-ballo	an implementation could decide to make standard library headers not files (why on earth?) and then fail on #include <everything-else>
2014-09-02 21:59:23	▬▬▶	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has joined ##c++
2014-09-02 22:01:30	◀▬▬	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has quit (Quit: Leaving)
2014-09-02 22:01:31	OmegaAlpha	where are these header files stored? should it be included in the ebuild?
2014-09-02 22:02:00	OmegaAlpha	because that link i posted.. even that ebuild doesnt have the files included that are listed by the #include statements
2014-09-02 22:02:03	tsimpson	K-ballo: it still has to implement including source files
2014-09-02 22:02:35	▬▬▶	Jesin (~Jesin@Dyn159062.cc.lehigh.edu) has joined ##c++
2014-09-02 22:03:32	◀▬▬	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-09-02 22:03:42	▬▬▶	Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-09-02 22:03:44	▬▬▶	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-09-02 22:03:51	▬▬▶	lh_mouse (~lh_mouse@101.86.95.42) has joined ##c++
2014-09-02 22:04:01	tsimpson	the link you posted doesn't work
2014-09-02 22:05:43	▬▬▶	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-09-02 22:07:02	◀▬▬	neurosnap (~ebower@75.114.25.181) has quit (Quit: neurosnap)
2014-09-02 22:07:44	◀▬▬	desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-09-02 22:08:12	▬▬▶	Carbonflux (~BOB@174-21-109-233.tukw.qwest.net) has joined ##c++
2014-09-02 22:08:35	▬▬▶	cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has joined ##c++
2014-09-02 22:09:55	▬▬▶	SiGe (~SiGe@usc-secure-wireless-052-007.usc.edu) has joined ##c++
2014-09-02 22:10:52	▬▬▶	Kulrak (kulrak@tlug/member/kulrak) has joined ##c++
2014-09-02 22:15:26	◀▬▬	dardevelin (~dardeveli@a95-95-29-159.cpe.netcabo.pt) has quit (Quit: Leaving)
2014-09-02 22:18:06	▬▬▶	snakenerd (~Thunderbi@177.133.97.111.dynamic.adsl.gvt.net.br) has joined ##c++
2014-09-02 22:18:51	◀▬▬	Drew_ (~Drew@2602:306:c491:ef10:d944:e17b:5942:353b) has quit (Ping timeout: 240 seconds)
2014-09-02 22:18:54	▬▬▶	LBV_User (~leonardo@177.18.173.53) has joined ##c++
2014-09-02 22:19:32	◀▬▬	flugo (~flugo@103.225.100.51) has quit (Remote host closed the connection)
2014-09-02 22:21:00	▬▬▶	evanz_ (~evanz@cpe-74-138-81-110.swo.res.rr.com) has joined ##c++
2014-09-02 22:22:48	◀▬▬	snakenerd (~Thunderbi@177.133.97.111.dynamic.adsl.gvt.net.br) has quit (Client Quit)
2014-09-02 22:23:15	◀▬▬	titanium17 (~titanium1@2604:6000:6440:2200:99b0:96c7:d51c:4754) has quit (Ping timeout: 240 seconds)
2014-09-02 22:24:30	◀▬▬	phax (~phax@unaffiliated/phax) has quit (Quit: Leaving)
2014-09-02 22:24:52	▬▬▶	Drew (~Drew@2602:306:c491:ef10:d944:e17b:5942:353b) has joined ##c++
2014-09-02 22:25:25	--	Drew is now known as Drew-
2014-09-02 22:25:32	--	Drew- is now known as drew_
2014-09-02 22:28:26	▬▬▶	strukturalna (6cb56727@gateway/web/freenode/ip.108.181.103.39) has joined ##c++
2014-09-02 22:29:27	▬▬▶	rainbowwarrior (~wolfheart@97e7a9b3.skybroadband.com) has joined ##c++
2014-09-02 22:30:37	◀▬▬	Bitani (~zmcgohan@dhcp-164-107-202-51.osuwireless.ohio-state.edu) has quit (Quit: Bitani)
2014-09-02 22:32:49	◀▬▬	Blonga (~Blonga@gateway/tor-sasl/blonga) has quit (Quit: Leaving)
2014-09-02 22:33:34	◀▬▬	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 240 seconds)
2014-09-02 22:33:47	▬▬▶	hiptobecubic_ (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-09-02 22:36:02	▬▬▶	cbot` (~FS@ool-4355a0bf.dyn.optonline.net) has joined ##c++
2014-09-03 23:11:30	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-03 23:11:30	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-03 23:11:30	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-03 23:11:30	--	Channel ##c++: 433 nicks (0 ops, 0 voices, 433 normals)
2014-09-03 23:11:31	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-03 23:11:42	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-03 23:14:00	▬▬▶	kurahaupo1 (~Kurahaupo@170.203.252.27.dyn.cust.vf.net.nz) has joined ##c++
2014-09-03 23:14:48	glenfern	 moonchild: Not 'good', but you can discern that information from  /papers/<year> on the WG21 home. Scan for "WOrking Draft, Standard for Programming Language C++".
2014-09-03 23:15:06	moonchild	i just found this: https://github.com/zygoloid/cplusplus
2014-09-03 23:15:33	◀▬▬	voidah (~voidah@207.96.245.30) has quit (Ping timeout: 240 seconds)
2014-09-03 23:16:30	◀▬▬	kurahaupo (~Kurahaupo@170.203.252.27.dyn.cust.vf.net.nz) has quit (Ping timeout: 260 seconds)
2014-09-03 23:16:39	▬▬▶	voidah (~voidah@207.96.245.30) has joined ##c++
2014-09-03 23:17:28	moonchild	glenfern: thanks, but yeah, it would be nice to just be able to see the shortlist of what drafts were approved
2014-09-03 23:19:32	◀▬▬	proteusguy (~proteusgu@ppp-110-168-229-145.revip5.asianet.co.th) has quit (Ping timeout: 272 seconds)
2014-09-03 23:19:58	▬▬▶	Drew_ (~Drew@2602:306:c491:ef10:f1a0:55fe:4195:62fe) has joined ##c++
2014-09-03 23:21:13	◀▬▬	askatasuna (~askatasun@181.30.10.50) has quit (Quit: WeeChat 1.0)
2014-09-03 23:22:03	◀▬▬	voidah (~voidah@207.96.245.30) has quit (Ping timeout: 240 seconds)
2014-09-03 23:22:54	▬▬▶	staylor (~staylor@S0106602ad0901f12.cg.shawcable.net) has joined ##c++
2014-09-03 23:22:58	▬▬▶	voidah (~voidah@207.96.245.30) has joined ##c++
2014-09-03 23:23:33	◀▬▬	Atque (~Atque@unaffiliated/atque) has quit (Ping timeout: 240 seconds)
2014-09-03 23:24:14	▬▬▶	TommyC (~TommyC@unaffiliated/sepulchralbloom) has joined ##c++
2014-09-03 23:26:00	hs_	moonchild, might be something on http://www.open-std.org/jtc1/sc22/wg21/
2014-09-03 23:28:32	▬▬▶	strukturalna (89baeb62@gateway/web/freenode/ip.137.186.235.98) has joined ##c++
2014-09-03 23:29:10	◀▬▬	adek (~adek@modemcable243.79-160-184.mc.videotron.ca) has quit (Remote host closed the connection)
2014-09-03 23:29:57	◀▬▬	Burgundy (~burgundy@188.26.170.123) has quit (Ping timeout: 245 seconds)
2014-09-03 23:30:41	moonchild	this is a little better, though its missing the explicit labeling of things properly: http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/
2014-09-03 23:31:02	▬▬▶	vl4kn0 (~vl4kn0@bband-dyn36.178-41-101.t-com.sk) has joined ##c++
2014-09-03 23:32:06	moonchild	...strangely, it lists N3937 as preceding N3936 :)
2014-09-03 23:32:55	▬▬▶	ruler501 (~ruler@pool-96-226-217-149.lsanca.fios.verizon.net) has joined ##c++
2014-09-03 23:34:25	▬▬▶	adek (~adek@modemcable243.79-160-184.mc.videotron.ca) has joined ##c++
2014-09-03 23:35:43	◀▬▬	adek (~adek@modemcable243.79-160-184.mc.videotron.ca) has quit (Remote host closed the connection)
2014-09-03 23:36:17	▬▬▶	jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has joined ##c++
2014-09-03 23:36:41	▬▬▶	mrevil (~mrevil@2601:9:5080:948:c44e:41a7:1a1a:9eaf) has joined ##c++
2014-09-03 23:38:13	glenfern	No, it does not.
2014-09-03 23:38:43	glenfern	It should list 3797 as preceding 3936.
2014-09-03 23:40:08	moonchild	o.O, i read it wrong, lol
2014-09-03 23:43:17	◀▬▬	voidah (~voidah@207.96.245.30) has quit (Ping timeout: 245 seconds)
2014-09-03 23:44:22	▬▬▶	voidah (~voidah@207.96.245.30) has joined ##c++
2014-09-03 23:48:56	▬▬▶	devm33 (~devm33@58-190-84-224f1.nar1.eonet.ne.jp) has joined ##c++
2014-09-03 23:49:27	◀▬▬	sohail (~user@unaffiliated/sohail) has quit (Ping timeout: 245 seconds)
2014-09-03 23:49:40	▬▬▶	toresbe (~toresbe@158.36.190.254) has joined ##c++
2014-09-03 23:49:46	toresbe	Hiya folks. I'm just starting out with C++ with some experience from C and Python - so I'm familiar with many of the concepts, but there are big gaps in my understanding of the syntax...
2014-09-03 23:49:53	toresbe	What I'm doing is writing an ncurses UI class, with a few widgets. As it stands, it seems like a reasonable idea to store pointers to those widgets in a vector <Widget *>.
2014-09-03 23:50:09	toresbe	So, I guess my first question is, how do I define a function which accepts a pointer to any class derived from Widget?
2014-09-03 23:50:58	◀▬▬	Stryyker (stryyker16@about/windows/staff/stryyker) has quit (Disconnected by services)
2014-09-03 23:51:13	▬▬▶	Stryyker2 (stryyker16@about/windows/staff/stryyker) has joined ##c++
2014-09-03 23:52:24	◀▬▬	voidah (~voidah@207.96.245.30) has quit (Remote host closed the connection)
2014-09-03 23:53:44	moonchild	void func(Widget * w); or void func(Widget & w)
2014-09-03 23:53:53	moonchild	the former is probably what you want
2014-09-03 23:54:05	▬▬▶	adek (~adek@modemcable243.79-160-184.mc.videotron.ca) has joined ##c++
2014-09-03 23:54:58	◀▬▬	GinoMan (~Gino@pool-72-94-39-83.phlapa.fios.verizon.net) has quit (Ping timeout: 252 seconds)
2014-09-03 23:55:51	toresbe	That's odd, that was my first thought, but it didn't work. Starting out with a new language is always quite difficult because you don't know where you might be screwing up :)
2014-09-03 23:57:53	moonchild	is there a way of creating a single template specialization that matches T* , T[], and T[N] ?
2014-09-03 23:58:33	◀▬▬	kurahaupo1 (~Kurahaupo@170.203.252.27.dyn.cust.vf.net.nz) has quit (Quit: Leaving.)
2014-09-03 23:58:54	toresbe	moonchild: thanks for setting me on the right path :) got it!
2014-09-03 23:59:37	moonchild	np
2014-09-04 00:04:33	◀▬▬	jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has quit (Ping timeout: 245 seconds)
2014-09-04 00:04:33	◀▬▬	strukturalna (89baeb62@gateway/web/freenode/ip.137.186.235.98) has left ##c++
2014-09-04 00:09:38	◀▬▬	TommyC (~TommyC@unaffiliated/sepulchralbloom) has quit (Quit: TTFN, Ta Ta For Now!)
2014-09-04 00:09:43	◀▬▬	adek (~adek@modemcable243.79-160-184.mc.videotron.ca) has quit (Remote host closed the connection)
2014-09-04 00:10:51	▬▬▶	shintah (bebble@h-140-107.a336.priv.bahnhof.se) has joined ##c++
2014-09-04 00:14:14	o11c	moonchild: template<class T, typename=typename some_sfinae_that_only_works_with_ptrs_and_arrays<T>::type> ?
2014-09-04 00:15:28	▬▬▶	adek (~adek@modemcable243.79-160-184.mc.videotron.ca) has joined ##c++
2014-09-04 00:16:06	moonchild	yeah, what's that magic, lol
2014-09-04 00:16:08	▬▬▶	dmatysiak (~daniel@a-chinaman.com) has joined ##c++
2014-09-04 00:17:04	▬▬▶	voidah (~voidah@207.96.245.30) has joined ##c++
2014-09-04 00:18:56	◀▬▬	staylor (~staylor@S0106602ad0901f12.cg.shawcable.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-09-07 18:03:28	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-07 18:03:28	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-07 18:03:28	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-07 18:03:28	--	Channel ##c++: 468 nicks (0 ops, 0 voices, 468 normals)
2014-09-07 18:03:29	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-07 18:03:41	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-07 18:03:59	V-ille	or shorter
2014-09-07 18:04:05	◀▬▬	esas (~esas@unaffiliated/esas) has quit (Ping timeout: 245 seconds)
2014-09-07 18:04:05	◀▬▬	lord4163 (~lord4163@81-232-61-81-no226.tbcn.telia.com) has quit (Ping timeout: 245 seconds)
2014-09-07 18:04:41	l_r	or something like this const T t = [&]()->T{if (condition) return f(); return {};}();
2014-09-07 18:04:47	l_r	but it's ugly
2014-09-07 18:04:50	l_r	idon't like
2014-09-07 18:05:09	◀▬▬	Aster (~Aster@april-fools/2013/ninth/aster) has quit (Quit: WeeChat 0.4.3)
2014-09-07 18:05:32	V-ille	you just wrote what K-ballo already wrote
2014-09-07 18:05:35	▬▬▶	clynamen (~clynamen@net-2-36-39-176.cust.vodafonedsl.it) has joined ##c++
2014-09-07 18:05:42	V-ille	without the bug he wrote :P
2014-09-07 18:05:44	l_r	yes,almost
2014-09-07 18:05:46	l_r	yes
2014-09-07 18:06:14	seishun	const auto t = (condition) ? f() : T{}
2014-09-07 18:06:18	seishun	you spell the type once
2014-09-07 18:06:36	▬▬▶	fabj2 (~chatzilla@CPE0022158de9ee-CM0011aea49d34.cpe.net.cable.rogers.com) has joined ##c++
2014-09-07 18:06:53	▬▬▶	lord4163 (~lord4163@81-232-61-81-no226.tbcn.telia.com) has joined ##c++
2014-09-07 18:07:02	▬▬▶	jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has joined ##c++
2014-09-07 18:07:20	l_r	heheh
2014-09-07 18:07:47	V-ille	you spell the type once even if you use decltype(t) in the ternary operator
2014-09-07 18:07:53	l_r	i am not the only one who does not scroll up to read what has been already written :P
2014-09-07 18:08:28	◀▬▬	Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 255 seconds)
2014-09-07 18:08:46	V-ille	well, his suggestion doesn't seem to be suggested before
2014-09-07 18:08:54	▬▬▶	Timmy (~quassel@unaffiliated/timmyt) has joined ##c++
2014-09-07 18:09:33	◀▬▬	LiohAu (~LiohAu@lse83-h04-89-86-22-242.dsl.sta.abo.bbox.fr) has quit (Quit: LiohAu)
2014-09-07 18:10:33	--	MrFlibble is now known as Test
2014-09-07 18:10:55	◀▬▬	Test (LunarJetma@05400825.skybroadband.com) has quit (Quit: Test)
2014-09-07 18:11:13	◀▬▬	clynamen (~clynamen@net-2-36-39-176.cust.vodafonedsl.it) has quit (Quit: WeeChat 0.4.3)
2014-09-07 18:11:14	◀▬▬	TieSoul (~TieSoul@5ED55308.cm-7-6b.dynamic.ziggo.nl) has quit (Read error: Connection reset by peer)
2014-09-07 18:12:07	--	oleo is now known as Guest74721
2014-09-07 18:12:28	▬▬▶	Betal (~Beta@unaffiliated/betal) has joined ##c++
2014-09-07 18:12:31	◀▬▬	TomyLobo (~TomyLobo@91.65.115.103) has quit (Quit: Standby mode...)
2014-09-07 18:13:13	◀▬▬	aslant (~aslant@5751a00f.skybroadband.com) has quit (Ping timeout: 276 seconds)
2014-09-07 18:15:20	◀▬▬	Guest74721 (~oleo@xdsl-78-35-177-111.netcologne.de) has quit (Ping timeout: 245 seconds)
2014-09-07 18:15:40	◀▬▬	jitsuin (~chatzilla@cpe-23-240-223-21.socal.res.rr.com) has quit (Ping timeout: 246 seconds)
2014-09-07 18:18:00	◀▬▬	kurahaupo (~Kurahaupo@49.236.252.27.dyn.cust.vf.net.nz) has quit (Ping timeout: 240 seconds)
2014-09-07 18:18:29	▬▬▶	jitsuin (~chatzilla@cpe-23-240-223-21.socal.res.rr.com) has joined ##c++
2014-09-07 18:20:35	▬▬▶	Frisky-Ka (SomeWhere@90.208.57.186) has joined ##c++
2014-09-07 18:22:40	◀▬▬	mr_yogurt (~mr_yogurt@71-213-5-144.slkc.qwest.net) has quit (Ping timeout: 246 seconds)
2014-09-07 18:23:19	◀▬▬	FriskyKat (SomeWhere@2.126.50.191) has quit (Ping timeout: 255 seconds)
2014-09-07 18:23:25	▬▬▶	aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-09-07 18:23:56	▬▬▶	oleo__ (~oleo@xdsl-78-35-177-180.netcologne.de) has joined ##c++
2014-09-07 18:24:16	--	oleo__ is now known as oleo
2014-09-07 18:24:49	◀▬▬	cult- (~ubuntu@unaffiliated/cult-) has left ##c++ ("WeeChat 0.4.2")
2014-09-07 18:26:00	▬▬▶	caveat- (~caveat@2a01:4f8:191:9111:30::10) has joined ##c++
2014-09-07 18:26:42	◀▬▬	rendar (~I@host108-115-dynamic.57-82-r.retail.telecomitalia.it) has quit
2014-09-07 18:28:29	▬▬▶	Aww (aww@princess-of-cooki.es) has joined ##c++
2014-09-07 18:29:37	◀▬▬	seishun (~Kakera@46.109.100.133) has quit (Ping timeout: 255 seconds)
2014-09-07 18:31:17	▬▬▶	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-09-07 18:31:25	◀▬▬	BlaXpirit (~blaxpirit@228-79-132-95.pool.ukrtel.net) has quit (Ping timeout: 276 seconds)
2014-09-07 18:31:26	--	Frisky-Ka is now known as FriskyKat
2014-09-07 18:31:30	◀▬▬	jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has quit (Quit: leaving)
2014-09-07 18:32:07	◀▬▬	titanium17 (~titanium1@2604:6000:6440:2200:7c27:714:b015:db79) has quit (Ping timeout: 272 seconds)
2014-09-07 18:32:21	◀▬▬	shintah (bebble@h-140-107.a336.priv.bahnhof.se) has quit (Read error: Connection reset by peer)
2014-09-07 18:32:29	◀▬▬	io2 (~io2@unaffiliated/irrequietus) has quit (Quit: ...take irc away, what are you? genius, billionaire, playboy, philanthropist)
2014-09-07 18:34:09	▬▬▶	snakenerd (~Thunderbi@177.17.117.148) has joined ##c++
2014-09-07 18:34:26	◀▬▬	Drew_ (~Drew@2602:306:c491:ef10:f1a0:55fe:4195:62fe) has quit (Ping timeout: 272 seconds)
2014-09-07 18:34:32	▬▬▶	zedsdeadbaby (~null@achier.fr) has joined ##c++
2014-09-07 18:35:00	▬▬▶	huckleberry78 (~huckleber@76.97.228.17) has joined ##c++
2014-09-07 18:35:30	◀▬▬	jitsuin (~chatzilla@cpe-23-240-223-21.socal.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-09-07 18:36:22	◀▬▬	txomon|home (~txomon@unaffiliated/txomon) has quit (Ping timeout: 255 seconds)
2014-09-07 18:38:28	◀▬▬	snakenerd (~Thunderbi@177.17.117.148) has quit (Client Quit)
2014-09-07 18:38:51	▬▬▶	Mayzie (~Mayazcher@unaffiliated/mayazcherquoi) has joined ##c++
2014-09-07 18:38:55	▬▬▶	sohail (~user@unaffiliated/sohail) has joined ##c++
2014-09-07 18:41:00	◀▬▬	caveat- (~caveat@2a01:4f8:191:9111:30::10) has quit (Ping timeout: 272 seconds)
2014-09-07 18:41:50	◀▬▬	Mio-chan (~Mio-chan@unaffiliated/mio-chan) has quit (Quit: Leaving)
2014-09-07 18:42:24	◀▬▬	Zunino (~zunino@189.34.41.115) has left ##c++ ("WeeChat 0.4.2")
2014-09-07 18:43:15	◀▬▬	ahuemer (~ahuemer@unaffiliated/ahuemer) has quit (Max SendQ exceeded)
2014-09-07 18:43:57	▬▬▶	ahuemer (ahuemer@unaffiliated/ahuemer) has joined ##c++
2014-09-07 18:44:39	▬▬▶	lilVaratep (~lilVarate@108.76.233.143) has joined ##c++
2014-09-07 18:45:19	◀▬▬	jamesson (~jamesson@pool-71-127-193-78.nwrknj.fios.verizon.net) has quit (Read error: Connection reset by peer)
2014-09-07 18:45:25	▬▬▶	caveat- (hoax@2a01:4f8:191:9111:30::10) has joined ##c++
2014-09-07 18:45:43	◀▬▬	BtbN (btbn@btbn.de) has quit (Ping timeout: 276 seconds)
2014-09-07 18:46:10	◀▬▬	asmx (cod3r@5.39.92.42) has quit (Ping timeout: 252 seconds)
2014-09-07 18:46:12	◀▬▬	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has quit (Quit: Leaving)
2014-09-07 18:47:22	▬▬▶	kurahaupo (~Kurahaupo@49.236.252.27.dyn.cust.vf.net.nz) has joined ##c++
2014-09-07 18:47:53	▬▬▶	Andy-chan2 (~Andy-chan@xdsl-87-78-149-121.netcologne.de) has joined ##c++
2014-09-07 18:49:13	▬▬▶	Stummi (~Stummi@rockbox/developer/Stummi) has joined ##c++
2014-09-07 18:49:35	◀▬▬	Timmy (~quassel@unaffiliated/timmyt) has quit (Remote host closed the connection)
2014-09-07 18:49:37	▬▬▶	Aster (~Aster@april-fools/2013/ninth/aster) has joined ##c++
2014-09-07 18:49:40	▬▬▶	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has joined ##c++
2014-09-07 18:49:43	▬▬▶	mangekyo (~mangekyo@1.155.195.39) has joined ##c++
2014-09-07 18:49:47	▬▬▶	BtbN (btbn@btbn.de) has joined ##c++
2014-09-07 18:51:24	▬▬▶	cnnsnts (~cnsnnts@80.82.65.248) has joined ##c++
2014-09-07 18:52:08	▬▬▶	Mio-chan (~Mio-chan@unaffiliated/mio-chan) has joined ##c++
2014-09-07 18:52:13	◀▬▬	Andy-chan (~Andy-chan@xdsl-84-44-171-247.netcologne.de) has quit (Ping timeout: 276 seconds)
2014-09-07 18:52:30	▬▬▶	yano (~yano@freenode/staff/yano) has joined ##c++
2014-09-07 18:53:13	◀▬▬	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-09-07 18:53:20	▬▬▶	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-09-07 18:54:30	◀▬▬	huckleberry78 (~huckleber@76.97.228.17) has quit
2014-09-07 18:55:06	◀▬▬	hazzadous (~harrywaye@188.29.165.169.threembb.co.uk) has quit (Quit: hazzadous)
2014-09-07 18:56:13	◀▬▬	Mayzie (~Mayazcher@unaffiliated/mayazcherquoi) has quit (Quit: Leaving)
2014-09-07 19:00:27	◀▬▬	D0cN3x (~Thunderbi@dslb-178-007-211-248.178.007.pools.vodafone-ip.de) has quit (Quit: D0cN3x)
2014-09-07 19:00:59	▬▬▶	D0cN3x (~Thunderbi@dslb-178-007-211-248.178.007.pools.vodafone-ip.de) has joined ##c++
2014-09-07 19:01:02	◀▬▬	Andy-chan2 (~Andy-chan@xdsl-87-78-149-121.netcologne.de) has quit (Read error: Connection reset by peer)
2014-09-07 19:01:35	▬▬▶	Andy-chan (~Andy-chan@xdsl-87-78-149-121.netcologne.de) has joined ##c++
2014-09-07 19:01:46	◀▬▬	D0cN3x (~Thunderbi@dslb-178-007-211-248.178.007.pools.vodafone-ip.de) has quit (Client Quit)
2014-09-07 19:02:48	▬▬▶	jitsuin (~chatzilla@cpe-23-240-223-21.socal.res.rr.com) has joined ##c++
2014-09-07 19:02:59	◀▬▬	cnnsnts (~cnsnnts@80.82.65.248) has quit (Quit: Leaving.)
2014-09-07 19:03:15	▬▬▶	geri (~anonymous@089144209006.atnat0018.highway.a1.net) has joined ##c++
2014-09-07 19:04:20	▬▬▶	YarnFive8 (~YarnFive8@unaffiliated/yarnfive8) has joined ##c++
2014-09-07 19:04:28	◀▬▬	bitlord (~bitlord@unaffiliated/bitlord) has quit (Quit: bitlord)
2014-09-07 19:04:39	◀▬▬	Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2014-09-07 19:05:47	◀▬▬	caveat- (hoax@2a01:4f8:191:9111:30::10) has quit (Ping timeout: 260 seconds)
2014-09-07 19:06:43	◀▬▬	BtbN (btbn@btbn.de) has quit (Ping timeout: 260 seconds)
2014-09-07 19:08:51	▬▬▶	titanium17 (~titanium1@2604:6000:6440:2200:ecdd:9b72:cd65:8bfb) has joined ##c++
2014-09-07 19:08:53	▬▬▶	bacon000 (~nobody@50-1-81-63.dsl.dynamic.sonic.net) has joined ##c++
2014-09-07 19:10:03	▬▬▶	caveat- (hoax@2a01:4f8:191:9111:30::10) has joined ##c++
2014-09-07 19:10:04	◀▬▬	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-09-07 19:10:40	▬▬▶	Gentilhomme (~Gentilhom@unaffiliated/gentilhomme) has joined ##c++
2014-09-07 19:11:04	◀▬▬	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 276 seconds)
2014-09-07 19:11:53	▬▬▶	ruediger (~quassel@ptmx.org) has joined ##c++
2014-09-07 19:12:02	▬▬▶	surd (~surd@unaffiliated/surd) has joined ##c++
2014-09-07 19:12:52	◀▬▬	kadoban (~kadoban@ip68-104-204-58.ph.ph.cox.net) has quit (Read error: Connection reset by peer)
2014-09-07 19:12:56	▬▬▶	josef_k (~Jeremy@203-206-204-113.perm.iinet.net.au) has joined ##c++
2014-09-07 19:13:27	▬▬▶	kadoban (~kadoban@ip68-104-204-58.ph.ph.cox.net) has joined ##c++
2014-09-07 19:13:51	◀▬▬	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-09-07 19:13:58	▬▬▶	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-09-07 19:14:30	▬▬▶	jpcanepa (~jpcanepa@186-107-119-52.baf.movistar.cl) has joined ##c++
2014-09-07 19:15:30	◀▬▬	geri (~anonymous@089144209006.atnat0018.highway.a1.net) has quit (Remote host closed the connection)
2014-09-07 19:17:17	◀▬▬	josef_k (~Jeremy@203-206-204-113.perm.iinet.net.au) has quit (Ping timeout: 246 seconds)
2014-09-07 19:17:29	◀▬▬	caveat- (hoax@2a01:4f8:191:9111:30::10) has quit (Ping timeout: 272 seconds)
2014-09-07 19:19:04	◀▬▬	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-09-07 19:19:15	▬▬▶	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-09-07 19:19:15	▬▬▶	josef__k (~Jeremy@203-206-204-113.perm.iinet.net.au) has joined ##c++
2014-09-07 19:19:54	◀▬▬	Mio-chan (~Mio-chan@unaffiliated/mio-chan) has quit (Quit: Leaving)
2014-09-07 19:24:32	◀▬▬	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-09-07 19:24:42	▬▬▶	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-09-07 19:26:16	◀▬▬	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Read error: Connection reset by peer)
2014-09-07 19:26:32	▬▬▶	caveat- (hoax@2a01:4f8:191:9111:30::10) has joined ##c++
2014-09-07 19:26:53	▬▬▶	Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-09-07 19:27:19	▬▬▶	wickedmic (~wickedmic@obiwahn.org) has joined ##c++
2014-09-07 19:29:13	▬▬▶	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has joined ##c++
2014-09-07 19:31:47	◀▬▬	Betal (~Beta@unaffiliated/betal) has quit (Read error: Connection reset by peer)
2014-09-07 19:32:39	▬▬▶	Betal (~Beta@unaffiliated/betal) has joined ##c++
2014-09-07 19:35:08	--	fabj2 is now known as fabj2_
2014-09-07 19:35:09	▬▬▶	systemfault (~Systemfau@oftn/member/systemfault) has joined ##c++
2014-09-07 19:35:24	--	fabj2_ is now known as fabj2
2014-09-07 19:38:07	▬▬▶	arescorpio (~arescorpi@193-205-17-190.fibertel.com.ar) has joined ##c++
2014-09-07 19:38:22	◀▬▬	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:c9f1:107c:ee07:af97) has quit (Quit: Leaving)
2014-09-07 19:39:01	▬▬▶	SleekoNiko (~nick@rrcs-97-77-123-178.sw.biz.rr.com) has joined ##c++
2014-09-07 19:39:29	◀▬▬	IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has quit (Quit: Leaving)
2014-09-07 19:40:04	◀▬▬	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-09-07 19:40:18	▬▬▶	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-09-07 19:40:26	◀▬▬	TheFuzzball (~TheFuzzba@cpc4-ward10-2-0-cust737.10-2.cable.virginm.net) has quit (Quit: Computer has gone to sleep.)
2014-09-07 19:41:22	◀▬▬	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-09-07 19:42:32	◀▬▬	lilVaratep (~lilVarate@108.76.233.143) has quit (Quit: lilVaratep)
2014-09-07 19:42:41	▬▬▶	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-09-07 19:44:31	◀▬▬	mangekyo (~mangekyo@1.155.195.39) has quit (Ping timeout: 260 seconds)
2014-09-07 19:45:25	◀▬▬	surd (~surd@unaffiliated/surd) has quit (Read error: Connection reset by peer)
2014-09-07 19:45:57	◀▬▬	Smjert (~Smjert@host25-75-dynamic.20-79-r.retail.telecomitalia.it) has quit
2014-09-07 19:46:37	▬▬▶	fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-09-07 19:47:28	◀▬▬	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Ping timeout: 276 seconds)
2014-09-07 19:47:37	◀▬▬	deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-09-07 19:47:48	◀▬▬	irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has quit (Quit: Lost terminal)
2014-09-07 19:52:29	--	irc: disconnected from server
2014-09-09 11:10:18	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-09 11:10:18	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-09 11:10:18	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-09 11:10:18	--	Channel ##c++: 495 nicks (0 ops, 0 voices, 495 normals)
2014-09-09 11:10:19	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-09 11:10:26	◀▬▬	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Ping timeout: 260 seconds)
2014-09-09 11:10:29	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-09 11:12:06	◀▬▬	sohail (~user@unaffiliated/sohail) has quit (Remote host closed the connection)
2014-09-09 11:12:24	orbitz	Erlkoenig: you want to look up serialization
2014-09-09 11:12:26	▬▬▶	sohail (~user@unaffiliated/sohail) has joined ##c++
2014-09-09 11:12:33	Erlkoenig	i know serialization
2014-09-09 11:12:56	PlasmaHH	then you want to look up serial killers
2014-09-09 11:12:57	Sculptor	and dozens of other it terms
2014-09-09 11:13:06	◀▬▬	sohail (~user@unaffiliated/sohail) has quit (Remote host closed the connection)
2014-09-09 11:13:06	▬▬▶	AnujSharma (~anuj@202.3.77.231) has joined ##c++
2014-09-09 11:13:15	▬▬▶	INSANU (~Jhonny@200.175.100.135.static.gvt.net.br) has joined ##c++
2014-09-09 11:13:26	▬▬▶	sohail (~user@unaffiliated/sohail) has joined ##c++
2014-09-09 11:13:29	INSANU	hello good morning =)
2014-09-09 11:13:33	Erlkoenig	Since an embedded system is targeted, resources are scarce and the free store ("new"/"malloc") can't be used
2014-09-09 11:14:01	◀▬▬	okamis_ (1b2032d5@gateway/web/freenode/ip.27.32.50.213) has quit (Ping timeout: 246 seconds)
2014-09-09 11:15:01	INSANU	well, its a strange place to ask that, but is the first i tought of... =) im brazilian and i want to pratice my english, anyone up to some skype conversation? =)
2014-09-09 11:16:47	Erlkoenig	http://pastebin.com/njxXifBu  a bit like this. The variables have an annotation about how they are represented in the I/O format, and the generated Algorithm fills them with extracted information from the raw input buffer
2014-09-09 11:16:59	sedeki	there is a skype language exchange forum
2014-09-09 11:17:32	INSANU	sedeki, can u provide the link?
2014-09-09 11:17:43	sedeki	no, you'll have to google it
2014-09-09 11:18:02	◀▬▬	sohail (~user@unaffiliated/sohail) has quit (Remote host closed the connection)
2014-09-09 11:18:23	▬▬▶	sohail (~user@unaffiliated/sohail) has joined ##c++
2014-09-09 11:18:30	◀▬▬	hz (~hz@unaffiliated/hz) has quit (Ping timeout: 245 seconds)
2014-09-09 11:18:33	◀▬▬	Errorical (~errorical@213.128.190.150) has quit (Remote host closed the connection)
2014-09-09 11:19:27	orbitz	Erlkoenig: how many types are we talking?  I'd wager just doing it by hand woudl be best if your setup is so restrictive
2014-09-09 11:20:32	Erlkoenig	8,16,32 bit signed & unsigned integer types, little & big endian, bool
2014-09-09 11:21:13	◀▬▬	sybarite (~vivek@203.188.226.167) has quit (Remote host closed the connection)
2014-09-09 11:21:26	Erlkoenig	oh and i totally forgot: There are multiple i/o formats, the variables need multiple annotations about the formats and how they are represented there, and i need one algorithm per format
2014-09-09 11:21:28	orbitz	that's not so bad
2014-09-09 11:21:36	▬▬▶	danmar (~danmar@94.234.170.182) has joined ##c++
2014-09-09 11:22:12	◀▬▬	Sietsem (~Sietse@D97A5516.cm-3-3b.dynamic.ziggo.nl) has quit (Read error: Connection reset by peer)
2014-09-09 11:22:13	Erlkoenig	And there will be lots of variables and a few formats, so writing every one of those algorithms manually is much work and error-prone
2014-09-09 11:23:17	▬▬▶	hz (~hz@unaffiliated/hz) has joined ##c++
2014-09-09 11:23:22	◀▬▬	hz (~hz@unaffiliated/hz) has quit (Remote host closed the connection)
2014-09-09 11:23:38	▬▬▶	hz (~hz@unaffiliated/hz) has joined ##c++
2014-09-09 11:23:52	▬▬▶	paul424 (~chatzilla@apn-77-113-63-231.dynamic.gprs.plus.pl) has joined ##c++
2014-09-09 11:23:56	▬▬▶	DTSCode (~dtscode@rrcs-67-53-109-252.west.biz.rr.com) has joined ##c++
2014-09-09 11:24:28	orbitz	Erlkoenig: well, there are serialization libs out there, so serach google
2014-09-09 11:24:42	◀▬▬	AnujSharma (~anuj@202.3.77.231) has left ##c++ ("Leaving")
2014-09-09 11:25:16	▬▬▶	cbot` (~FS@150.108.238.42) has joined ##c++
2014-09-09 11:28:02	rfreeman_w	Erlkoenig,   https://developers.google.com/protocol-buffers/    are a popular solution
2014-09-09 11:29:11	Eelis	rfreeman_w: i can't remember the last time i used boost.variant.
2014-09-09 11:30:01	rfreeman_w	Griwes, yeah nice with the constexpr but nothing to do less typing ?
2014-09-09 11:30:02	Erlkoenig	protobuf doesn't seem to allow me to specify the I/O format
2014-09-09 11:30:14	Erlkoenig	also i'd suspect it needs the free store
2014-09-09 11:30:15	▬▬▶	kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has joined ##c++
2014-09-09 11:30:44	◀▬▬	satta_satta (~GC-I@pd95c7d39.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-09-09 11:31:19	Erlkoenig	serialization libraries generally seem to define their own format, i need to deal with a given fixed format
2014-09-09 11:31:54	◀▬▬	sedeki (~textual@gateway/tor-sasl/sedeki) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-09-09 11:32:20	AbleBacon	is there a reason why developers would use older compilers that implement older C++ standards instead of the newer ones? can newer versions cause widespread breakage of code? or is there some reason that customers would want software compiled in this manner?
2014-09-09 11:32:45	Eelis	AbleBacon: linking against proprietary libs
2014-09-09 11:32:56	◀▬▬	Loggan (53fa2c26@gateway/web/freenode/ip.83.250.44.38) has quit (Ping timeout: 246 seconds)
2014-09-09 11:32:58	seishun	fwiw, other languages that have bitwise operations have well-defined right shift for signed ints
2014-09-09 11:33:08	Erlkoenig	new compilers might lack required certification
2014-09-09 11:33:09	AbleBacon	ah--that makes a lot of sense, eelis
2014-09-09 11:33:13	▬▬▶	hyperair (~hyperair@ubuntu/member/hyperair) has joined ##c++
2014-09-09 11:33:17	AbleBacon	we do use some very, very, very old libraries
2014-09-09 11:33:51	Eelis	you have my sympathy
2014-09-09 11:34:00	CJKay	GCC 3.4 here woo
2014-09-09 11:34:16	--	irc: disconnected from server
2014-09-09 11:35:12	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-09 11:35:12	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-09 11:35:12	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-09 11:35:12	--	Channel ##c++: 494 nicks (0 ops, 0 voices, 494 normals)
2014-09-09 11:35:13	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-09 11:35:13	seishun	I would if I were working with signal processing or whatever it is that requires it
2014-09-09 11:35:13	Griwes	expect a reply along the lines of "who wants mod 2^n - 1 anyway"
2014-09-09 11:35:17	CJKay	Griwes: "** Copyright (C) 1992-2002 Trolltech AS"
2014-09-09 11:35:19	CJKay	Yep
2014-09-09 11:35:23	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-09 11:35:30	Griwes	huh
2014-09-09 11:35:35	--	irc: disconnected from server
2014-09-09 11:47:39	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-09 11:47:39	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-09 11:47:39	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-09 11:47:39	--	Channel ##c++: 490 nicks (0 ops, 0 voices, 490 normals)
2014-09-09 11:47:40	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-09 11:47:51	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-09 11:48:00	▬▬▶	comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has joined ##c++
2014-09-09 11:48:26	--	irc: disconnected from server
2014-09-09 11:48:46	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-09 11:48:46	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-09 11:48:46	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-09 11:48:47	--	Channel ##c++: 491 nicks (0 ops, 0 voices, 491 normals)
2014-09-09 11:48:47	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-09 11:48:58	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-09 11:49:42	▬▬▶	xarxer (~kvirc@h-19-65.a328.priv.bahnhof.se) has joined ##c++
2014-09-09 11:50:26	◀▬▬	hz (~hz@unaffiliated/hz) has quit (Ping timeout: 276 seconds)
2014-09-09 11:50:29	◀▬▬	Draecos (~Draecos@58-7-92-12.dyn.iinet.net.au) has quit (Quit: This computer has gone to sleep)
2014-09-09 11:51:07	◀▬▬	kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has quit (Ping timeout: 264 seconds)
2014-09-09 11:52:21	bumbar_	is it better to resize std::string with resize method, or use constructor (size, char), or is it the same?
2014-09-09 11:53:43	▬▬▶	adu (~ajr@static-108-48-76-162.washdc.fios.verizon.net) has joined ##c++
2014-09-09 11:54:43	hs_	if you know the size construct with the size(?)
2014-09-09 11:54:54	hs_	(why not?)
2014-09-09 11:54:58	lh_mouse	geordi, <<TYPE<typename underlying_type<E>::type>; enum E { }; // why is it unsigned?
2014-09-09 11:54:59	geordi	unsigned int
2014-09-09 11:55:19	hs_	-enum value?
2014-09-09 11:55:30	hs_	doesn't make sense does it
2014-09-09 11:55:33	Erlkoenig	geordi, <<TYPE<typename underlying_type<E>::type>; enum E {A, B, C };
2014-09-09 11:55:33	geordi	unsigned int
2014-09-09 11:55:35	▬▬▶	BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has joined ##c++
2014-09-09 11:55:47	--	irc: disconnected from server
2014-09-09 11:56:07	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-09 11:56:07	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-09 11:56:07	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-09 11:56:07	--	Channel ##c++: 491 nicks (0 ops, 0 voices, 491 normals)
2014-09-09 11:56:08	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-09 11:56:11	andreyv	bumbar_: Use the constructor, because std::string gets size information earlier this way
2014-09-09 11:56:15	Erlkoenig	geordi, <<TYPE<typename underlying_type<E>::type> << " " << TYPE(E); enum E {A, B, C };
2014-09-09 11:56:15	geordi	error: template argument 1 is invalid
2014-09-09 11:56:20	Erlkoenig	geordi, <<TYPE<typename underlying_type<E>::type> << " " << TYPE(A); enum E {A, B, C };
2014-09-09 11:56:20	geordi	unsigned int rvalue E
2014-09-09 11:56:21	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-09 11:57:03	seishun	geordi, <<TYPE<typename underlying_type<E>::type> << " " << TYPE(A); enum E {A, B, C = -1};
2014-09-09 11:57:03	geordi	int rvalue E
2014-09-09 11:57:07	◀▬▬	p|q (~plq@78.189.180.67) has quit (Ping timeout: 264 seconds)
2014-09-09 11:57:39	▬▬▶	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has joined ##c++
2014-09-09 11:58:32	◀▬▬	BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has quit (Client Quit)
2014-09-09 12:00:30	◀▬▬	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Quit: Ex-Chat)
2014-09-09 12:03:36	▬▬▶	kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has joined ##c++
2014-09-09 12:03:44	◀▬▬	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-09-09 12:04:51	◀▬▬	c0le (~c0le@59.99.251.45) has quit (Ping timeout: 272 seconds)
2014-09-09 12:05:12	▬▬▶	glenfern (~glen@unaffiliated/glenfe) has joined ##c++
2014-09-09 12:07:03	▬▬▶	blofeld (~blofeld@gateway/tor-sasl/blofeld) has joined ##c++
2014-09-09 12:07:05	◀▬▬	PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Quit: ChatZilla 0.9.90.1 [Firefox 31.0/20140716183446])
2014-09-09 12:07:50	▬▬▶	SomeDamnBody (967da265@gateway/web/freenode/ip.150.125.162.101) has joined ##c++
2014-09-09 12:08:16	◀▬▬	paul424 (~chatzilla@apn-77-113-63-231.dynamic.gprs.plus.pl) has quit (Remote host closed the connection)
2014-09-09 12:08:19	SomeDamnBody	I need help writing a makefile, where do I go?
2014-09-09 12:09:00	◀▬▬	Anodl (~Anodl@213.157.2.74) has quit (Read error: Connection reset by peer)
2014-09-09 12:09:01	◀▬▬	Jackneill (~Jackneill@unaffiliated/jackneill) has quit (Ping timeout: 245 seconds)
2014-09-09 12:09:47	▬▬▶	jaafar (~quassel@67.135.43.183) has joined ##c++
2014-09-09 12:09:54	◀▬▬	kkimlabs (kkimlabs@nat/google/x-wsvupyseojcurriu) has quit (Ping timeout: 240 seconds)
2014-09-09 12:10:05	Erlkoenig	!give SomeDamnBody workingset
2014-09-09 12:10:07	nolyc	SomeDamnBody: Development tools on posixy platforms in ##workingset
2014-09-09 12:10:23	Erlkoenig	!give SomeDamnBody google makefile tutorial
2014-09-09 12:10:24	nolyc	SomeDamnBody: Makefile Tutorial: <http://mrbook.org/tutorials/make/>; A Simple Makefile Tutorial - Colby Computer Science: <http://www.cs.colby.edu/maxwell/courses/tutorials/maketutor/>; Makefiles: <http://www.cs.swarthmore.edu/~newhall/unixhelp/howto_makefiles.html>; Tutorial - Makefile - Opus Make: <http://www.opussoftware.com/tutorial/TutMakefile.htm>; GNU `make': (1 more message)
2014-09-09 12:10:33	SomeDamnBody	thanks
2014-09-09 12:10:35	SomeDamnBody	Erlkoenig:
2014-09-09 12:11:00	◀▬▬	WizJin (~WizJinAFK@117.208.0.63) has quit (Ping timeout: 245 seconds)
2014-09-09 12:11:01	◀▬▬	sfix (~sfix@host81-147-177-135.range81-147.btcentralplus.com) has quit (Remote host closed the connection)
2014-09-09 12:13:49	▬▬▶	Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has joined ##c++
2014-09-09 12:14:10	◀▬▬	mizvekov (~mizvekov@186-247-7-82.user.veloxzone.com.br) has quit (Quit: Leaving)
2014-09-09 12:14:29	◀▬▬	Erlkoenig (~erlkoenig@ip-109-90-150-61.hsi11.unitymediagroup.de) has quit (Quit: Leaving.)
2014-09-09 12:15:06	▬▬▶	Hydroperoxy (~Hydropero@gateway/tor-sasl/hydroperoxy) has joined ##c++
2014-09-09 12:15:28	◀▬▬	jimvideo (~jimvideo@184-12-234-43.dr01.brny.ca.frontiernet.net) has quit (Quit: Leaving)
2014-09-09 12:17:17	▬▬▶	micom (~micom@unaffiliated/micom) has joined ##c++
2014-09-09 12:17:29	▬▬▶	DrDaemonEye (~deamoneye@unaffiliated/daemoneye) has joined ##c++
2014-09-09 12:18:43	◀▬▬	blofeld (~blofeld@gateway/tor-sasl/blofeld) has quit (Quit: WeeChat 1.0)
2014-09-09 12:20:26	◀▬▬	DTSCode (~dtscode@rrcs-67-53-109-252.west.biz.rr.com) has quit (Ping timeout: 240 seconds)
2014-09-09 12:20:32	◀▬▬	syncrow (syncrow@unaffiliated/syncrow) has quit (Quit: Lost terminal)
2014-09-09 12:20:43	◀▬▬	synapt (NBishop@pdpc/supporter/monthlybronze/synapt) has quit (Ping timeout: 240 seconds)
2014-09-09 12:20:52	◀▬▬	Andy-chan (~Andy-chan@xdsl-84-44-171-12.netcologne.de) has quit (Read error: Connection reset by peer)
2014-09-09 12:20:56	◀▬▬	DylanJ (~DylanJ@unaffiliated/dylanj) has quit (Ping timeout: 240 seconds)
2014-09-09 12:21:17	▬▬▶	Andy-chan (~Andy-chan@xdsl-84-44-171-12.netcologne.de) has joined ##c++
2014-09-09 12:21:35	▬▬▶	synapt (NBishop@pdpc/supporter/monthlybronze/synapt) has joined ##c++
2014-09-09 12:21:41	▬▬▶	RazielZ (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has joined ##c++
2014-09-09 12:22:00	▬▬▶	Jesin (~Jesin@Dyn159138.cc.lehigh.edu) has joined ##c++
2014-09-09 12:22:27	▬▬▶	xyzodiac (~xyzodiac@ip98-180-46-140.ga.at.cox.net) has joined ##c++
2014-09-09 12:23:14	◀▬▬	IsaacP (~IsaacP@71.46.255.226) has quit (Quit: IsaacP)
2014-09-09 12:24:31	▬▬▶	IsaacP (~IsaacP@71.46.255.226) has joined ##c++
2014-09-09 12:24:42	◀▬▬	Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 246 seconds)
2014-09-09 12:25:40	◀▬▬	hellangel7 (~hellangel@117.221.126.137) has quit (Remote host closed the connection)
2014-09-09 12:25:53	▬▬▶	lilVaratep (~lilVarate@99-117-42-51.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-09-09 12:26:13	◀▬▬	interop_madness (~invalid@unaffiliated/interop-madness/x-8858653) has quit (Quit: Leaving)
2014-09-09 12:26:22	◀▬▬	Jesin (~Jesin@Dyn159138.cc.lehigh.edu) has quit (Client Quit)
2014-09-09 12:26:49	◀▬▬	adu (~ajr@static-108-48-76-162.washdc.fios.verizon.net) has quit (Quit: adu)
2014-09-09 12:27:21	▬▬▶	Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has joined ##c++
2014-09-09 12:27:42	--	irc: disconnected from server
2014-09-09 12:28:06	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-09 12:28:06	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-09 12:28:06	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-09 12:28:06	--	Channel ##c++: 482 nicks (0 ops, 0 voices, 482 normals)
2014-09-09 12:28:07	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-09 12:28:13	◀▬▬	danmar (~danmar@94.234.170.182) has quit (Ping timeout: 246 seconds)
2014-09-09 12:28:16	▬▬▶	Albori (~Albori@67-43-242-246.fidnet.com) has joined ##c++
2014-09-09 12:28:19	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-09 12:28:37	◀▬▬	Hydroperoxy (~Hydropero@gateway/tor-sasl/hydroperoxy) has quit (Ping timeout: 264 seconds)
2014-09-09 12:29:36	◀▬▬	RazielZ (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 246 seconds)
2014-09-09 12:30:52	◀▬▬	LBV_User (~leonardo@177.2.128.75) has quit (Quit: Bye all :))
2014-09-09 12:31:41	◀▬▬	xyzodiac (~xyzodiac@ip98-180-46-140.ga.at.cox.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-09-09 12:35:02	◀▬▬	patteh (~patteh@unaffiliated/patteh) has quit (Remote host closed the connection)
2014-09-09 12:35:19	▬▬▶	patteh (~patteh@unaffiliated/patteh) has joined ##c++
2014-09-09 12:35:56	◀▬▬	glenfern (~glen@unaffiliated/glenfe) has quit (Ping timeout: 252 seconds)
2014-09-09 12:38:03	◀▬▬	Nach0z (~nach0z@unaffiliated/nach0z) has quit (Quit: leaving)
2014-09-09 12:38:47	▬▬▶	Hydroperoxy (~Hydropero@gateway/tor-sasl/hydroperoxy) has joined ##c++
2014-09-09 12:39:08	◀▬▬	jaafar (~quassel@67.135.43.183) has quit (Ping timeout: 268 seconds)
2014-09-09 12:39:33	▬▬▶	glenfern (~glen@unaffiliated/glenfe) has joined ##c++
2014-09-09 12:40:19	▬▬▶	adek (~adek@S010678cd8e7c9c40.vc.shawcable.net) has joined ##c++
2014-09-09 12:42:08	--	irc: disconnected from server
2014-09-09 12:43:03	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-09 12:43:03	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-09 12:43:03	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-09 12:43:03	--	Channel ##c++: 478 nicks (0 ops, 0 voices, 478 normals)
2014-09-09 12:43:04	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-09 12:43:07	▬▬▶	Jesin (~Jesin@Dyn159138.cc.lehigh.edu) has joined ##c++
2014-09-09 12:43:15	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-09 12:43:24	--	irc: disconnected from server
2014-09-09 12:54:54	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-09 12:54:54	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-09 12:54:54	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-09 12:54:54	--	Channel ##c++: 481 nicks (0 ops, 0 voices, 481 normals)
2014-09-09 12:54:55	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-09 12:55:06	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-09 12:55:32	StPiere	thsimpson, thanks ... that   would be the one solid solution.. with cmake could do that... i just thought there  is some other elegant  way too
2014-09-09 12:55:38	StPiere	but it seems  there isnt
2014-09-09 12:56:10	▬▬▶	Longlius (~longlius@141.225.243.254) has joined ##c++
2014-09-09 12:56:10	◀▬▬	freeflyn (~flyn@unaffiliated/freeflyn) has left ##c++ ("WeeChat 0.4.3")
2014-09-09 12:56:21	Kaini	Well you could ensure that your working directory is set correctly and use relative paths
2014-09-09 12:56:28	▬▬▶	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has joined ##c++
2014-09-09 12:56:34	▬▬▶	arvut (~arvut@unaffiliated/arvut) has joined ##c++
2014-09-09 12:57:52	StPiere	Kaini, thanks ... but that  goes again  back to the question, where the executing app really resides
2014-09-09 12:57:56	◀▬▬	eutheria (~eutheria@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has quit (Remote host closed the connection)
2014-09-09 12:58:40	◀▬▬	Ulrike_Rayne (~Ulrike_Ra@cpe-65-24-84-7.columbus.res.rr.com) has quit (Ping timeout: 246 seconds)
2014-09-09 12:58:55	StPiere	i think it's not possible without some sort of configuration, like tsimpson said
2014-09-09 12:59:23	◀▬▬	Andy-chan (~Andy-chan@xdsl-84-44-171-12.netcologne.de) has quit (Read error: Connection reset by peer)
2014-09-09 12:59:37	Kaini	StPiere: Depending on your platform this can done by a startup script or something. But a configuration is by far the nicest solution (I guess)
2014-09-09 12:59:45	▬▬▶	flugo (~flugo@115.248.45.78) has joined ##c++
2014-09-09 12:59:48	▬▬▶	Andy-chan (~Andy-chan@xdsl-84-44-171-12.netcologne.de) has joined ##c++
2014-09-09 13:00:06	StPiere	+1 for configuration file :)
2014-09-09 13:00:46	◀▬▬	bumbar_ (~username@89-212-121-1.dynamic.dsl.t-2.net) has quit (Ping timeout: 246 seconds)
2014-09-09 13:01:54	▬▬▶	cbot` (~FS@150.108.238.42) has joined ##c++
2014-09-09 13:01:56	◀▬▬	aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-09-09 13:02:38	▬▬▶	deSilva (deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-09-09 13:02:45	▬▬▶	hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-09-09 13:04:44	▬▬▶	Gluesticky (~nobody@unaffiliated/gluesticky) has joined ##c++
2014-09-09 13:05:33	◀▬▬	glenfern (~glen@unaffiliated/glenfe) has quit
2014-09-09 13:06:00	◀▬▬	StPiere (~daniel@84.115.231.105) has quit (Quit: leaving)
2014-09-09 13:06:46	▬▬▶	Zifre (~Zifre@unaffiliated/zifre) has joined ##c++
2014-09-09 13:07:04	▬▬▶	snyp (~snyp@223.29.204.2) has joined ##c++
2014-09-09 13:08:03	▬▬▶	natechan (~natechan@67.135.43.183) has joined ##c++
2014-09-09 13:08:27	AbleBacon	function parameter "Arg const& arg"... is this the same as "Arg& const arg"? what about "const Arg& arg"?
2014-09-09 13:08:28	◀▬▬	thejohnfreeman (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has quit (Read error: Connection reset by peer)
2014-09-09 13:08:44	▬▬▶	aslant (~aslant@37.157.33.76) has joined ##c++
2014-09-09 13:08:45	RlyDontKnow	AbleBacon: there's no Arg & const
2014-09-09 13:08:50	RlyDontKnow	because references are always const
2014-09-09 13:08:57	▬▬▶	thejohnfreeman (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has joined ##c++
2014-09-09 13:09:03	AbleBacon	references are always const...
2014-09-09 13:09:03	RlyDontKnow	Arg const & and const Arg & are the same, though
2014-09-09 13:09:07	AbleBacon	oh the reference itself
2014-09-09 13:09:10	RlyDontKnow	yes
2014-09-09 13:09:19	AbleBacon	but if you change that "&"
2014-09-09 13:09:23	AbleBacon	to a "*"
2014-09-09 13:09:35	AbleBacon	then it's different (the rules of which i already understand)
2014-09-09 13:09:36	▬▬▶	dapz (~textual@216.239.45.93) has joined ##c++
2014-09-09 13:09:40	RlyDontKnow	correct
2014-09-09 13:09:47	AbleBacon	okay awesome
2014-09-09 13:09:50	Griwes	can you ask a concrete question that doesn't boil down to "I didn't read my book"? :D
2014-09-09 13:10:09	RlyDontKnow	for a pointer you'd have those combinations: T *, T const *, T * const, T const * const - all are different types
2014-09-09 13:10:13	AbleBacon	sorry! just asking for clarification
2014-09-09 13:10:29	◀▬▬	Mio-chan (~Mio-chan@unaffiliated/mio-chan) has quit (Quit: Leaving)
2014-09-09 13:10:32	▬▬▶	kailoAtWork (~kailoAtWo@cpe-104-33-2-39.socal.res.rr.com) has joined ##c++
2014-09-09 13:10:41	◀▬▬	Zifre_ (~Zifre@unaffiliated/zifre) has quit (Ping timeout: 245 seconds)
2014-09-09 13:11:08	◀▬▬	dapz (~textual@216.239.45.93) has quit (Client Quit)
2014-09-09 13:11:36	▬▬▶	xyzodiac (~xyzodiac@ip98-180-46-140.ga.at.cox.net) has joined ##c++
2014-09-09 13:12:26	◀▬▬	jaafar (~quassel@67.135.43.183) has quit (Ping timeout: 268 seconds)
2014-09-09 13:12:38	▬▬▶	paullik (~paullik@unaffiliated/paullik) has joined ##c++
2014-09-09 13:13:06	▬▬▶	klarrt (~dolmen@46-236-87-230.customer.t3.se) has joined ##c++
2014-09-09 13:13:26	◀▬▬	kailoAtWork (~kailoAtWo@cpe-104-33-2-39.socal.res.rr.com) has quit (Client Quit)
2014-09-09 13:13:33	▬▬▶	dapz (~textual@216.239.45.93) has joined ##c++
2014-09-09 13:14:26	◀▬▬	Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 252 seconds)
2014-09-09 13:16:16	▬▬▶	skeuomorf (~skeuomorf@unaffiliated/skeuomorf) has joined ##c++
2014-09-09 13:16:20	◀▬▬	LBV_User (~leonardo@177.2.128.75) has quit (Read error: Connection reset by peer)
2014-09-09 13:17:03	◀▬▬	xyzodiac (~xyzodiac@ip98-180-46-140.ga.at.cox.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-09-09 13:17:12	▬▬▶	LBV_User (~leonardo@177.2.128.75) has joined ##c++
2014-09-09 13:18:30	▬▬▶	Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has joined ##c++
2014-09-09 13:19:20	◀▬▬	deSilva (deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-09-09 13:20:58	--	irc: disconnected from server
2014-09-09 13:58:22	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-09 13:58:22	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-09 13:58:22	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-09 13:58:22	--	Channel ##c++: 488 nicks (0 ops, 0 voices, 488 normals)
2014-09-09 13:58:23	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-09 13:58:33	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-09 14:00:07	◀▬▬	ans_ashkan (~ans_ashka@2.190.199.126) has quit (Quit: Leaving)
2014-09-09 14:01:43	◀▬▬	Biohazard (illuminati@188.113.81.176) has quit (Read error: Connection reset by peer)
2014-09-09 14:02:06	◀▬▬	dapz (~textual@216.239.45.93) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-09-09 14:02:11	◀▬▬	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 260 seconds)
2014-09-09 14:02:38	▬▬▶	Biohazard (illuminati@188.113.81.176) has joined ##c++
2014-09-09 14:04:28	◀▬▬	V-ille (~ville@59ec6584.symbio.com) has quit (Quit: Leaving.)
2014-09-09 14:04:32	▬▬▶	jaafar (~quassel@67.135.43.183) has joined ##c++
2014-09-09 14:04:52	▬▬▶	dapz (~textual@216.239.45.93) has joined ##c++
2014-09-09 14:08:04	◀▬▬	aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-09-09 14:08:58	▬▬▶	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:f191:a55e:4a52:a36a) has joined ##c++
2014-09-09 14:09:57	◀▬▬	dumdedum (~dumdedum@212.97.161.141.static.user.ono.com) has quit (Quit: foo)
2014-09-09 14:10:09	◀▬▬	dapz (~textual@216.239.45.93) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-09-09 14:11:13	▬▬▶	dapz (~textual@216.239.45.93) has joined ##c++
2014-09-09 14:11:40	▬▬▶	eean (~quassel@amarok/developer/eean) has joined ##c++
2014-09-09 14:12:13	◀▬▬	dapz (~textual@216.239.45.93) has quit (Client Quit)
2014-09-09 14:13:14	▬▬▶	dapz (~textual@216.239.45.93) has joined ##c++
2014-09-09 14:14:07	▬▬▶	mizvekov (~mizvekov@139.82.143.58) has joined ##c++
2014-09-09 14:14:10	◀▬▬	Px12 (~Px12@117.199.171.75) has quit (Read error: Connection reset by peer)
2014-09-09 14:15:57	◀▬▬	jaafar (~quassel@67.135.43.183) has quit (Ping timeout: 268 seconds)
2014-09-09 14:16:22	▬▬▶	ambro718 (~ambro@gentoo/contributor/ambro718) has joined ##c++
2014-09-09 14:17:13	◀▬▬	bszmyd (~bszmyd@c-71-56-237-218.hsd1.co.comcast.net) has quit (Ping timeout: 272 seconds)
2014-09-09 14:17:26	▬▬▶	DylanJ (DylanJ@unaffiliated/dylanj) has joined ##c++
2014-09-09 14:17:46	▬▬▶	jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has joined ##c++
2014-09-09 14:18:17	◀▬▬	dapz (~textual@216.239.45.93) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-09-09 14:18:39	◀▬▬	flugo (~flugo@103.225.100.51) has quit (Ping timeout: 276 seconds)
2014-09-09 14:19:31	▬▬▶	Tectu_ (~Tectu@78-167.60-188.cust.bluewin.ch) has joined ##c++
2014-09-09 14:19:47	◀▬▬	Biohazard (illuminati@188.113.81.176) has quit (Read error: Connection reset by peer)
2014-09-09 14:20:52	▬▬▶	Biohazard (illuminati@188.113.81.176) has joined ##c++
2014-09-09 14:25:01	▬▬▶	Hannibal_Smith (~Hannibal_@host218-43-dynamic.250-95-r.retail.telecomitalia.it) has joined ##c++
2014-09-09 14:25:10	▬▬▶	zyrox (~zyrox@cm-84.208.166.208.getinternet.no) has joined ##c++
2014-09-09 14:25:23	▬▬▶	kailoAtWork (~kailoAtWo@208.184.77.122) has joined ##c++
2014-09-09 14:25:28	◀▬▬	riksteri (~riksteri@dsl-tkubrasgw3-54f96b-216.dhcp.inet.fi) has quit (Quit: riksteri)
2014-09-09 14:26:03	◀▬▬	Sauvin (~Savinus@about/linux/staff/sauvin) has quit (Remote host closed the connection)
2014-09-09 14:26:58	▬▬▶	skulltower (~none@gateway/tor-sasl/skulltower) has joined ##c++
2014-09-09 14:27:03	▬▬▶	tharron (~310175663@161.84.227.12) has joined ##c++
2014-09-09 14:27:53	◀▬▬	Anodl (~Anodl@p5DC5A1A1.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-09-09 14:28:32	▬▬▶	LunarJetman (LunarJetma@05400825.skybroadband.com) has joined ##c++
2014-09-09 14:28:34	skulltower	Hello. I have this code: http://pastebin.com/vy7YQGJr I'm looking to store objects in a vector and have a function that inits them. However they get destroyed once I leave the scope (init function). Should I use pointers here or is there some other way I'm missing?
2014-09-09 14:29:21	micom	skulltower, they shouldnt be destroyed
2014-09-09 14:29:47	micom	skulltower, there will be existing as long as  vector<item> exists
2014-09-09 14:30:02	ville	skulltower: vector copies whatever you push_back() into it so you're right the one you create on line 15 gets killed at the ; on the same line
2014-09-09 14:30:30	skulltower	Oh
2014-09-09 14:30:44	irrenhaus3	skulltower: you might want to use emplace_back instead
2014-09-09 14:30:50	ville	skulltower: but it's alright since there's a copy which lifetime the vector manages
2014-09-09 14:30:58	irrenhaus3	that one constructs new instances of your item inside the vector
2014-09-09 14:31:33	◀▬▬	Biohazard (illuminati@188.113.81.176) has quit (Read error: Connection reset by peer)
2014-09-09 14:31:58	◀▬▬	sohail (~user@unaffiliated/sohail) has quit (Ping timeout: 255 seconds)
2014-09-09 14:32:05	▬▬▶	Biohazard (illuminati@188.113.81.176) has joined ##c++
2014-09-09 14:32:40	skulltower	irrenhaus3, nice tip! Thanks. Thanks all for quick info.
2014-09-09 14:33:57	▬▬▶	sohail (~user@unaffiliated/sohail) has joined ##c++
2014-09-09 14:34:11	▬▬▶	GinoMan (~Gino@pool-72-94-39-83.phlapa.fios.verizon.net) has joined ##c++
2014-09-09 14:34:36	◀▬▬	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:f191:a55e:4a52:a36a) has quit (Read error: Connection reset by peer)
2014-09-09 14:34:57	◀▬▬	Drew_ (~Drew@2602:306:c491:ef10:7076:edcd:6607:29f9) has quit (Read error: Connection reset by peer)
2014-09-09 14:35:07	▬▬▶	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:f191:a55e:4a52:a36a) has joined ##c++
2014-09-09 14:35:29	▬▬▶	Drew_ (~Drew@2602:306:c491:ef10:7076:edcd:6607:29f9) has joined ##c++
2014-09-09 14:36:28	◀▬▬	IsaacP (~IsaacP@71.46.255.226) has quit (Quit: IsaacP)
2014-09-09 14:38:13	◀▬▬	lh_mouse (~lh_mouse@61.171.141.142) has quit (Quit: night)
2014-09-09 14:38:25	◀▬▬	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:f191:a55e:4a52:a36a) has quit (Client Quit)
2014-09-09 14:38:42	◀▬▬	maxorator (~maxorator@185.7.254.18) has quit (Excess Flood)
2014-09-09 14:39:11	▬▬▶	Haswell (~Haswell@unaffiliated/haswell) has joined ##c++
2014-09-09 14:39:57	▬▬▶	jitsuin (~chatzilla@216.14.6.130) has joined ##c++
2014-09-09 14:40:40	▬▬▶	maxorator (~maxorator@185.7.254.18) has joined ##c++
2014-09-09 14:41:45	▬▬▶	adek (~adek@S010678cd8e7c9c40.vc.shawcable.net) has joined ##c++
2014-09-09 14:42:07	--	irc: disconnected from server
2014-09-09 22:06:18	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-09 22:06:18	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-09 22:06:18	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-09 22:06:18	--	Channel ##c++: 466 nicks (0 ops, 0 voices, 466 normals)
2014-09-09 22:06:19	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-09 22:06:29	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-09 22:07:44	▬▬▶	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-09-09 22:07:52	◀▬▬	Burgundy (~burgundy@188.26.170.123) has quit (Ping timeout: 264 seconds)
2014-09-09 22:09:34	◀▬▬	nikki93 (~nikki93@nat-oitwireless-outside-vapornet3-d-254.Princeton.EDU) has quit (Ping timeout: 255 seconds)
2014-09-09 22:11:56	◀▬▬	flugo (~flugo@103.225.100.51) has quit (Remote host closed the connection)
2014-09-09 22:13:53	▬▬▶	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has joined ##c++
2014-09-09 22:16:17	◀▬▬	zhaodx (~Thunderbi@218.76.52.64) has quit (Quit: zhaodx)
2014-09-09 22:16:34	▬▬▶	saml_ (~saml@pool-71-190-0-123.nycmny.east.verizon.net) has joined ##c++
2014-09-09 22:16:55	▬▬▶	Aetix (~aetix@unaffiliated/aetix) has joined ##c++
2014-09-09 22:16:56	▬▬▶	zhaodx (~Thunderbi@218.76.52.64) has joined ##c++
2014-09-09 22:20:31	▬▬▶	Carbonflux (~BOB@174-21-109-233.tukw.qwest.net) has joined ##c++
2014-09-09 22:23:19	◀▬▬	aslant (~aslant@5751a00f.skybroadband.com) has quit (Remote host closed the connection)
2014-09-09 22:23:29	◀▬▬	kailoAtWork (~kailoAtWo@cpe-104-33-2-39.socal.res.rr.com) has quit (Quit: This computer has gone to sleep)
2014-09-09 22:23:41	◀▬▬	CJKay[Desktop] (~CJKay@unaffiliated/cjkay) has quit (Ping timeout: 268 seconds)
2014-09-09 22:26:34	◀▬▬	sfeinste (~sfeinste@ip70-178-124-172.ks.ks.cox.net) has quit (Quit: Leaving...)
2014-09-09 22:27:51	◀▬▬	Phlow (~Kiss@c-98-192-129-67.hsd1.fl.comcast.net) has quit (Read error: Connection reset by peer)
2014-09-09 22:28:49	◀▬▬	zhaodx (~Thunderbi@218.76.52.64) has quit (Quit: zhaodx)
2014-09-09 22:29:17	▬▬▶	aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-09-09 22:29:50	▬▬▶	zhaodx (~Thunderbi@218.76.52.64) has joined ##c++
2014-09-09 22:29:54	▬▬▶	Phlow (~Kiss@c-98-192-129-67.hsd1.fl.comcast.net) has joined ##c++
2014-09-09 22:30:33	▬▬▶	ladrone (~ladrone@unaffiliated/ladrone) has joined ##c++
2014-09-09 22:30:45	◀▬▬	aslant (~aslant@5751a00f.skybroadband.com) has quit (Remote host closed the connection)
2014-09-09 22:31:49	◀▬▬	arvind_k (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Ping timeout: 272 seconds)
2014-09-09 22:31:54	▬▬▶	flugo (~flugo@103.225.100.51) has joined ##c++
2014-09-10 11:11:15	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-10 11:11:15	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-10 11:11:15	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-10 11:11:15	--	Channel ##c++: 473 nicks (0 ops, 0 voices, 473 normals)
2014-09-10 11:11:15	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-10 11:11:24	Timbo	(but I understand your explanation)
2014-09-10 11:11:31	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-10 11:11:47	hs_	K-ballo, ..yes..(?)... gonna go with -yes-
2014-09-10 11:11:54	hs_	K-ballo, (why wouldn't they be?)
2014-09-10 11:12:04	Griwes	Timbo, not really
2014-09-10 11:12:12	Griwes	there are multiple names you can have for a type
2014-09-10 11:12:13	▬▬▶	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-09-10 11:12:19	K-ballo	hs_: I'd love to go with yes, but I can't find anything backing it :) even more, it appears that the order of destruction of temporaries is not specified
2014-09-10 11:12:41	hs_	K-ballo, "temporaries"?
2014-09-10 11:12:59	hs_	which ones
2014-09-10 11:13:09	▬▬▶	BadQuanta (~badquanta@2601:7:100:ecc:2d9e:5e92:f43d:dddc) has joined ##c++
2014-09-10 11:13:11	PlasmaHH	the order of destruction of everything is well defined.
2014-09-10 11:13:20	CJKay	Timbo: Another trick is using decltype() on unnamed structs
2014-09-10 11:13:27	▬▬▶	satta_satta (~GC-I@pd95c7d39.dip0.t-ipconnect.de) has joined ##c++
2014-09-10 11:13:27	K-ballo	hs_: I can only think of one kind of temporaries, which ones do you have in mind?
2014-09-10 11:14:04	hs_	in what sense are thread_local's "temporaries"?
2014-09-10 11:14:27	hs_	i thought they were people too
2014-09-10 11:14:42	K-ballo	hs_: ah no, that was a somewhat related observation only, there's a note (sure not normative) that reads "usually in reverse order of the construction of each temporary object"
2014-09-10 11:15:04	◀▬▬	Sculptor (~Sculptor@trivialand/master/sculptor) has quit (Ping timeout: 276 seconds)
2014-09-10 11:15:20	K-ballo	I was hoping maybe there was a blanket "everything is destroyed in reverse order of construction", but then that note makes me doubt
2014-09-10 11:16:06	hs_	do statics destroy in reverse order?
2014-09-10 11:16:08	◀▬▬	blackdev1l (~nil@95.233.220.150) has quit (Remote host closed the connection)
2014-09-10 11:16:31	hs_	by the time I am exiting the program I do not want to look back, so I haven't been careful about this =]
2014-09-10 11:16:34	▬▬▶	Sculptor (~Sculptor@trivialand/master/sculptor) has joined ##c++
2014-09-10 11:16:36	K-ballo	hs_: global statics sure, the others I'm not sure
2014-09-10 11:17:45	◀▬▬	francisl (~flavoie@NFBONF.NFB.CA) has quit (Quit: francisl)
2014-09-10 11:17:56	hs_	so "usually" has you worried
2014-09-10 11:18:36	K-ballo	nod, a non-normative "usually" and the fact that I cannot find anything that explicitly says what I want
2014-09-10 11:19:06	K-ballo	btw, temporaries whose lifetime is extended by bounding them to refs are guaranteed to be destroyed in reverse order (normative)
2014-09-10 11:20:08	▬▬▶	chatsiri_ (~chatsiri_@119-46-191-20.static.asianet.co.th) has joined ##c++
2014-09-10 11:20:25	K-ballo	I'll have to spend more time on this than I'd have wished, greping for "reverse" is not enough :P
2014-09-10 11:21:10	◀▬▬	satta_satta (~GC-I@pd95c7d39.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-09-10 11:21:22	hs_	[basic.start.term]
2014-09-10 11:21:34	◀▬▬	natechan (~natechan@206.169.237.3) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-09-10 11:21:59	introom	first time know cpp supports the literal version, e.g., ^ can be written as xor, cool
2014-09-10 11:22:22	hs_	"If the completion of the constructor or dynamic initialization of an object with thread storage duration is sequenced before that of another, the completion of the destructor of the second is sequenced before the initiation of the destructor of the first."
2014-09-10 11:22:42	◀▬▬	da2ce7 (~da2ce7@opentransactions/dev/da2ce7) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-09-10 11:22:43	◀▬▬	h_enke (~henkik@s213-103-200-208.cust.tele2.se) has quit (Quit: leaving)
2014-09-10 11:22:49	K-ballo	hs_: thanks!
2014-09-10 11:23:03	hs_	K-ballo, I think the "usually" is there to warn about exceptions triggering terminate
2014-09-10 11:23:17	hs_	"If the destruction of an object with static or thread storage duration exits via an exception, std::terminate is called"
2014-09-10 11:23:33	K-ballo	hs_: I don't know, I'll dig a bit more and then ask core if still in doubt
2014-09-10 11:23:52	◀▬▬	ablepharus (~user@pD9E32A64.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2014-09-10 11:24:00	K-ballo	given that the construction order of temporaries is not specified, it could be understandable that their destruction order isn't either
2014-09-10 11:25:03	hs_	by 'temporaries' you mean rvalue expressions, and by "not specified" you mean in the context of something like f(exp1, exp2)
2014-09-10 11:25:06	hs_	?
2014-09-10 11:25:44	▬▬▶	Tectu_ (~Tectu@78-167.60-188.cust.bluewin.ch) has joined ##c++
2014-09-10 11:25:50	▬▬▶	fabj2 (~chatzilla@CPE0022158de9ee-CM0011aea49d34.cpe.net.cable.rogers.com) has joined ##c++
2014-09-10 11:26:46	K-ballo	hs_: I mean [intro.execution]p14
2014-09-10 11:26:50	◀▬▬	hyperair (~hyperair@ubuntu/member/hyperair) has quit (Ping timeout: 246 seconds)
2014-09-10 11:26:58	▬▬▶	deanrock0 (~deanrock0@cpe-77.38.57.189.cable.t-1.si) has joined ##c++
2014-09-10 11:27:03	◀▬▬	deanrock0 (~deanrock0@cpe-77.38.57.189.cable.t-1.si) has quit (Max SendQ exceeded)
2014-09-10 11:27:12	◀▬▬	BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has quit
2014-09-10 11:27:48	▬▬▶	impy (~impy@231.187-66-87.adsl-dyn.isp.belgacom.be) has joined ##c++
2014-09-10 11:28:14	hs_	help me out..
2014-09-10 11:28:23	hs_	where's the temporary stuff?
2014-09-10 11:28:36	hs_	you are pointing to "Every value computation and side effect..."?
2014-09-10 11:28:56	◀▬▬	Draecos (~Draecos@124.149.136.155) has quit (Quit: This computer has gone to sleep)
2014-09-10 11:29:11	K-ballo	hs_: yep, follow the footnote
2014-09-10 11:29:17	◀▬▬	chewyDelicious (~nooblet@124-197-38-147.callplus.net.nz) has quit (Ping timeout: 246 seconds)
2014-09-10 11:30:41	◀▬▬	megadonkey (~chatzilla@59.167.188.32) has quit (Ping timeout: 246 seconds)
2014-09-10 11:30:46	hs_	ok, so in f(exp1, exp2), the "construction" of exp1 and exp2 is not ordered, and so the destruction is not ordered, and presumably it isn't even associated: so exp1 could construct first but destruct first, since they are not inherently sequenced
2014-09-10 11:31:03	▬▬▶	adek (~adek@S010678cd8e7c9c40.vc.shawcable.net) has joined ##c++
2014-09-10 11:31:31	hs_	so f(A{},B{}) might see A() ~A() B() ~B(), etc
2014-09-10 11:31:48	hs_	but those are goofy expressions and not majestic thread_local objects
2014-09-10 11:31:48	K-ballo	hs_: that's my impression, but I'm basing it on a non-normative footnote
2014-09-10 11:32:07	▬▬▶	sdaq (~sdaq@static-108-48-202-82.washdc.fios.verizon.net) has joined ##c++
2014-09-10 11:33:16	K-ballo	hs_: sorry if I made that unclear, there was no direct relation between the two.. it's just that it implies that the order of destruction is not well defined for everything, and without the termination bit you mentioned it made me worry
2014-09-10 11:33:24	▬▬▶	V-ille (~ville@dsl-olubrasgw1-54fb46-165.dhcp.inet.fi) has joined ##c++
2014-09-10 11:33:41	◀▬▬	sdaq (~sdaq@static-108-48-202-82.washdc.fios.verizon.net) has quit (Client Quit)
2014-09-10 11:34:10	hs_	I think the rule of thumb is that if it is initialized in some order it is destructed in some (reverse) order
2014-09-10 11:34:18	hs_	those expressions don't match the first criteria
2014-09-10 11:34:34	▬▬▶	h_enke (~henkik@s213-103-200-208.cust.tele2.se) has joined ##c++
2014-09-10 11:34:57	K-ballo	yep, that was my general expectation too
2014-09-10 11:35:04	◀▬▬	impy (~impy@231.187-66-87.adsl-dyn.isp.belgacom.be) has quit (Ping timeout: 255 seconds)
2014-09-10 11:37:06	▬▬▶	chewyDelicious (~nooblet@124-197-38-147.callplus.net.nz) has joined ##c++
2014-09-10 11:37:27	◀▬▬	IronBeam (~far@onegrandcircle.com) has left ##c++
2014-09-10 11:38:01	▬▬▶	kailoAtWork (~kailoAtWo@104.33.2.39) has joined ##c++
2014-09-10 11:38:35	▬▬▶	comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has joined ##c++
2014-09-10 11:43:29	◀▬▬	devm33 (~devm33@112-68-167-198f1.nar1.eonet.ne.jp) has quit (Ping timeout: 245 seconds)
2014-09-10 11:43:36	▬▬▶	bacon000 (~nobody@50-1-81-63.dsl.dynamic.sonic.net) has joined ##c++
2014-09-10 11:45:23	◀▬▬	Flannel (~flannel@ubuntu/member/flannel) has quit (Ping timeout: 246 seconds)
2014-09-10 11:45:25	◀▬▬	gold-digger (~textual@173-161-101-41-Illinois.hfc.comcastbusiness.net) has quit
2014-09-10 11:46:20	◀▬▬	PlasmaHH (~plasmahh@213.61.9.75) has quit
2014-09-10 11:46:48	▬▬▶	gold-digger (~textual@173-161-101-41-Illinois.hfc.comcastbusiness.net) has joined ##c++
2014-09-10 11:47:11	◀▬▬	DianaMadsen (~diana@www.dianamadsen.dk) has quit (Quit: Lost terminal)
2014-09-10 11:47:16	◀▬▬	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Quit: 00 PC LOAD LETTER)
2014-09-10 11:47:19	▬▬▶	Flannel (~flannel@ubuntu/member/flannel) has joined ##c++
2014-09-10 11:47:30	▬▬▶	Jesin (~Jesin@Dyn142129.cc.lehigh.edu) has joined ##c++
2014-09-10 11:47:43	▬▬▶	hellangel7 (~hellangel@61.3.105.101) has joined ##c++
2014-09-10 11:48:41	◀▬▬	sssilver (~silver@38.122.48.218) has quit (Read error: Connection reset by peer)
2014-09-10 11:48:42	▬▬▶	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-09-10 11:49:15	◀▬▬	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Quit: Ex-Chat)
2014-09-10 11:49:29	▬▬▶	sssilver (~silver@38.122.48.218) has joined ##c++
2014-09-10 11:49:33	◀▬▬	sohail (~user@unaffiliated/sohail) has quit (Remote host closed the connection)
2014-09-10 11:49:51	▬▬▶	sohail (~user@unaffiliated/sohail) has joined ##c++
2014-09-10 11:51:45	◀▬▬	sssilver (~silver@38.122.48.218) has quit (Read error: Connection reset by peer)
2014-09-10 11:51:52	◀▬▬	vinleod (~vinleod@75-164-224-169.ptld.qwest.net) has quit (Quit: Computer has gone to sleep.)
2014-09-10 11:51:53	▬▬▶	LiohAu (~LiohAu@lse83-h04-89-86-22-242.dsl.sta.abo.bbox.fr) has joined ##c++
2014-09-10 11:52:21	◀▬▬	p|q (~plq@78.189.180.67) has quit (Ping timeout: 272 seconds)
2014-09-10 11:52:51	▬▬▶	sssilver (~silver@38.122.48.218) has joined ##c++
2014-09-10 11:52:55	▬▬▶	lkb (~luck@cgp251.neoplus.adsl.tpnet.pl) has joined ##c++
2014-09-10 11:53:26	▬▬▶	Haswell (~Haswell@unaffiliated/haswell) has joined ##c++
2014-09-10 11:54:22	▬▬▶	safinaskar (~user@safinaskar.com) has joined ##c++
2014-09-10 11:55:15	◀▬▬	sssilver (~silver@38.122.48.218) has quit (Read error: Connection reset by peer)
2014-09-10 11:55:19	safinaskar	hi! i want to ask my question again. why the output is so strange?
2014-09-10 11:55:29	safinaskar	geordi: int x = 0; decltype(auto) f(){ return x; } decltype(auto) g(){ return (x); } int main() {cout << ETYPE(f()), ETYPE(g());}
2014-09-10 11:55:30	geordi	rvalue int, lvalue int
2014-09-10 11:56:08	safinaskar	and https://isocpp.org/wiki/faq/cpp14-language asknoledges such absolutely WTF-behavior
2014-09-10 11:56:12	▬▬▶	sssilver (~silver@38.122.48.218) has joined ##c++
2014-09-10 11:56:18	▬▬▶	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has joined ##c++
2014-09-10 11:56:33	hs_	safinaskar, because that's the rule for decltype((x))
2014-09-10 11:56:35	▬▬▶	f00dWorksta (~f00dWorks@158.106.65.66) has joined ##c++
2014-09-10 11:56:39	K-ballo	because x is a name, and (x) is an expression
2014-09-10 11:57:02	hs_	and decltype(auto) means "use the decltype rules in deducing auto"
2014-09-10 11:57:24	K-ballo	delctype(x) asks what the type of that x is, decltype((x)) asks what the type of the (x) expression is
2014-09-10 11:58:55	safinaskar	hs_: K-ballo: this is very unlogical. why not make "x" lvalue expression too?
2014-09-10 11:59:55	K-ballo	safinaskar: delctype is overloaded, a "proper" solution would have been to have separate decltype and exprtype operators
2014-09-10 12:00:30	K-ballo	dropping one of them is not a proper solution, however logical that sounds to you
2014-09-10 12:00:41	◀▬▬	gold-digger (~textual@173-161-101-41-Illinois.hfc.comcastbusiness.net) has quit
2014-09-10 12:01:01	▬▬▶	nfk (~nfk@unaffiliated/nfk) has joined ##c++
2014-09-10 12:01:09	◀▬▬	adek (~adek@S010678cd8e7c9c40.vc.shawcable.net) has quit (Remote host closed the connection)
2014-09-10 12:01:19	CJKay	Yesssss binary literals!
2014-09-10 12:01:48	▬▬▶	adek (~adek@S010678cd8e7c9c40.vc.shawcable.net) has joined ##c++
2014-09-10 12:02:37	◀▬▬	sssilver (~silver@38.122.48.218) has quit (Read error: Connection reset by peer)
2014-09-10 12:02:50	K-ballo	safinaskar: this is nothing novel, foo(x) and (foo)(x) do or could do different things
2014-09-10 12:02:55	▬▬▶	ambro718 (~ambro@gentoo/contributor/ambro718) has joined ##c++
2014-09-10 12:03:05	safinaskar	K-ballo: okey, so what about that example with functions? it follows that "(x)" is part of decltype syntax? so, when i type "decltype(auto) g(){ return (x); }" this parenthesis show that i use actually exprtype and not decltype, right?
2014-09-10 12:03:34	▬▬▶	sssilver (~silver@38.122.48.218) has joined ##c++
2014-09-10 12:03:37	▬▬▶	nikki93 (~nikki93@nat-oitwireless-outside-vapornet3-d-254.Princeton.EDU) has joined ##c++
2014-09-10 12:03:38	K-ballo	safinaskar: right, and that's on you for using those unlogical parens in a return expression in the first place :)
2014-09-10 12:04:20	▬▬▶	xikkub (~xikkub@74.114.47.30) has joined ##c++
2014-09-10 12:04:29	▬▬▶	glenfern (~glen@unaffiliated/glenfe) has joined ##c++
2014-09-10 12:05:14	safinaskar	K-ballo: hs_: thanks
2014-09-10 12:05:16	◀▬▬	safinaskar (~user@safinaskar.com) has quit (Quit: leaving)
2014-09-10 12:05:21	CJKay	Wait
2014-09-10 12:05:26	◀▬▬	sssilver (~silver@38.122.48.218) has quit (Read error: Connection reset by peer)
2014-09-10 12:05:27	CJKay	return str; and return(str); are different now?
2014-09-10 12:05:52	▬▬▶	sssilver (~silver@38.122.48.218) has joined ##c++
2014-09-10 12:06:03	Griwes	with decltype(auto), yes
2014-09-10 12:06:17	◀▬▬	adek (~adek@S010678cd8e7c9c40.vc.shawcable.net) has quit (Ping timeout: 272 seconds)
2014-09-10 12:06:27	Griwes	decltype(foo) and decltype((foo)) have always meant different things
2014-09-10 12:06:37	CJKay	Christ as if we don't already have enough problems with weird syntax decisions
2014-09-10 12:06:43	K-ballo	x and (x) have always meant different things
2014-09-10 12:07:09	Griwes	only you never did anything where that difference was visible
2014-09-10 12:07:48	K-ballo	except calling functions
2014-09-10 12:08:04	◀▬▬	nikki93 (~nikki93@nat-oitwireless-outside-vapornet3-d-254.Princeton.EDU) has quit (Ping timeout: 245 seconds)
2014-09-10 12:08:07	K-ballo	foo(x) and (foo)(x) have different observable behavior since 98
2014-09-10 12:08:08	CJKay	Can't say I ever realised there was a difference
2014-09-10 12:08:20	CJKay	Apparently neither did the majority of people on StackOverflow lol
2014-09-10 12:08:22	CJKay	Unsurprisingly enough
2014-09-10 12:10:33	Griwes	K-ballo, no-one sane wrote (foo)(x), unless foo was foo->*bar
2014-09-10 12:10:36	◀▬▬	Jesin (~Jesin@Dyn142129.cc.lehigh.edu) has quit (Read error: Connection reset by peer)
2014-09-10 12:10:42	▬▬▶	Jessin (~Jesin@Dyn142129.cc.lehigh.edu) has joined ##c++
2014-09-10 12:10:54	K-ballo	Griwes: define "sane"
2014-09-10 12:11:01	Griwes	:D
2014-09-10 12:11:11	Griwes	yeah, yeah, foo->*bar is not sane either
2014-09-10 12:11:20	K-ballo	it's simpler for disabling ADL than having to fully qualify a name
2014-09-10 12:11:49	◀▬▬	sssilver (~silver@38.122.48.218) has quit (Read error: Connection reset by peer)
2014-09-10 12:11:58	◀▬▬	Jessin (~Jesin@Dyn142129.cc.lehigh.edu) has quit (Remote host closed the connection)
2014-09-10 12:12:40	▬▬▶	inad922 (~inad925@bbkwificlient31.ccs.bbk.ac.uk) has joined ##c++
2014-09-10 12:12:53	◀▬▬	W0rmDr1nk (~wormdrink@unaffiliated/wormdrink) has quit (Ping timeout: 255 seconds)
2014-09-10 12:13:11	▬▬▶	sssilver (~silver@38.122.48.218) has joined ##c++
2014-09-10 12:13:16	◀▬▬	CrizMobius (~CrizMobiu@c83-251-189-189.bredband.comhem.se) has quit (Read error: Connection reset by peer)
2014-09-10 12:15:37	Griwes	K-ballo, that's not sane
2014-09-10 12:15:43	◀▬▬	mizvekov (~mizvekov@186-247-7-82.user.veloxzone.com.br) has quit (Quit: Leaving)
2014-09-10 12:15:50	◀▬▬	txomon|home (~txomon@unaffiliated/txomon) has quit (Ping timeout: 246 seconds)
2014-09-10 12:16:01	▬▬▶	impy (~impy@231.187-66-87.adsl-dyn.isp.belgacom.be) has joined ##c++
2014-09-10 12:16:51	K-ballo	Griwes: not that I'd ever do it, but I believe one should always do (foo)(x) instead of foo(x) unless ADL is intentional... now ADL is not sane either, so...
2014-09-10 12:16:55	◀▬▬	LiohAu (~LiohAu@lse83-h04-89-86-22-242.dsl.sta.abo.bbox.fr) has quit (Quit: LiohAu)
2014-09-10 12:17:14	▬▬▶	hyperair (~hyperair@ubuntu/member/hyperair) has joined ##c++
2014-09-10 12:17:24	Griwes	K-ballo, boost.hash that uses adl is saner than std::hash
2014-09-10 12:17:27	Griwes	so there's that
2014-09-10 12:18:06	K-ballo	Griwes: I'm not saying ADL is bad, I'm saying that is not sane for having ADL be the default.. everyone ends up fooled by it sooner or later
2014-09-10 12:18:31	K-ballo	not that there's a better solution anyways
2014-09-10 12:18:44	▬▬▶	Jesin (~Jesin@Dyn142129.cc.lehigh.edu) has joined ##c++
2014-09-10 12:20:43	▬▬▶	Jackneill (~Jackneill@unaffiliated/jackneill) has joined ##c++
2014-09-10 12:21:36	glenfern	I can't remember when the last time my last instinct was not "fully qualify this function" in header-only library code. I think we're habitually conditioned to do the right thing by now.
2014-09-10 12:22:28	glenfern	Oh. For your own sake, don't do it Antony.
2014-09-10 12:22:44	▬▬▶	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-09-10 12:23:15	◀▬▬	leeN (~leeN@e181199238.adsl.alicedsl.de) has quit (Read error: Connection reset by peer)
2014-09-10 12:23:39	▬▬▶	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has joined ##c++
2014-09-10 12:24:19	◀▬▬	realtime (~realtime@unaffiliated/realtime) has quit (Read error: Connection reset by peer)
2014-09-10 12:25:45	◀▬▬	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has quit (Remote host closed the connection)
2014-09-10 12:25:54	◀▬▬	dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-09-10 12:26:01	▬▬▶	realtime (~realtime@unaffiliated/realtime) has joined ##c++
2014-09-10 12:26:03	CJKay	(17:22:03) glenfern: I can't remember when the last time my last instinct was not "fully qualify this function" in header-only library code. I think we're habitually conditioned to do the right thing by now.
2014-09-10 12:26:04	CJKay	Definitely
2014-09-10 12:27:01	◀▬▬	kailoAtWork (~kailoAtWo@104.33.2.39) has quit (Quit: This computer has gone to sleep)
2014-09-10 12:27:58	▬▬▶	kailoAtWork (~kailoAtWo@cpe-104-33-2-39.socal.res.rr.com) has joined ##c++
2014-09-10 12:32:03	▬▬▶	staylor (~staylor@mail.au-zone.com) has joined ##c++
2014-09-10 12:33:30	◀▬▬	inad922 (~inad925@bbkwificlient31.ccs.bbk.ac.uk) has quit (Quit: Leaving)
2014-09-10 12:34:30	▬▬▶	Jeeb_ (~Jeeb_@u193-11-162-37.studentnatet.se) has joined ##c++
2014-09-10 12:34:30	◀▬▬	sssilver (~silver@38.122.48.218) has quit (Read error: Connection reset by peer)
2014-09-10 12:35:24	◀▬▬	Jesin (~Jesin@Dyn142129.cc.lehigh.edu) has quit (Quit: Leaving)
2014-09-10 12:35:26	◀▬▬	hexagoxel (~hexagoxel@134.245.44.4) has quit (Ping timeout: 272 seconds)
2014-09-10 12:35:28	▬▬▶	sssilver (~silver@38.122.48.218) has joined ##c++
2014-09-10 12:36:31	◀▬▬	sssilver (~silver@38.122.48.218) has quit (Read error: Connection reset by peer)
2014-09-10 12:36:53	◀▬▬	huckleberry78 (~huckleber@76.97.228.17) has quit (Remote host closed the connection)
2014-09-10 12:37:14	◀▬▬	interop_madness (~invalid@unaffiliated/interop-madness/x-8858653) has quit (Ping timeout: 245 seconds)
2014-09-10 12:37:49	▬▬▶	sssilver (~silver@38.122.48.218) has joined ##c++
2014-09-10 12:38:32	◀▬▬	mmhun (~anonymous@NYUFWA-WLESSAUTHCLIENTS-EXP01.NATPOOL.NYU.EDU) has quit (Quit: mmhun)
2014-09-10 12:38:58	▬▬▶	vinleod (~vinleod@75-164-224-169.ptld.qwest.net) has joined ##c++
2014-09-10 12:39:03	▬▬▶	mmhun (~anonymous@NYUFWA-WLESSAUTHCLIENTS-EXP01.NATPOOL.NYU.EDU) has joined ##c++
2014-09-10 12:39:29	◀▬▬	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-09-10 12:39:33	▬▬▶	hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-09-10 12:39:47	▬▬▶	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has joined ##c++
2014-09-10 12:42:26	▬▬▶	Cyp__ (~Cyp_@62.61.130.229.generic-hostname.arrownet.dk) has joined ##c++
2014-09-10 12:42:51	▬▬▶	csotelo (~csotelo@190.41.210.210) has joined ##c++
2014-09-10 12:43:03	◀▬▬	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-09-10 12:43:03	▬▬▶	Pilum (~Pilum@247.62-50-184.enivest.net) has joined ##c++
2014-09-10 12:43:05	CJKay	Wow that ' separator is ugly
2014-09-10 12:43:43	◀▬▬	Drew_ (~Drew@108.73.30.241) has quit (Quit: Leaving)
2014-09-10 12:44:26	▬▬▶	HunterD (~chatzilla@109.96.31.184) has joined ##c++
2014-09-10 12:44:43	▬▬▶	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has joined ##c++
2014-09-10 12:45:30	pragma-	... you're really using Pidgin as your IRC client?
2014-09-10 12:46:33	V-ille	yes. so what?
2014-09-10 12:46:48	CJKay	This discussion again?
2014-09-10 12:47:00	▬▬▶	LiohAu (~LiohAu@lse83-h04-89-86-22-242.dsl.sta.abo.bbox.fr) has joined ##c++
2014-09-10 12:48:10	CJKay	irssi elitists at it again
2014-09-10 12:48:12	pragma-	It's also silly to copy/paste the entire message of something that is only two lines above.
2014-09-10 12:49:11	CJKay	Many people assume you are referring to their last sent message rather than any arbitrary one they might have sent in the past 10 minutes
2014-09-10 12:49:54	◀▬▬	HunterD (~chatzilla@109.96.31.184) has quit (Ping timeout: 265 seconds)
2014-09-10 12:49:57	▬▬▶	surd (~surd@unaffiliated/surd) has joined ##c++
2014-09-10 12:50:21	▬▬▶	ToApolytoXaos (~ToApolyto@46.21.62.128) has joined ##c++
2014-09-10 12:50:55	◀▬▬	lh_mouse (~lh_mouse@116.230.231.192) has quit (Read error: Connection reset by peer)
2014-09-10 12:52:45	guibou_	why ca't I do return {a, b} in a function returning std::tuple<int, int> when a and b are int ?
2014-09-10 12:52:46	xikkub	pssh. irssi. telnet 4 lyfe
2014-09-10 12:53:15	CJKay	xikkub: What is this "telnet"? I communicate with pings in morse
2014-09-10 12:53:31	◀▬▬	unsigned_long (~smart_ptr@2001:7c0:409:8e0a:d9b7:a235:b75c:b3cd) has quit (Remote host closed the connection)
2014-09-10 12:54:03	▬▬▶	unsigned_long (~smart_ptr@nat-wh-hadi.rz.uni-karlsruhe.de) has joined ##c++
2014-09-10 12:54:13	CJKay	Otherwise known as Pingdgin
2014-09-10 12:54:13	CJKay	/me buddum-tsh
2014-09-10 12:54:39	hs_	guibou_, because tuple has explicit constructors and that syntax cannot use explicit constructors (yet)
2014-09-10 12:55:16	guibou_	hs_: thank you ;)
2014-09-10 12:55:49	guibou_	(hs_: is the "yet" in your sentance founded on something ? Like c++17 ?)
2014-09-10 12:56:38	hs_	Sutter wrote a proposal to allow it.. i don't know the status or timeline or what
2014-09-10 12:57:11	K-ballo	and there's a proposal for both pair and tuple to have better constructors anyways I believe
2014-09-10 12:57:31	K-ballo	libc++ implements those constructors as "conditionally explicit"
2014-09-10 12:58:27	V-ille	there's a library fix paper by Daniel Krugler that doesn't have the insanity of Sutter's paper
2014-09-10 12:58:38	V-ille	libc++ implement's Daniel's proposal
2014-09-10 12:58:43	V-ille	*implements
2014-09-10 12:58:49	▬▬▶	aslant (~aslant@37.157.33.76) has joined ##c++
2014-09-10 12:58:50	V-ille	bad apostrophe, stay where you belong
2014-09-10 12:58:54	◀▬▬	unsigned_long (~smart_ptr@nat-wh-hadi.rz.uni-karlsruhe.de) has quit (Ping timeout: 264 seconds)
2014-09-10 12:59:23	◀▬▬	impy (~impy@231.187-66-87.adsl-dyn.isp.belgacom.be) has quit (Ping timeout: 268 seconds)
2014-09-10 13:00:44	◀▬▬	kailoAtWork (~kailoAtWo@cpe-104-33-2-39.socal.res.rr.com) has quit (Quit: This computer has gone to sleep)
2014-09-10 13:02:08	guibou_	hs_: but I can overload tuple and provid a non-explict constructor ? However I don't have any idea of the side effects which may results
2014-09-10 13:02:41	V-ille	"overload tuple"?
2014-09-10 13:03:05	guibou_	V-ille: inherite from
2014-09-10 13:03:18	V-ille	sure, you can do that if you want
2014-09-10 13:03:52	V-ille	be prepared to explain to uneducated people why that inheritance is fine
2014-09-10 13:05:03	▬▬▶	sedeki (~textual@gateway/tor-sasl/sedeki) has joined ##c++
2014-09-10 13:05:12	K-ballo	IIRC implementing Daniel's proposal is troublesome for people inheriting tuple's constructors
2014-09-10 13:06:02	▬▬▶	Gluesticky (~nobody@unaffiliated/gluesticky) has joined ##c++
2014-09-10 13:06:46	▬▬▶	natechan (~natechan@67.135.43.183) has joined ##c++
2014-09-10 13:07:54	guibou_	hihi, nice syntax for returning multiples values then, mytuple<int, int> f(){ return {5, 2}; }
2014-09-10 13:10:05	◀▬▬	sedeki (~textual@gateway/tor-sasl/sedeki) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-09-10 13:10:36	hs_	guibou_, why not just do return tuple<int,int>{a,b}; for now?
2014-09-10 13:11:36	◀▬▬	zap0 (~moofy@123-243-103-30.static.tpgi.com.au) has quit (Quit: zap0)
2014-09-10 13:12:45	hs_	or auto with make_tuple, or...
2014-09-10 13:13:00	▬▬▶	Kaedenn (~kaedenn@unaffiliated/kaedenn) has joined ##c++
2014-09-10 13:14:13	◀▬▬	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 260 seconds)
2014-09-10 13:14:25	◀▬▬	chatsiri_ (~chatsiri_@119-46-191-20.static.asianet.co.th) has quit (Ping timeout: 240 seconds)
2014-09-10 13:14:40	guibou_	hs_: you are right ;), I'm just experimentating.
2014-09-10 13:17:00	▬▬▶	kailoAtWork (~kailoAtWo@cpe-104-33-2-39.socal.res.rr.com) has joined ##c++
2014-09-10 13:18:21	▬▬▶	unsigned_long (~smart_ptr@nat-wh-hadi.rz.uni-karlsruhe.de) has joined ##c++
2014-09-10 13:18:25	◀▬▬	ambro718 (~ambro@gentoo/contributor/ambro718) has quit (Ping timeout: 240 seconds)
2014-09-10 13:19:29	▬▬▶	gelignite (~gelignite@i528C3C41.versanet.de) has joined ##c++
2014-09-10 13:21:43	▬▬▶	Lowl3v3l (~Lowl3v3l@95.91.248.96) has joined ##c++
2014-09-10 13:22:27	▬▬▶	IWishIKnew (~IWishIKne@u-131-216-14-18.dhcp.unlv.edu) has joined ##c++
2014-09-10 13:23:02	◀▬▬	IWishIKnew (~IWishIKne@u-131-216-14-18.dhcp.unlv.edu) has quit (Client Quit)
2014-09-10 13:23:25	▬▬▶	sedeki (~textual@gateway/tor-sasl/sedeki) has joined ##c++
2014-09-10 13:23:33	◀▬▬	sedeki (~textual@gateway/tor-sasl/sedeki) has quit (Client Quit)
2014-09-10 13:24:57	◀▬▬	glenfern (~glen@unaffiliated/glenfe) has quit (Ping timeout: 260 seconds)
2014-09-10 13:25:13	◀▬▬	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has quit (Remote host closed the connection)
2014-09-10 13:25:49	◀▬▬	lihp (~utilita@ip1886254f.dynamic.kabel-deutschland.de) has quit (Remote host closed the connection)
2014-09-10 13:25:50	▬▬▶	glenfern (~glen@unaffiliated/glenfe) has joined ##c++
2014-09-10 13:26:23	◀▬▬	sfix (~sfix@host81-147-177-135.range81-147.btcentralplus.com) has quit (Remote host closed the connection)
2014-09-10 13:26:27	▬▬▶	exophoric (~jbouchard@64.34.151.210) has joined ##c++
2014-09-10 13:26:43	◀▬▬	exophoric (~jbouchard@64.34.151.210) has left ##c++ ("Leaving")
2014-09-10 13:26:55	▬▬▶	exophoric (~jbouchard@64.34.151.210) has joined ##c++
2014-09-10 13:29:32	▬▬▶	Fogger (~Fogger@host86-173-181-92.range86-173.btcentralplus.com) has joined ##c++
2014-09-10 13:29:51	▬▬▶	sedeki (~textual@gateway/tor-sasl/sedeki) has joined ##c++
2014-09-10 13:31:03	◀▬▬	hellangel7 (~hellangel@61.3.105.101) has quit (Remote host closed the connection)
2014-09-10 13:31:49	◀▬▬	kailoAtWork (~kailoAtWo@cpe-104-33-2-39.socal.res.rr.com) has quit (Quit: This computer has gone to sleep)
2014-09-10 13:33:06	▬▬▶	hellangel7 (~hellangel@61.3.105.101) has joined ##c++
2014-09-10 13:34:07	◀▬▬	natechan (~natechan@67.135.43.183) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-09-10 13:34:58	◀▬▬	hellangel7 (~hellangel@61.3.105.101) has quit (Max SendQ exceeded)
2014-09-10 13:35:20	▬▬▶	emg (~emg@74.217.148.5) has joined ##c++
2014-09-10 13:35:31	▬▬▶	hellangel7 (~hellangel@61.3.105.101) has joined ##c++
2014-09-10 13:36:24	▬▬▶	impy (~impy@2a02:1812:1282:3000:80c0:7466:eaea:c374) has joined ##c++
2014-09-10 13:37:01	▬▬▶	dapz (~textual@216.239.45.93) has joined ##c++
2014-09-10 13:37:08	◀▬▬	oberstein (~ober@2605:6400:20:748::ddee:deee) has quit (Read error: error:1408F10B:SSL routines:SSL3_GET_RECORD:wrong version number)
2014-09-10 13:38:10	◀▬▬	hazzadous (~harrywaye@128.127.31.17) has quit (Quit: hazzadous)
2014-09-10 13:40:13	▬▬▶	sumitshining (~sumit@122.166.145.236) has joined ##c++
2014-09-10 13:40:21	◀▬▬	glenfern (~glen@unaffiliated/glenfe) has quit (Ping timeout: 260 seconds)
2014-09-10 13:40:27	▬▬▶	ac_slater_ (~weechat@dhcp89-69-173.bbn.com) has joined ##c++
2014-09-10 13:41:10	▬▬▶	WG1337 (~WG1337@95.68.53.88) has joined ##c++
2014-09-10 13:41:58	◀▬▬	hellangel7 (~hellangel@61.3.105.101) has quit (Remote host closed the connection)
2014-09-10 13:43:19	◀▬▬	LiohAu (~LiohAu@lse83-h04-89-86-22-242.dsl.sta.abo.bbox.fr) has quit (Quit: LiohAu)
2014-09-10 13:43:56	◀▬▬	impy (~impy@2a02:1812:1282:3000:80c0:7466:eaea:c374) has quit (Quit: impy)
2014-09-10 13:47:06	◀▬▬	sumitshining (~sumit@122.166.145.236) has quit (Quit: Konversation terminated!)
2014-09-10 13:47:53	▬▬▶	stdvector (~stdvector@gateway/tor-sasl/stdvector) has joined ##c++
2014-09-10 13:47:59	▬▬▶	impy (~impy@2a02:1812:1282:3000:2c2e:e632:7ff3:fdbc) has joined ##c++
2014-09-10 13:49:27	WG1337	Hi! I just switched to Orwell DevC++ from Bloodshed. The thing is that my simple code (1kk times execute MD5)  is much slower now (8 seconds compared to 33 seconds). What could be the problem?
2014-09-10 13:49:41	▬▬▶	kronikarz (kronikarz@host-217-172-245-116.lodz.mm.pl) has joined ##c++
2014-09-10 13:49:46	kronikarz	Hi
2014-09-10 13:49:59	▬▬▶	snyp (~snyp@223.29.204.2) has joined ##c++
2014-09-10 13:50:42	◀▬▬	sedeki (~textual@gateway/tor-sasl/sedeki) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-09-10 13:51:26	◀▬▬	Kirrahe (~kirrahe@ip51cc442b.adsl-surfen.hetnet.nl) has quit (Ping timeout: 255 seconds)
2014-09-10 13:51:42	▬▬▶	oberstein (~ober@2605:6400:20:748::ddee:deee) has joined ##c++
2014-09-10 13:51:58	▬▬▶	MrFlibble (LunarJetma@05400825.skybroadband.com) has joined ##c++
2014-09-10 13:52:00	--	MrFlibble is now known as LunarJetman
2014-09-10 13:52:09	▬▬▶	natechan (~natechan@67.135.43.183) has joined ##c++
2014-09-10 13:52:13	▬▬▶	Kirrahe (~kirrahe@ip51cc442b.adsl-surfen.hetnet.nl) has joined ##c++
2014-09-10 13:52:16	▬▬▶	glenfern (~glen@unaffiliated/glenfe) has joined ##c++
2014-09-10 13:53:10	◀▬▬	Pilum (~Pilum@247.62-50-184.enivest.net) has quit (Ping timeout: 245 seconds)
2014-09-10 13:53:16	▬▬▶	p|q (~plq@95.14.106.239) has joined ##c++
2014-09-10 13:53:25	◀▬▬	przemkovv (~przemkovv@usr01.kari.put.poznan.pl) has quit (Ping timeout: 240 seconds)
2014-09-10 13:53:35	◀▬▬	proteusguy (~proteusgu@ppp-110-168-229-84.revip5.asianet.co.th) has quit (Ping timeout: 245 seconds)
2014-09-10 13:54:08	◀▬▬	Internet13 (chatzilla@cpc15-croy20-2-0-cust382.croy.cable.virginm.net) has quit (Ping timeout: 255 seconds)
2014-09-10 13:55:14	LBV_User	!give WG1337 general
2014-09-10 13:55:16	nolyc	WG1337: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-09-10 13:55:18	▬▬▶	sedeki (~textual@gateway/tor-sasl/sedeki) has joined ##c++
2014-09-10 13:56:17	◀▬▬	staylor (~staylor@mail.au-zone.com) has quit (Ping timeout: 246 seconds)
2014-09-10 13:56:28	◀▬▬	natechan (~natechan@67.135.43.183) has quit (Client Quit)
2014-09-10 13:56:58	▬▬▶	kailoAtWork (~kailoAtWo@208.184.77.122) has joined ##c++
2014-09-10 13:57:00	◀▬▬	stef_204 (~kvirc@unaffiliated/stef-204/x-384198) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-09-10 13:58:10	▬▬▶	leeN (~leeN@e181199238.adsl.alicedsl.de) has joined ##c++
2014-09-10 13:58:25	▬▬▶	kurahaupo1 (~Kurahaupo@136.245.252.27.dyn.cust.vf.net.nz) has joined ##c++
2014-09-10 13:58:34	▬▬▶	przemkovv (~przemkovv@usr01.kari.put.poznan.pl) has joined ##c++
2014-09-10 13:59:31	▬▬▶	Internet13 (~chatzilla@cpc15-croy20-2-0-cust382.croy.cable.virginm.net) has joined ##c++
2014-09-10 14:01:14	WG1337	Oh, sorry
2014-09-10 14:01:45	◀▬▬	kronikarz (kronikarz@host-217-172-245-116.lodz.mm.pl) has left ##c++ ("Leaving")
2014-09-10 14:01:55	▬▬▶	rnickb (~rnickb@cpe-74-71-192-171.nyc.res.rr.com) has joined ##c++
2014-09-10 14:02:26	▬▬▶	Forser_Laptop (~Forser_La@c83-251-209-255.bredband.comhem.se) has joined ##c++
2014-09-10 14:02:27	▬▬▶	Lobster` (~Lobster@173.192.176.158-static.reverse.softlayer.com) has joined ##c++
2014-09-10 14:02:36	Alina-malina	what is ebuild?
2014-09-10 14:03:42	Oxyd	Whatever it is, it's not C++.
2014-09-10 14:04:05	plash	ask The Google
2014-09-10 14:04:44	◀▬▬	sedeki (~textual@gateway/tor-sasl/sedeki) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-09-10 14:06:21	▬▬▶	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-09-10 14:06:41	◀▬▬	riksteri (~riksteri@dsl-tkubrasgw3-54f96b-216.dhcp.inet.fi) has quit (Quit: riksteri)
2014-09-10 14:07:09	ac_slater_	hey all, weird question. I'm avoiding some exceptions and I realized ctors can return. This seems like it might be confusing to people using the code. Do you guys return from ctors often?
2014-09-10 14:07:33	ville	err, what?
2014-09-10 14:07:41	ac_slater_	ville: you can return from a ctor
2014-09-10 14:07:49	ac_slater_	in c++ >= 11
2014-09-10 14:07:50	Oxyd	Not sure what's confusing about it. The semantics is fairly obvious.
2014-09-10 14:07:59	ac_slater_	Oxyd: yea... you're right
2014-09-10 14:08:02	ville	ah right you mean with out a value
2014-09-10 14:08:31	ac_slater_	ville: ah yea, should have said that
2014-09-10 14:08:37	LunarJetman	I have never use a return statement in a ctor
2014-09-10 14:08:43	LunarJetman	you are probably doing it wrong.
2014-09-10 14:09:07	LunarJetman	99% of my ctor bodies are empty in fact
2014-09-10 14:09:26	Oxyd	It's pretty much the same thing as a return in a void function.
2014-09-10 14:10:01	▬▬▶	LucaS05 (~lucas05@host244-60-dynamic.61-82-r.retail.telecomitalia.it) has joined ##c++
2014-09-10 14:10:05	Oxyd	geordi: void foo() { } void bar() { return foo(); }  // Except that this works in void functions.
2014-09-10 14:10:05	geordi	Success
2014-09-10 14:10:13	Oxyd	geordi: void foo() { } struct bar { bar() { return foo(); } };  // But not in ctors.
2014-09-10 14:10:13	geordi	error: returning a value from a constructor
2014-09-10 14:10:38	V-ille	ac_slater_: I fail to see why you wrote >=11 above
2014-09-10 14:10:47	▬▬▶	symm- (~symm-@178.168.29.31) has joined ##c++
2014-09-10 14:11:15	▬▬▶	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-09-10 14:11:26	LunarJetman	ac_slater_: lets see this ctor, paste it please.
2014-09-10 14:11:34	cbreak	WG1337: get clang
2014-09-10 14:11:38	cbreak	turn on optimization
2014-09-10 14:11:41	glenfern	ac_slater_: If you're designing a library where you want to support exceptions and no-exception error handling (or even only the latter, and not support the former), there are a few patterns. The more typical ones require defining a function to be invoked upon error instead of throwing.
2014-09-10 14:13:04	ac_slater_	glenfern: right. I'm trying to formulate a good question for you guys... I general get antsy using some of the features, but if it's there, I should use it
2014-09-10 14:13:30	ac_slater_	V-ille: oh, I was under the assumption that you couldnt return without a value (via the return keyword) from a ctor in pre-c++11
2014-09-10 14:13:33	ac_slater_	V-ille: Sorry.
2014-09-10 14:14:02	hs_	I would guess that a "return;" of some form makes its way into all void functions and ctors
2014-09-10 14:14:21	cbreak	ac_slater_: constructors usually return
2014-09-10 14:14:21	V-ille	ac_slater_: that's ok, but fyi, it was already possible in c++98
2014-09-10 14:14:28	cbreak	ac_slater_: but you can't prove it, see halting problem
2014-09-10 14:14:29	ac_slater_	LunarJetman: It's not public domain sadly ... (and it's not my code) .. but it does something like `Device::Device(string path) : error(0) { if (!open(path)) { error = 1; return; };`
2014-09-10 14:14:33	hs_	and you needn't be explicit about it unless you are using it for flow control
2014-09-10 14:14:59	hs_	throw
2014-09-10 14:15:03	ac_slater_	cbreak: right. I guess I mean, 'prematurely exit the ctor without throwing an exception'
2014-09-10 14:15:07	◀▬▬	kailoAtWork (~kailoAtWo@208.184.77.122) has quit (Quit: This computer has gone to sleep)
2014-09-10 14:15:13	cbreak	ac_slater_: then it's not prematurely
2014-09-10 14:15:21	LunarJetman	hs_: use exceptions instead of error codes
2014-09-10 14:15:22	cbreak	ac_slater_: as long as the constructor returns, the object is constructed
2014-09-10 14:15:24	ac_slater_	cbreak: that's what I needed to hear
2014-09-10 14:15:31	LunarJetman	ac_slater_: use exceptions instead of error codes
2014-09-10 14:15:32	ac_slater_	cbreak: awsome
2014-09-10 14:15:36	hs_	ac_slater_, LunarJetman meant that for you and I agree..
2014-09-10 14:15:39	◀▬▬	symm- (~symm-@178.168.29.31) has quit (Client Quit)
2014-09-10 14:15:51	cbreak	ac_slater_: the only way for a constructor to fail is by exception
2014-09-10 14:16:10	ac_slater_	cbreak: gotcha. I dont know why I thought otherwise
2014-09-10 14:16:12	ac_slater_	thanks!
2014-09-10 14:16:14	ac_slater_	thanks all
2014-09-10 14:16:41	◀▬▬	ac_slater_ (~weechat@dhcp89-69-173.bbn.com) has quit (Quit: WeeChat 1.0)
2014-09-10 14:16:59	▬▬▶	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has joined ##c++
2014-09-10 14:17:55	▬▬▶	Mio-chan (~Mio-chan@unaffiliated/mio-chan) has joined ##c++
2014-09-10 14:19:54	▬▬▶	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-09-10 14:22:01	◀▬▬	hamid (~nithp@unaffiliated/hamid) has quit (Quit: Lost terminal)
2014-09-10 14:23:18	◀▬▬	Sauvin (~Savinus@about/linux/staff/sauvin) has quit (Read error: Connection reset by peer)
2014-09-10 14:23:25	▬▬▶	sedeki (~textual@gateway/tor-sasl/sedeki) has joined ##c++
2014-09-10 14:23:42	◀▬▬	glenfern (~glen@unaffiliated/glenfe) has quit
2014-09-10 14:27:34	◀▬▬	nfk (~nfk@unaffiliated/nfk) has quit (Quit: yawn)
2014-09-10 14:27:43	◀▬▬	BlaXpirit (~blaxpirit@42-7-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-09-10 14:28:52	◀▬▬	sedeki (~textual@gateway/tor-sasl/sedeki) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-09-10 14:30:01	▬▬▶	IWishIKnew (~IWishIKne@u-131-216-14-18.dhcp.unlv.edu) has joined ##c++
2014-09-10 14:30:07	◀▬▬	Sadale (~Sadale@unaffiliated/sadale) has quit (Read error: Connection reset by peer)
2014-09-10 14:30:53	◀▬▬	leeN (~leeN@e181199238.adsl.alicedsl.de) has quit (Read error: Connection reset by peer)
2014-09-10 14:31:06	◀▬▬	dapz (~textual@216.239.45.93) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-09-10 14:31:54	▬▬▶	Erlkoenig (~erlkoenig@ip-109-90-150-61.hsi11.unitymediagroup.de) has joined ##c++
2014-09-10 14:32:48	▬▬▶	BlaXpirit (~blaxpirit@42-7-132-95.pool.ukrtel.net) has joined ##c++
2014-09-10 14:34:04	◀▬▬	BlaXpirit (~blaxpirit@42-7-132-95.pool.ukrtel.net) has quit (Client Quit)
2014-09-10 14:35:29	▬▬▶	SDKey (5eb42192@gateway/web/freenode/ip.94.180.33.146) has joined ##c++
2014-09-10 14:35:34	◀▬▬	SDKey (5eb42192@gateway/web/freenode/ip.94.180.33.146) has left ##c++
2014-09-10 14:35:39	▬▬▶	SDKey (5eb42192@gateway/web/freenode/ip.94.180.33.146) has joined ##c++
2014-09-10 14:36:11	◀▬▬	Oxyd (~oxyd@pdpc/supporter/student/oxyd) has quit (Quit: Vanitas vanitatum et omnia vanitas.)
2014-09-10 14:36:17	▬▬▶	dapz (~textual@216.239.45.93) has joined ##c++
2014-09-10 14:39:50	◀▬▬	Lowl3v3l (~Lowl3v3l@95.91.248.96) has quit (Ping timeout: 276 seconds)
2014-09-10 14:40:06	▬▬▶	mizvekov (~mizvekov@139.82.143.58) has joined ##c++
2014-09-10 14:40:38	▬▬▶	glenfern (~glen@unaffiliated/glenfe) has joined ##c++
2014-09-10 14:40:46	▬▬▶	Oxyd (~oxyd@pdpc/supporter/student/oxyd) has joined ##c++
2014-09-10 14:41:38	▬▬▶	BlaXpirit (~blaxpirit@42-7-132-95.pool.ukrtel.net) has joined ##c++
2014-09-10 14:41:42	--	bedouin_ is now known as bedouin
2014-09-10 14:44:03	glenfern	Even though you're sitting right next to me at C++Con, I'm going to use IRC to tell you: We have reservations at John Howie at 12.00pm.
2014-09-10 14:44:29	Eelis	there is such a thing as privmsg
2014-09-10 14:44:43	Oxyd	Privmsg doesn't work well for showing off.
2014-09-10 14:45:11	▬▬▶	TheFuzzball (~TheFuzzba@cpc4-ward10-2-0-cust737.10-2.cable.virginm.net) has joined ##c++
2014-09-10 14:47:12	◀▬▬	aslant (~aslant@37.157.33.76) has quit (Read error: Connection reset by peer)
2014-09-10 14:48:02	▬▬▶	kailoAtWork (~kailoAtWo@208.184.77.122) has joined ##c++
2014-09-10 14:48:42	glenfern	Oxyd: That. And there is more than one recipient of that message.
2014-09-10 14:49:48	▬▬▶	aslant (~aslant@37.157.33.76) has joined ##c++
2014-09-10 14:50:44	▬▬▶	w41_ (~w41@unaffiliated/w41) has joined ##c++
2014-09-10 14:50:45	▬▬▶	ApEk (43ee13b3@gateway/web/freenode/ip.67.238.19.179) has joined ##c++
2014-09-10 14:51:08	--	irc: disconnected from server
2014-09-10 14:51:31	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-10 14:51:31	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-10 14:51:31	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-10 14:51:31	--	Channel ##c++: 487 nicks (0 ops, 0 voices, 487 normals)
2014-09-10 14:51:31	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-10 14:51:36	◀▬▬	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-09-10 14:51:42	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-10 14:52:06	▬▬▶	jackhum (~jackhum@14.139.241.194) has joined ##c++
2014-09-10 14:53:37	plash	the whole channel!? wow!
2014-09-10 14:54:24	◀▬▬	aslant (~aslant@37.157.33.76) has quit (Ping timeout: 246 seconds)
2014-09-10 14:55:57	Oxyd	We're actually all sitting on glenfern's lap at the con.
2014-09-10 14:57:14	◀▬▬	realtime (~realtime@unaffiliated/realtime) has quit (Read error: Connection reset by peer)
2014-09-10 14:57:35	▬▬▶	AngelX (~AngelX@41.206.12.50) has joined ##c++
2014-09-10 14:57:37	◀▬▬	jackhum (~jackhum@14.139.241.194) has quit (Remote host closed the connection)
2014-09-10 14:57:53	o11c	!grab Oxyd
2014-09-10 14:57:53	nolyc	By your command.
2014-09-10 14:58:09	cbreak	who's John Howie?
2014-09-10 14:58:53	▬▬▶	realtime (~realtime@unaffiliated/realtime) has joined ##c++
2014-09-10 15:00:12	▬▬▶	nicolastarzia (~nicolasta@201.90.94.104) has joined ##c++
2014-09-10 15:00:21	◀▬▬	unsigned_long (~smart_ptr@nat-wh-hadi.rz.uni-karlsruhe.de) has quit
2014-09-10 15:01:18	▬▬▶	aslant (~aslant@37.157.33.76) has joined ##c++
2014-09-10 15:01:29	◀▬▬	AngelX (~AngelX@41.206.12.50) has left ##c++
2014-09-10 15:01:30	pragma-	As a matter of fact, he did use privmsg to send that to this channel.
2014-09-10 15:02:12	pragma-	IRC, how does it work!
2014-09-10 15:03:46	▬▬▶	leeN (~leeN@e181199238.adsl.alicedsl.de) has joined ##c++
2014-09-10 15:04:30	▬▬▶	Lowl3v3l (~Lowl3v3l@95.91.248.96) has joined ##c++
2014-09-10 15:05:34	◀▬▬	jimvideo (~jimvideo@184-12-234-43.dr01.brny.ca.frontiernet.net) has quit (Quit: Leaving)
2014-09-10 15:05:48	◀▬▬	glenfern (~glen@unaffiliated/glenfe) has quit (Ping timeout: 268 seconds)
2014-09-10 15:05:51	◀▬▬	tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has quit (Quit: Leaving)
2014-09-10 15:07:13	Oxyd	Magic!
2014-09-10 15:08:22	◀▬▬	mmhun (~anonymous@NYUFWA-WLESSAUTHCLIENTS-EXP01.NATPOOL.NYU.EDU) has quit (Quit: mmhun)
2014-09-10 15:08:44	◀▬▬	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has quit (Remote host closed the connection)
2014-09-10 15:10:30	◀▬▬	sohail (~user@unaffiliated/sohail) has quit (Ping timeout: 246 seconds)
2014-09-10 15:12:42	◀▬▬	fr33domlover (~fr33domlo@fsf/member/fr33domlover) has quit (Quit: fr33domlover)
2014-09-10 15:13:19	▬▬▶	glenfern (~glen@unaffiliated/glenfe) has joined ##c++
2014-09-10 15:14:00	LBV_User	ew
2014-09-10 15:14:18	▬▬▶	jcelerier (595d22d9@gateway/web/freenode/ip.89.93.34.217) has joined ##c++
2014-09-10 15:14:24	jcelerier	hi
2014-09-10 15:14:35	LBV_User	that reminded me of the worst framework I ever met
2014-09-10 15:14:45	jcelerier	is this the right channel to ask a question about cpp programming in windows ?
2014-09-10 15:14:54	TinoDidriksen	!windows
2014-09-10 15:14:55	nolyc	You should ask your Windows programming questions in ##c++-general, #winapi, ##windows-coding or irc://irc.efnet.org/winprog
2014-09-10 15:15:04	jcelerier	okay, thank you very much!
2014-09-10 15:16:50	▬▬▶	jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has joined ##c++
2014-09-10 15:17:55	▬▬▶	kadoban (~kadoban@ip68-104-204-58.ph.ph.cox.net) has joined ##c++
2014-09-10 15:18:03	▬▬▶	natechan (~natechan@67.135.43.183) has joined ##c++
2014-09-10 15:19:15	◀▬▬	npcomp (~eldon@c-24-126-240-124.hsd1.ga.comcast.net) has quit (Ping timeout: 246 seconds)
2014-09-10 15:20:01	▬▬▶	evanz (~Evan@cpe-74-138-81-110.swo.res.rr.com) has joined ##c++
2014-09-10 15:20:47	◀▬▬	glenfern (~glen@unaffiliated/glenfe) has quit (Ping timeout: 276 seconds)
2014-09-10 15:21:20	▬▬▶	npcomp (~eldon@c-24-126-240-124.hsd1.ga.comcast.net) has joined ##c++
2014-09-10 15:22:24	◀▬▬	yamamushi (~yamamushi@opentransactions/dev/yamamushi) has quit (Quit: Leaving.)
2014-09-10 15:24:34	◀▬▬	nicolastarzia (~nicolasta@201.90.94.104) has quit (Remote host closed the connection)
2014-09-10 15:25:25	▬▬▶	da2ce7 (~da2ce7@opentransactions/dev/da2ce7) has joined ##c++
2014-09-10 15:28:51	▬▬▶	tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has joined ##c++
2014-09-10 15:30:50	◀▬▬	dapz (~textual@216.239.45.93) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-09-10 15:30:55	▬▬▶	systemfault (~Systemfau@oftn/member/systemfault) has joined ##c++
2014-09-10 15:31:33	▬▬▶	micom (~micom@unaffiliated/micom) has joined ##c++
2014-09-10 15:32:56	--	irc: disconnected from server
2014-09-10 15:36:57	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-10 15:36:57	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-10 15:36:57	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-10 15:36:57	--	Channel ##c++: 488 nicks (0 ops, 0 voices, 488 normals)
2014-09-10 15:36:58	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-10 15:37:09	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-10 15:37:20	◀▬▬	LucaS05 (~lucas05@host244-60-dynamic.61-82-r.retail.telecomitalia.it) has quit (Ping timeout: 245 seconds)
2014-09-10 15:37:51	▬▬▶	npcomp (~eldon@c-24-126-240-124.hsd1.ga.comcast.net) has joined ##c++
2014-09-10 15:38:37	▬▬▶	EMB0SS (~EMB0SS@unaffiliated/emb0ss) has joined ##c++
2014-09-10 15:39:22	◀▬▬	glenfern (~glen@unaffiliated/glenfe) has quit (Ping timeout: 260 seconds)
2014-09-10 15:42:30	◀▬▬	Jackneill (~Jackneill@unaffiliated/jackneill) has quit (Read error: Connection reset by peer)
2014-09-10 15:42:34	▬▬▶	sohail (~user@unaffiliated/sohail) has joined ##c++
2014-09-10 15:45:02	▬▬▶	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has joined ##c++
2014-09-10 15:50:03	◀▬▬	aslant (~aslant@37.157.33.76) has quit (Ping timeout: 246 seconds)
2014-09-10 15:50:22	▬▬▶	unsigned_long (~smart_ptr@2001:7c0:409:8e0a:d9b7:a235:b75c:b3cd) has joined ##c++
2014-09-10 15:52:28	▬▬▶	regulate (~regulate@koduro.com) has joined ##c++
2014-09-10 15:53:16	▬▬▶	nicolastarzia (~nicolasta@201.90.94.104) has joined ##c++
2014-09-10 15:54:52	◀▬▬	scai (~scai@pD9EA6B16.dip0.t-ipconnect.de) has left ##c++ ("[IRSSI]")
2014-09-10 15:55:08	▬▬▶	lihp (~utilita@ip1886254f.dynamic.kabel-deutschland.de) has joined ##c++
2014-09-10 15:56:53	▬▬▶	tworkin (~Adium@97.77.193.138) has joined ##c++
2014-09-10 15:58:02	◀▬▬	nicolastarzia (~nicolasta@201.90.94.104) has quit (Ping timeout: 260 seconds)
2014-09-10 16:00:26	◀▬▬	sohail (~user@unaffiliated/sohail) has quit (Ping timeout: 240 seconds)
2014-09-10 16:01:19	◀▬▬	tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has quit (Quit: computer sleeping)
2014-09-10 16:03:52	◀▬▬	EMB0SS (~EMB0SS@unaffiliated/emb0ss) has quit (Quit: Leaving)
2014-09-10 16:04:05	◀▬▬	w41 (~w41@unaffiliated/w41) has quit (Quit: Lost terminal)
2014-09-10 16:04:31	▬▬▶	sohail (~user@unaffiliated/sohail) has joined ##c++
2014-09-10 16:06:17	◀▬▬	Sculptor (~Sculptor@trivialand/master/sculptor) has quit (Ping timeout: 252 seconds)
2014-09-10 16:06:23	◀▬▬	Tectu_ (~Tectu@78-167.60-188.cust.bluewin.ch) has quit (Quit: Leaving)
2014-09-10 16:07:47	◀▬▬	ToApolytoXaos (~ToApolyto@46.21.62.128) has quit (Quit: Leaving)
2014-09-10 16:08:41	◀▬▬	Jeeb_ (~Jeeb_@u193-11-162-37.studentnatet.se) has quit (Read error: Connection reset by peer)
2014-09-10 16:08:46	◀▬▬	p|q (~plq@95.14.106.239) has quit (Ping timeout: 260 seconds)
2014-09-10 16:09:52	◀▬▬	Anodl (~Anodl@p5DC5A2E1.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-09-10 16:09:58	▬▬▶	Anodl (~Anodl@p5DC5A2E1.dip0.t-ipconnect.de) has joined ##c++
2014-09-10 16:14:09	kailoAtWork	is anyone familiar with anti-patterns regarding the mixing of static and non-static code in one class?
2014-09-10 16:14:52	◀▬▬	Anodl (~Anodl@p5DC5A2E1.dip0.t-ipconnect.de) has quit (Ping timeout: 268 seconds)
2014-09-10 16:16:50	◀▬▬	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 245 seconds)
2014-09-10 16:17:17	▬▬▶	xarxer (~xarxer@h-19-65.a328.priv.bahnhof.se) has joined ##c++
2014-09-10 16:17:51	◀▬▬	rnickb (~rnickb@cpe-74-71-192-171.nyc.res.rr.com) has quit (Quit: rnickb)
2014-09-10 16:19:38	▬▬▶	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has joined ##c++
2014-09-10 16:21:19	◀▬▬	da2ce7 (~da2ce7@opentransactions/dev/da2ce7) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-09-10 16:21:31	▬▬▶	D0cN3x (~Thunderbi@dslb-178-007-215-003.178.007.pools.vodafone-ip.de) has joined ##c++
2014-09-10 16:21:53	▬▬▶	arescorpio (~arescorpi@57-240-16-190.fibertel.com.ar) has joined ##c++
2014-09-10 16:22:48	▬▬▶	Drew_ (~Drew@108.238.227.116) has joined ##c++
2014-09-10 16:22:56	◀▬▬	npcomp (~eldon@c-24-126-240-124.hsd1.ga.comcast.net) has quit (Ping timeout: 240 seconds)
2014-09-10 16:23:19	▬▬▶	aslant (~aslant@37.157.33.76) has joined ##c++
2014-09-10 16:23:41	▬▬▶	nug700 (~nug700@71-223-81-122.phnx.qwest.net) has joined ##c++
2014-09-10 16:23:44	◀▬▬	irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has quit (Quit: Lost terminal)
2014-09-10 16:23:53	◀▬▬	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has quit (Ping timeout: 252 seconds)
2014-09-10 16:25:22	▬▬▶	npcomp (~eldon@c-24-126-240-124.hsd1.ga.comcast.net) has joined ##c++
2014-09-10 16:30:43	◀▬▬	snyp (~snyp@223.29.204.2) has quit (Quit: Leaving)
2014-09-10 16:30:48	◀▬▬	soulcake (~soulcake@unaffiliated/soulcake) has quit (Quit: Quack.)
2014-09-10 16:30:54	▬▬▶	da2ce7 (~da2ce7@opentransactions/dev/da2ce7) has joined ##c++
2014-09-10 16:31:13	▬▬▶	kexmex (~kexmex@178.136.234.6) has joined ##c++
2014-09-10 16:31:14	▬▬▶	fstd_ (~fstd@unaffiliated/fisted) has joined ##c++
2014-09-10 16:32:01	▬▬▶	soulcake (~soulcake@unaffiliated/soulcake) has joined ##c++
2014-09-10 16:33:23	▬▬▶	LiohAu (~LiohAu@lse83-h04-89-86-22-242.dsl.sta.abo.bbox.fr) has joined ##c++
2014-09-10 16:33:32	LunarJetman	kailoAtWork: statics at class scope should be avoided; prefer function scope (a la Meyers Singleton)
2014-09-10 16:34:09	◀▬▬	fstd (~fstd@unaffiliated/fisted) has quit (Ping timeout: 246 seconds)
2014-09-10 16:34:12	--	fstd_ is now known as fstd
2014-09-10 16:35:10	◀▬▬	Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has quit (Quit: ZNC - http://znc.sourceforge.net)
2014-09-10 16:37:38	▬▬▶	ambro718 (~ambro@gentoo/contributor/ambro718) has joined ##c++
2014-09-10 16:38:45	◀▬▬	fr33domlover (~fr33domlo@fsf/member/fr33domlover) has quit (Quit: fr33domlover)
2014-09-10 16:39:18	▬▬▶	paul424 (~chatzilla@77.114.41.207) has joined ##c++
2014-09-10 16:39:56	◀▬▬	tsimpson (quasselcor@ubuntu/member/stdin) has quit (Read error: Connection reset by peer)
2014-09-10 16:40:57	◀▬▬	phantomcircuit (phantomcir@2600:3c01::f03c:91ff:fe73:6892) has quit (Ping timeout: 272 seconds)
2014-09-10 16:41:55	▬▬▶	phantomcircuit (phantomcir@2600:3c01::f03c:91ff:fe73:6892) has joined ##c++
2014-09-10 16:42:06	▬▬▶	tsimpson (quasselcor@ubuntu/member/stdin) has joined ##c++
2014-09-10 16:43:22	◀▬▬	kailoAtWork (~kailoAtWo@208.184.77.122) has quit (Quit: This computer has gone to sleep)
2014-09-10 16:44:17	▬▬▶	txomon|home (~txomon@unaffiliated/txomon) has joined ##c++
2014-09-10 16:45:16	◀▬▬	alamages (~alamages@snf-561760.vm.okeanos.grnet.gr) has quit (Quit: ZNC - http://znc.in)
2014-09-10 16:45:28	▬▬▶	desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-09-10 16:47:05	◀▬▬	desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-09-10 16:48:25	▬▬▶	desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-09-10 16:48:45	--	srjek_ is now known as srjek
2014-09-10 16:48:46	▬▬▶	surd (~surd@unaffiliated/surd) has joined ##c++
2014-09-10 16:51:10	◀▬▬	aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-09-10 16:51:23	▬▬▶	alamages (~alamages@snf-561760.vm.okeanos.grnet.gr) has joined ##c++
2014-09-10 16:52:21	◀▬▬	BadQuanta (~badquanta@2601:7:100:ecc:2d9e:5e92:f43d:dddc) has quit (Ping timeout: 272 seconds)
2014-09-10 16:52:49	▬▬▶	BadQuanta (~badquanta@c-98-246-171-233.hsd1.or.comcast.net) has joined ##c++
2014-09-10 16:53:59	◀▬▬	plamen (pivanov@nat/mslo/x-rmsnhnzyccropydj) has left ##c++
2014-09-10 16:54:03	◀▬▬	w41_ (~w41@unaffiliated/w41) has quit (Quit: Lost terminal)
2014-09-10 16:55:08	◀▬▬	natechan (~natechan@67.135.43.183) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-09-10 16:56:26	◀▬▬	woggle (~charles@watson.Millennium.Berkeley.EDU) has quit (Ping timeout: 240 seconds)
2014-09-10 16:57:20	▬▬▶	mmhun (~anonymous@NYUFWA-WLESSAUTHCLIENTS-03.NATPOOL.NYU.EDU) has joined ##c++
2014-09-10 16:58:17	◀▬▬	txomon|home (~txomon@unaffiliated/txomon) has quit (Ping timeout: 276 seconds)
2014-09-10 17:02:00	▬▬▶	hexagoxel (~hexagoxel@kiel-5f769c39.pool.mediaWays.net) has joined ##c++
2014-09-10 17:02:48	◀▬▬	kexmex (~kexmex@178.136.234.6) has quit (Quit: Computer has gone to sleep.)
2014-09-10 17:02:58	◀▬▬	da2ce7 (~da2ce7@opentransactions/dev/da2ce7) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-09-10 17:03:45	◀▬▬	io2 (~io2@unaffiliated/irrequietus) has quit (Quit: ...take irc away, what are you? genius, billionaire, playboy, philanthropist)
2014-09-10 17:05:35	◀▬▬	exophoric (~jbouchard@64.34.151.210) has quit (Quit: Leaving)
2014-09-10 17:05:48	▬▬▶	deSilva (deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-09-10 17:06:14	▬▬▶	yrter (~yrter@unaffiliated/yrter) has joined ##c++
2014-09-10 17:07:16	▬▬▶	crypto_guy (~abderraou@41.99.31.168) has joined ##c++
2014-09-10 17:07:28	◀▬▬	SDKey (5eb42192@gateway/web/freenode/ip.94.180.33.146) has quit (Quit: Page closed)
2014-09-10 17:08:40	◀▬▬	froggey (~froggey@unaffiliated/froggey) has quit (Ping timeout: 260 seconds)
2014-09-10 17:09:46	◀▬▬	ambro718 (~ambro@gentoo/contributor/ambro718) has quit (Ping timeout: 268 seconds)
2014-09-10 17:12:53	◀▬▬	lihp (~utilita@ip1886254f.dynamic.kabel-deutschland.de) has quit (Remote host closed the connection)
2014-09-10 17:13:10	◀▬▬	crypto_guy (~abderraou@41.99.31.168) has quit (Quit: Konversation terminated!)
2014-09-10 17:13:19	▬▬▶	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has joined ##c++
2014-09-10 17:13:44	▬▬▶	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-09-10 17:14:10	◀▬▬	micom (~micom@unaffiliated/micom) has quit (Remote host closed the connection)
2014-09-10 17:14:31	◀▬▬	Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 264 seconds)
2014-09-10 17:15:45	▬▬▶	Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has joined ##c++
2014-09-10 17:15:45	◀▬▬	vinleod (~vinleod@75-164-224-169.ptld.qwest.net) has quit (Quit: Computer has gone to sleep.)
2014-09-10 17:15:58	▬▬▶	froggey (~froggey@unaffiliated/froggey) has joined ##c++
2014-09-10 17:16:03	◀▬▬	stdvector (~stdvector@gateway/tor-sasl/stdvector) has quit (Remote host closed the connection)
2014-09-10 17:17:41	▬▬▶	woggle (~charles@watson.Millennium.Berkeley.EDU) has joined ##c++
2014-09-10 17:19:41	◀▬▬	surd (~surd@unaffiliated/surd) has quit (Read error: Connection reset by peer)
2014-09-10 17:20:30	◀▬▬	Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 264 seconds)
2014-09-10 17:20:55	▬▬▶	huckleberry78 (~huckleber@76.97.228.17) has joined ##c++
2014-09-10 17:25:30	◀▬▬	paullik (~paullik@unaffiliated/paullik) has quit (Remote host closed the connection)
2014-09-10 17:28:03	▬▬▶	glenfern (~glen@unaffiliated/glenfe) has joined ##c++
2014-09-10 17:28:16	▬▬▶	fold (~JimmyRcom@tccd250-2.tccd.edu) has joined ##c++
2014-09-10 17:28:44	◀▬▬	gelignite (~gelignite@i528C3C41.versanet.de) has quit (Quit: http://bit.ly/nkczDT)
2014-09-10 17:33:34	◀▬▬	DylanJ (DylanJ@unaffiliated/dylanj) has quit (Quit: WeeChat 0.4.1)
2014-09-10 17:33:35	▬▬▶	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:1563:62a2:e3f3:fc35) has joined ##c++
2014-09-10 17:34:16	◀▬▬	linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:1563:62a2:e3f3:fc35) has quit (Read error: Connection reset by peer)
2014-09-10 17:35:45	▬▬▶	tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has joined ##c++
2014-09-10 17:36:00	◀▬▬	acrussell (adamcrusse@awww.jeah.net) has quit (Quit: Leaving.)
2014-09-10 17:37:36	▬▬▶	mike_f (~MF@194.28.69.111.static.snap.net.nz) has joined ##c++
2014-09-10 17:38:20	◀▬▬	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has quit (Remote host closed the connection)
2014-09-10 17:38:37	izabera	guys can you help me? what's a quick way to check if stringA contains all the letters of stringB (in any order)?
2014-09-10 17:39:46	◀▬▬	BadQuanta (~badquanta@c-98-246-171-233.hsd1.or.comcast.net) has quit (Ping timeout: 245 seconds)
2014-09-10 17:40:23	◀▬▬	LBV_User (~leonardo@177.2.128.75) has quit (Quit: Bye all :))
2014-09-10 17:41:06	▬▬▶	jdrharding_ (d8d37197@gateway/web/freenode/ip.216.211.113.151) has joined ##c++
2014-09-10 17:41:37	◀▬▬	mmhun (~anonymous@NYUFWA-WLESSAUTHCLIENTS-03.NATPOOL.NYU.EDU) has quit (Quit: mmhun)
2014-09-10 17:41:58	▬▬▶	Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has joined ##c++
2014-09-10 17:43:11	jdrharding_	What is the best shortest path algorithm under the given conditions: you have a source node, a list of nodes connected to said node and an item type you are looking for in a node somewhere in a graph. You don't know how many nodes are in the graph. Can anyone give me a hand with that?
2014-09-10 17:43:57	ruediger	jdrharding_: A*?
2014-09-10 17:44:11	Nik05	izabera  http://en.cppreference.com/w/cpp/algorithm/includes ?
2014-09-10 17:44:17	jdrharding_	would that be the best case scenario? I mean over Dijkstra?
2014-09-10 17:44:30	◀▬▬	LiohAu (~LiohAu@lse83-h04-89-86-22-242.dsl.sta.abo.bbox.fr) has quit (Quit: LiohAu)
2014-09-10 17:44:54	▬▬▶	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has joined ##c++
2014-09-10 17:45:09	◀▬▬	unsigned_long (~smart_ptr@2001:7c0:409:8e0a:d9b7:a235:b75c:b3cd) has quit (Ping timeout: 272 seconds)
2014-09-10 17:45:09	◀▬▬	Lobster` (~Lobster@173.192.176.158-static.reverse.softlayer.com) has quit (Ping timeout: 272 seconds)
2014-09-10 17:45:46	jdrharding_	sorry, should mention, you don't know your destination node, only that you're looking for a node containing an item of a certain type
2014-09-10 17:45:55	izabera	Nik05: thanks a lot
2014-09-10 17:46:06	▬▬▶	aslant (~aslant@37.157.33.76) has joined ##c++
2014-09-10 17:46:15	◀▬▬	fold (~JimmyRcom@tccd250-2.tccd.edu) has quit (Ping timeout: 246 seconds)
2014-09-10 17:46:24	Kaini	That sounds like a breadth first search
2014-09-10 17:46:52	jdrharding_	I was thinking the same thing, but the edges are weighted
2014-09-10 17:47:28	jdrharding_	So it would have to be something along the lines of A* or Dijkstra, but without knowing the size of the graph it gets kinda messy
2014-09-10 17:48:40	▬▬▶	t0rc (~t0rc@unaffiliated/t0rc/x-5233201) has joined ##c++
2014-09-10 17:48:53	◀▬▬	BlaXpirit (~blaxpirit@42-7-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-09-10 17:49:08	ruediger	jdrharding_: sounds more like Dijkstra
2014-09-10 17:49:29	ruediger	jdrharding_: for A* you need a heuristic, which could be hard to define if you don't know the destination
2014-09-10 17:49:40	jdrharding_	That's exactly what I was thinking, but not knowing the graph size really throws a wrench into it
2014-09-10 17:49:46	▬▬▶	Lencl (Lencl_@ip68-106-223-14.oc.oc.cox.net) has joined ##c++
2014-09-10 17:49:47	▬▬▶	mmhun (~anonymous@NYUFWA-WLESSAUTHCLIENTS-03.NATPOOL.NYU.EDU) has joined ##c++
2014-09-10 17:49:49	Lencl	'lo
2014-09-10 17:51:08	◀▬▬	TomyLobo (~TomyLobo@91.65.115.103) has quit (Quit: Standby mode...)
2014-09-10 17:51:51	▬▬▶	DTSCode (~dtscode@174.134.25.153) has joined ##c++
2014-09-10 17:53:11	◀▬▬	xikkub (~xikkub@74.114.47.30) has left ##c++
2014-09-10 17:53:27	◀▬▬	biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has quit (Remote host closed the connection)
2014-09-10 17:55:04	◀▬▬	shintah (bebble@h-140-107.a336.priv.bahnhof.se) has quit (Read error: Connection reset by peer)
2014-09-10 17:55:43	◀▬▬	jitsuin (~chatzilla@216.14.6.130) has quit (Quit: ChatZilla 0.9.90.1 [Firefox 31.0/20140716183446])
2014-09-10 17:56:06	▬▬▶	surd (~surd@unaffiliated/surd) has joined ##c++
2014-09-10 17:56:10	◀▬▬	jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has quit (Quit: leaving)
2014-09-10 17:56:31	◀▬▬	Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 264 seconds)
2014-09-10 17:57:54	▬▬▶	Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has joined ##c++
2014-09-10 17:58:29	◀▬▬	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Ping timeout: 268 seconds)
2014-09-10 17:59:05	◀▬▬	tworkin (~Adium@97.77.193.138) has quit (Quit: Leaving.)
2014-09-10 17:59:11	◀▬▬	glenfern (~glen@unaffiliated/glenfe) has quit
2014-09-10 18:01:19	◀▬▬	surd (~surd@unaffiliated/surd) has quit (Ping timeout: 264 seconds)
2014-09-10 18:01:21	◀▬▬	Lowl3v3l (~Lowl3v3l@95.91.248.96) has quit (Remote host closed the connection)
2014-09-10 18:02:13	▬▬▶	kephra (~kraehe@port-92-196-29-47.dynamic.qsc.de) has joined ##c++
2014-09-10 18:02:17	◀▬▬	kephra (~kraehe@port-92-196-29-47.dynamic.qsc.de) has left ##c++ ("Leaving")
2014-09-10 18:03:35	▬▬▶	o-O-o (43872bb7@gateway/web/freenode/ip.67.135.43.183) has joined ##c++
2014-09-10 18:04:05	▬▬▶	clynamen (~clynamen@net-188-216-36-224.cust.vodafonedsl.it) has joined ##c++
2014-09-10 18:04:12	o-O-o	the allocators presentation is pretty good
2014-09-10 18:05:17	o-O-o	and I finally understood the practical usage of universal references
2014-09-10 18:05:25	o-O-o	wish I had this conference 3 years earlier :D
2014-09-10 18:05:40	mountaingoat	o-O-o: link?
2014-09-10 18:05:50	▬▬▶	kailoAtWork (~kailoAtWo@208.184.77.122) has joined ##c++
2014-09-10 18:06:18	o-O-o	mountaingoat: CppCon 2014
2014-09-10 18:06:26	o-O-o	no links for the videos (yet)
2014-09-10 18:06:34	DTSCode	theres a cpp con?!?? where is it held?
2014-09-10 18:06:36	mountaingoat	ok thx
2014-09-10 18:06:40	o-O-o	Bellevue, WA
2014-09-10 18:06:47	DTSCode	every year?
2014-09-10 18:06:52	o-O-o	DTSCode: I hope so
2014-09-10 18:06:53	▬▬▶	Zifre_ (~Zifre@unaffiliated/zifre) has joined ##c++
2014-09-10 18:06:57	clynamen	did anyone gave a look at fatal? https://github.com/facebook/fatal
2014-09-10 18:06:59	o-O-o	this is the first one and it is being a great success
2014-09-10 18:07:05	DTSCode	o
2014-09-10 18:07:07	o-O-o	so Jon Kalb is planning to do more
2014-09-10 18:07:09	DTSCode	i wish i hd known
2014-09-10 18:07:13	DTSCode	i would have gone
2014-09-10 18:07:34	K-ballo	DTSCode: keep an eye on isocpp.org to not ever miss news again
2014-09-10 18:07:45	o-O-o	DTSCode: it had a fair share of advertising
2014-09-10 18:07:46	DTSCode	K-ballo: thanks for the tip. ill do that
2014-09-10 18:08:12	o-O-o	I did get my ticket in february
2014-09-10 18:08:24	DTSCode	clynamen: i havent tried that, but i have used their preprocessor software
2014-09-10 18:08:43	o-O-o	DTSCode: if you in seattle area, there will be open content presentations for everyone
2014-09-10 18:08:48	o-O-o	*are*
2014-09-10 18:08:51	DTSCode	im in cali
2014-09-10 18:09:02	o-O-o	heh
2014-09-10 18:10:07	▬▬▶	glenfern (~glen@unaffiliated/glenfe) has joined ##c++
2014-09-10 18:10:12	◀▬▬	Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 255 seconds)
2014-09-10 18:10:37	◀▬▬	mmhun (~anonymous@NYUFWA-WLESSAUTHCLIENTS-03.NATPOOL.NYU.EDU) has quit (Quit: mmhun)
2014-09-10 18:11:06	◀▬▬	Zifre (~Zifre@unaffiliated/zifre) has quit (Ping timeout: 255 seconds)
2014-09-10 18:11:40	▬▬▶	Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has joined ##c++
2014-09-10 18:11:51	▬▬▶	surd (~surd@unaffiliated/surd) has joined ##c++
2014-09-10 18:12:26	◀▬▬	kurahaupo1 (~Kurahaupo@136.245.252.27.dyn.cust.vf.net.nz) has quit (Ping timeout: 240 seconds)
2014-09-10 18:12:45	kailoAtWork	LunarJetman, obviously, but are thee specific anti-patterns related to mixing static and non-static code?
2014-09-10 18:12:59	kailoAtWork	I'm looking for a name for this specific code smell
2014-09-10 18:13:53	clynamen	DTSCode: I'm still having problem with fully understanding what it does reading the slides, lol. I hope the video of the talk will help
2014-09-10 18:14:16	DTSCode	clynamen: about fatal?
2014-09-10 18:14:36	clynamen	DTSCode: yes
2014-09-10 18:14:52	▬▬▶	mmhun (~anonymous@NYUFWA-WLESSAUTHCLIENTS-03.NATPOOL.NYU.EDU) has joined ##c++
2014-09-10 18:15:38	DTSCode	clynamen: do you know what template meta programming is?
2014-09-10 18:16:05	◀▬▬	desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has quit (Quit: Leaving)
2014-09-10 18:17:35	clynamen	DTSCode: yes, but I am not that good at that. I need to update to the new standard
2014-09-10 18:18:02	DTSCode	o.O it changed with 11? fuck. i need to update too then
2014-09-10 18:18:56	▬▬▶	jitsuin (~chatzilla@cpe-23-240-223-21.socal.res.rr.com) has joined ##c++
2014-09-10 18:19:38	clynamen	DTSCode: well, not really. They just added auto, variadics template and something else. But I need to read the code several time before understanding it
2014-09-10 18:20:14	DTSCode	well autos been in since at least 03
2014-09-10 18:20:22	DTSCode	no wait it was in before that too
2014-09-10 18:20:29	DTSCode	it changed in 03
2014-09-10 18:20:37	◀▬▬	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has quit (Remote host closed the connection)
2014-09-10 18:21:02	◀▬▬	Haswell (~Haswell@unaffiliated/haswell) has quit (Quit: Haswell)
2014-09-10 18:21:26	◀▬▬	LunarJetman (LunarJetma@05400825.skybroadband.com) has quit (Quit: LunarJetman)
2014-09-10 18:21:32	▬▬▶	vinleod (~vinleod@75-164-224-169.ptld.qwest.net) has joined ##c++
2014-09-10 18:21:51	◀▬▬	aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-09-10 18:21:58	clynamen	DTSCode: maybe it was already available, but I am pretty sure that 'auto' for type inference was added only in 11.
2014-09-10 18:22:00	o-O-o	man.. allocators require LOTS of type traits :(
2014-09-10 18:22:33	hs_	o-O-o, open presentations?? when?
2014-09-10 18:23:19	hs_	"auto" used to be a storage specifier, i believe
2014-09-10 18:23:25	glenfern	No, they do not require any type traits. They also do not require more than one type alias member.
2014-09-10 18:23:54	glenfern	(For C++11 and beyond allocators).
2014-09-10 18:23:54	DTSCode	yeah hs_ but i thought it switched to type inference in 03, not 11
2014-09-10 18:24:00	DTSCode	im checking though
2014-09-10 18:24:10	hs_	DTSCode, pretty sure since 11..
2014-09-10 18:24:51	DTSCode	yep. i was wrong
2014-09-10 18:25:24	◀▬▬	bacon000 (~nobody@50-1-81-63.dsl.dynamic.sonic.net) has quit (Quit: Lingo - http://www.lingoirc.com)
2014-09-10 18:25:38	DTSCode	hmmm... i guess c++11 must have already been starting to effect compilers when i started
2014-09-10 18:25:42	hs_	I've read Bjarne say things like he wanted to have it back in 1742 or whenever he started C++
2014-09-10 18:26:14	◀▬▬	woggle (~charles@watson.Millennium.Berkeley.EDU) has quit (Ping timeout: 268 seconds)
2014-09-10 18:26:32	DTSCode	bjarne wants a lot of things changed with c++ apparently
2014-09-10 18:26:48	◀▬▬	jcelerier (595d22d9@gateway/web/freenode/ip.89.93.34.217) has quit (Quit: Page closed)
2014-09-10 18:27:53	▬▬▶	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has joined ##c++
2014-09-10 18:29:27	hs_	Bjarne will eat his pudding
2014-09-10 18:29:40	DTSCode	XD
2014-09-10 18:29:46	DTSCode	i just watched that movie
2014-09-10 18:29:54	hs_	in my completely subjective and isolated view, I think c++ is in a pretty good position right now, both in terms of Bjarne's satisfaction and its reception in the broader community
2014-09-10 18:30:00	◀▬▬	seishun (~Kakera@46.109.100.133) has quit (Ping timeout: 255 seconds)
2014-09-10 18:30:23	DTSCode	i didnt say it was bad
2014-09-10 18:30:30	hs_	hopefully these "RUST IS SO AWSESOemee" dudes settle down
2014-09-10 18:30:36	▬▬▶	immibis (~ChatZill1@122-59-227-101.jetstream.xtra.co.nz) has joined ##c++
2014-09-10 18:30:45	hs_	YOU SAID IT WAS BAD!!
2014-09-10 18:30:48	DTSCode	ive been writing c code for a while and its made me appreciate a lot that c++ has to offer
2014-09-10 18:30:50	hs_	(i know.. just saying)
2014-09-10 18:31:03	DTSCode	hs_> hopefully these "RUST IS SO AWSESOemee" dudes settle down
2014-09-10 18:31:09	◀▬▬	Yepoleb (~quassel@178-190-227-4.adsl.highway.telekom.at) has quit (Quit: Yepoleb)
2014-09-10 18:31:13	DTSCode	pffttt its just the java hype all over again
2014-09-10 18:31:53	o11c	hs_: but Rust is awesome, and is *far* more likely to fix things than C++ ever will be
2014-09-10 18:32:07	o11c	DTSCode: that's what made me appreciate C++ too
2014-09-10 18:32:07	kalven	but *not* likely to catch on
2014-09-10 18:32:15	o11c	back then C was my Blub, now C++ is
2014-09-10 18:32:16	DTSCode	perl is the real king of all languages
2014-09-10 18:32:29	hs_	C++ is a battle tested juggernat
2014-09-10 18:32:31	hs_	naut
2014-09-10 18:32:49	hs_	rust is like the college kid who has "the best ideas" for politics, art, etc.
2014-09-10 18:32:57	DTSCode	why is rust so good?
2014-09-10 18:32:58	◀▬▬	Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 252 seconds)
2014-09-10 18:33:05	▬▬▶	nutron (~nutron@unaffiliated/nutron) has joined ##c++
2014-09-10 18:33:12	hs_	maybe it will mature and be excellent, but I think it is apples and oranges comparisons at this point
2014-09-10 18:33:36	DTSCode	at some point, i think we are all going to deevolve and just write brainfuck code from then on
2014-09-10 18:33:41	o11c	DTSCode: basically, all the mistakes C++ made? Rust doesn't do that.
2014-09-10 18:33:49	▬▬▶	PJBoy (~PJBoy@unaffiliated/pjboy) has joined ##c++
2014-09-10 18:33:50	▬▬▶	glenfe_ (~glen@unaffiliated/glenfe) has joined ##c++
2014-09-10 18:33:51	DTSCode	o11c: such as?
2014-09-10 18:34:29	o11c	Rust is safe by default: no uninitialized values, no expired pointers, no mutable aliasing, checked unions, ...
2014-09-10 18:34:30	DTSCode	o11c: im not arguing c++ is better, ive just heard a lot of talk about it
2014-09-10 18:34:45	DTSCode	/s/it/rust/
2014-09-10 18:34:59	o11c	in C++ it is impossible to check whether your code is sane; in Rust you just have to check the 'unsafe' blocks by hand
2014-09-10 18:35:14	o11c	(you will always have a few unsafe blocks, but they are limited in scope, so ...)
2014-09-10 18:35:26	◀▬▬	glenfern (~glen@unaffiliated/glenfe) has quit (Ping timeout: 240 seconds)
2014-09-10 18:35:30	DTSCode	do you mean blocks of code?
2014-09-10 18:35:30	▬▬▶	Yepoleb (~quassel@178-190-227-4.adsl.highway.telekom.at) has joined ##c++
2014-09-10 18:35:31	o11c	also Rust doesn't use exceptions, but has a really convenient Result<Ok, Err> type
2014-09-10 18:35:48	DTSCode	hmmm... i might switch from learning perl to that
2014-09-10 18:35:53	▬▬▶	xylorast (~xylorast@184-78-208-126.war.clearwire-wmx.net) has joined ##c++
2014-09-10 18:35:54	o11c	which makes manually propogating or handling errors easy
2014-09-10 18:37:18	kalven	o11c: what does it have to make error propagation less painful?
2014-09-10 18:37:53	▬▬▶	jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has joined ##c++
2014-09-10 18:39:13	◀▬▬	jitsuin (~chatzilla@cpe-23-240-223-21.socal.res.rr.com) has quit (Read error: Connection reset by peer)
2014-09-10 18:39:31	▬▬▶	woggle (~charles@watson.Millennium.Berkeley.EDU) has joined ##c++
2014-09-10 18:39:37	◀▬▬	huckleberry78 (~huckleber@76.97.228.17) has quit (Remote host closed the connection)
2014-09-10 18:39:46	▬▬▶	jitsuin (~chatzilla@cpe-23-240-223-21.socal.res.rr.com) has joined ##c++
2014-09-10 18:39:47	o11c	kalven: there's a try! macro that you use when you want to propogate
2014-09-10 18:40:09	kailoAtWork	what do you call the code smell where static code is mixed in with a non-static, non-singleton class?
2014-09-10 18:40:12	◀▬▬	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has quit (Remote host closed the connection)
2014-09-10 18:40:17	▬▬▶	huckleberry78 (~huckleber@76.97.228.17) has joined ##c++
2014-09-10 18:40:33	kailoAtWork	ie a public static function, which has a pointer to an instance function, and calls that function pointer
2014-09-10 18:40:36	◀▬▬	h_enke (~henkik@s213-103-200-208.cust.tele2.se) has quit (Ping timeout: 245 seconds)
2014-09-10 18:40:40	o11c	fn foo() -> Result<char, IoError> { let c char = try!(bar()); Ok(c);  }
2014-09-10 18:40:44	o11c	er, c: char
2014-09-10 18:40:54	o11c	ugh, also delete the last ;
2014-09-10 18:41:19	DTSCode	o11c: kind of sounds like assert
2014-09-10 18:41:37	o11c	the ease of this is actually getting me to handle I/O errors differently from EOF!
2014-09-10 18:41:44	DTSCode	o.O
2014-09-10 18:41:49	DTSCode	i would love that
2014-09-10 18:41:50	o11c	DTSCode: no, because you can handle it instead
2014-09-10 18:41:56	DTSCode	oh
2014-09-10 18:42:44	o11c	fn handle() { match foo() { Ok(c) => { println!("Ok: {}", c) } } Err(e) => { println!({"Error: {}", e})} }
2014-09-10 18:44:25	◀▬▬	PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Killed (weber.freenode.net (Nickname regained by services)))
2014-09-10 18:44:37	◀▬▬	chewyDelicious (~nooblet@124-197-38-147.callplus.net.nz) has quit (Disconnected by services)
2014-09-10 18:45:14	◀▬▬	clynamen (~clynamen@net-188-216-36-224.cust.vodafonedsl.it) has quit (Remote host closed the connection)
2014-09-10 18:45:36	◀▬▬	huckleberry78 (~huckleber@76.97.228.17) has quit (Ping timeout: 252 seconds)
2014-09-10 18:45:36	◀▬▬	RlyDontKnow (~rlydontkn@unaffiliated/urmeliii) has quit (Read error: Connection reset by peer)
2014-09-10 18:46:14	◀▬▬	jayne (~jayne@freenode/staff/jayne) has quit (Read error: Connection reset by peer)
2014-09-10 18:46:30	▬▬▶	jayne (~jayne@freenode/staff/jayne) has joined ##c++
2014-09-10 18:48:03	▬▬▶	bollullera (~ana@95.63.152.106) has joined ##c++
2014-09-10 18:48:24	◀▬▬	Blaguvest (~blaguvest@unaffiliated/blaguvest) has quit
2014-09-10 18:49:12	◀▬▬	lkb (~luck@cgp251.neoplus.adsl.tpnet.pl) has quit (Quit: Wychodzi)
2014-09-10 18:49:23	◀▬▬	vinleod (~vinleod@75-164-224-169.ptld.qwest.net) has quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2014-09-10 18:49:56	▬▬▶	karab44 (~karab44@host-91-192-90-101.elomza.pl) has joined ##c++
2014-09-10 18:50:00	▬▬▶	mangekyo (~mangekyo@1.155.106.46) has joined ##c++
2014-09-10 18:52:30	▬▬▶	GinoMan (~Gino@pool-72-94-39-83.phlapa.fios.verizon.net) has joined ##c++
2014-09-10 18:53:31	◀▬▬	Thorn (~thorn@unaffiliated/thorn) has quit (Ping timeout: 245 seconds)
2014-09-10 18:54:50	▬▬▶	rfk (~fgk@pool-108-41-251-168.nycmny.fios.verizon.net) has joined ##c++
2014-09-10 18:55:35	◀▬▬	glenfe_ (~glen@unaffiliated/glenfe) has quit (Quit: Restart)
2014-09-10 18:57:32	▬▬▶	Thorn (~thorn@unaffiliated/thorn) has joined ##c++
2014-09-10 18:58:01	▬▬▶	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-09-10 18:59:17	◀▬▬	TheFuzzball (~TheFuzzba@cpc4-ward10-2-0-cust737.10-2.cable.virginm.net) has quit (Quit: Computer has gone to sleep.)
2014-09-10 19:00:22	◀▬▬	Andy-chan2 (~Andy-chan@xdsl-87-78-154-225.netcologne.de) has quit (Read error: Connection reset by peer)
2014-09-10 19:00:36	▬▬▶	Andy-chan (~Andy-chan@xdsl-87-78-154-225.netcologne.de) has joined ##c++
2014-09-10 19:00:57	▬▬▶	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has joined ##c++
2014-09-10 19:01:36	▬▬▶	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-09-10 19:02:39	▬▬▶	thejohnfreeman (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has joined ##c++
2014-09-10 19:03:44	◀▬▬	hexagoxel (~hexagoxel@kiel-5f769c39.pool.mediaWays.net) has quit (Read error: No route to host)
2014-09-10 19:03:53	▬▬▶	hexagoxel_ (~hexagoxel@kiel-5f77b2da.pool.mediaWays.net) has joined ##c++
2014-09-10 19:03:58	◀▬▬	sparr (~kvirc@pdpc/supporter/active/sparr) has quit (Ping timeout: 246 seconds)
2014-09-10 19:05:26	o-O-o	scoped_allocator_adaptor<> :DDDDDD
2014-09-10 19:05:49	▬▬▶	Chris (~chris@unaffiliated/chris) has joined ##c++
2014-09-10 19:06:54	◀▬▬	Yoofie (~chatzilla@107-147-214-101.res.bhn.net) has quit (Ping timeout: 255 seconds)
2014-09-10 19:08:07	o-O-o	the bloomberg guy is pretty good and proficient on allocators, indeed
2014-09-10 19:08:14	◀▬▬	redpill (~redpill@unaffiliated/redpill) has quit (Read error: Connection timed out)
2014-09-10 19:08:17	o-O-o	it is a fapping ordeal to write them :(
2014-09-10 19:08:33	▬▬▶	Yoofie (~chatzilla@107-147-214-101.res.bhn.net) has joined ##c++
2014-09-10 19:08:34	hs_	Lakos?
2014-09-10 19:08:42	o-O-o	no
2014-09-10 19:08:43	▬▬▶	redpill (~redpill@unaffiliated/redpill) has joined ##c++
2014-09-10 19:08:55	◀▬▬	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 260 seconds)
2014-09-10 19:09:06	o-O-o	Alisdair Meredith is a software developer at BloombergLP in New York, and the C++ Standard Committee Library Working Group chair.
2014-09-10 19:09:52	K-ballo	o-O-o: !facts ?
2014-09-10 19:10:02	o-O-o	he is the presenter
2014-09-10 19:10:32	◀▬▬	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has quit (Remote host closed the connection)
2014-09-10 19:10:58	o-O-o	!stdref scoped_allocator_adaptor
2014-09-10 19:10:59	nolyc	http://en.cppreference.com/w/cpp/memory/scoped_allocator_adaptor
2014-09-10 19:11:07	◀▬▬	redpill (~redpill@unaffiliated/redpill) has quit (Max SendQ exceeded)
2014-09-10 19:11:12	det	o-O-o, is he still proposing all allocators are polymorphic, or just a special namespace of typedefs
2014-09-10 19:11:24	▬▬▶	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has joined ##c++
2014-09-10 19:11:34	◀▬▬	emg (~emg@74.217.148.5) has quit (Quit: emg)
2014-09-10 19:12:07	o-O-o	traits
2014-09-10 19:12:28	o-O-o	he barely mentioned polymorphic allocators, but that is on TS lib
2014-09-10 19:14:23	o-O-o	C++ goes really crazy with these allocators.
2014-09-10 19:14:26	◀▬▬	deSilva (deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-09-10 19:14:43	o-O-o	dynamic memory management at the fapping level
2014-09-10 19:15:04	o-O-o	traits, adaptors and sfinae everywhere
2014-09-10 19:15:04	◀▬▬	thejohnfreeman (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has quit (Read error: Connection reset by peer)
2014-09-10 19:15:10	▬▬▶	thejohnfreeman1 (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has joined ##c++
2014-09-10 19:15:52	◀▬▬	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has quit (Ping timeout: 246 seconds)
2014-09-10 19:15:59	◀▬▬	kailoAtWork (~kailoAtWo@208.184.77.122) has quit (Quit: This computer has gone to sleep)
2014-09-10 19:16:45	▬▬▶	glenfern (~glen@unaffiliated/glenfe) has joined ##c++
2014-09-10 19:17:00	◀▬▬	hexagoxel_ (~hexagoxel@kiel-5f77b2da.pool.mediaWays.net) has quit (Ping timeout: 272 seconds)
2014-09-10 19:17:45	▬▬▶	ketamin (~Thunderbi@131.178.200.64) has joined ##c++
2014-09-10 19:18:26	▬▬▶	redpill (~redpill@unaffiliated/redpill) has joined ##c++
2014-09-10 19:20:11	◀▬▬	redpill (~redpill@unaffiliated/redpill) has quit (Max SendQ exceeded)
2014-09-10 19:21:57	◀▬▬	Lencl (Lencl_@ip68-106-223-14.oc.oc.cox.net) has quit (Ping timeout: 276 seconds)
2014-09-10 19:26:32	◀▬▬	paul424 (~chatzilla@77.114.41.207) has quit (Quit: ChatZilla 0.9.90.1 [Firefox 31.1.0/2014082900])
2014-09-10 19:28:18	◀▬▬	Drew_ (~Drew@108.238.227.116) has quit (Quit: Leaving)
2014-09-10 19:28:36	▬▬▶	kailoAtWork (~kailoAtWo@208.184.77.122) has joined ##c++
2014-09-10 19:29:13	▬▬▶	dseitz (~dseitz@ip70-191-237-177.pn.at.cox.net) has joined ##c++
2014-09-10 19:29:24	◀▬▬	immibis (~ChatZill1@122-59-227-101.jetstream.xtra.co.nz) has quit (Ping timeout: 255 seconds)
2014-09-10 19:30:27	◀▬▬	Fogger (~Fogger@host86-173-181-92.range86-173.btcentralplus.com) has quit (Read error: Connection reset by peer)
2014-09-10 19:30:50	▬▬▶	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has joined ##c++
2014-09-10 19:34:37	◀▬▬	Erlkoenig (~erlkoenig@ip-109-90-150-61.hsi11.unitymediagroup.de) has quit (Quit: Leaving.)
2014-09-10 19:34:57	◀▬▬	EvilPenguin (~EvilPengu@ultramain.com) has quit (Ping timeout: 276 seconds)
2014-09-10 19:35:22	▬▬▶	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-09-10 19:36:00	◀▬▬	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has quit (Ping timeout: 272 seconds)
2014-09-10 19:36:11	◀▬▬	o-O-o (43872bb7@gateway/web/freenode/ip.67.135.43.183) has quit (Ping timeout: 246 seconds)
2014-09-10 19:37:59	▬▬▶	symm- (~symm-@178.168.29.31) has joined ##c++
2014-09-10 19:38:07	▬▬▶	o-O-o (43872bb7@gateway/web/freenode/ip.67.135.43.183) has joined ##c++
2014-09-10 19:38:31	o-O-o	now I gonna see Joel Falcou's presentation
2014-09-10 19:38:53	o-O-o	Costless Software Abstractions for Parallel Architectures
2014-09-10 19:39:44	▬▬▶	unsigned_long (~smart_ptr@2001:7c0:409:8e0a:29e5:b6ff:45d9:9ada) has joined ##c++
2014-09-10 19:41:01	o11c	<< (int) L'a'
2014-09-10 19:41:02	geordi	97
2014-09-10 19:41:07	o11c	<< (int) u16'a'
2014-09-10 19:41:07	geordi	error: 'u16' was not declared in this scope
2014-09-10 19:41:17	o11c	<< (int) u16"a"
2014-09-10 19:41:17	geordi	Same error.
2014-09-10 19:41:19	o11c	hm
2014-09-10 19:41:40	o11c	<< (int) u'a'
2014-09-10 19:41:41	geordi	97
2014-09-10 19:41:43	DTSCode	<o-O-o> dynamic memory management at the fapping level
2014-09-10 19:41:43	o11c	<< (int) U'a'
2014-09-10 19:41:44	geordi	97
2014-09-10 19:41:47	o11c	<< (int) u8'a'
2014-09-10 19:41:47	geordi	error: 'u8' was not declared in this scope
2014-09-10 19:41:48	DTSCode	that is quite the comment
2014-09-10 19:42:03	▬▬▶	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has joined ##c++
2014-09-10 19:42:04	K-ballo	<< (int) u"a"[0] //?
2014-09-10 19:42:05	geordi	97
2014-09-10 19:42:06	o11c	DTSCode: ?
2014-09-10 19:42:24	DTSCode	o-O-o said it above
2014-09-10 19:42:25	◀▬▬	Smjert (~Smjert@2-230-17-181.ip199.fastwebnet.it) has quit
2014-09-10 19:43:15	◀▬▬	mizvekov (~mizvekov@139.82.143.58) has quit (Quit: Leaving)
2014-09-10 19:43:36	◀▬▬	glenfern (~glen@unaffiliated/glenfe) has quit (Ping timeout: 245 seconds)
2014-09-10 19:44:27	◀▬▬	mangekyo (~mangekyo@1.155.106.46) has quit (Ping timeout: 240 seconds)
2014-09-10 19:44:37	o11c	DTSCode: ah, I have him on double-ignore, so I don't see people talking to him
2014-09-10 19:44:44	▬▬▶	glenfern (~glen@unaffiliated/glenfe) has joined ##c++
2014-09-10 19:45:28	DTSCode	oh
2014-09-10 19:45:32	DTSCode	why?
2014-09-10 19:46:16	o-O-o	because I pwned o11c too much
2014-09-10 19:46:19	◀▬▬	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has quit (Ping timeout: 246 seconds)
2014-09-10 19:47:20	▬▬▶	voidah (~voidah@207.96.245.30) has joined ##c++
2014-09-10 19:47:28	o11c	DTSCode: because this channel gets enough *accidental* <insult>s, I don't have the patience to deal with the persistent ones as well
2014-09-10 19:47:53	▬▬▶	Cecen (~Collin@cpe-76-90-80-243.socal.res.rr.com) has joined ##c++
2014-09-10 19:48:57	DTSCode	oh
2014-09-10 19:48:59	glenfern	o-O-o: If you want to join us for dinner tonight, let me know. On Monday night we went to dinner with Chandler and a few others; yesterday we had dinner with Marshall, Jeff, Chandler, and a few others.
2014-09-10 19:50:10	▬▬▶	EvergreenTree (~quassel@unaffiliated/evergreentree) has joined ##c++
2014-09-10 19:50:34	◀▬▬	unsigned_long (~smart_ptr@2001:7c0:409:8e0a:29e5:b6ff:45d9:9ada) has quit (Ping timeout: 272 seconds)
2014-09-10 19:50:40	--	glenfern is now known as glenfe_
2014-09-10 19:51:03	▬▬▶	eddyb (~eddyb@unaffiliated/eddyb) has joined ##c++
2014-09-10 19:51:26	▬▬▶	Mayzie (~Mayazcher@unaffiliated/mayazcherquoi) has joined ##c++
2014-09-10 19:51:51	◀▬▬	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 276 seconds)
2014-09-10 19:52:13	DTSCode	Anyone familiar with a wait-free linked list in a threaded environment?
2014-09-10 19:52:47	◀▬▬	voidah (~voidah@207.96.245.30) has quit (Ping timeout: 260 seconds)
2014-09-10 19:53:23	▬▬▶	BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has joined ##c++
2014-09-10 19:53:37	eddyb	DTSCode: wait-free or lock-free?
2014-09-10 19:53:59	DTSCode	wait free
2014-09-10 19:54:02	 *	eddyb just learned something
2014-09-10 19:54:04	▬▬▶	davidstone (~david@174-29-76-211.hlrn.qwest.net) has joined ##c++
2014-09-10 19:54:18	DTSCode	some guy asked in another channel and i said i would ask around
2014-09-10 19:54:33	▬▬▶	voidah (~voidah@207.96.245.30) has joined ##c++
2014-09-10 19:54:37	eddyb	hmm, so an atomic update of a single value would be wait-free
2014-09-10 19:54:43	◀▬▬	froggey (~froggey@unaffiliated/froggey) has quit (Ping timeout: 246 seconds)
2014-09-10 19:54:43	◀▬▬	leeN (~leeN@e181199238.adsl.alicedsl.de) has quit (Ping timeout: 246 seconds)
2014-09-10 19:55:03	eddyb	but needing a loop to atomically update a second value would be just lock-free, not wait-free
2014-09-10 19:55:51	▬▬▶	froggey (~froggey@unaffiliated/froggey) has joined ##c++
2014-09-10 19:55:55	▬▬▶	redpill (~redpill@unaffiliated/redpill) has joined ##c++
2014-09-10 19:57:24	o11c	eddyb: pretty sure it counts though, since the contentious loop is likely to not happen very many times
2014-09-10 19:57:51	eddyb	"An algorithm is wait-free if every operation has a bound on the number of steps the algorithm will take before the operation completes."
2014-09-10 19:58:17	Cecen	No, that's not wait-free
2014-09-10 19:58:32	eddyb	Cecen: fix wikipedia then?
2014-09-10 19:58:32	hs_	internet says so sorry
2014-09-10 19:58:40	Cecen	I mean @o11c
2014-09-10 19:58:40	hs_	sorry, internet wins
2014-09-10 19:58:45	hs_	ohhoic
2014-09-10 19:58:46	eddyb	:)
2014-09-10 19:59:46	o11c	hm
2014-09-10 19:59:48	▬▬▶	leeN (~leeN@e181199238.adsl.alicedsl.de) has joined ##c++
2014-09-10 19:59:50	o11c	how is that even possible?
2014-09-10 20:00:08	◀▬▬	redpill (~redpill@unaffiliated/redpill) has quit (Max SendQ exceeded)
2014-09-10 20:00:15	◀▬▬	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 260 seconds)
2014-09-10 20:00:33	o11c	I mean, I suppose if you have fcfs-priority you can bound as a multiple of the number of threads
2014-09-10 20:00:43	▬▬▶	redpill (~redpill@unaffiliated/redpill) has joined ##c++
2014-09-10 20:01:03	o11c	but it sounds like you're asking for a bound as a constant
2014-09-10 20:01:30	eddyb	o11c: http://en.wikipedia.org/wiki/Non-blocking_algorithm#Wait-freedom
2014-09-10 20:02:48	◀▬▬	redpill (~redpill@unaffiliated/redpill) has quit (Max SendQ exceeded)
2014-09-10 20:02:56	glenfe_	It would also be useful to point him toward anything that distinguishes between wait-free bounded and the other kind of wait-free.
2014-09-10 20:03:23	▬▬▶	redpill (~redpill@unaffiliated/redpill) has joined ##c++
2014-09-10 20:03:31	eddyb	glenfe_: well, I just learned about wait freedom :)
2014-09-10 20:06:37	▬▬▶	aslant (~aslant@37.157.33.76) has joined ##c++
2014-09-10 20:06:49	◀▬▬	redpill (~redpill@unaffiliated/redpill) has quit (Max SendQ exceeded)
2014-09-10 20:06:58	◀▬▬	Px12 (~Px12@59.89.48.51) has quit (Ping timeout: 246 seconds)
2014-09-10 20:07:23	▬▬▶	redpill (~redpill@unaffiliated/redpill) has joined ##c++
2014-09-10 20:07:23	o11c	on closer reading, I think that "bound by the number of threads" would count
2014-09-10 20:08:15	o11c	since "wait for each thread at most once" is still "guaranteed progress in the thread, not just the system"
2014-09-10 20:08:46	▬▬▶	phillips1012 (~phillips1@72.42.104.172) has joined ##c++
2014-09-10 20:09:27	▬▬▶	Blue_Hat (~TwinKam20@184.170.31.14) has joined ##c++
2014-09-10 20:09:56	glenfe_	Again: What is the difference between bounded wait-free, and the other kind.
2014-09-10 20:10:27	glenfe_	i.e. If you're able to answer what a wait-free whose performance does not depend on the number of active threads is.
2014-09-10 20:11:58	◀▬▬	redpill (~redpill@unaffiliated/redpill) has quit (Max SendQ exceeded)
2014-09-10 20:12:35	◀▬▬	EvergreenTree (~quassel@unaffiliated/evergreentree) has quit (Read error: Connection reset by peer)
2014-09-10 20:12:45	▬▬▶	redpill (~redpill@unaffiliated/redpill) has joined ##c++
2014-09-10 20:13:18	▬▬▶	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has joined ##c++
2014-09-10 20:13:41	◀▬▬	KindOne (kindone@colchester-lug/silly-fool/donut) has quit (Quit: Stop using away nicks. We don't care where the hell you are. http://sackheads.org/~bnaylor/spew/away_msgs.html)
2014-09-10 20:15:33	◀▬▬	fabj2 (~chatzilla@CPE0022158de9ee-CM0011aea49d34.cpe.net.cable.rogers.com) has quit (Read error: Connection reset by peer)
2014-09-10 20:16:17	◀▬▬	redpill (~redpill@unaffiliated/redpill) has quit (Max SendQ exceeded)
2014-09-10 20:16:55	▬▬▶	redpill (~redpill@unaffiliated/redpill) has joined ##c++
2014-09-10 20:18:30	▬▬▶	Siberian_Tiger (~Nicholas@199-96-202-110.fidnet.com) has joined ##c++
2014-09-10 20:18:31	◀▬▬	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has quit (Ping timeout: 246 seconds)
2014-09-10 20:21:00	◀▬▬	csotelo (~csotelo@190.41.210.210) has quit (Remote host closed the connection)
2014-09-10 20:21:19	◀▬▬	redpill (~redpill@unaffiliated/redpill) has quit (Ping timeout: 246 seconds)
2014-09-10 20:21:37	▬▬▶	astinsan (~astinsan@75.108.132.81) has joined ##c++
2014-09-10 20:22:45	▬▬▶	KindOne (kindone@colchester-lug/silly-fool/donut) has joined ##c++
2014-09-10 20:25:27	◀▬▬	asmx (cod3r@shell.uw-team.org) has quit (Quit: leaving)
2014-09-10 20:26:16	◀▬▬	comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has quit (Quit: Bye)
2014-09-10 20:26:22	◀▬▬	cyberspace- (20253@ninthfloor.org) has quit (Remote host closed the connection)
2014-09-10 20:28:02	▬▬▶	cyberspace- (20253@ninthfloor.org) has joined ##c++
2014-09-10 20:28:39	◀▬▬	KindOne (kindone@colchester-lug/silly-fool/donut) has quit (Remote host closed the connection)
2014-09-10 20:29:40	◀▬▬	symm- (~symm-@178.168.29.31) has quit (Read error: Connection reset by peer)
2014-09-10 20:30:34	◀▬▬	Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has quit (Read error: Connection reset by peer)
2014-09-10 20:30:42	▬▬▶	symm- (~symm-@178.168.29.31) has joined ##c++
2014-09-10 20:31:37	◀▬▬	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-09-10 20:33:12	▬▬▶	c0le (~c0le@59.99.251.45) has joined ##c++
2014-09-10 20:33:15	▬▬▶	dardevelin (~dardeveli@a95-95-29-159.cpe.netcabo.pt) has joined ##c++
2014-09-10 20:34:40	◀▬▬	Albori (~Albori@67-43-242-246.fidnet.com) has quit (Ping timeout: 255 seconds)
2014-09-10 20:35:00	▬▬▶	Taywee (~taylor@2601:1:8b80:595:1136:a3e7:c884:b18f) has joined ##c++
2014-09-10 20:35:14	▬▬▶	Highvolts (~D@unaffiliated/loman) has joined ##c++
2014-09-10 20:36:08	▬▬▶	KindOne (kindone@colchester-lug/silly-fool/donut) has joined ##c++
2014-09-10 20:37:53	davidstone	Are there any compilers that provide warnings for integers used as bools?
2014-09-10 20:38:06	davidstone	if (integer) instead of if (integer != 0)
2014-09-10 20:38:38	o-O-o	I hope not
2014-09-10 20:38:40	o-O-o	:D
2014-09-10 20:38:43	DTSCode	i doubt it
2014-09-10 20:38:54	DTSCode	because it could break some of the c code
2014-09-10 20:38:54	o11c	davidstone: no, because legacy libraries would make it infeasible
2014-09-10 20:39:00	DTSCode	^
2014-09-10 20:39:09	o11c	davidstone: but what you *can* do is wrap all your integers in classes and use UDLs
2014-09-10 20:39:09	davidstone	"Provide warnings" doesn't mean "refuse to compile by default"
2014-09-10 20:39:20	o11c	yeah, but it would be too noisy
2014-09-10 20:39:33	o-O-o	the problem is the opposite
2014-09-10 20:39:36	hs_	"Warning: C++"
2014-09-10 20:39:38	o-O-o	bool converting to int :(
2014-09-10 20:39:40	hs_	=p
2014-09-10 20:39:50	hs_	there you have been warned
2014-09-10 20:39:55	davidstone	In my code I never purposely treat an integer as a boolean, so I actually don't think it would be too noisy
2014-09-10 20:39:55	◀▬▬	hyperair (~hyperair@ubuntu/member/hyperair) has quit (Ping timeout: 260 seconds)
2014-09-10 20:40:03	o-O-o	warning: dumb coder
2014-09-10 20:40:21	▬▬▶	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has joined ##c++
2014-09-10 20:40:30	DTSCode	davidstone: yes, but the stl might, or any c libraries you use
2014-09-10 20:40:48	DTSCode	also, why would it matter?
2014-09-10 20:40:49	davidstone	Those are system headers, and many compilers don't warn about code found in headers
2014-09-10 20:41:05	o-O-o	{ int x = true; cout <<x; }
2014-09-10 20:41:05	geordi	1
2014-09-10 20:41:07	o-O-o	:(
2014-09-10 20:41:20	glenfe_	In a good implementation. In a bad implementation all bets are off. (e.g. VC shipping with a scoped_allocator_adaptor that does not even compile).
2014-09-10 20:41:21	davidstone	DTSCode: Consider the case where you have a boost::optional<int>
2014-09-10 20:41:36	o11c	davidstone: really, give UDLs a try
2014-09-10 20:41:37	davidstone	You do some work, and are able to always initialize the value, so you make it just int
2014-09-10 20:41:37	▬▬▶	FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has joined ##c++
2014-09-10 20:41:39	DTSCode	o-O-o: cause casting
2014-09-10 20:41:49	o-O-o	davidstone: I have optional<bool> in some of my code
2014-09-10 20:41:53	davidstone	You want to make sure you are never saying if (used_to_be_optional)
2014-09-10 20:41:55	o11c	what I *really* want though is to be able to emit debuginfo for a different type
2014-09-10 20:42:18	davidstone	o11c: In all of my personal code, I am migrating to not using any built-in types directly
2014-09-10 20:42:21	davidstone	Including literals
2014-09-10 20:42:34	davidstone	Except where necessary (case statements, non-type template parameters)
2014-09-10 20:42:39	DTSCode	davidstone: you could write a sanity function to test its type
2014-09-10 20:42:40	o11c	I've ditched string literals and 'char *' already
2014-09-10 20:42:48	▬▬▶	LBV_User (~leonardo@177.156.62.48) has joined ##c++
2014-09-10 20:42:54	o-O-o	u guys are stoned
2014-09-10 20:42:55	o11c	(including const char[], etc)
2014-09-10 20:43:06	o11c	but ditching integers is still in the future
2014-09-10 20:43:22	o-O-o	glenfe_: come here to watch the open content presentations, at least :)
2014-09-10 20:43:28	davidstone	http://doublewise.net/c++/bounded/
2014-09-10 20:43:32	davidstone	This is how I'm ditching integers
2014-09-10 20:43:36	glenfe_	o-O-o: Come where?
2014-09-10 20:43:39	o-O-o	cppcon
2014-09-10 20:43:42	o-O-o	bellevue
2014-09-10 20:43:47	glenfe_	o-O-o: I'm at C++Con.
2014-09-10 20:43:54	o-O-o	lol. at what presentation?
2014-09-10 20:44:21	glenfe_	o-O-o: Didn't you hear me say that I went to dinner with Chandler on Monday, and with Marshall on Tuesday?
2014-09-10 20:44:28	o-O-o	no
2014-09-10 20:44:45	glenfe_	<glenfern>	 o-O-o: If you want to join us for dinner tonight, let me know. On Monday night we went to dinner with Chandler and a few others; yesterday we had dinner with Marshall, Jeff, Chandler, and a few others.
2014-09-10 20:44:52	DTSCode	even i saw that
2014-09-10 20:45:00	◀▬▬	mrevil (~mrevil@24-104-73-13-ip-static.hfc.comcastbusiness.net) has quit (Ping timeout: 268 seconds)
2014-09-10 20:45:07	o-O-o	I lost that message (i have to disconnect most of times)
2014-09-10 20:45:17	◀▬▬	Nemus (~Nemus@unaffiliated/nemus) has left ##c++
2014-09-10 20:45:22	glenfe_	I get a free ticket to every C++ conference.
2014-09-10 20:45:40	o-O-o	chandler presentation was the data structures one, right?
2014-09-10 20:45:41	davidstone	By speaking?
2014-09-10 20:46:02	DTSCode	D: lucky bastard
2014-09-10 20:46:17	o11c	ooh, cool
2014-09-10 20:46:22	◀▬▬	leeN (~leeN@e181199238.adsl.alicedsl.de) has quit (Ping timeout: 255 seconds)
2014-09-10 20:46:37	glenfe_	davidstone: No, I haven't been persuaded to speak yet (though I was almost convinced to speak at C++Now by Jeff - my wife being pregnant prevented me from attending in 2014).
2014-09-10 20:46:41	o-O-o	http://gatherer.wizards.com/Handlers/Image.ashx?multiverseid=2997&type=card
2014-09-10 20:47:06	eddyb	chandler? that name seems familiar
2014-09-10 20:47:10	◀▬▬	Kaedenn (~kaedenn@unaffiliated/kaedenn) has left ##c++
2014-09-10 20:47:11	davidstone	Caruth
2014-09-10 20:47:13	glenfe_	o-O-o: I'm in Joel's talk; look towards the back. I'm the guy sitting away from everyone, wearing the Intel hat.
2014-09-10 20:47:26	davidstone	Carruth, apparently
2014-09-10 20:47:36	glenfe_	davidstone: Yes.
2014-09-10 20:48:06	davidstone	He works on llvm and works at Google, and speaks at a lot of these conferences
2014-09-10 20:49:31	eddyb	davidstone: bounded does sound neat
2014-09-10 20:49:39	eddyb	o11c: https://github.com/facebook/fatal/
2014-09-10 20:49:47	glenfe_	o-O-o: Stop by, say hello. I'm going to meet two PS4 developers and head to dinner.
2014-09-10 20:50:13	eddyb	o11c: oh how ironic would it be if Fatal ends up killing C++?
2014-09-10 20:50:39	▬▬▶	zhaodx (~Thunderbi@218.76.52.64) has joined ##c++
2014-09-10 20:50:53	eddyb	or maybe just C++03. hmm
2014-09-10 20:51:01	◀▬▬	Orion] (~nname@unaffiliated/orion/x-3970838) has quit
2014-09-10 20:51:33	eddyb	"Building Fatal Demos" I bet that's the only reason they named it that way
2014-09-10 20:51:35	◀▬▬	Mio-chan (~Mio-chan@unaffiliated/mio-chan) has quit (Quit: Leaving)
2014-09-10 20:51:36	glenfe_	o-O-o: I'm leaving Joel's room now; heading to the area outside Pascal.
2014-09-10 20:51:46	◀▬▬	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Ping timeout: 246 seconds)
2014-09-10 20:52:15	◀▬▬	t0rc (~t0rc@unaffiliated/t0rc/x-5233201) has quit (Quit: WeeChat 1.0)
2014-09-10 20:52:50	◀▬▬	bollullera (~ana@95.63.152.106) has left ##c++
2014-09-10 20:52:50	▬▬▶	asmx (cod3r@shell.uw-team.org) has joined ##c++
2014-09-10 20:54:17	▬▬▶	glenfern (~glen@unaffiliated/glenfe) has joined ##c++
2014-09-10 20:55:43	▬▬▶	JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-09-10 20:56:09	▬▬▶	bacon000 (~nobody@50-1-81-63.dsl.dynamic.sonic.net) has joined ##c++
2014-09-10 20:56:20	◀▬▬	glenfe_ (~glen@unaffiliated/glenfe) has quit (Ping timeout: 252 seconds)
2014-09-10 20:56:49	glenfern	So is o-O-o going to show himself or is he hiding.
2014-09-10 20:56:57	--	glenfern is now known as glenfe_
2014-09-10 20:59:59	▬▬▶	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-09-10 21:01:06	det	maybe you can search cppcon for him, a game of where's valdo
2014-09-10 21:01:34	▬▬▶	Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has joined ##c++
2014-09-10 21:01:47	glenfe_	If I knew his name.
2014-09-10 21:02:04	hs_	just say his nick aloud
2014-09-10 21:02:10	det	:)
2014-09-10 21:02:12	hs_	you know, o...-?..O-o?
2014-09-10 21:02:23	◀▬▬	jdrharding_ (d8d37197@gateway/web/freenode/ip.216.211.113.151) has quit (Quit: Page closed)
2014-09-10 21:02:31	glenfe_	I'm easy to find: My nametag says "Glen Fernandes, Intel". My hat says "Intel".
2014-09-10 21:03:26	◀▬▬	zima (zima@c75.152.27-202.clta.globetrotter.net) has quit (Quit: zima)
2014-09-10 21:03:57	hs_	so what's the story with the open presentations?
2014-09-10 21:04:03	hs_	when are they/what are they?
2014-09-10 21:04:52	hs_	oh wow, all friday
2014-09-10 21:06:37	▬▬▶	Andy-chan2 (~Andy-chan@xdsl-87-78-145-26.netcologne.de) has joined ##c++
2014-09-10 21:06:45	◀▬▬	kailoAtWork (~kailoAtWo@208.184.77.122) has quit (Quit: This computer has gone to sleep)
2014-09-10 21:06:57	▬▬▶	fluter (~fluter@fedora/fluter) has joined ##c++
2014-09-10 21:07:20	▬▬▶	cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-09-10 21:09:51	▬▬▶	on3pk (~on3pk@unaffiliated/on3pk) has joined ##c++
2014-09-10 21:10:00	◀▬▬	o-O-o (43872bb7@gateway/web/freenode/ip.67.135.43.183) has quit (Ping timeout: 246 seconds)
2014-09-10 21:10:03	◀▬▬	esas (~esas@unaffiliated/esas) has quit
2014-09-10 21:10:22	◀▬▬	Andy-chan (~Andy-chan@xdsl-87-78-154-225.netcologne.de) has quit (Ping timeout: 272 seconds)
2014-09-10 21:10:43	▬▬▶	glenfern (~glen@unaffiliated/glenfe) has joined ##c++
2014-09-10 21:10:51	◀▬▬	Yoofie (~chatzilla@107-147-214-101.res.bhn.net) has quit (Quit: ChatZilla 0.9.90.1-rdmsoft [XULRunner 22.0/20130619132145])
2014-09-10 21:11:08	on3pk	Hi people!  I'm in a bit of a pickle, I kinda need a crash course in cpp classes.  I'm trying to make a queue of gameboards and im getting "error: GameBoard does not name a type" when I try to compile.
2014-09-10 21:11:14	on3pk	what does that even mean?
2014-09-10 21:12:56	▬▬▶	chatsiri_ (~chatsiri_@119-46-191-20.static.asianet.co.th) has joined ##c++
2014-09-10 21:13:52	hs_	!books
2014-09-10 21:13:54	nolyc	The Definitive C++ Book Guide and List -> http://stackoverflow.com/q/388242/1090079
2014-09-10 21:13:56	▬▬▶	staylor (~staylor@S0106602ad0901f12.cg.shawcable.net) has joined ##c++
2014-09-10 21:14:10	◀▬▬	glenfe_ (~glen@unaffiliated/glenfe) has quit (Ping timeout: 272 seconds)
2014-09-10 21:14:27	hs_	or try ##C++-basic
2014-09-10 21:14:42	hs_	(non-exclusive)
2014-09-10 21:14:51	◀▬▬	karab44 (~karab44@host-91-192-90-101.elomza.pl) has quit (Quit: Bye)
2014-09-10 21:14:58	ApEk	on3pk: that is the exact meaning, GameBoard doesn't name a type because it doesn't exist or cannot be found
2014-09-10 21:15:44	◀▬▬	glenfern (~glen@unaffiliated/glenfe) has quit (Ping timeout: 264 seconds)
2014-09-10 21:18:04	▬▬▶	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-09-11 20:11:15	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-11 20:11:15	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-11 20:11:15	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-11 20:11:15	--	Channel ##c++: 469 nicks (0 ops, 0 voices, 469 normals)
2014-09-11 20:11:15	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-11 20:11:26	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-11 20:12:21	◀▬▬	emg (~emg@74.217.148.5) has quit (Quit: emg)
2014-09-11 20:13:04	▬▬▶	jaafar (~quassel@67.135.43.183) has joined ##c++
2014-09-11 20:13:44	◀▬▬	thejohnfreeman (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has quit (Read error: Connection reset by peer)
2014-09-11 20:13:50	▬▬▶	thejohnfreeman1 (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has joined ##c++
2014-09-11 20:16:14	◀▬▬	thejohnfreeman1 (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has quit (Read error: Connection reset by peer)
2014-09-11 20:17:12	◀▬▬	necrogami (~necrogami@unaffiliated/necrogami) has quit (Ping timeout: 252 seconds)
2014-09-11 20:18:11	▬▬▶	necrogami (~necrogami@unaffiliated/necrogami) has joined ##c++
2014-09-11 20:18:17	▬▬▶	JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-09-11 20:18:41	◀▬▬	sfix (~sfix@87-242-155-156.ppp.onetel.net.uk) has quit (Ping timeout: 246 seconds)
2014-09-11 20:19:07	◀▬▬	hagabaka (~hagabaka@unaffiliated/hagabaka) has quit (Ping timeout: 252 seconds)
2014-09-11 20:19:37	▬▬▶	Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has joined ##c++
2014-09-11 20:20:05	▬▬▶	InfiniteJacuzzi (~darren@ool-457a85b7.dyn.optonline.net) has joined ##c++
2014-09-11 20:20:23	▬▬▶	hagabaka (~hagabaka@unaffiliated/hagabaka) has joined ##c++
2014-09-11 20:22:41	▬▬▶	hugo86jose (~hugo86jos@177.32.125.56) has joined ##c++
2014-09-11 20:22:54	hugo86jose	hello peoples
2014-09-11 20:22:57	◀▬▬	K3|Chris (~ChrisK3@unaffiliated/krill3) has quit (Read error: Connection reset by peer)
2014-09-11 20:23:14	hugo86jose	someone has a book recommendation about c++
2014-09-11 20:23:21	Oxyd	!goodbooks
2014-09-11 20:23:22	nolyc	Good books are !ac++ or !primer or !pppuc++ for starters, and then !tc++pl once you have the basics down, with !josuttis and !langer for standard library references. See !book for further reading. Send these commands to nolyc via private message.
2014-09-11 20:23:30	▬▬▶	K3|Chris (~ChrisK3@unaffiliated/krill3) has joined ##c++
2014-09-11 20:24:02	hugo86jose	i know Java,.net and some languages.
2014-09-11 20:24:19	hugo86jose	bu c++ i want to begin learn
2014-09-11 20:24:57	◀▬▬	rfreeman_w (~rfreeman@gateway/tor-sasl/rfreemanw) has quit (Ping timeout: 264 seconds)
2014-09-11 20:24:57	hugo86jose	ok thanks
2014-09-11 20:25:03	▬▬▶	FreezingCold (~FreezingC@CPE602ad06bea2a-CM602ad06bea27.cpe.net.cable.rogers.com) has joined ##c++
2014-09-11 20:25:07	hugo86jose	i will take a look in this book
2014-09-11 20:25:08	▬▬▶	Dreadnaught (~Dreadnaug@tlug/member/kulrak) has joined ##c++
2014-09-11 20:25:15	daftbunny	hi
2014-09-11 20:25:20	◀▬▬	Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 246 seconds)
2014-09-11 20:25:31	◀▬▬	Blue_Hat (~Blue_Hat@66.54.118.116) has quit (Ping timeout: 245 seconds)
2014-09-11 20:28:39	◀▬▬	K-ballo (~sonoio@190.190.32.41) has quit (Read error: Connection reset by peer)
2014-09-11 20:33:26	▬▬▶	K-ballo (~sonoio@190.190.32.41) has joined ##c++
2014-09-11 20:34:11	◀▬▬	InfiniteJacuzzi (~darren@ool-457a85b7.dyn.optonline.net) has quit (Quit: WeeChat 1.0)
2014-09-11 20:35:07	Bigcheese	I'm still wondering where o] is.
2014-09-11 20:36:31	hugo86jose	the prime c++ wich edition is the last ?
2014-09-11 20:36:46	negerns	how do i use std::same in a template to check if a certain template argument is of the required type?
2014-09-11 20:36:48	Bigcheese	2014
2014-09-11 20:37:05	negerns	i meant std::is_same
2014-09-11 20:37:10	◀▬▬	Balzy (~Balzy@host23-167-dynamic.8-87-r.retail.telecomitalia.it) has quit (Ping timeout: 260 seconds)
2014-09-11 20:37:16	negerns	can i use it to catch errors at compile time?
2014-09-11 20:37:27	Bigcheese	yes
2014-09-11 20:37:30	Oxyd	You can use it in a static_assert.
2014-09-11 20:37:39	Bigcheese	simple way is static_assert
2014-09-11 20:38:07	negerns	Bigcheese, i'll check that out
2014-09-11 20:38:23	hugo86jose	i'm dowloading the 6th edition.
2014-09-11 20:39:12	daftbunny	yo
2014-09-11 20:39:31	Bigcheese	c++ primer?
2014-09-11 20:40:11	hugo86jose	yes
2014-09-11 20:40:14	hugo86jose	the book
2014-09-11 20:40:20	Bigcheese	oh, no idea
2014-09-11 20:40:26	◀▬▬	jaafar (~quassel@67.135.43.183) has quit (Ping timeout: 255 seconds)
2014-09-11 20:40:37	hugo86jose	i'm learning c++
2014-09-11 20:40:41	hugo86jose	i begin now
2014-09-11 20:40:43	hugo86jose	kkkk
2014-09-11 20:40:47	glenfern	I don't think o] is at the conference.
2014-09-11 20:40:50	◀▬▬	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 264 seconds)
2014-09-11 20:42:08	hugo86jose	thanks everyone.
2014-09-11 20:42:11	▬▬▶	dapz (~textual@216.239.45.93) has joined ##c++
2014-09-11 20:43:07	K-ballo	glenfern: have you finally met o-o-o?
2014-09-11 20:43:14	glenfern	I don't think he exists.
2014-09-11 20:43:20	K-ballo	lol
2014-09-11 20:43:22	hugo86jose	when i begin to write some program in c++, i will be here for ask helps.
2014-09-11 20:43:23	glenfern	Or was ever at this conference.
2014-09-11 20:43:54	K-ballo	pity the registration form doesn't ask for nickname
2014-09-11 20:45:08	◀▬▬	hellangel7 (~hellangel@117.192.175.119) has quit (Remote host closed the connection)
2014-09-11 20:45:11	▬▬▶	Mio-chan (~Mio-chan@unaffiliated/mio-chan) has joined ##c++
2014-09-11 20:46:11	kalven	maybe he was afraid to meet boost devs in person after all the vitriol he has spewed.
2014-09-11 20:48:04	◀▬▬	ladrone (~ladrone@unaffiliated/ladrone) has quit (Ping timeout: 276 seconds)
2014-09-11 20:52:11	negerns	hugo86jose, be prepared to loost your hair lolz
2014-09-11 20:53:22	◀▬▬	glenfern (~glen@unaffiliated/glenfe) has quit (Ping timeout: 240 seconds)
2014-09-11 20:54:25	◀▬▬	snakenerd (~Thunderbi@177.98.3.159) has quit (Quit: snakenerd)
2014-09-11 20:54:58	▬▬▶	TommyC (~TommyC@unaffiliated/sepulchralbloom) has joined ##c++
2014-09-11 20:59:55	◀▬▬	mmhun (~anonymous@NYUFWA-WLESSAUTHCLIENTS-05.NATPOOL.NYU.EDU) has quit (Quit: mmhun)
2014-09-11 21:00:07	hugo86jose	i'm working with TI, Business intelligence. I have been losing my hair
2014-09-11 21:00:07	hugo86jose	kkkk
2014-09-11 21:00:48	◀▬▬	kailo (~kailoAtWo@208.184.77.122) has quit (Quit: This computer has gone to sleep)
2014-09-11 21:00:53	▬▬▶	hyperair (hyperair@ubuntu/member/hyperair) has joined ##c++
2014-09-11 21:01:15	▬▬▶	zhaodx (~Thunderbi@218.76.52.64) has joined ##c++
2014-09-11 21:05:29	◀▬▬	hugo86jose (~hugo86jos@177.32.125.56) has quit (Quit: Leaving)
2014-09-11 21:05:36	◀▬▬	desophos (~desophos@128.149.227.202) has quit (Quit: Leaving)
2014-09-11 21:06:32	◀▬▬	ac_slater_ (~weechat@dhcp89-69-173.bbn.com) has quit (Quit: WeeChat 1.0)
2014-09-11 21:11:32	▬▬▶	snakenerd (~Thunderbi@177.98.3.159) has joined ##c++
2014-09-11 21:11:56	▬▬▶	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-09-11 21:12:18	▬▬▶	dardevelin (~dardeveli@a95-95-29-159.cpe.netcabo.pt) has joined ##c++
2014-09-11 21:12:46	◀▬▬	zima (zima@c75.152.27-202.clta.globetrotter.net) has quit (Quit: zima)
2014-09-11 21:14:00	◀▬▬	snakenerd (~Thunderbi@177.98.3.159) has quit (Client Quit)
2014-09-11 21:15:19	▬▬▶	greenbagels (~gb@cpe-65-25-124-183.neo.res.rr.com) has joined ##c++
2014-09-11 21:16:06	▬▬▶	jaafar (~quassel@74.94.72.17) has joined ##c++
2014-09-11 21:17:28	▬▬▶	thejohnfreeman (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has joined ##c++
2014-09-11 21:22:06	▬▬▶	zwer (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-09-11 21:22:50	▬▬▶	SiGe (~SiGe@usc-secure-wireless-206-051.usc.edu) has joined ##c++
2014-09-11 21:23:19	▬▬▶	Kelsie (~Kelsie@unaffiliated/kelsie) has joined ##c++
2014-09-11 21:23:22	◀▬▬	SiGe (~SiGe@usc-secure-wireless-206-051.usc.edu) has quit (Read error: Connection reset by peer)
2014-09-11 21:23:38	◀▬▬	dapz (~textual@216.239.45.93) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-09-11 21:23:45	▬▬▶	SiGe (~SiGe@usc-secure-wireless-206-051.usc.edu) has joined ##c++
2014-09-11 21:24:13	▬▬▶	LBV_User (~leonardo@177.18.177.74) has joined ##c++
2014-09-11 21:25:30	▬▬▶	fold (~JimmyRcom@66-169-184-128.dhcp.ftwo.tx.charter.com) has joined ##c++
2014-09-11 21:25:32	◀▬▬	Kelsie|2 (~Kelsie@unaffiliated/kelsie) has quit (Ping timeout: 246 seconds)
2014-09-11 21:26:26	◀▬▬	symm- (~symm-@178.168.29.31) has quit (Ping timeout: 264 seconds)
2014-09-11 21:28:01	◀▬▬	SiGe (~SiGe@usc-secure-wireless-206-051.usc.edu) has quit (Ping timeout: 245 seconds)
2014-09-11 21:28:04	▬▬▶	symm- (~symm-@178.168.29.31) has joined ##c++
2014-09-11 21:28:11	▬▬▶	Supicioso (~Supicioso@2607:5300:100:200::5e4) has joined ##c++
2014-09-11 21:30:31	▬▬▶	fluter (~fluter@fedora/fluter) has joined ##c++
2014-09-11 21:30:50	◀▬▬	daftbunny (~christoph@175.45.83.34) has quit (Quit: leaving)
2014-09-11 21:33:07	◀▬▬	jitsuin (~chatzilla@cpe-23-240-223-21.socal.res.rr.com) has quit (Ping timeout: 245 seconds)
2014-09-11 21:33:39	▬▬▶	desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-09-11 21:33:46	▬▬▶	mmhun (~anonymous@NYUFWA-WLESSAUTHCLIENTS-05.NATPOOL.NYU.EDU) has joined ##c++
2014-09-11 21:36:25	◀▬▬	JamesNZ (~james@fedora/JamesNZ) has quit (Ping timeout: 264 seconds)
2014-09-11 21:37:34	▬▬▶	K3|Chris_ (~ChrisK3@unaffiliated/krill3) has joined ##c++
2014-09-11 21:39:03	◀▬▬	K3|Chris (~ChrisK3@unaffiliated/krill3) has quit (Ping timeout: 252 seconds)
2014-09-11 21:39:12	--	K3|Chris_ is now known as K3|Chris
2014-09-11 21:40:51	▬▬▶	ApEk (43ee13b3@gateway/web/freenode/ip.67.238.19.179) has joined ##c++
2014-09-11 21:41:31	◀▬▬	zhaodx (~Thunderbi@218.76.52.64) has quit (Ping timeout: 272 seconds)
2014-09-11 21:42:41	▬▬▶	zhaodx (~Thunderbi@218.76.52.64) has joined ##c++
2014-09-11 21:42:45	--	irc: disconnected from server
2014-09-20 21:01:58	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-20 21:01:58	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-20 21:01:58	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-20 21:01:58	--	Channel ##c++: 428 nicks (0 ops, 0 voices, 428 normals)
2014-09-20 21:01:59	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-20 21:02:08	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-20 21:02:26	◀▬▬	dunpeal (~dunpeal@unaffiliated/dunpeal) has quit (Ping timeout: 260 seconds)
2014-09-20 21:04:32	▬▬▶	ReadySetWait (~ReadySetW@unaffiliated/readysetwait) has joined ##c++
2014-09-20 21:05:57	◀▬▬	desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has quit (Ping timeout: 246 seconds)
2014-09-20 21:06:09	◀▬▬	nurupo (~nurupo.ga@unaffiliated/nurupo) has quit (Ping timeout: 260 seconds)
2014-09-20 21:06:13	--	irc: disconnected from server
2014-09-20 21:06:31	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-20 21:06:31	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-20 21:06:31	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-20 21:06:31	--	Channel ##c++: 426 nicks (0 ops, 0 voices, 426 normals)
2014-09-20 21:06:31	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-20 21:06:40	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-20 21:06:51	◀▬▬	cyberspace- (20253@ninthfloor.org) has quit (Remote host closed the connection)
2014-09-20 21:07:13	▬▬▶	sohail (~user@unaffiliated/sohail) has joined ##c++
2014-09-20 21:07:46	▬▬▶	cyberspace- (20253@ninthfloor.org) has joined ##c++
2014-09-20 21:09:26	◀▬▬	Orion] (~nname@unaffiliated/orion/x-3970838) has quit
2014-09-20 21:09:49	--	irc: disconnected from server
2014-09-20 22:15:58	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-20 22:15:58	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-20 22:15:58	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-20 22:15:58	--	Channel ##c++: 416 nicks (0 ops, 0 voices, 416 normals)
2014-09-20 22:15:59	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-20 22:16:07	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-20 22:17:33	◀▬▬	nurupo (~nurupo.ga@unaffiliated/nurupo) has quit (Ping timeout: 260 seconds)
2014-09-20 22:19:15	--	irc: disconnected from server
2014-09-20 22:19:34	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-20 22:19:34	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-20 22:19:34	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-20 22:19:34	--	Channel ##c++: 415 nicks (0 ops, 0 voices, 415 normals)
2014-09-20 22:19:35	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-20 22:19:42	▬▬▶	ezio (~ezio@unaffiliated/ezio) has joined ##c++
2014-09-20 22:19:43	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-20 22:19:44	--	irc: disconnected from server
2014-09-20 22:20:50	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-20 22:20:50	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-20 22:20:50	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-20 22:20:50	--	Channel ##c++: 416 nicks (0 ops, 0 voices, 416 normals)
2014-09-20 22:20:50	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-20 22:20:56	--	irc: disconnected from server
2014-09-20 22:22:43	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-20 22:22:43	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-20 22:22:43	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-20 22:22:43	--	Channel ##c++: 416 nicks (0 ops, 0 voices, 416 normals)
2014-09-20 22:22:43	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-20 22:22:52	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-20 22:22:58	--	irc: disconnected from server
2014-09-20 22:25:12	▬▬▶	dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-20 22:25:12	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-20 22:25:12	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-20 22:25:12	--	Channel ##c++: 416 nicks (0 ops, 0 voices, 416 normals)
2014-09-20 22:25:12	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-20 22:25:18	--	irc: disconnected from server
2014-09-20 22:31:04		dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-20 22:31:04	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-20 22:31:04	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-20 22:31:04	--	Channel ##c++: 415 nicks (0 ops, 0 voices, 415 normals)
2014-09-20 22:31:05	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-20 22:31:11		Twey (~twey@unaffiliated/twey) has quit (Ping timeout: 260 seconds)
2014-09-20 22:31:14	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-20 22:31:18		negerns_ (negerns@49.144.216.68) has joined ##c++
2014-09-20 22:31:48		dmatysiak (~daniel@a-chinaman.com) has quit (Remote host closed the connection)
2014-09-20 22:32:02		negerns (negerns@49.144.216.68) has quit (Ping timeout: 260 seconds)
2014-09-20 22:32:05		dmatysiak (~daniel@a-chinaman.com) has joined ##c++
2014-09-20 22:32:14		fatalhalt (~kyle@c-71-201-7-76.hsd1.il.comcast.net) has quit (Quit: Leaving)
2014-09-20 22:32:30		silver1 (~silver@38.122.48.218) has joined ##c++
2014-09-20 22:34:57		rendar (~I@host232-140-dynamic.59-82-r.retail.telecomitalia.it) has quit
2014-09-20 22:35:43		cyberspace- (20253@ninthfloor.org) has quit (Ping timeout: 272 seconds)
2014-09-20 22:36:09		cyberspace- (20253@ninthfloor.org) has joined ##c++
2014-09-20 22:36:16		dmatysiak (~daniel@a-chinaman.com) has quit (Ping timeout: 246 seconds)
2014-09-20 22:36:21		orbitz (~orbitz@li574-142.members.linode.com) has quit (Ping timeout: 272 seconds)
2014-09-20 22:36:39		Carbonflux (~BOB@174-21-109-233.tukw.qwest.net) has joined ##c++
2014-09-20 22:36:49		zwer (~zwer@gateway/tor-sasl/zwer) has quit (Ping timeout: 264 seconds)
2014-09-20 22:36:50		BoredHamster (~root@gateway/tor-sasl/boredhamster) has quit (Ping timeout: 264 seconds)
2014-09-20 22:36:50		liberal (~rocketeer@gateway/tor-sasl/rocketeer) has quit (Ping timeout: 264 seconds)
2014-09-20 22:37:13		Twey (~twey@unaffiliated/twey) has joined ##c++
2014-09-20 22:37:26		LBV_User (~leonardo@179.180.163.244) has quit (Quit: Konversation terminated!)
2014-09-20 22:37:39		orbitz (~orbitz@li574-142.members.linode.com) has joined ##c++
2014-09-20 22:39:33		BadQuanta (~badquanta@c-98-246-171-233.hsd1.or.comcast.net) has quit (Ping timeout: 244 seconds)
2014-09-20 22:40:21		nurupo (~nurupo.ga@unaffiliated/nurupo) has joined ##c++
2014-09-20 22:45:33		jitsuin (~chatzilla@cpe-23-240-223-21.socal.res.rr.com) has joined ##c++
2014-09-20 22:45:47		jitsuin (~chatzilla@cpe-23-240-223-21.socal.res.rr.com) has quit (Client Quit)
2014-09-20 22:46:55		nurupo (~nurupo.ga@unaffiliated/nurupo) has quit (Ping timeout: 272 seconds)
2014-09-20 22:51:21	ezio	anyone know why this no likey: to_string((long)3)
2014-09-20 22:51:30	ezio	to_string is not a function
2014-09-20 22:51:50	moonchild	<< to_string((long)3)
2014-09-20 22:51:50	geordi	3
2014-09-20 22:52:11	moonchild	maybe your missing <string>?
2014-09-20 22:53:10	ezio	http://media0.giphy.com/media/PS7d4tm1Hq6Sk/giphy.gif
2014-09-20 22:53:36	moonchild	heh
2014-09-20 22:55:03	ezio	still not resolved though
2014-09-20 22:55:10	ezio	http://media0.giphy.com/media/PS7d4tm1Hq6Sk/giphy.gif
2014-09-20 22:55:13	ezio	gah
2014-09-20 22:55:18	ezio	using namespace std;
2014-09-20 22:55:35	vulture	sexy gif tho
2014-09-20 22:55:37	moonchild	yeah, don't do that :)
2014-09-20 22:55:43		Myll (~Myll@unaffiliated/s4rn) has joined ##c++
2014-09-20 22:55:52	ezio	Billy Madison is a great movie
2014-09-20 22:55:57	vulture	std:: ?
2014-09-20 22:56:10	ezio	<ezio> using namespace std;
2014-09-20 22:56:17	PovAddictW	!using namespace
2014-09-20 22:56:19	nolyc	The use of using-directives (e.g. `using namespace std;') is discouraged, because: (1) in the case of namespace std, it potentially brings hundreds of names from the entire standard library into scope, and (2) their use obscures the origins of unqualified names in your code. Use explicit qualification (e.g. `std::cout') and/or using-declarations (e.g. `using std::cout;') instead.
2014-09-20 22:56:27	vulture	ah
2014-09-20 22:56:28	vulture	idk
2014-09-20 22:56:41	ezio	i only use it in cpp files
2014-09-20 22:56:55	PovAddictW	ezio: what compiler do you use?
2014-09-20 22:57:01	ezio	g++
2014-09-20 22:57:07	PovAddictW	version?
2014-09-20 22:57:16	ezio	bleeding edge
2014-09-20 22:57:18	ezio	i believe
2014-09-20 22:57:36	ezio	4.8.2
2014-09-20 22:57:37		dullea (~dullea@71-211-179-1.hlrn.qwest.net) has quit (Ping timeout: 246 seconds)
2014-09-20 22:58:28	ezio	<ezio> using namespace std;
2014-09-20 22:58:31	ezio	gah
2014-09-20 22:58:34	ezio	fucking vmware
2014-09-20 22:58:51	ezio	values.push_back(to_string(permissions));
2014-09-20 22:59:08		fluter (~fluter@fedora/fluter) has joined ##c++
2014-09-20 22:59:56	ezio	long UserTable::CreateUser(string const& username, string const& password, long permissions, User &user)
2014-09-20 23:00:04	PovAddictW	are you on Linux, or is that g++/MinGW?
2014-09-20 23:00:12		leen^| (~leeN@e181202154.adsl.alicedsl.de) has joined ##c++
2014-09-20 23:00:13	ezio	yup
2014-09-20 23:00:14	ezio	gnu
2014-09-20 23:00:20	ezio	fo shizzle
2014-09-20 23:00:29		fluter (~fluter@fedora/fluter) has quit (Max SendQ exceeded)
2014-09-20 23:00:36	ezio	don't leave because i said fo shizzle
2014-09-20 23:00:42	PovAddictW	are you compiling with -std=c++11?
2014-09-20 23:00:46	ezio	no
2014-09-20 23:00:52	ezio	i cannot
2014-09-20 23:00:58	PovAddictW	to_string is new in C++11
2014-09-20 23:01:06	yates	ezio: why can't you?
2014-09-20 23:01:13		ln27 (5b136be4@gateway/web/freenode/ip.91.19.107.228) has quit (Quit: Page closed)
2014-09-20 23:01:14	ezio	it doesn't say that in cppreference
2014-09-20 23:01:16	vulture	C:\temp\irc>g++ tostr.cpp -o tostr.exe -std=c++11
2014-09-20 23:01:26	vulture	I had same problem as you without that last part
2014-09-20 23:01:30	ezio	yates ... you won't like the answer to that
2014-09-20 23:01:32		fluter (~fluter@fedora/fluter) has joined ##c++
2014-09-20 23:01:38	 *	yates shrugs
2014-09-20 23:02:00	PovAddictW	http://en.cppreference.com/w/cpp/string/basic_string/to_string there's "(since C++11)" in every overload
2014-09-20 23:02:13		Maxels (~Maxel@24-159-207-34.static.roch.mn.charter.com) has quit (Read error: Connection reset by peer)
2014-09-20 23:02:19	yates	and damn fine overloads they are, too.
2014-09-20 23:02:29	ezio	the hell you say
2014-09-20 23:02:47	ezio	http://www.cplusplus.com/reference/string/to_string/
2014-09-20 23:03:04	ezio	oh derrr .. well still ... this
2014-09-20 23:03:11	ezio	not cppreference
2014-09-20 23:03:14	ezio	this fails
2014-09-20 23:03:20		ncd|leeN (~leeN@e181202113.adsl.alicedsl.de) has quit (Ping timeout: 244 seconds)
2014-09-20 23:03:23	ezio	so how do i convert a long to a string
2014-09-20 23:03:26	yates	ezio: there's a tiny little "C++11" annotator at the top
2014-09-20 23:03:48	PovAddictW	ezio: why do you need to? maybe there's an easier way
2014-09-20 23:03:50	ezio	liar
2014-09-20 23:04:05	ezio	i'm building an sql statemtn
2014-09-20 23:04:28	PovAddictW	use an ostringstream for your whole statement building
2014-09-20 23:04:34	ezio	nooooooooooo
2014-09-20 23:04:42	ezio	k
2014-09-20 23:05:00	ezio	wait no
2014-09-20 23:05:01	ezio	can't
2014-09-20 23:05:12	PovAddictW	{ int x=42; ostringstream oss; oss << "SELECT foo FROM bar WHERE x=" << x; cout << oss.str(); }
2014-09-20 23:05:12	geordi	SELECT foo FROM bar WHERE x=42
2014-09-20 23:05:17	ezio	because it's a paramertized query
2014-09-20 23:05:33	ezio	i have to pass in a vector<string>
2014-09-20 23:05:38	PovAddictW	oh
2014-09-20 23:06:02	PovAddictW	boost::lexical_cast<string>(myint) :P
2014-09-20 23:06:10	ezio	lol i wish
2014-09-20 23:06:21		JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-09-20 23:06:24	ezio	i work for a network security company
2014-09-20 23:06:46	vulture	just use the c lib? :P
2014-09-20 23:07:07	ezio	i don't know why there isn't a function that just
2014-09-20 23:07:09	ezio	mod 10
2014-09-20 23:07:13	ezio	div 10
2014-09-20 23:07:20	ezio	how hard is that?
2014-09-20 23:07:22	yates	i've used soci with reasonable results
2014-09-20 23:07:48	ezio	i could create a stream just to convert one string
2014-09-20 23:07:51	ezio	boourns
2014-09-20 23:07:53	ezio	shaaaaaaaaame
2014-09-20 23:08:05	PovAddictW	yeah
2014-09-20 23:08:21	vulture	a trivial thing in plain c
2014-09-20 23:08:36	PovAddictW	soci?
2014-09-20 23:08:44	 *	PovAddictW digs docs
2014-09-20 23:08:49	vulture	converting a long to a string
2014-09-20 23:08:55	ezio	vulture, how
2014-09-20 23:09:29	PovAddictW	vulture: what is soci?
2014-09-20 23:09:30	vulture	sprintf for sure, there may be one more tailored to only long->cstring though
2014-09-20 23:09:36	vulture	I have no idea
2014-09-20 23:09:42	PovAddictW	oh yates said it, not you
2014-09-20 23:09:43	vulture	why you asking me :P
2014-09-20 23:09:45	PovAddictW	misread
2014-09-20 23:09:59	yates	PovAddictW: it is a C++ library for database interface
2014-09-20 23:10:37	yates	    sql << "select enabled, activestate, timezone_id from uinparms order by pinno;",  soci::into(enabled), soci::into(activeState),  soci::into(timeZoneId);
2014-09-20 23:10:48	yates	soci::session sql(soci::sqlite3, dbPathAndFilename);
2014-09-20 23:10:56	vulture	ezio: e.g., char buffer[128]; sprintf(buffer, "%lu", value);  and then convert the cstring to a std::string or whatever
2014-09-20 23:11:25		RazielZ (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 258 seconds)
2014-09-20 23:11:36	yates	not what he's asking, but thought i'd suggest it
2014-09-20 23:11:39	vulture	is that a parameterized string somehow? or where do those come from?
2014-09-20 23:11:44		bmf1 (~bmf1@216.252.92.170) has joined ##c++
2014-09-20 23:12:03	yates	std::vector<int16_t> enabled(MAX_PARAMETERS);  std::vector<int16_t> activeState(MAX_PARAMETERS);  std::vector<int32_t> timeZoneId(MAX_PARAMETERS);
2014-09-20 23:12:26	yates	vulture: were you talking to me?
2014-09-20 23:12:49	vulture	yeah
2014-09-20 23:13:53		devbug (~quassel@d108-180-247-142.bchsia.telus.net) has joined ##c++
2014-09-20 23:13:54	yates	i don't know all the underlying - it just works
2014-09-20 23:14:25	yates	it resets the vector to the actual number of records found.
2014-09-20 23:14:31	yates	the vector lengths, that is.
2014-09-20 23:15:44		basic6_ (~basic6@p4FCB5306.dip0.t-ipconnect.de) has joined ##c++
2014-09-20 23:16:04		esas (~esas@unaffiliated/esas) has quit
2014-09-20 23:16:12	ezio	vulture, yeah pretty much the same sas a sstream
2014-09-20 23:17:21		condy (~condy@2001:da8:4004:251:3e97:eff:fe2d:1e82) has joined ##c++
2014-09-20 23:18:55	ezio	vulture, though i do seriously love printf functions
2014-09-20 23:19:18	Chris	What a strange perversion.
2014-09-20 23:20:01	PovAddictW	times like this I wish !grab supported multiple lines ^
2014-09-20 23:20:03		basic6 (~basic6@p4FCB6BF2.dip0.t-ipconnect.de) has quit (Ping timeout: 272 seconds)
2014-09-20 23:20:29	Chris	Odd, the ##c one does.
2014-09-20 23:20:42	yates	2n+1
2014-09-20 23:22:41		procyonlabs (~Randal@pool-173-69-164-46.bltmmd.fios.verizon.net) has joined ##c++
2014-09-20 23:26:12		JamesNZ (~james@fedora/JamesNZ) has quit (Read error: Connection reset by peer)
2014-09-20 23:26:39		greenbagels (~gb@cpe-65-25-124-183.neo.res.rr.com) has quit (Read error: Connection reset by peer)
2014-09-20 23:27:48	yates	why can't i stream out a uint8_t?
2014-09-20 23:27:59		hammond (proscan@unaffiliated/portrait) has quit (Ping timeout: 245 seconds)
2014-09-20 23:28:02	PovAddictW	it's a char
2014-09-20 23:28:31	PovAddictW	iostreams will stream out chars as characters, not as integers in decimal digits
2014-09-20 23:28:41	yates	aha.
2014-09-20 23:28:53	PovAddictW	{ cout << 'a'; }
2014-09-20 23:28:54	geordi	a
2014-09-20 23:28:58	PovAddictW	{ cout << (int)'a'; }
2014-09-20 23:28:58	geordi	97
2014-09-20 23:28:59		IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has joined ##c++
2014-09-20 23:29:22	PovAddictW	{ uint8_t x = 97; cout << x, (int)x; }
2014-09-20 23:29:23	geordi	a, 97
2014-09-20 23:29:28	yates	{ cout << (char)49;}
2014-09-20 23:29:29	geordi	1
2014-09-20 23:30:20	yates	the "problem" is that i expect a char to be different than a uint8_t
2014-09-20 23:30:47	PovAddictW	well anyway, if you want decimal digits, just cast to int when passing it to <<
2014-09-20 23:30:53	yates	yes, i know
2014-09-20 23:31:13	yates	i wish we had first-class 8-bit integers (signed and unsigned)
2014-09-20 23:31:33	yates	all would then be right with the world.
2014-09-20 23:31:49	PovAddictW	that's what char is :) it's just iostream's interpretation of it that is annoying in your case
2014-09-20 23:32:46	yates	well, i won't argue, but i don't agree that that is what a char is.
2014-09-20 23:33:12	yates	from days of yore, a char was always supposed to be a 'something'
2014-09-20 23:33:24	yates	(printable character, usually)
2014-09-20 23:34:06		negerns_ (negerns@49.144.216.68) has quit (Ping timeout: 260 seconds)
2014-09-20 23:34:51		lihp (~lihp@ip1886254f.dynamic.kabel-deutschland.de) has quit (Remote host closed the connection)
2014-09-20 23:36:21		sroth114 (~Adium@CPE-65-30-148-87.wi.res.rr.com) has joined ##c++
2014-09-20 23:36:32		IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has quit (Read error: Connection reset by peer)
2014-09-20 23:39:47		Blue_Hat (~Blue_Hat@66.54.118.121) has joined ##c++
2014-09-20 23:42:07	orbitz	yates: really C++ needs a better way to do type equivalence
2014-09-20 23:42:24	orbitz	in a language like Ocaml or Haskell you cansay that one type equals another, but hide that fact from the world
2014-09-20 23:42:52	yates	lots of people seem to have good things to say about Haskell, but i've never studied it
2014-09-20 23:43:29	orbitz	i think Ocaml's support for this concept is better than Haskell's, but that's me
2014-09-20 23:45:54		ac_slater (~weechat@96.237.110.242) has quit (Ping timeout: 245 seconds)
2014-09-20 23:47:25		lh_mouse (~lh_mouse@61.171.65.195) has joined ##c++
2014-09-20 23:47:26	PovAddictW	orbitz: in C++ you can sort of do that with a lot of work and code
2014-09-20 23:47:51	PovAddictW	you need a class that overloads all the relevant operators and passes them to the underlying type, it's a pain in the ass
2014-09-20 23:49:58		PovAddictW (~Nicolas@kde/developer/nalvarez) has quit (Quit: sleep)
2014-09-20 23:50:49		hyperair (~hyperair@ubuntu/member/hyperair) has quit (Ping timeout: 245 seconds)
2014-09-20 23:52:09		l0pher (~Loser@unaffiliated/l0pher) has joined ##c++
2014-09-20 23:55:04		ezio (~ezio@unaffiliated/ezio) has quit (Quit: Leaving)
2014-09-20 23:55:14		Guest93529 (~james@unaffiliated/ezio) has left ##c++
2014-09-20 23:55:35		ezio (~james@unaffiliated/ezio) has joined ##c++
2014-09-20 23:55:45	ezio	i'm getting an error
2014-09-20 23:56:08	ezio	Description	Resource	Path	Location	Type
2014-09-20 23:56:08	ezio	undefined reference to `Db::Db::UnsafeParamertizedQuery(std::string, std::vector<std::string, std::allocator<std::string> >)'	usertable.cpp	/a1/src/User	line 58	C/C++ Problem
2014-09-20 23:56:16		Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-09-20 23:56:28	ezio	static std::string UnsafeParamertizedQuery(std::string query, std::vector<std::string> values);
2014-09-20 23:56:57	ezio		Db::Db::UnsafeParamertizedQuery("INSERT INTO user(username,password,permission) VALUES (?,password(?),?)", values);
2014-09-20 23:57:28	ezio	vector<string> values(2);
2014-09-20 23:57:33	ezio	i can't see the problem
2014-09-20 23:57:36	ezio	everything looks good
2014-09-20 23:58:11	lh_mouse	!give ezio undefined reference
2014-09-20 23:58:13	nolyc	ezio: Undefined reference is a linker error. It's not a compile error. #includes don't help. You did not define the thing in the error message, you forgot to link the file that defines it, you forgot to link to the library that defines it, or, if it's a static library, you have the wrong order on the linker command line. Check which one. (Note that some linkers call it an unresolved external)
2014-09-20 23:59:29	ezio	i forgot to prefix with the class
2014-09-20 23:59:30	ezio	thanks
2014-09-21 00:08:15		Blue_Hat (~Blue_Hat@66.54.118.121) has quit (Ping timeout: 240 seconds)
2014-09-21 00:09:25		b1rkh0ff (~b1rkh0ff@cable-146-255-146-83.dynamic.telemach.ba) has joined ##c++
2014-09-21 00:16:27		Ulrike_Rayne (~Ulrike_Ra@cpe-65-24-84-7.columbus.res.rr.com) has quit (Quit: ZNC - http://znc.in)
2014-09-21 00:17:13		govg (~govg@unaffiliated/govg) has quit (Ping timeout: 244 seconds)
2014-09-21 00:18:54		Ulrike_Rayne (~Ulrike_Ra@cpe-65-24-84-7.columbus.res.rr.com) has joined ##c++
2014-09-21 00:19:10		govg (~govg@unaffiliated/govg) has joined ##c++
2014-09-21 00:24:46		kailoAtWork (~kailoAtWo@cpe-104-33-2-39.socal.res.rr.com) has joined ##c++
2014-09-21 11:44:46		dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-21 11:44:46	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-21 11:44:46	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-21 11:44:46	--	Channel ##c++: 449 nicks (0 ops, 0 voices, 449 normals)
2014-09-21 11:44:46	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-21 11:44:59	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-21 11:48:10		Zupoman (~mistrzmag@unaffiliated/zupoman) has joined ##c++
2014-09-21 11:48:11		eutheria (~eutheria@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has quit (Ping timeout: 260 seconds)
2014-09-21 11:48:35		Longlius (~longlius@68.170.238.146) has joined ##c++
2014-09-21 11:48:40		Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has joined ##c++
2014-09-21 11:54:45		unsigned_long (~smart_ptr@p200300688F645251B851F20F1413E6A3.dip0.t-ipconnect.de) has joined ##c++
2014-09-21 11:55:42	seishun	the only way to get a compile-time integer sequence is to deduce it from a function template call, right?
2014-09-21 11:57:34		JesuZ (~JesuZ@dsl-hkibrasgw5-58c05f-197.dhcp.inet.fi) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-09-21 11:59:10		Orbitrix (~Huevos@c-76-113-30-226.hsd1.nm.comcast.net) has joined ##c++
2014-09-21 12:00:25		unsigned_long (~smart_ptr@p200300688F645251B851F20F1413E6A3.dip0.t-ipconnect.de) has quit (Ping timeout: 272 seconds)
2014-09-21 12:01:49		AndyP2 (~Andy-chan@xdsl-84-44-168-247.netcologne.de) has joined ##c++
2014-09-21 12:04:54		Andy-chan2 (~Andy-chan@xdsl-84-44-171-157.netcologne.de) has quit (Ping timeout: 260 seconds)
2014-09-21 12:04:59		deSilva (deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-09-21 12:05:13	o]	seishun: no
2014-09-21 12:05:29	seishun	how else, then?
2014-09-21 12:05:33	o]	you can type it
2014-09-21 12:05:48	o]	you can run a script in a pre build step :)
2014-09-21 12:06:27		medgno (~medgno@67-3-6-158.dlth.qwest.net) has joined ##c++
2014-09-21 12:06:46		symm- (~symm-@178.168.29.31) has quit (Ping timeout: 260 seconds)
2014-09-21 12:07:33		ikrima (~ikrima@76.91.23.45) has quit (Ping timeout: 244 seconds)
2014-09-21 12:09:32		syncrow (syncrow@unaffiliated/syncrow) has quit (Quit: Lost terminal)
2014-09-21 12:13:54		LunarJetman (~LunarJetm@79-64-101-90.host.pobb.as13285.net) has joined ##c++
2014-09-21 12:16:48		INSANU (~INSANU@186.213.185.107) has joined ##c++
2014-09-21 12:16:51	INSANU	hello =)
2014-09-21 12:17:54		zimash (~zimash@178.169.93.168) has joined ##c++
2014-09-21 12:18:00		AnujSharma (~anuj@202.3.77.204) has joined ##c++
2014-09-21 12:19:35		check3r (~check3r@p5B3AA65C.dip0.t-ipconnect.de) has joined ##c++
2014-09-21 12:20:48		lh_cat (~lh_mouse@61.171.65.195) has joined ##c++
2014-09-21 12:20:49		SleekoNiko (~nick@2605:6000:ecc8:6d00:2ad2:44ff:fe3a:6519) has joined ##c++
2014-09-21 12:21:09		inad922 (~inad925@host109-148-205-23.range109-148.btcentralplus.com) has quit (Ping timeout: 246 seconds)
2014-09-21 12:21:42		cale250 (~cale250@173-17-30-217.client.mchsi.com) has joined ##c++
2014-09-21 12:21:52		kexmex (~kexmex@178.136.234.6) has joined ##c++
2014-09-21 12:21:55		nurupo (~nurupo.ga@unaffiliated/nurupo) has joined ##c++
2014-09-21 12:22:38		Kulrak (kulrak@tlug/member/kulrak) has quit (Ping timeout: 260 seconds)
2014-09-21 12:23:10		lh_mouse (~lh_mouse@61.171.65.195) has quit (Ping timeout: 240 seconds)
2014-09-21 12:24:45		jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has joined ##c++
2014-09-21 12:25:21		vl4kn0 (~vl4kn0@85-135-238-239.adsl.slovanet.sk) has joined ##c++
2014-09-21 12:27:57		Sadale (~Sadale@unaffiliated/sadale) has quit (Quit: bye)
2014-09-21 12:33:24		kexmex (~kexmex@178.136.234.6) has quit (Quit: Computer has gone to sleep.)
2014-09-21 12:33:25		e2718 (~hdesk@p4FC14BF6.dip0.t-ipconnect.de) has quit (Quit: Konversation terminated!)
2014-09-21 12:33:44		INSANU (~INSANU@186.213.185.107) has quit (Quit:  HydraIRC -> http://www.hydrairc.com <- IRC with a difference)
2014-09-21 12:38:38		hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-09-21 12:38:48		inad922 (~inad925@host86-185-191-90.range86-185.btcentralplus.com) has joined ##c++
2014-09-21 12:38:58		jrow (~james.row@unaffiliated/jrow) has joined ##c++
2014-09-21 12:39:01		karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-09-21 12:41:46		sohail (~user@unaffiliated/sohail) has joined ##c++
2014-09-21 12:46:39		sohail (~user@unaffiliated/sohail) has quit (Ping timeout: 272 seconds)
2014-09-21 12:48:40	seishun	{ array<int, carray()[1]> a;} constexpr array<int, 2> carray() { return {1, 2};}
2014-09-21 12:48:40	geordi	error: call to non-constexpr function 'array<int; long unsigned int _Nm = 2ul; array<_Tp, _Nm>::reference = int&; array<_Tp, _Nm>::value_type = int; array<_Tp, _Nm>::size_type = long unsigned int, _Nm>::value_type& array<int; long unsigned int _Nm = 2ul; array<_Tp, _Nm>::reference = int&; array<_Tp, _Nm>::value_type = int; array<_Tp, _Nm>::size_typ
2014-09-21 12:48:44	seishun	why doesn't this work?
2014-09-21 12:50:01	o]	{ constexpr int x = carray()[0]; } constexpr array<int, 2> carray() { return {1, 2}; }
2014-09-21 12:50:02	geordi	Same error.
2014-09-21 12:50:08	o]	{ int x = carray()[0]; } constexpr array<int, 2> carray() { return {1, 2}; }
2014-09-21 12:50:08	geordi	<no output>
2014-09-21 12:50:11	o]	see?
2014-09-21 12:50:52	seishun	what am I supposed to see?
2014-09-21 12:50:58	o]	your mom
2014-09-21 12:51:14	seishun	how helpful
2014-09-21 12:51:28	o]	!next
2014-09-21 12:51:29	nolyc	Another satisfied customer, next!
2014-09-21 12:51:43		Aww (aww@princess-of-cooki.es) has left ##c++ ("Textual IRC Client: www.textualapp.com")
2014-09-21 12:52:14		Ali1331 (6d967a16@gateway/web/freenode/ip.109.150.122.22) has joined ##c++
2014-09-21 12:52:21	Erlkoenig	{ constexpr int x = carray()[0]; } constexpr const array<int, 2> carray() { return {1, 2}; }
2014-09-21 12:52:21	geordi	<no output>
2014-09-21 12:52:24	Erlkoenig	don't ask.
2014-09-21 12:52:26	Erlkoenig	@ seishun
2014-09-21 12:52:48	o]	Erlkoenig: shouldn't C++14 solve that problem?
2014-09-21 12:52:56	Erlkoenig	dunno
2014-09-21 12:53:12	seishun	what does const add to constexpr?
2014-09-21 12:53:44	Ali1331	is this the right place for C++ questions? (and is there a windows c++ specific channel?)
2014-09-21 12:53:45	Erlkoenig	it makes the return type const
2014-09-21 12:53:51	o]	C++11 has lots of dumb restrictions for constexpr. C++14 promised to lift them
2014-09-21 12:54:01	o]	Ali1331: #winapi
2014-09-21 12:54:09	o]	Ali1331: read the topic, please
2014-09-21 12:54:25	Erlkoenig	without the const, the returned array is considered non-const, and operations involving it aren't constexpr anymore
2014-09-21 12:54:39	Ali1331	thanks
2014-09-21 12:55:03	o]	Erlkoenig: I still think this restriction will be lifted by C++14 compliant compilers
2014-09-21 12:55:44	o]	C++11 has a very incomplete constexpr implementation
2014-09-21 12:55:50		unsigned_long (~smart_ptr@p5B09F67A.dip0.t-ipconnect.de) has joined ##c++
2014-09-21 12:56:28		lenarhoyt (5b13777a@gateway/web/freenode/ip.91.19.119.122) has quit (Quit: Page closed)
2014-09-21 12:56:48		unsigned_long (~smart_ptr@p5B09F67A.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2014-09-21 12:57:13		unsigned_long (~smart_ptr@p200300688F64525149DA21A9E1268362.dip0.t-ipconnect.de) has joined ##c++
2014-09-21 12:57:49	seishun	what does const add to constexpr?
2014-09-21 12:57:56	seishun	oops wrong window
2014-09-21 12:58:06		FriskyKat (SomeWhere@90.217.161.232) has joined ##c++
2014-09-21 12:58:17	o]	it is okay to ask C++ questions here
2014-09-21 12:59:26	LunarJetman	avoid int.
2014-09-21 13:00:04	ville	seishun: only adds anything for member functions and in c++14 i believe
2014-09-21 13:01:39	seishun	{ constexpr auto a = carray(); constexpr auto b = a[1]; } constexpr array<int, 2> carray() { return {1, 2}; }
2014-09-21 13:01:40	geordi	<no output>
2014-09-21 13:01:45	seishun	yet this works
2014-09-21 13:01:50		unsigned_long (~smart_ptr@p200300688F64525149DA21A9E1268362.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2014-09-21 13:02:19	LunarJetman	unsigned long's time had come.
2014-09-21 13:03:26		Anodl (~Anodl@p5B3552ED.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-09-21 13:04:36	seishun	Erlkoenig: does that rule only apply to function call expressions?
2014-09-21 13:07:28		sohail (~user@unaffiliated/sohail) has joined ##c++
2014-09-21 13:08:16	Erlkoenig	seishun: don't think so
2014-09-21 13:08:33		Hannibal_Smith (~Hannibal_@host39-63-dynamic.17-87-r.retail.telecomitalia.it) has joined ##c++
2014-09-21 13:08:37		YarnFive8 (~YarnFive8@unaffiliated/yarnfive8) has quit
2014-09-21 13:08:46	Erlkoenig	but non-const constexpr expressions can't exist, so it's only function call expressions left
2014-09-21 13:09:48		Meness (~Meness@stjhnf0157w-047055232047.dhcp-dynamic.FibreOp.nl.bellaliant.net) has joined ##c++
2014-09-21 13:10:04	seishun	{ constexpr auto a = carray(); cout << TYPE(a); } constexpr array<int, 2> carray() { return {1, 2}; }
2014-09-21 13:10:04	geordi	lvalue array<int, 2ul> const
2014-09-21 13:10:19		skeuomorf (~skeuomorf@unaffiliated/skeuomorf) has quit (Ping timeout: 272 seconds)
2014-09-21 13:10:43	ville	seishun: what is wrong with that?
2014-09-21 13:11:26	seishun	A constexpr specifier used in an object declaration implies const.
2014-09-21 13:11:27	Meness	Hello guys, I have a struct called EnergyInterval with two double values which are power and usage. When trying to push value into a vector<EnergyInterval>, I get this error
2014-09-21 13:11:27	seishun	I see
2014-09-21 13:11:57	Meness	error: passing 'const std::vector<power::EnergyInterval>' as 'this' argument of 'void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = power::EnergyInterval; _Alloc = std::allocator<power::EnergyInterval>; std::vector<_Tp, _Alloc>::value_type = power::EnergyInterval]' discards qualifiers [-fpermissive]
2014-09-21 13:11:57	Meness	     menessUsage.push_back(menessInterval);
2014-09-21 13:11:57	Meness	                                         ^
2014-09-21 13:12:10	Erlkoenig	your vector is const. you can't add elements to a constant vector
2014-09-21 13:12:17	ville	seishun: i thought you originally were asking whether explicitly putting const when something is constexpr made a difference.
2014-09-21 13:12:34	seishun	so the reason my original snippet doesn't work is that non-const operator[] on std::array is not constexpr for some reason
2014-09-21 13:12:34		vocodork (~vocoder@94-227-99-249.access.telenet.be) has quit (Quit: http://viennaensemblepro.com | http://viennamirpro.com)
2014-09-21 13:12:45	Meness	AHHH
2014-09-21 13:12:59	Meness	I need to stop copying and pasting parameters
2014-09-21 13:13:00	seishun	they made the const one constexpr in C++14, but not the non-const one
2014-09-21 13:13:04	Meness	THanks Erlkoenig
2014-09-21 13:13:38		lleo (~lleo@5ED09ADB.cm-7-1c.dynamic.ziggo.nl) has joined ##c++
2014-09-21 13:13:44		Anodl (~Anodl@p5B3552ED.dip0.t-ipconnect.de) has joined ##c++
2014-09-21 13:13:52		deSilva (deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-09-21 13:15:42	ville	seishun: the non-const operator [] couldn't be constexpr in c++11 because in that it implies const
2014-09-21 13:16:28	ville	hmm or do i have it wrong.
2014-09-21 13:17:47	seishun	http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3598.html
2014-09-21 13:17:56	seishun	I guess this got fixed in C++14?
2014-09-21 13:18:39		syncrow (syncrow@unaffiliated/syncrow) has joined ##c++
2014-09-21 13:18:59	ville	i am pretty sure it's now so that constexpr doesn't imply const.
2014-09-21 13:19:47	seishun	then why didn't they make non-const operator[] constexpr?
2014-09-21 13:20:18		eutheria (~eutheria@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has joined ##c++
2014-09-21 13:20:20	ville	that's why i think i am full of shit
2014-09-21 13:20:52	seishun	.grab ville
2014-09-21 13:20:56	seishun	!grab ville
2014-09-21 13:20:57	nolyc	By your command.
2014-09-21 13:20:58	ville	i am not really upt speed with constexpr to be honest
2014-09-21 13:21:10		ikrima (~ikrima@76.91.23.45) has joined ##c++
2014-09-21 13:21:17	--	irc: disconnected from server
2014-09-21 20:07:41		dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-21 20:07:41	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-21 20:07:41	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-21 20:07:41	--	Channel ##c++: 441 nicks (0 ops, 0 voices, 441 normals)
2014-09-21 20:07:42	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-21 20:07:50	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-21 20:08:00		svm_invictvs (~patricktw@unaffiliated/svminvictvs/x-938456) has quit (Ping timeout: 246 seconds)
2014-09-21 20:09:01		snakenerd (~Thunderbi@177.98.2.162) has joined ##c++
2014-09-21 20:14:08		zimash (~zimash@178.169.93.168) has joined ##c++
2014-09-21 20:17:08		ikrima (~ikrima@76.91.23.45) has quit (Ping timeout: 240 seconds)
2014-09-21 20:19:07		ReadySetWait (~ReadySetW@unaffiliated/readysetwait) has quit (Quit: Bye)
2014-09-21 20:20:33		Taywee (~taylor@2601:1:8b80:595:1136:a3e7:c884:b18f) has quit (Ping timeout: 260 seconds)
2014-09-21 20:21:03		sedeki (~textual@gateway/tor-sasl/sedeki) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-09-21 20:26:26		snakenerd (~Thunderbi@177.98.2.162) has quit (Quit: snakenerd)
2014-09-21 20:26:29		svm_invictvs (~patricktw@unaffiliated/svminvictvs/x-938456) has joined ##c++
2014-09-21 20:27:22		jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has quit (Quit: leaving)
2014-09-21 20:29:49		SatanMcRib (~eric@DHCP-129-59-122-54.n1.vanderbilt.edu) has joined ##c++
2014-09-21 20:30:05		Garner (uid38417@gateway/web/irccloud.com/x-wmmziairqdxfhrks) has quit (Quit: Connection closed for inactivity)
2014-09-21 20:31:50		GinoMan (~quassel@pool-72-94-39-83.phlapa.fios.verizon.net) has joined ##c++
2014-09-21 20:33:20		como (~alex@2604:2000:dde7:8e00:247d:3b69:3c59:5418) has quit (Quit: Leaving)
2014-09-21 20:34:23		kurahaupo (~Kurahaupo@209.215.252.27.dyn.cust.vf.net.nz) has quit (Ping timeout: 244 seconds)
2014-09-21 20:36:48		GinoMan_ (~quassel@pool-72-94-39-83.phlapa.fios.verizon.net) has joined ##c++
2014-09-21 20:37:34	samthewildone	!offtopic
2014-09-21 20:37:35	nolyc	This channel is about ISO Standard C++. If you want to discuss extra libraries, projects, or other things not necessarily on topic (but still related to C++) join ##c++-general
2014-09-21 20:39:42		GinoMan (~quassel@pool-72-94-39-83.phlapa.fios.verizon.net) has quit (Ping timeout: 258 seconds)
2014-09-21 20:44:15		SatanMcRib (~eric@DHCP-129-59-122-54.n1.vanderbilt.edu) has left ##c++
2014-09-21 20:44:41		jimvideo (~jimvideo@184-12-234-43.dr01.brny.ca.frontiernet.net) has quit (Quit: Leaving)
2014-09-21 20:47:49		ncd|leeN (~leeN@e180221063.adsl.alicedsl.de) has quit (Ping timeout: 244 seconds)
2014-09-21 20:50:28		samthewildone (~samthewil@unaffiliated/samthewildone) has left ##c++ ("Leaving")
2014-09-21 20:55:23		arescorpio (~arescorpi@155-27-245-190.fibertel.com.ar) has joined ##c++
2014-09-21 20:57:53		TomyLobo (~TomyLobo@91.65.115.103) has quit (Quit: Standby mode...)
2014-09-21 21:03:04		Irrelium (~Irrelium@71.19.153.241) has quit (Quit: I need a cool quote to put here D:)
2014-09-21 21:03:55		Irrelium (~Irrelium@71.19.153.241) has joined ##c++
2014-09-21 21:04:50		lenarhoyt (5b43009f@gateway/web/freenode/ip.91.67.0.159) has joined ##c++
2014-09-21 21:06:33		Ranieri_ (~Ranieri_@bas3-malton22-1176373214.dsl.bell.ca) has joined ##c++
2014-09-21 21:07:30	lenarhoyt	I'm using a stringbuilder like this: map<int, const char*> m{{1, "test"}}; ss << "string " << m[1] << "end"; if I convert it to a const char* the string contains only "string "
2014-09-21 21:07:48	lenarhoyt	why is that?
2014-09-21 21:08:04	K-ballo	what's a stringbuilder?
2014-09-21 21:08:19	vulture	something that builds strings
2014-09-21 21:08:24	lenarhoyt	I meant stringstream
2014-09-21 21:08:36	lenarhoyt	std::stringstream
2014-09-21 21:08:46	PovAddictW	{ stringstream ss; map<int, const char*> m{{1, "test"}}; ss << "string " << m[1] << "end"; cout << ss.str(); }
2014-09-21 21:08:47	geordi	string testend
2014-09-21 21:08:48		fluter (~fluter@fedora/fluter) has joined ##c++
2014-09-21 21:08:53	K-ballo	you convert what to a const char*? and the output is "string " as opposed to?
2014-09-21 21:08:54	PovAddictW	works for me
2014-09-21 21:08:56		Barrin6 (~Barrin6@user-0c8gm3t.cable.mindspring.com) has quit (Quit: Barrin6)
2014-09-21 21:09:20		fluter (~fluter@fedora/fluter) has quit (Max SendQ exceeded)
2014-09-21 21:09:24	vulture	my guess is he wants it to say "string testend"
2014-09-21 21:10:20	lenarhoyt	const std::string tmp = ss.str(); const char* tmp2 = tmp.c_str();
2014-09-21 21:10:26		fluter (~fluter@fedora/fluter) has joined ##c++
2014-09-21 21:11:36		fluter (~fluter@fedora/fluter) has quit (Max SendQ exceeded)
2014-09-21 21:12:36		fluter (~fluter@fedora/fluter) has joined ##c++
2014-09-21 21:13:05	lenarhoyt	is here a bot that evaluates c++ code?
2014-09-21 21:13:23	PovAddictW	I just used it above
2014-09-21 21:13:38	lenarhoyt	oh, sry
2014-09-21 21:13:43		fluter (~fluter@fedora/fluter) has quit (Max SendQ exceeded)
2014-09-21 21:13:53		justanotheruser (~Justan@unaffiliated/justanotheruser) has left ##c++
2014-09-21 21:13:56		justanotheruser (~Justan@unaffiliated/justanotheruser) has joined ##c++
2014-09-21 21:14:21	lenarhoyt	{ stringstream ss; map<int, const char*> m{{1, "test"}}; ss << "string " << m[1] << "end"; const string tmp = ss.str(); const char* tmp2 = tmp.c_str(); cout << tmp2 << endl; }
2014-09-21 21:14:22	geordi	string testend
2014-09-21 21:14:46	K-ballo	it works!
2014-09-21 21:14:58		Barrin6 (~Barrin6@user-0c8gm3t.cable.mindspring.com) has joined ##c++
2014-09-21 21:15:03	lenarhoyt	hm, then it must be a hidden \0?
2014-09-21 21:15:28	vulture	what hidden \0
2014-09-21 21:15:34	vulture	there's no hidden \0 here
2014-09-21 21:15:35	PovAddictW	that can't happen, << m[1] would stop at the first \0
2014-09-21 21:15:52	vulture	you probably did something else wrong that you didnt tell us about
2014-09-21 21:15:53	PovAddictW	if you had a map<int,string> then maybe
2014-09-21 21:16:01	PovAddictW	but not with a map<int,const char*>
2014-09-21 21:17:03		Longlius (~longlius@68.170.238.146) has quit (Remote host closed the connection)
2014-09-21 21:18:05		KAHR-Alpha_ (~Alpha@AReims-652-1-204-190.w90-47.abo.wanadoo.fr) has joined ##c++
2014-09-21 21:18:18		KAHR-Alpha (~Alpha@AReims-652-1-34-103.w90-47.abo.wanadoo.fr) has quit (Ping timeout: 245 seconds)
2014-09-21 21:18:51	--	KAHR-Alpha_ is now known as KAHR-Alpha
2014-09-21 21:19:31		Longlius (~longlius@68.170.238.146) has joined ##c++
2014-09-21 21:20:26		surd (~surd@unaffiliated/surd) has joined ##c++
2014-09-21 21:22:38		thejohnfreeman (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has quit (Read error: Connection reset by peer)
2014-09-21 21:22:43		thejohnfreeman1 (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has joined ##c++
2014-09-21 21:28:13		svm_invictvs (~patricktw@unaffiliated/svminvictvs/x-938456) has quit (Ping timeout: 245 seconds)
2014-09-21 21:38:11		Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-09-21 21:42:11		ggVGc (~brzzm@unaffiliated/walt) has joined ##c++
2014-09-21 21:42:34		zima (zima@c75.152.27-202.clta.globetrotter.net) has quit (Quit: zima)
2014-09-21 21:42:51	ggVGc	is there a better place than here where I can ask about the details of how DLLs run on windows?
2014-09-21 21:43:38	K-ballo	!give ggVGc windows
2014-09-21 21:43:40	nolyc	ggVGc: You should ask your Windows programming questions in ##c++-general, #winapi, ##windows-coding or irc://irc.efnet.org/winprog
2014-09-21 21:43:50	ggVGc	thanks
2014-09-21 21:45:01		cale250 (~cale250@173-17-30-217.client.mchsi.com) has joined ##c++
2014-09-21 21:46:30		fluter (~fluter@fedora/fluter) has joined ##c++
2014-09-21 21:47:32		fluter (~fluter@fedora/fluter) has quit (Max SendQ exceeded)
2014-09-21 21:47:35		JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-09-21 21:47:46		GinoMan_ (~quassel@pool-72-94-39-83.phlapa.fios.verizon.net) has quit (Ping timeout: 246 seconds)
2014-09-21 21:48:35		fluter (~fluter@fedora/fluter) has joined ##c++
2014-09-21 21:49:42		fluter (~fluter@fedora/fluter) has quit (Max SendQ exceeded)
2014-09-21 21:50:13		lh_mouse (~lh_mouse@61.171.65.195) has joined ##c++
2014-09-21 21:50:48		fluter (~fluter@fedora/fluter) has joined ##c++
2014-09-21 21:51:59		Barrin6 (~Barrin6@user-0c8gm3t.cable.mindspring.com) has quit (Quit: Barrin6)
2014-09-21 21:52:12		fluter (~fluter@fedora/fluter) has quit (Max SendQ exceeded)
2014-09-21 21:53:14		fluter (~fluter@fedora/fluter) has joined ##c++
2014-09-21 21:53:18		Fogger (~Fogger@host86-176-58-237.range86-176.btcentralplus.com) has quit (Ping timeout: 258 seconds)
2014-09-21 21:53:33		ReadySetWait (~ReadySetW@unaffiliated/readysetwait) has joined ##c++
2014-09-21 21:53:42		fluter (~fluter@fedora/fluter) has quit (Read error: Connection reset by peer)
2014-09-21 21:53:47		Fogger (~Fogger@host86-167-201-57.range86-167.btcentralplus.com) has joined ##c++
2014-09-21 21:56:52		justanot1eruser (~Justan@unaffiliated/justanotheruser) has joined ##c++
2014-09-21 21:56:54		justanotheruser (~Justan@unaffiliated/justanotheruser) has quit (Quit: Reconnecting)
2014-09-21 21:57:32		blackwind_123 (~IceChat9@117.213.184.228) has quit (Ping timeout: 260 seconds)
2014-09-21 21:59:47		Burgundy (~burgundy@188.25.137.8) has joined ##c++
2014-09-21 22:00:44		Gluesticky (~nobody@unaffiliated/gluesticky) has joined ##c++
2014-09-21 22:08:38		KAHR-Alpha (~Alpha@AReims-652-1-204-190.w90-47.abo.wanadoo.fr) has quit (Ping timeout: 245 seconds)
2014-09-21 22:11:17		GinoMan (~quassel@pool-72-94-39-83.phlapa.fios.verizon.net) has joined ##c++
2014-09-21 22:12:33		Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 244 seconds)
2014-09-21 22:13:01		Carbonflux (~BOB@174-21-109-233.tukw.qwest.net) has joined ##c++
2014-09-21 22:14:15		lenarhoyt (5b43009f@gateway/web/freenode/ip.91.67.0.159) has quit (Quit: Page closed)
2014-09-21 22:17:15		pepper_chico (~textual@187.56.121.86) has joined ##c++
2014-09-21 22:17:19		pepper_chico (~textual@187.56.121.86) has quit (Max SendQ exceeded)
2014-09-21 22:17:30		cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has joined ##c++
2014-09-21 22:22:27		pepper_chico (~textual@187.56.121.86) has joined ##c++
2014-09-21 22:22:31		pepper_chico (~textual@187.56.121.86) has quit (Max SendQ exceeded)
2014-09-21 22:24:45		lleo (~lleo@5ED09ADB.cm-7-1c.dynamic.ziggo.nl) has joined ##c++
2014-09-21 22:28:19		zimash (~zimash@178.169.93.168) has quit (Ping timeout: 245 seconds)
2014-09-21 22:32:33		Orion] (~nname@unaffiliated/orion/x-3970838) has quit
2014-09-21 22:34:25		mangekyo (~mangekyo@120.152.189.149) has quit (Ping timeout: 260 seconds)
2014-09-21 22:37:47		ReadySetWait (~ReadySetW@unaffiliated/readysetwait) has quit (Quit: Bye)
2014-09-21 22:41:01		K-ballo (~sonoio@181.228.139.31) has quit (Quit: Bye)
2014-09-21 22:41:24		Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-09-21 22:41:46		Atque (~Atque@unaffiliated/atque) has joined ##c++
2014-09-21 22:41:56		Atque (~Atque@unaffiliated/atque) has quit (Max SendQ exceeded)
2014-09-21 22:43:05		mangekyo (~mangekyo@101.173.181.68) has joined ##c++
2014-09-21 22:43:59		dapz (~textual@c-24-7-31-236.hsd1.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-09-21 22:44:45		eslbaer (~eslbaer@p579E91CD.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2014-09-21 22:44:56		mangekyo (~mangekyo@101.173.181.68) has quit (Client Quit)
2014-09-21 22:45:38		Atque (~Atque@unaffiliated/atque) has joined ##c++
2014-09-21 22:48:21		lmat (~lmat@c-98-223-185-216.hsd1.in.comcast.net) has joined ##c++
2014-09-21 22:48:24		preyalone (uid21561@gateway/web/irccloud.com/x-nqkquufdpjsykpnf) has joined ##c++
2014-09-21 22:48:51		yates (~user@nc-67-232-27-161.dhcp.embarqhsd.net) has joined ##c++
2014-09-21 22:49:33	yates	is there anything wrong with calling the constructor for one signature from another?
2014-09-21 22:50:25	yates	PovAddictW: hey man, how are you?
2014-09-21 22:50:44	PovAddictW	yates: you can only do that in C++11, and it has a different syntax
2014-09-21 22:50:55	lh_mouse	yates, ctors can't be called, only delegated.
2014-09-21 22:51:12	yates	PovAddictW: well, it is c++11 - what is the syntax?
2014-09-21 22:51:26	yates	i'm not getting any errors with just the typical function call
2014-09-21 22:51:34	PovAddictW	you mean struct Foo { Foo(int x) {} Foo() { Foo(42); } };?
2014-09-21 22:52:12	yates	no
2014-09-21 22:52:39		justanot1eruser (~Justan@unaffiliated/justanotheruser) has quit (Ping timeout: 240 seconds)
2014-09-21 22:52:44	PovAddictW	my snippet doesn't do what it seems to do
2014-09-21 22:53:12	PovAddictW	yates: then what are you doing?
2014-09-21 22:53:14	yates	class foo {foo(int x); foo(float x); }; foo(float x){foo(floor(x));};
2014-09-21 22:53:36	lh_mouse	yates, you created an unnamed object.
2014-09-21 22:53:42	PovAddictW	yeah... that will create a temporary foo, calling the foo(int) constructor, and immediately destroy it
2014-09-21 22:53:43	lh_mouse	that is all.
2014-09-21 22:53:54	yates	aha. that makes lots of sense.
2014-09-21 22:54:00	PovAddictW	it's not calling the constructor on the current instance or anything like that
2014-09-21 22:54:17	yates	yeah, that's an "Oh Shit!"
2014-09-21 22:54:27	yates	thanks a BUNCH!
2014-09-21 22:54:30		ReadySetWait (~ReadySetW@unaffiliated/readysetwait) has joined ##c++
2014-09-21 22:54:34	yates	been chasing this bug for 4 hours...
2014-09-21 22:54:37		c0le (~c0le@59.99.251.45) has joined ##c++
2014-09-21 22:54:57	PovAddictW	IIRC the C++11 way is foo(float x): foo(floor(x)) {}
2014-09-21 22:54:57		Jesin (~Jesin@Dyn157096.cc.lehigh.edu) has quit (Ping timeout: 260 seconds)
2014-09-21 22:55:02	yates	i was initializing a string in the ctor, but then when i tested it, it wasn't set..
2014-09-21 22:55:04		systemfault (~Systemfau@oftn/member/systemfault) has quit
2014-09-21 22:55:32	yates	right.
2014-09-21 22:55:38		oleo__ (~oleo@xdsl-78-35-175-213.netcologne.de) has joined ##c++
2014-09-21 22:55:42	yates	thanks to you too lh_mouse
2014-09-21 22:56:01	--	oleo is now known as Guest6629
2014-09-21 22:57:21		Guest6629 (~oleo@78.35.150.218) has quit (Ping timeout: 260 seconds)
2014-09-21 22:57:22	yates	yay! it works!!!
2014-09-21 22:57:40	yates	now THAT should be a warning at least!
2014-09-21 22:58:40		cale250 (~cale250@173-17-30-217.client.mchsi.com) has quit (Read error: Connection reset by peer)
2014-09-21 22:59:07		saml_ (~saml@pool-71-190-7-24.nycmny.east.verizon.net) has joined ##c++
2014-09-21 23:02:53		lleo (~lleo@5ED09ADB.cm-7-1c.dynamic.ziggo.nl) has quit (Remote host closed the connection)
2014-09-21 23:05:53		asakura (~asakura@gateway/tor-sasl/asakura) has quit (Quit: asakura)
2014-09-21 23:06:32		jitsuin (~chatzilla@cpe-23-240-223-21.socal.res.rr.com) has quit (Ping timeout: 258 seconds)
2014-09-21 23:07:28		maciuszek (~maciuszek@TOROON0949W-LP140-04-1096705101.dsl.bell.ca) has quit (Remote host closed the connection)
2014-09-21 23:08:58		lmat (~lmat@c-98-223-185-216.hsd1.in.comcast.net) has quit (Ping timeout: 246 seconds)
2014-09-21 23:13:48		asmx (cod3r@shell.uw-team.org) has quit (Remote host closed the connection)
2014-09-21 23:14:54		basic6_ (~basic6@p4FCB49CF.dip0.t-ipconnect.de) has joined ##c++
2014-09-21 23:15:43		mangekyo (~mangekyo@110.144.191.185) has joined ##c++
2014-09-21 23:18:48		phax (~phax@unaffiliated/phax) has quit (Remote host closed the connection)
2014-09-21 23:19:12		basic6 (~basic6@p4FCB5306.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2014-09-21 23:21:14		Burgundy (~burgundy@188.25.137.8) has quit (Ping timeout: 245 seconds)
2014-09-21 23:21:15		jsoft (~jsoft@unaffiliated/jsoft) has joined ##c++
2014-09-21 23:21:36		asakura (~asakura@gateway/tor-sasl/asakura) has joined ##c++
2014-09-21 23:23:09		yates (~user@nc-67-232-27-161.dhcp.embarqhsd.net) has quit (Quit: rcirc on GNU Emacs 24.3.1)
2014-09-21 23:25:50		DTSCode (~dtscode@174.134.25.153) has joined ##c++
2014-09-22 19:12:50		dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-22 19:12:50	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-22 19:12:50	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-22 19:12:50	--	Channel ##c++: 455 nicks (0 ops, 0 voices, 455 normals)
2014-09-22 19:12:51	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-22 19:12:58		geri (c15046a8@gateway/web/freenode/ip.193.80.70.168) has quit (Ping timeout: 246 seconds)
2014-09-22 19:12:59	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-22 19:14:36		fr33domlover (~fr33domlo@fsf/member/fr33domlover) has quit (Quit: fr33domlover)
2014-09-22 19:16:18		hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 244 seconds)
2014-09-22 19:18:23		kailoAtWork (~kailoAtWo@208.184.77.122) has quit (Quit: This computer has gone to sleep)
2014-09-22 19:21:20		akaDaddy (~adam@97.75.240.100) has quit (Quit: Leaving)
2014-09-22 19:22:00		paulschellin (~paulschel@osuosc/paulschellin) has quit
2014-09-22 19:23:55		caveat- (hoax@2a01:4f8:191:9111:30::10) has quit (Ping timeout: 272 seconds)
2014-09-22 19:24:15	--	bedouin_ is now known as bedouin
2014-09-22 19:25:09		clynamen (~clynamen@net-188-216-36-224.cust.vodafonedsl.it) has quit (Quit: WeeChat 1.0)
2014-09-22 19:25:38		caveat- (hoax@2a01:4f8:191:9111:30::10) has joined ##c++
2014-09-22 19:26:16	--	DTSCode is now known as dTSCode
2014-09-22 19:30:12		wolfs_howl (~arctic_wo@67.8.143.245) has joined ##c++
2014-09-22 19:31:28		naraku9333 (~quassel@c-68-51-98-34.hsd1.il.comcast.net) has joined ##c++
2014-09-22 19:32:32		cale250 (~cale250@173-17-30-217.client.mchsi.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-09-22 19:33:02		kailoAtWork (~kailoAtWo@208.184.77.122) has joined ##c++
2014-09-22 19:36:49		Drew_ (~Drew@108.238.227.116) has quit (Quit: Leaving)
2014-09-22 19:38:23		jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has quit (Quit: leaving)
2014-09-22 19:38:57		ac_slater_ (~weechat@dhcp89-69-173.bbn.com) has quit (Quit: WeeChat 1.0)
2014-09-22 19:39:02		Nando_k (~Nando_k@dslb-178-011-155-188.178.011.pools.vodafone-ip.de) has quit (Ping timeout: 245 seconds)
2014-09-22 19:41:18		ricardocrudo (~crudo@186.203.12.197) has quit (Ping timeout: 272 seconds)
2014-09-22 19:41:22		TheFuzzball (~TheFuzzba@cpc4-ward10-2-0-cust737.10-2.cable.virginm.net) has quit (Quit: Computer has gone to sleep.)
2014-09-22 19:42:16	stefandxm	what is the name for the c++ basic questions -channel?
2014-09-22 19:43:11	hs_	##C++-basic
2014-09-22 19:43:23		BlaXpirit (~blaxpirit@226-13-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-09-22 19:43:47		nacitar (~nacitar@unaffiliated/nacitar) has quit (Read error: Connection reset by peer)
2014-09-22 19:44:46		K-ballo (~sonoio@181.228.52.231) has quit (Read error: Connection reset by peer)
2014-09-22 19:44:53	stefandxm	ty hs
2014-09-22 19:45:18		kerrick_ (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has quit (Ping timeout: 245 seconds)
2014-09-22 19:45:56		sohail (~user@unaffiliated/sohail) has joined ##c++
2014-09-22 19:46:31		Brando753 (~Brando753@unaffiliated/brando753) has quit (Ping timeout: 260 seconds)
2014-09-22 19:48:01		drewery (~drewery@184.76.211.97) has quit (Ping timeout: 250 seconds)
2014-09-22 19:48:09		Brando753 (~Brando753@unaffiliated/brando753) has joined ##c++
2014-09-22 19:48:27		tinti (~tinti@pdpc/supporter/student/tinti) has quit (Remote host closed the connection)
2014-09-22 19:51:34		LunarJetman (LunarJetma@05400825.skybroadband.com) has quit (Quit: LunarJetman)
2014-09-22 19:51:40		akaDaddy (~adam@97.75.240.100) has joined ##c++
2014-09-22 19:59:21		Blue_Hat (~Blue_Hat@66.54.118.122) has joined ##c++
2014-09-22 19:59:39		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-09-22 19:59:42		madsy (~madsy@fu/coder/madsy) has joined ##c++
2014-09-22 20:00:33		K-ballo (~sonoio@181.228.139.31) has joined ##c++
2014-09-22 20:00:56	madsy	Is it defined behavior for pointer-to-array to point to memory returned by new[]? Or do they absolutely need to be assigned from actual arrays?
2014-09-22 20:01:46		dvt (~dvt@65.112.10.104) has joined ##c++
2014-09-22 20:01:55		svm_invi1tvs (~patricktw@unaffiliated/svminvictvs/x-938456) has quit (Ping timeout: 272 seconds)
2014-09-22 20:04:56		akaDaddy (~adam@97.75.240.100) has quit (Quit: Leaving)
2014-09-22 20:06:52		Josef_K (~jeremy@203-206-204-113.perm.iinet.net.au) has quit (Read error: Connection reset by peer)
2014-09-22 20:06:59		mac_ified (~mac_ified@68.200.222.255) has joined ##c++
2014-09-22 20:07:15		wolfs_howl (~arctic_wo@67.8.143.245) has quit (Quit: I'm out)
2014-09-22 20:07:42		Siberian_Tiger (~Nicholas@199-96-202-110.fidnet.com) has joined ##c++
2014-09-22 20:08:01		dindinx (~dindinx@unaffiliated/dindinx) has joined ##c++
2014-09-22 20:08:03		Zifre_ (~Zifre@unaffiliated/zifre) has joined ##c++
2014-09-22 20:08:21		Josef_K (~jeremy@203-206-204-113.perm.iinet.net.au) has joined ##c++
2014-09-22 20:08:54		svm_invictvs (~patricktw@unaffiliated/svminvictvs/x-938456) has joined ##c++
2014-09-22 20:10:17		rufianw (~ntrrgc@212.183.221.145.dyn.user.ono.com) has quit (Quit: Konversation terminated!)
2014-09-22 20:11:38		Zifre (~Zifre@unaffiliated/zifre) has quit (Ping timeout: 240 seconds)
2014-09-22 20:13:41		Atque (~Atque@unaffiliated/atque) has left ##c++
2014-09-22 20:16:07		staylor (~staylor@mail.au-zone.com) has quit (Ping timeout: 258 seconds)
2014-09-22 20:17:56		Dreadnaught (~Dreadnaug@tlug/member/kulrak) has quit (Ping timeout: 248 seconds)
2014-09-22 20:18:40		KAHR-Alpha (~Alpha@AReims-652-1-204-190.w90-47.abo.wanadoo.fr) has quit (Ping timeout: 272 seconds)
2014-09-22 20:23:57		hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-09-22 20:24:32		Dreadnaught (~Dreadnaug@tlug/member/kulrak) has joined ##c++
2014-09-22 20:26:15		SleekoNiko (~nick@2605:6000:ecc8:6d00:2ad2:44ff:fe3a:6519) has joined ##c++
2014-09-22 20:27:58		ultrixx (~ultrixx@p5B2DFDA9.dip0.t-ipconnect.de) has joined ##c++
2014-09-22 20:33:52		Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has joined ##c++
2014-09-22 20:34:48		fatbrain (~Jonas@unaffiliated/fatbrain) has quit (Quit: Lost terminal)
2014-09-22 20:34:50		vinleod (~vinleod@75-164-224-169.ptld.qwest.net) has quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2014-09-22 20:35:37		sohail (~user@unaffiliated/sohail) has quit (Ping timeout: 260 seconds)
2014-09-22 20:40:01		govg (~govg@unaffiliated/govg) has quit (Quit: leaving)
2014-09-22 20:41:37		naraku9333 (~quassel@c-68-51-98-34.hsd1.il.comcast.net) has quit (Read error: Connection reset by peer)
2014-09-22 20:42:06		Josef_K (~jeremy@203-206-204-113.perm.iinet.net.au) has quit (Ping timeout: 272 seconds)
2014-09-22 20:42:37		caveat- (hoax@2a01:4f8:191:9111:30::10) has quit (Ping timeout: 260 seconds)
2014-09-22 20:42:58		mangekyo (~mangekyo@101.173.49.217) has joined ##c++
2014-09-22 20:43:53		comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has quit (Quit: Bye)
2014-09-22 20:45:03		govg (~govg@unaffiliated/govg) has joined ##c++
2014-09-22 20:45:11		sherief (~textual@129.sub-70-197-2.myvzw.com) has quit (Quit: Textual IRC Client: http://www.textualapp.com/)
2014-09-22 20:47:53		cale250 (~cale250@173-17-30-217.client.mchsi.com) has joined ##c++
2014-09-22 20:49:25		caveat- (hoax@2a01:4f8:191:9111:30::10) has joined ##c++
2014-09-22 20:50:30		MrConspicuousGuy (~MrConspic@66-87-151-78.pools.spcsdns.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-09-22 20:53:47		bayoubengal (~bayoubeng@38.96.130.98) has joined ##c++
2014-09-22 20:53:57	bayoubengal	greetings.
2014-09-22 20:53:59		naraku9333 (~quassel@c-68-51-98-34.hsd1.il.comcast.net) has joined ##c++
2014-09-22 20:54:31	bayoubengal	is there any keyword that will refer to the type of the owner of a static member function?
2014-09-22 20:55:24		MrConspicuousGuy (~MrConspic@66.87.151.78) has joined ##c++
2014-09-22 20:55:29	bayoubengal	an analog of 'this'... if you will.. that allows a static member function to generically refer to the the type of the class it is a member of
2014-09-22 20:56:07	bayoubengal	I know there isn't classically, but any that may have been added for c++11 or c++14?
2014-09-22 20:56:25		BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has joined ##c++
2014-09-22 20:56:26		Mio-chan (~Mio-chan@unaffiliated/mio-chan) has joined ##c++
2014-09-22 20:57:16	K-ballo	bayoubengal: no
2014-09-22 20:57:27	bayoubengal	bummer. thanks.
2014-09-22 21:00:10	Oxyd	Hm. I wonder if there would be any issue with allowing this in a static member function in an unevaluated context.
2014-09-22 21:00:33		negerns (~dark_havo@49.144.230.109) has joined ##c++
2014-09-22 21:00:36		Ranieri_ (~Ranieri_@bas3-malton22-1176373214.dsl.bell.ca) has joined ##c++
2014-09-22 21:01:32		ikrima (~ikrima@76.91.23.45) has joined ##c++
2014-09-22 21:01:47	bayoubengal	my purpose is to do the following sort of thing...  throwException<std::system_error, decltype(*this), __LINE__>(std::make_error_code(errno), "invalid path");
2014-09-22 21:02:04		cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-09-22 21:02:31		naraku9333 (~quassel@c-68-51-98-34.hsd1.il.comcast.net) has quit (Read error: Connection reset by peer)
2014-09-22 21:02:43		huckleberry78 (~huckleber@76.97.228.17) has joined ##c++
2014-09-22 21:06:52		zima (zima@c75.152.27-202.clta.globetrotter.net) has quit (Quit: zima)
2014-09-22 21:08:31		wolfs_howl (~arctic_wo@67.8.143.245) has joined ##c++
2014-09-22 21:08:41		naraku9333 (~quassel@c-68-51-98-34.hsd1.il.comcast.net) has joined ##c++
2014-09-22 21:09:41		caveat- (hoax@2a01:4f8:191:9111:30::10) has quit (Ping timeout: 260 seconds)
2014-09-22 21:10:33	wolfs_howl	i need help with the last part of this question http://pastebin.com/d3Xc4xPD
2014-09-22 21:11:00	wolfs_howl	my code so far is this http://ideone.com/2G9AT9
2014-09-22 21:11:12		Praise (~Fat@unaffiliated/praise) has quit (Quit: No Ping reply in 180 seconds.)
2014-09-22 21:12:35		ultrixx (~ultrixx@p5B2DFDA9.dip0.t-ipconnect.de) has quit (Quit: Verlassend)
2014-09-22 21:12:35		wolfs_howl (~arctic_wo@67.8.143.245) has quit (Read error: Connection reset by peer)
2014-09-22 21:13:19		kailoAtWork (~kailoAtWo@208.184.77.122) has quit (Quit: This computer has gone to sleep)
2014-09-22 21:13:21		wolfs_howl (~arctic_wo@67.8.143.245) has joined ##c++
2014-09-22 21:13:54		caveat- (hoax@2a01:4f8:191:9111:30::10) has joined ##c++
2014-09-22 21:14:59	wolfs_howl	can anyone help me with the last part of this problem http://pastebin.com/d3Xc4xPD
2014-09-22 21:16:26		JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-09-22 21:16:58		huckleberry78 (~huckleber@76.97.228.17) has quit (Ping timeout: 245 seconds)
2014-09-22 21:17:05		hucklebe_ (~huckleber@76.97.228.17) has joined ##c++
2014-09-22 21:18:28		robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Max SendQ exceeded)
2014-09-22 21:18:54		robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-09-22 21:20:42		wolfs_howl (~arctic_wo@67.8.143.245) has quit (Quit: I'm out)
2014-09-22 21:24:34		eutheria (~eutheria@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has quit (Ping timeout: 246 seconds)
2014-09-22 21:25:28		MrConspicuousGuy (~MrConspic@66.87.151.78) has quit (Ping timeout: 260 seconds)
2014-09-22 21:28:16		hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 260 seconds)
2014-09-22 21:29:30		FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has joined ##c++
2014-09-22 21:29:52	nevodka	that is some ugly code
2014-09-22 21:29:53	nevodka	all these using statements lol
2014-09-22 21:30:30		aslant (~aslant@37.157.33.76) has quit (Read error: Connection reset by peer)
2014-09-22 21:30:39		Siberian_Tiger (~Nicholas@199-96-202-110.fidnet.com) has quit (Disconnected by services)
2014-09-22 21:30:41		desophos_ (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-09-22 21:30:43		Tiger|0 (~Nicholas@199-96-202-110.fidnet.com) has joined ##c++
2014-09-22 21:31:07		aslant (~aslant@37.157.33.76) has joined ##c++
2014-09-22 21:31:07	nevodka	do people actually do that?
2014-09-22 21:32:45	Hello71	also, !homework
2014-09-22 21:32:49	Hello71	!homework
2014-09-22 21:32:50	nolyc	We don't do homework (let alone yours)
2014-09-22 21:33:33		desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has quit (Ping timeout: 258 seconds)
2014-09-22 21:36:19	vocodork_	just wanted to give him this: http://codepad.org/9q5r45yf
2014-09-22 21:36:24	vocodork_	to make his head twirl a bit
2014-09-22 21:37:08		Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-09-22 21:37:36		caveat- (hoax@2a01:4f8:191:9111:30::10) has quit (Ping timeout: 260 seconds)
2014-09-22 21:38:17		fluter (~fluter@fedora/fluter) has joined ##c++
2014-09-22 21:41:22		GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has quit (Ping timeout: 246 seconds)
2014-09-22 21:41:40		lh_mouse (~lh_mouse@101.86.88.210) has joined ##c++
2014-09-22 21:42:29		Dreadnaught (~Dreadnaug@tlug/member/kulrak) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-09-22 21:42:59		caveat- (hoax@2a01:4f8:191:9111:30::10) has joined ##c++
2014-09-22 21:43:42		Lencl (446adf0e@gateway/web/freenode/ip.68.106.223.14) has joined ##c++
2014-09-22 21:43:58	Lencl	what's the different between str[index] or str.at(index)
2014-09-22 21:44:20		ReadySetWait (~ReadySetW@unaffiliated/readysetwait) has joined ##c++
2014-09-22 21:44:37	o-O-o	!give Lencl stdref vector
2014-09-22 21:44:38	nolyc	Lencl: http://en.cppreference.com/w/cpp/container/vector
2014-09-22 21:44:59	vocodork_	Lencl: or http://en.cppreference.com/w/cpp/string/basic_string to be more precise
2014-09-22 21:45:18	lh_mouse	clang, <<(int)s[3], s.at(3); string s("abc"); // Lencl
2014-09-22 21:45:20	clang	LLVM ERROR: Could not resolve external global address: __dso_handle [+ 1 discarded line]
2014-09-22 21:45:40	lh_mouse	o.o
2014-09-22 21:45:55	Lencl	ah
2014-09-22 21:45:58	Lencl	.at() is for char only
2014-09-22 21:46:29	vocodork_	at() just throws and exception on out of bounds access
2014-09-22 21:46:32	vocodork_	an
2014-09-22 21:46:32	vocodork_	*
2014-09-22 21:46:45	Lencl	oh I see
2014-09-22 21:46:57	lh_mouse	s[s.size()] => char()   s.at(s.size()) => out_of_range
2014-09-22 21:47:38		K-ballo (~sonoio@181.228.139.31) has left ##c++ ("http://talesofcpp.fusionfenix.com")
2014-09-22 21:47:38		INSANU (~INSANU@186.213.185.107) has joined ##c++
2014-09-22 21:47:44		SlashLife_ (~slashlife@botters/slashlife) has joined ##c++
2014-09-22 21:47:46	Lencl	ah
2014-09-22 21:47:57		Dreadnaught (~Dreadnaug@tlug/member/kulrak) has joined ##c++
2014-09-22 21:48:07		madsy (~madsy@fu/coder/madsy) has left ##c++
2014-09-22 21:49:46		ncd|leeN (~leeN@e181213200.adsl.alicedsl.de) has quit (Ping timeout: 246 seconds)
2014-09-22 21:49:48		dTSCode (~dtscode@174.134.25.153) has quit (Ping timeout: 250 seconds)
2014-09-22 21:50:39		SlashLife (~slashlife@botters/slashlife) has quit (Ping timeout: 240 seconds)
2014-09-22 21:50:41		Blue_Hat (~Blue_Hat@66.54.118.122) has quit (Ping timeout: 260 seconds)
2014-09-22 21:52:25		torei (~torei@70-91-211-237-BusName-Augusta.hfc.comcastbusiness.net) has quit (Ping timeout: 272 seconds)
2014-09-22 21:56:02		P1RATEZ (~piratez@CPEbc1401e23523-CMbc1401e23520.cpe.net.cable.rogers.com) has joined ##c++
2014-09-22 21:57:24		Ranieri_ (~Ranieri_@bas3-malton22-1176373214.dsl.bell.ca) has quit (Quit: Leaving)
2014-09-22 21:58:16	--	irc: disconnected from server
2014-09-23 22:21:04		dagnachew (~dagnachew@bas1-montreal30-2925416431.dsl.bell.ca) has joined ##c++
2014-09-23 22:21:04	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-23 22:21:04	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-23 22:21:04	--	Channel ##c++: 455 nicks (0 ops, 0 voices, 455 normals)
2014-09-23 22:21:04	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-23 22:21:13	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-23 22:21:33	SaEeDIRHA	K-ballo: so let say i have "int arr[5]" the element arr[1] would be NULL , am i right ?
2014-09-23 22:21:52	glenfe_	SaEeDIRHA: Why do you think that?
2014-09-23 22:22:06	K-ballo	SaEeDIRHA: no, neither in C++ nor any other language I know of
2014-09-23 22:22:16	Mannn	I dont think that's correct, I think it just contains a bunch of junk data
2014-09-23 22:22:22	SaEeDIRHA	glenfe_: because its not initialized
2014-09-23 22:22:51	SaEeDIRHA	like a null pointer ?
2014-09-23 22:23:24	SaEeDIRHA	because as far as i know (again correct me if i am wrong) that array is nothing but pointer to chunk of memory
2014-09-23 22:23:28	niclg	SaEeDIRHA: here's some related fun: https://www.youtube.com/watch?v=48kP_Ssg2eY&t=6m10s
2014-09-23 22:23:33	K-ballo	only pointers are initialized to a null pointer, either explicitly or by static or value-initialization, otherwise they get default-initialized which means they are not initialized which means they have a random value
2014-09-23 22:24:01	SaEeDIRHA	i see
2014-09-23 22:24:32		asakura (~asakura@gateway/tor-sasl/asakura) has quit (Remote host closed the connection)
2014-09-23 22:24:54	K-ballo	and for the record, Mannn it sounds like you could use a std::vector instead, have you considered it?
2014-09-23 22:25:55		Mio-chan (~Mio-chan@unaffiliated/mio-chan) has joined ##c++
2014-09-23 22:26:18		asakura (~asakura@gateway/tor-sasl/asakura) has joined ##c++
2014-09-23 22:27:48	Mannn	K-ballo: if it were my choice, I would always use vectors, as I don't see an advantage to arrays (yet)
2014-09-23 22:27:52		eean (~quassel@amarok/developer/eean) has quit (Ping timeout: 250 seconds)
2014-09-23 22:28:56	SaEeDIRHA	Mannn: the advantage is memory usage and speed
2014-09-23 22:28:59	glenfe_	SaEeDIRHA: An array of objects of type T of size N, is just N objects of type T stored contiguously. If T is int, you have N int objects stored in sequence. An int object has a value, but what that value is initially upon those integers existence depends on the factors that K-ballo mentioned (whether the array is static, or if you have explicitly chosen to initialize it).
2014-09-23 22:28:59	lh_mouse	there are a lot of advantages to use arrays instead of vectors when the size is known.
2014-09-23 22:29:02		Orion] (~nname@unaffiliated/orion/x-3970838) has quit
2014-09-23 22:29:35		eean (~quassel@amarok/developer/eean) has joined ##c++
2014-09-23 22:29:51	K-ballo	lh_mouse: lots? I've only count a few
2014-09-23 22:30:13	K-ballo	err... one?
2014-09-23 22:30:52	niclg	certainly you can think of more than one
2014-09-23 22:30:56		svm_invictvs (~patricktw@unaffiliated/svminvictvs/x-938456) has quit (Ping timeout: 246 seconds)
2014-09-23 22:31:03	K-ballo	I'm stuck with one... :S
2014-09-23 22:31:05	lh_mouse	K-ballo, a quite obvious one: array sizes are constexpr while vector sizes are not.
2014-09-23 22:31:36	K-ballo	ok, static size is the one I have, what else?
2014-09-23 22:31:49	SaEeDIRHA	K-ballo: speed
2014-09-23 22:31:57	niclg	no dynamic allocation, the memory is local so probably better for cache (instead of being off in a heap somewhere)
2014-09-23 22:32:10	lh_mouse	memory fragments, bad_alloc, etc.
2014-09-23 22:33:15		chatsiri_ (~chatsiri_@cm-58-10-138-131.revip7.asianet.co.th) has joined ##c++
2014-09-23 22:33:30		KrzaQ (~krzaq@krzaq.cc) has quit (Ping timeout: 250 seconds)
2014-09-23 22:33:53	K-ballo	fair enough, I got stuck in a comparison between new T[N] and std::vector<T> v{N} or v.resize(N)
2014-09-23 22:34:29	niclg	lol. vector<T> v{N} has size 1
2014-09-23 22:35:05	K-ballo	niclg: ok, it's really late here, so I'm gonna doubt myself.. explain?
2014-09-23 22:35:19	K-ballo	uh, darn braces
2014-09-23 22:35:27	K-ballo	I'm calling it a day :P
2014-09-23 22:35:33	niclg	yeah, so dumb
2014-09-23 22:35:37	niclg	{ vector<int> v1{5}; vector<int> v2(5); cout << v1, v2; }
2014-09-23 22:35:37	geordi	{5}, {0, 0, 0, 0, 0}
2014-09-23 22:36:21	niclg	also, if you compare T[N] vs vector<T> v(N), there's also the fact that std vector will actually initialize all the data (to zero in the case of integers) so that might be overhead
2014-09-23 22:37:01		aslant (~aslant@5751a00f.skybroadband.com) has quit (Remote host closed the connection)
2014-09-23 22:37:04		eean (~quassel@amarok/developer/eean) has quit (Read error: Connection reset by peer)
2014-09-23 22:37:09	lh_mouse	Write an allocator that does not do that.
2014-09-23 22:37:52		fatalhalt (~fatalhalt@c-71-201-7-76.hsd1.il.comcast.net) has joined ##c++
2014-09-23 22:38:22		Carbonflux (~BOB@174-21-109-233.tukw.qwest.net) has joined ##c++
2014-09-23 22:38:44	moonchild	is it the allocator that inits the mem?
2014-09-23 22:39:32		K-ballo (~sonoio@181.228.139.31) has quit (Quit: Bye)
2014-09-23 22:40:27		l0pher (~Loser@unaffiliated/l0pher) has quit (Read error: Connection reset by peer)
2014-09-23 22:40:40		caveat- (hoax@2a01:4f8:191:9111:30::10) has quit (Ping timeout: 272 seconds)
2014-09-23 22:41:20	niclg	I'd be curious to see it done
2014-09-23 22:41:31		caveat- (hoax@2a01:4f8:191:9111:30::10) has joined ##c++
2014-09-23 22:41:50	glenfe_	moonchild: In C++11, yes.
2014-09-23 22:42:04	glenfe_	The allocator's construct (if one is provided) is used for construction of all value_type objects.
2014-09-23 22:42:21		realtime_ (~realtime@unaffiliated/realtime) has joined ##c++
2014-09-23 22:42:23	niclg	how do you distinguish from the initial construction and the rest?
2014-09-23 22:42:37	glenfe_	If one is not, std::allocator_traits<A>::construct will just use placement new to construct the value_type objects.
2014-09-23 22:42:58		SaEeDIRHA (77e130f2@gateway/web/freenode/ip.119.225.48.242) has left ##c++
2014-09-23 22:43:12		thejohnfreeman (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has quit (Quit: thejohnfreeman)
2014-09-23 22:43:18	niclg	feels like this could only make sense for pod types
2014-09-23 22:44:10	glenfe_	niclg: The rule the containers obey is that the allocator will be used for every allocation, and for every construction of any value_type objects. So every time a container needs to construct a value_type object, it will invoke allocator_traits<A2>::construct(a2, args...) where a2 of type A2 is a rebound copy of the allocator type A for the value_type - that compares equal to the original allocator instance, a, passed in to the container's constructor.
2014-09-23 22:44:51	glenfe_	That said, using a custom allocator to suppress value-initialization by avoiding construction for certain value types, is not something I'd advocate.
2014-09-23 22:45:29	lh_mouse	clang, { vector<int, noop_alloc> v; v.resize(10); cout <<v; } struct noop_alloc : public allocator<int> { template<typename U, typename ...Args> void construct(U *, Args &&...){ } };  // moonchild
2014-09-23 22:45:32	clang	{52514080, 0, 0, 0, 0, 0, 0, 0, 48, 0}
2014-09-23 22:45:41		realtime (~realtime@unaffiliated/realtime) has quit (Ping timeout: 245 seconds)
2014-09-23 22:46:10	lh_mouse	Ignore g++ please. Since it is always sucking and will suck.
2014-09-23 22:46:42	moonchild	glenfe: that being said, there's still some gaping holes in that rule... std::string::substr comes to mind
2014-09-23 22:47:08		eean (~quassel@amarok/developer/eean) has joined ##c++
2014-09-23 22:47:34	--	liberal is now known as tigerrawrs
2014-09-23 22:48:22		Sadale (~Sadale@unaffiliated/sadale) has quit (Quit: bye)
2014-09-23 22:48:30	Mannn	I'm tellin ya moonchild https://www.youtube.com/watch?v=0hhOhXFVmdE
2014-09-23 22:49:01	lh_mouse	clang, { foo f{ }; cout <<f.i; } struct foo { int i; foo(){ } };  // value initialize = default initialize = no-op
2014-09-23 22:49:04	clang	29026608
2014-09-23 22:49:19	glenfe_	moonchild: There are many cases where standard library defects inhibit correct uses of allocators.
2014-09-23 22:49:28	lh_mouse	clang, { foo f{ }; cout <<f.i; } struct foo { int i; };  // value initialize = aggregate initialize = zeroing
2014-09-23 22:49:30	clang	0
2014-09-23 22:49:35		svm_invictvs (~patricktw@unaffiliated/svminvictvs/x-938456) has joined ##c++
2014-09-23 22:49:37	glenfe_	moonchild: std::wstring_convert is broken, for instance, because it does not support stateful custom allocators.
2014-09-23 22:49:38	moonchild	yep
2014-09-23 22:49:41	glenfe_	Only stateless ones.
2014-09-23 22:50:06	moonchild	wstring_convert is broken because it relies on codecvt :P
2014-09-23 22:50:17	--	tigerrawrs is now known as liberal
2014-09-23 22:51:05		G6 (beded354@gateway/web/freenode/ip.190.222.211.84) has quit (Quit: Page closed)
2014-09-23 22:51:21	glenfe_	That has no bearing on wstring_convert's use of the C++11 allocator model.
2014-09-23 22:51:32	moonchild	there are very few interfaces i've come across worse than codecvt
2014-09-23 22:52:10	moonchild	yeah, but if it didn't rely on the weird buffer semantics of codecvt, you wouldn't need dynamic allocation
2014-09-23 22:52:47	moonchild	i was digging through all of that code a few weeks back
2014-09-23 22:52:54		Giora (~giora@176.228.144.255) has joined ##c++
2014-09-23 22:53:13	Giora	Is there any way to avoid this copy? http://ideone.com/jBFb3g
2014-09-23 22:53:22	moonchild	well, implementing the bare minimum needed to go to<->from utf-8
2014-09-23 22:53:31		negerns (~dark_havo@49.144.128.98) has joined ##c++
2014-09-23 22:53:45		Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 244 seconds)
2014-09-23 22:53:57	lh_mouse	Giora,  Vec.emplace_back(1)
2014-09-23 22:54:14	Giora	Problem is that I'm stuck with a tuple
2014-09-23 22:54:26	lh_mouse	get rid of that tuple.
2014-09-23 22:54:37	Giora	I can't do that in my project
2014-09-23 22:55:00	lh_mouse	then you cant get rid of that copy either.
2014-09-23 22:55:14		caveat- (hoax@2a01:4f8:191:9111:30::10) has quit (Ping timeout: 272 seconds)
2014-09-23 22:55:25	Giora	So my other option is to change A to A*
2014-09-23 22:55:34	lh_mouse	why dont you write a move ctor?
2014-09-23 22:55:42	lh_mouse	unique_ptr!
2014-09-23 22:55:46		thwest (~Adium@99-51-187-8.lightspeed.austtx.sbcglobal.net) has quit (Quit: Leaving.)
2014-09-23 22:56:49	Giora	That could work I suppose
2014-09-23 22:57:12	moonchild	Giora: about the best you can do: http://ideone.com/cn0Jio
2014-09-23 22:57:25	glenfe_	moonchild: Regardless of whether wstring_convert did dynamic allocation or not, as long as its interface supported std::string instead of some other type, and yielded a new string object - it would be broken when stateful custom allocators are used - regardless of whether it did dynamic allocation or not.
2014-09-23 22:57:48	lh_mouse	allocators are a myth.
2014-09-23 22:57:59	moonchild	yeah, allocators for std::string are pretty broken all-around
2014-09-23 22:58:13	glenfe_	No. They're not.
2014-09-23 22:58:16	moonchild	the class needs a pretty large overhaul
2014-09-23 22:58:25	lh_mouse	I never use them because they are asking for too much and can do too few.
2014-09-23 22:58:32		caveat- (hoax@2a01:4f8:191:9111:30::10) has joined ##c++
2014-09-23 22:59:08	glenfe_	But wstring_convert is broken with stateful custom allocators becase it creates and returns a basic_string<X, Y, A> object, but it does not take an instance of A to use when constructing that object  - which is fine for stateless A (like std::allocator), but broken for stateful A (like most useful custom allocators).
2014-09-23 22:59:11	niclg	I lol'd because (IIRC) they criticize the design of basic_string in herb/andrei's C++ coding standards book..
2014-09-23 22:59:21	moonchild	i actually have some code that abuses a custom (stateful) allocator for string processing... getting it all to work right was a real bear
2014-09-23 22:59:23		svm_invictvs (~patricktw@unaffiliated/svminvictvs/x-938456) has quit (Ping timeout: 260 seconds)
2014-09-23 22:59:36	lh_mouse	When I am really going to need an allocator I find that them so lame that I have to write my own container.
2014-09-23 22:59:45	lh_mouse	(remove that that)
2014-09-23 23:00:05	moonchild	glenfe: substr() inside std::string is broken for the same reason
2014-09-23 23:00:09	glenfe_	You need custom allocators for a few things in C++ when using the C++ standard library. Performance is just the more mundane thing. You need them for correctness.
2014-09-23 23:00:25	moonchild	as is filesystem::path for that matter
2014-09-23 23:00:49	glenfe_	moonchild: substr returns a new string, but it has the original string on which it is invoked from which it can propagate the allocator instance from. wstring_convert does not.
2014-09-23 23:01:22	moonchild	can it not use the allocator from the string that's being converted?
2014-09-23 23:01:34	lh_mouse	substr() should return a string_view instead.
2014-09-23 23:02:09	glenfe_	wstring_convert does not return a string of the same type as the input string, so it should not.
2014-09-23 23:02:13	moonchild	while allocators are templated on a type, there's a factory method for generating versions for other types
2014-09-23 23:02:22	niclg	lh_mouse: sounds like a good idea
2014-09-23 23:02:25	glenfe_	basic_string::substr on the other hand, does return a string of the exact same type as the current string object.
2014-09-23 23:02:39		Betal (~Beta@unaffiliated/betal) has quit (Remote host closed the connection)
2014-09-23 23:02:46	glenfe_	You need custom allocators for over-alignment right now. (Until C++17, maybe, or later).
2014-09-23 23:02:55	lh_mouse	niclg, my string does that. I hate std::string, especially std::string in libstdc++.
2014-09-23 23:03:04	glenfe_	But other than over-alignment, performance is why all our libraries support custom allocators.
2014-09-23 23:03:31	moonchild	actually, there's a few other reasons besides performance
2014-09-23 23:03:35		Anomally (~Anomonom@c-98-214-185-163.hsd1.il.comcast.net) has joined ##c++
2014-09-23 23:03:37	moonchild	debugging
2014-09-23 23:03:50	moonchild	injecting faults
2014-09-23 23:04:32	glenfe_	I'm happy people find other uses for custom allocators, since we're invested in improving them (both in the standard, and otherwise).
2014-09-23 23:05:19	glenfe_	The reason why we invested in them, was performance. The fact that things like over-alignment made them necessary is only symptomatic of the fact that over-alignment is broken in C++.
2014-09-23 23:05:31	moonchild	also, you can do some funny stuff in the embedded world with using nvram
2014-09-23 23:05:48		thejohnfreeman (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has joined ##c++
2014-09-23 23:06:24		torei (~torei@70-91-211-237-BusName-Augusta.hfc.comcastbusiness.net) has joined ##c++
2014-09-23 23:06:36	moonchild	performance though is hands-down the #1 reason to use them however
2014-09-23 23:06:50	glenfe_	Performance, and correctness.
2014-09-23 23:07:15		kailoAtWork (~kailoAtWo@cpe-104-33-2-39.socal.res.rr.com) has joined ##c++
2014-09-23 23:07:32	glenfe_	std::allocator<T>, new T, std::vector<T>, are all incorrect for certain T, while std::vector<T, A> may be correct for the same T, depending on the implementation of A.
2014-09-23 23:07:43		huckleberry78 (~huckleber@76.97.228.17) has joined ##c++
2014-09-23 23:08:24		kerrick_ (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has joined ##c++
2014-09-23 23:08:35	moonchild	oh, another place that you might make use of allocators is mmapped file i/o
2014-09-23 23:08:45		edr (~edr@pdpc/supporter/professional/edr) has quit (Quit:  HydraIRC -> http://www.hydrairc.com <- Would you like to know more?)
2014-09-23 23:08:45	glenfe_	But basic_string itself is not broken with its support for the C++11 allocator model.
2014-09-23 23:09:03	glenfe_	(wstring_convert, most definitely is broken with its support of the C++11 allocator model).
2014-09-23 23:09:24	moonchild	i believe them both to be underspecified in that regard
2014-09-23 23:09:35	glenfe_	No, one is not underspecified - one is just impossible.
2014-09-23 23:09:57	moonchild	hey, switching topics for a sec
2014-09-23 23:10:04	glenfe_	If A is stateful, then returning a basic_string<X, Y, A> without an A instance is outright wrong.
2014-09-23 23:10:05	moonchild	...back to codecvt
2014-09-23 23:10:17	glenfe_	So, no. You believe wrongly.
2014-09-23 23:10:39	glenfe_	But you also believed that C++14 included changes to the allocator model. And that was fiction.
2014-09-23 23:11:09	moonchild	...the standard says that codecvt<char, char16_t, mbstate_t> and codecvt<char, char32_t, mbstate_t> need to be specialization
2014-09-23 23:11:30		cale250 (~cale250@173-17-30-217.client.mchsi.com) has joined ##c++
2014-09-23 23:12:03	moonchild	yeah, well glenfe, i don't have the ability to keep the entire standard in my head
2014-09-23 23:12:13	moonchild	if you can, more power to you
2014-09-23 23:12:43	glenfe_	It doesn't require memorizing the standard to not invent fiction about the standard.
2014-09-23 23:13:34	niclg	C++ standard fanfiction
2014-09-23 23:13:44		basic6_ (~basic6@p4FCB5D3C.dip0.t-ipconnect.de) has joined ##c++
2014-09-23 23:14:21	moonchild	ok, i made a mistake about it several months back, and you corrected me on it... are you going to continue to say 'you made a mistake, so you're dumb'?
2014-09-23 23:14:48	moonchild	and maybe i'm taking the tone of what you're saying incorrectly, but that's how its coming across
2014-09-23 23:15:31	niclg	I usually lol when people are being sassy in this channel
2014-09-23 23:16:36	moonchild	..back to my question... what the heck are those codecvt specializations supposed to convert from<->to if codecvt_utf8, codecvt_utf16, and codecvt_utf8_utf16 were added to the std?
2014-09-23 23:17:10	ezio	I'm trying to reinterpret_cast<Admin>(user)
2014-09-23 23:17:11		basic6 (~basic6@p4FCB4C09.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2014-09-23 23:17:27	ezio	it's saying that it's an invalid cast
2014-09-23 23:17:32	ezio	during compile time
2014-09-23 23:17:48	moonchild	should it be <Admin*> ?
2014-09-23 23:18:04	ezio	user isn't a pointer
2014-09-23 23:18:14	niclg	you probably want to reinterpret_cast<Admin&>... but uh
2014-09-23 23:18:20		c0le (~c0le@59.99.251.45) has joined ##c++
2014-09-23 23:18:26	niclg	reinterpret_cast is probably not the cast you want to use
2014-09-23 23:18:27	glenfe_	ezio: What type is user? And how is that type related to type Admin?
2014-09-23 23:18:29	moonchild	is there a viable conversion from user -> admin?
2014-09-23 23:18:33	ezio	User user;
2014-09-23 23:18:42		asakura (~asakura@gateway/tor-sasl/asakura) has quit (Ping timeout: 264 seconds)
2014-09-23 23:18:50	ezio	class User : Admin
2014-09-23 23:18:56	ezio	oops
2014-09-23 23:19:03	ezio	class Admin : User
2014-09-23 23:19:27		Xark (~K@unaffiliated/xark) has joined ##c++
2014-09-23 23:19:31	moonchild	that'll only work with pointers or references to the base/derived instances
2014-09-23 23:20:02	ezio	any other way to do it without pointers or references?
2014-09-23 23:20:10	niclg	if you're sure that user is really an admin, you can use Admin& a = static_cast<Admin&>(user);
2014-09-23 23:20:28	moonchild	ewww
2014-09-23 23:20:52	niclg	but if you need to downcast like that, there might be an error in your design.
2014-09-23 23:20:54	glenfe_	ezio: If user is truly a User instance, what would you hope to accomplish by treating it as an Admin instance?
2014-09-23 23:20:58	moonchild	also, you could put an 'operator Admin()' in user
2014-09-23 23:21:12	niclg	moonchild: ouch
2014-09-23 23:21:13		realtime (~realtime@unaffiliated/realtime) has joined ##c++
2014-09-23 23:21:29	moonchild	...didn't say it was a good idea :P
2014-09-23 23:22:42	moonchild	i think it can be noted that its a really good idea not to reinterpret_cast<> anything that isn't POD
2014-09-23 23:22:47	ezio	glenfe_ admin functions
2014-09-23 23:23:43		realtime_ (~realtime@unaffiliated/realtime) has quit (Ping timeout: 244 seconds)
2014-09-23 23:23:46		hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 250 seconds)
2014-09-23 23:23:53	niclg	moonchild: even then, it might be better to use a union (so strict aliasing isn't a problem)
2014-09-23 23:24:08	moonchild	or putting a better way w/o a double negative, only use reinterpret_cast on POD types
2014-09-23 23:24:45	moonchild	niclg: yeah, that's often cleaner and less code
2014-09-23 23:24:56	glenfe_	ezio: Why is the User instance to be used for Admin functions?
2014-09-23 23:25:50	glenfe_	ezio: If you want an Admin object, make one - from a User instance if necessary; nothing is strange about Admin admin(user); admin.function(); if what you're expressing is creating a new Admin from a given User.
2014-09-23 23:26:14	moonchild	hmm, ezio, weren't you working on this a few months back? and didn't we tell you that inheritance doesn't make a lot of sense for enforcing permissions of user accounts?
2014-09-23 23:26:34	niclg	my gut says either User should have a bool admin flag, or something external should keep a list of User* that are considered admins
2014-09-23 23:26:46	ezio	glenfe_ more over i want to be able to tell if the user object IS an admin object
2014-09-23 23:26:51	ezio	and if it is do this and that
2014-09-23 23:27:02		Mio-chan (~Mio-chan@unaffiliated/mio-chan) has quit (Remote host closed the connection)
2014-09-23 23:27:07	moonchild	so keep admins in a separate list
2014-09-23 23:27:22	glenfe_	ezio: You just told us that you want to do this for an object user defined as User user;
2014-09-23 23:27:23	moonchild	if they really need to be treated differently
2014-09-23 23:27:57		DexxeD (~DexxeD@75.70.168.81) has joined ##c++
2014-09-23 23:27:58	glenfe_	reinterpret_cast is fine if you use it in any well defined manner. Using it an ill-defined manner is not the fault of reinterpret_cast. Someone could use static_cast to do that.
2014-09-23 23:27:59	ezio	they still have usernames and passwords
2014-09-23 23:28:12	ezio	and authentication
2014-09-23 23:28:19	moonchild	inheritance is a feature that allows you to treat different types the same way
2014-09-23 23:29:06	moonchild	its not meant for doing 'if (blob is type A) { /* something */ } else if (blob is type B) { /* something else */ }
2014-09-23 23:29:44		realtime_ (~realtime@unaffiliated/realtime) has joined ##c++
2014-09-23 23:29:50		systemfault (~Systemfau@oftn/member/systemfault) has quit
2014-09-23 23:30:14	moonchild	when you need to introspect types like that, you have a design problem
2014-09-23 23:30:20	niclg	you could make stroustrup angry and use a visitor
2014-09-23 23:32:17		asakura (~asakura@gateway/tor-sasl/asakura) has joined ##c++
2014-09-23 23:33:52		realtime (~realtime@unaffiliated/realtime) has quit (Ping timeout: 272 seconds)
2014-09-23 23:34:08	Giora	ezio: you could attempt this Admin admin = *static_cast<Admin*>(&user);
2014-09-23 23:34:32	niclg	that's the same thing as static_cast<Admin&>(user)
2014-09-23 23:34:42		tmager (~tom@resnet-130-64-128-119.medford.tufts.edu) has joined ##c++
2014-09-23 23:34:51	Giora	I find static_cast<Admin&>(user) somewhat hack-ish
2014-09-23 23:35:39	niclg	how so
2014-09-23 23:35:46		caveat- (hoax@2a01:4f8:191:9111:30::10) has quit (Ping timeout: 272 seconds)
2014-09-23 23:37:10	Giora	Because of the way ref is implemented
2014-09-23 23:37:17	Giora	But I guess its just me
2014-09-23 23:37:47		Rudolf (~rodolfo@unaffiliated/rudolf) has quit (Quit: [IRSSI])
2014-09-23 23:37:55	moonchild	it also performs a copy
2014-09-23 23:38:05	moonchild	and may slice
2014-09-23 23:39:26	moonchild	technically, it should be Admin * a = dynamic_cast<Admin*>(&user);
2014-09-23 23:41:22	lh_mouse	Giora, assert(dynamic_cast<Admin *>(&user)); or assert(dynamic_cast<Admin &>(user), true);
2014-09-23 23:41:34	lh_mouse	then static_cast it.
2014-09-23 23:41:56	moonchild	um, that will throw
2014-09-23 23:42:03	niclg	why would it make a copy
2014-09-23 23:42:08		ezio (~ezio@unaffiliated/ezio) has quit (Ping timeout: 258 seconds)
2014-09-23 23:42:17	lh_mouse	dynamic_cast involves tons of overhead due to string comparing.
2014-09-23 23:42:42		kailoAtWork (~kailoAtWo@cpe-104-33-2-39.socal.res.rr.com) has quit (Quit: This computer has gone to sleep)
2014-09-23 23:42:50		thejohnfreeman (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has quit (Ping timeout: 244 seconds)
2014-09-23 23:43:12	moonchild	its not *that* expensive
2014-09-23 23:43:30	moonchild	don't do it in a tight performance critical loop
2014-09-23 23:43:55	moonchild	but really, memcmp(a, b, N) *is not* expensive
2014-09-23 23:44:09		caveat- (hoax@2a01:4f8:191:9111:30::10) has joined ##c++
2014-09-23 23:44:17	niclg	the cost depends on the class hierarchy
2014-09-23 23:44:29	glenfe_	dynamic_cast throws or returns a null pointer depending on one of two conditions.
2014-09-23 23:44:45	moonchild	having to jump through several look up tables to get a & b can slow things down, esp on simple processors
2014-09-23 23:45:07	niclg	if you're on a simple processor, you disable type info
2014-09-23 23:45:16		jophish (~jophish@c-98-203-140-136.hsd1.wa.comcast.net) has quit
2014-09-23 23:45:45	moonchild	niclg: i'd rather leave exceptions enabled and explicitly declare stuff noexcept
2014-09-23 23:46:03	glenfe_	dynamic_cast on a pointer returns a null pointer upon failure. dynamic_cast on references throws std::bad_cast.
2014-09-23 23:46:05	--	irc: disconnected from server
2014-09-27 07:42:42		dagnachew (~dagnachew@bas1-montreal30-2925417210.dsl.bell.ca) has joined ##c++
2014-09-27 07:42:42	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-27 07:42:42	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-27 07:42:42	--	Channel ##c++: 475 nicks (0 ops, 0 voices, 475 normals)
2014-09-27 07:42:42	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-27 07:42:52	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-27 07:43:33		bOSKE (~bOSKE@unaffiliated/boske) has quit (Ping timeout: 272 seconds)
2014-09-27 07:43:33	--	bOSKE- is now known as bOSKE
2014-09-27 07:43:46		kurahaupo (~kurahaupo@118.148.158.200) has quit (Ping timeout: 260 seconds)
2014-09-27 07:45:29		burgiking (~Thunderbi@cpc13-derb12-2-0-cust36.8-3.cable.virginm.net) has joined ##c++
2014-09-27 07:45:29		burgiking (~Thunderbi@cpc13-derb12-2-0-cust36.8-3.cable.virginm.net) has quit (Client Quit)
2014-09-27 07:46:28		vol4ko (~vol4ko@unaffiliated/vol4ko) has joined ##c++
2014-09-27 07:46:52		Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Quit: Leaving)
2014-09-27 07:47:30		Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has joined ##c++
2014-09-27 07:48:54		Draecos (~Draecos@124-168-234-89.dyn.iinet.net.au) has joined ##c++
2014-09-27 07:51:45		Andy-chan2 (~Andy-chan@xdsl-84-44-174-3.netcologne.de) has quit (Read error: Connection reset by peer)
2014-09-27 07:53:06		fridmarr (~fridmarr@109.201.152.249) has joined ##c++
2014-09-27 07:54:19		Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-09-27 07:55:23		Sonny|3oy (~Sonny|3oy@gateway/tor-sasl/sonny3oy/x-86005991) has joined ##c++
2014-09-27 07:56:56		snakenerd (~Thunderbi@177.98.96.156) has quit (Quit: snakenerd)
2014-09-27 07:57:31		fridmarr (~fridmarr@109.201.152.249) has quit (Ping timeout: 250 seconds)
2014-09-27 07:57:39		Jackneill (~Jackneill@unaffiliated/jackneill) has joined ##c++
2014-09-27 07:58:09		ambro718 (~ambro@gentoo/contributor/ambro718) has joined ##c++
2014-09-27 07:59:11		fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-09-27 07:59:33		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-09-27 08:00:15		Forser (~Forser@c83-251-209-255.bredband.comhem.se) has joined ##c++
2014-09-27 08:00:47		aslant (~aslant@91.84.219.96) has quit (Remote host closed the connection)
2014-09-27 08:03:30		Draecos (~Draecos@124-168-234-89.dyn.iinet.net.au) has quit (Quit: This computer has gone to sleep)
2014-09-27 08:07:28		aslant (~aslant@91.84.142.9) has joined ##c++
2014-09-27 08:13:07		Josef__K (~jeremy@124-148-138-18.dyn.iinet.net.au) has joined ##c++
2014-09-27 08:13:17	--	irc: disconnected from server
2014-09-27 12:59:22		dagnachew (~dagnachew@bas1-montreal30-2925417210.dsl.bell.ca) has joined ##c++
2014-09-27 12:59:22	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-27 12:59:22	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-27 12:59:22	--	Channel ##c++: 491 nicks (0 ops, 0 voices, 491 normals)
2014-09-27 12:59:23	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-27 12:59:25		D0cN3x (~Thunderbi@dslb-178-007-208-092.178.007.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2014-09-27 12:59:31	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-27 12:59:48		chatsiri_ (~chatsiri_@cm-58-10-138-131.revip7.asianet.co.th) has quit (Ping timeout: 260 seconds)
2014-09-27 12:59:54	AnotherSentry	YAML::Node config = YAML::LoadFile("config.yaml"); <-- I am using yaml-cpp and it erros with "undefined reference"
2014-09-27 13:00:09	hs_	to what?
2014-09-27 13:00:31	moonchild	looks like you need to link in a library
2014-09-27 13:00:32		jfe (~jfe@32.213.234.8) has quit (Quit: away)
2014-09-27 13:01:10	AnotherSentry	undefined reference to `YAML::LoadFile(std::string const&)'| I have added the include tag
2014-09-27 13:01:22		Orion] (~nname@unaffiliated/orion/x-3970838) has joined ##c++
2014-09-27 13:02:56		deanrock0 (~deanrock0@cpe-77.38.57.189.cable.t-1.si) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-09-27 13:04:51		Plasmastar (Plasma@unaffiliated/plasmastar) has quit (Ping timeout: 260 seconds)
2014-09-27 13:05:16		linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:484b:2acd:e5f3:5eb2) has joined ##c++
2014-09-27 13:06:12		AnotherSentry (~AnotherSe@cpc2-hers4-2-0-cust10.6-3.cable.virginm.net) has quit (Quit: leaving)
2014-09-27 13:06:52		b1rkh0ff (~b1rkh0ff@31.176.183.160) has quit (Quit: Leaving)
2014-09-27 13:09:00		Anodl (~Anodl@p5DC5A214.dip0.t-ipconnect.de) has joined ##c++
2014-09-27 13:09:06		GGMethos (~methos@2a02:418:6a04:178:209:40:77:1) has joined ##c++
2014-09-27 13:10:25		vl4kn0 (~vl4kn0@bband-dyn226.178-41-73.t-com.sk) has joined ##c++
2014-09-27 13:11:16		hellangel7 (~hellangel@117.192.167.145) has joined ##c++
2014-09-27 13:12:03		Haix64 (~Haix64@gateway/tor-sasl/haix64) has joined ##c++
2014-09-27 13:12:27		hellangel7 (~hellangel@117.192.167.145) has quit (Max SendQ exceeded)
2014-09-27 13:13:00		hellangel7 (~hellangel@117.192.167.145) has joined ##c++
2014-09-27 13:13:41		bitlord (~bitlord@unaffiliated/bitlord) has quit (Quit: bitlord)
2014-09-27 13:13:57	seishun	so what's the point of having uint32_t etc if they're not portable anyway?
2014-09-27 13:14:15	seishun	I might as well just use int since it's 32-bit on all sane platforms
2014-09-27 13:14:40	hs_	it it exists it is guaranteed to be 32 bits
2014-09-27 13:14:43		lh_mouse (~lh_mouse@61.171.68.230) has quit (Read error: Connection reset by peer)
2014-09-27 13:15:30		hellangel7 (~hellangel@117.192.167.145) has quit (Max SendQ exceeded)
2014-09-27 13:16:06		hellangel7 (~hellangel@117.192.167.145) has joined ##c++
2014-09-27 13:16:51	seishun	static_assert(sizeof(int) == 4) // here, guaranteed now
2014-09-27 13:17:31	K-ballo	seishun: you have guaranteed that int is the size of 4 bytes, but how long is a byte?
2014-09-27 13:17:33	hs_	seems orthogonal to the issue
2014-09-27 13:17:50	hs_	you would use it when you need a 32 bit object
2014-09-27 13:18:04	hs_	you rarely need a 32 bit object, so you probably shouldn't use it often
2014-09-27 13:18:08	K-ballo	{ static_assert(sizeof(int) * CHAR_BIT == 32, "woa"); }
2014-09-27 13:18:09	geordi	<no output>
2014-09-27 13:18:26		hellangel7 (~hellangel@117.192.167.145) has quit (Max SendQ exceeded)
2014-09-27 13:18:40	moonchild	if anyone here is running a redhat derivative, could you run a 'find /usr/include -type f | xargs grep AT_FDCDW' for me?
2014-09-27 13:18:57		hellangel7 (~hellangel@117.192.167.145) has joined ##c++
2014-09-27 13:19:12	hs_	but if, e.g., you had to copy a stupid buffer to a stupid GPU and make sure the stupid thing is aligned properly etc etc you would want a guarantee on your type's width
2014-09-27 13:19:32		MulleDK19 (~MulleDK19@0120000080.0.fullrate.dk) has quit (Read error: Connection reset by peer)
2014-09-27 13:19:57		Haix64 (~Haix64@gateway/tor-sasl/haix64) has quit (Quit: Leaving)
2014-09-27 13:20:17	seishun	K-ballo's snippet gives that guarantee
2014-09-27 13:21:03	hs_	ok, then suppose the assert fails
2014-09-27 13:21:04		Lowl3v3l (~Lowl3v3l@f053090037.adsl.alicedsl.de) has joined ##c++
2014-09-27 13:21:14	hs_	and you ahve to figure out what to change in your code.. but everything just says "int"
2014-09-27 13:21:28		hellangel7 (~hellangel@117.192.167.145) has quit (Max SendQ exceeded)
2014-09-27 13:21:33	hs_	at least with the typedef you can signal something like the requirements on the object
2014-09-27 13:21:33		plitter (~plitter@84.48.49.52) has quit (Read error: Connection reset by peer)
2014-09-27 13:21:47		MulleDK19 (~MulleDK19@0120000080.0.fullrate.dk) has joined ##c++
2014-09-27 13:22:01		hellangel7 (~hellangel@117.192.167.145) has joined ##c++
2014-09-27 13:22:52		plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-09-27 13:23:39	seishun	so what would you do if you used int32_t and it doesn't compile because it doesn't exist?
2014-09-27 13:24:13	K-ballo	you obviously can't do anything, or you wouldn't have used int32_t otherwise
2014-09-27 13:24:20	hs_	it shouldn't compile because your program has a precondition that isn't satisfied
2014-09-27 13:24:40		hellangel7 (~hellangel@117.192.167.145) has quit (Max SendQ exceeded)
2014-09-27 13:25:09		hellangel7 (~hellangel@117.192.167.145) has joined ##c++
2014-09-27 13:27:37		hellangel7 (~hellangel@117.192.167.145) has quit (Max SendQ exceeded)
2014-09-27 13:27:57	hs_	K-ballo, I have a nice msvc bug for you
2014-09-27 13:28:06		Luker (~Luker@codepedia.eu) has joined ##c++
2014-09-27 13:28:07		hellangel7 (~hellangel@117.192.167.145) has joined ##c++
2014-09-27 13:28:11		MutSbeta (~user@128-68-152-12.broadband.corbina.ru) has quit (Quit: Leaving.)
2014-09-27 13:28:12	Cyp______	{ static_assert(sizeof(long) * CHAR_BIT == 64, "woa"); }
2014-09-27 13:28:12	geordi	<no output>
2014-09-27 13:28:20		ALLAH666 (~chatzilla@cpe-23-240-223-21.socal.res.rr.com) has quit (Ping timeout: 246 seconds)
2014-09-27 13:28:38		Apocalypse (~Apocalyps@unaffiliated/apocalypse) has quit (Ping timeout: 245 seconds)
2014-09-27 13:28:42	K-ballo	hs_: why am I not surprised... shoot
2014-09-27 13:28:47	hs_	https://ideone.com/3ruGgZ
2014-09-27 13:28:55	hs_	msvc output: ctor dtor dtor
2014-09-27 13:29:12		Apocalypse (~Apocalyps@unaffiliated/apocalypse) has joined ##c++
2014-09-27 13:29:53		wto (~wto@h-141-69.a336.priv.bahnhof.se) has quit (Ping timeout: 245 seconds)
2014-09-27 13:30:01	hs_	it dtors the A within foo(), and also again in main
2014-09-27 13:30:09	K-ballo	... no way
2014-09-27 13:30:32		hellangel7 (~hellangel@117.192.167.145) has quit (Max SendQ exceeded)
2014-09-27 13:30:48	hs_	only happens if the parameter is aggregate initialized
2014-09-27 13:30:56	K-ballo	hs_: wow this is really bad... have you reported it?
2014-09-27 13:30:58	hs_	and is accepted by value
2014-09-27 13:31:00	hs_	yeah
2014-09-27 13:31:06		hellangel7 (~hellangel@117.192.167.145) has joined ##c++
2014-09-27 13:31:13	M-ou-se	hs_: does it trigger any move or copy constructor?
2014-09-27 13:31:17	M-ou-se	(in msvc)
2014-09-27 13:31:24	K-ballo	nope...
2014-09-27 13:31:26	K-ballo	hs_: link?
2014-09-27 13:32:39	hs_	M-ou-se, nope, it just calls ~A() twice
2014-09-27 13:32:44	M-ou-se	damn.
2014-09-27 13:33:01	hs_	it seems to think there was another A created =]
2014-09-27 13:33:12	hs_	it properly aggregate initializes the parameter
2014-09-27 13:33:39		hellangel7 (~hellangel@117.192.167.145) has quit (Max SendQ exceeded)
2014-09-27 13:34:07		hellangel7 (~hellangel@117.192.167.145) has joined ##c++
2014-09-27 13:34:10		wto (~wto@h-141-69.a336.priv.bahnhof.se) has joined ##c++
2014-09-27 13:34:24	hs_	it hit me yesterday too because I changed a foo(A const&) to a foo(A)
2014-09-27 13:36:34		HaltingState (~HaltingSt@unaffiliated/haltingstate) has joined ##c++
2014-09-27 13:36:43		hellangel7 (~hellangel@117.192.167.145) has quit (Max SendQ exceeded)
2014-09-27 13:36:51		zap0 (~moofy@123-243-103-30.static.tpgi.com.au) has quit (*.net *.split)
2014-09-27 13:36:51		ambro718 (~ambro@gentoo/contributor/ambro718) has quit (*.net *.split)
2014-09-27 13:36:51		chewyDelicious (~nooblet@124-197-49-156.callplus.net.nz) has quit (*.net *.split)
2014-09-27 13:36:51		Yepoleb (~quassel@178-191-131-7.adsl.highway.telekom.at) has quit (*.net *.split)
2014-09-27 13:36:51		timj1 (~timj@p5DDB19CA.dip0.t-ipconnect.de) has quit (*.net *.split)
2014-09-27 13:36:51		hachidorii (~hachidori@96.247.57.41) has quit (*.net *.split)
2014-09-27 13:36:51		boxofrox (~charetjc@173-165-40-181-Illinois.hfc.comcastbusiness.net) has quit (*.net *.split)
2014-09-27 13:36:51		lifenoodles (~lifenoodl@89.100.81.192) has quit (*.net *.split)
2014-09-27 13:36:51		urlgrabber (~urlgrabbe@li450-145.members.linode.com) has quit (*.net *.split)
2014-09-27 13:36:51		Irrelium (~Irrelium@71.19.153.241) has quit (*.net *.split)
2014-09-27 13:36:51		Svetlana (quasselcor@freenode/staff/gry) has quit (*.net *.split)
2014-09-27 13:36:51		soulz (~soulz@c-1ff770d5.01-275-67626721.cust.bredbandsbolaget.se) has quit (*.net *.split)
2014-09-27 13:36:51		unreal (~unreal@unaffiliated/unreal) has quit (*.net *.split)
2014-09-27 13:36:51		syncrow (syncrow@unaffiliated/syncrow) has quit (*.net *.split)
2014-09-27 13:36:51		agile (~v@whilecoding.com) has quit (*.net *.split)
2014-09-27 13:36:51		coty91 (~coty91@cotyrothery.com) has quit (*.net *.split)
2014-09-27 13:36:51		zackthehuman (~zmulgrew@dagmar1.corp.linkedin.com) has quit (*.net *.split)
2014-09-27 13:36:51		tazle (tazle@kapsi.fi) has quit (*.net *.split)
2014-09-27 13:36:51		mwehner (~martin@184-100-134-25.ptld.qwest.net) has quit (*.net *.split)
2014-09-27 13:36:52		jpleau (~teppei@unaffiliated/oxez) has quit (*.net *.split)
2014-09-27 13:36:52		ineb (~ineb@i5DB518AE.pool.tripleplugandplay.com) has quit (*.net *.split)
2014-09-27 13:36:52		ciaranm (~ciaranm@paludis/shiny-hat-wearer/ciaranm) has quit (*.net *.split)
2014-09-27 13:36:52		dostoyevsky (~sck@n096h062.rs.de.inter.net) has quit (*.net *.split)
2014-09-27 13:36:52		milleja46 (~quassel@projecthq.biz) has quit (*.net *.split)
2014-09-27 13:36:52		alcedine (lippinj1@gateway/shell/tkk.fi/x-uwuqfpatmphkiiau) has quit (*.net *.split)
2014-09-27 13:36:52		raypulver (~sal@192.184.84.79) has quit (*.net *.split)
2014-09-27 13:36:52		woodgiraffe (~woodgiraf@109.201.154.133) has quit (*.net *.split)
2014-09-27 13:36:52		Rylee (rylee@unaffiliated/rylai) has quit (*.net *.split)
2014-09-27 13:36:52		m0shbear (~011899988@servbox.moshbear.net) has quit (*.net *.split)
2014-09-27 13:36:52		wickedmic (~wickedmic@obiwahn.org) has quit (*.net *.split)
2014-09-27 13:36:52		ahuemer (ahuemer@unaffiliated/ahuemer) has quit (*.net *.split)
2014-09-27 13:36:52		anunnaki (~anunnaki@unaffiliated/anunnaki) has quit (*.net *.split)
2014-09-27 13:36:52		mads- (~mfrstar@eridanus.whatbox.ca) has quit (*.net *.split)
2014-09-27 13:36:52		salamanderrake (~quassel@v-72-5-195-78.unman-vds.internap-chicago.nfoservers.com) has quit (*.net *.split)
2014-09-27 13:36:52		gaqwas (~tubi_ga@195.37.61.177) has quit (*.net *.split)
2014-09-27 13:36:52		npaperbot (~npaperbot@dodecahedron.m-ou.se) has quit (*.net *.split)
2014-09-27 13:36:52		pippijn (~pippijn@unixcorps/staff/pippijn) has quit (*.net *.split)
2014-09-27 13:36:52		teklol (~anon@unaffiliated/teklol) has quit (*.net *.split)
2014-09-27 13:36:53		dexter0 (~dexter0@c-76-126-188-206.hsd1.ca.comcast.net) has quit (*.net *.split)
2014-09-27 13:36:53		gabor-meszaros (~gabor-mes@li500-89.members.linode.com) has quit (*.net *.split)
2014-09-27 13:36:53		dfletcher (~dfletcher@drupal.org/user/72475/view) has quit (*.net *.split)
2014-09-27 13:37:03		Anoniem4l (~Anoniem4l@unaffiliated/anoniem4l) has quit (Max SendQ exceeded)
2014-09-27 13:37:17		hellangel7 (~hellangel@117.192.167.145) has joined ##c++
2014-09-27 13:37:25		Anoniem4l (~Anoniem4l@unaffiliated/anoniem4l) has joined ##c++
2014-09-27 13:38:41		scai (~scai@p4FF0FC13.dip0.t-ipconnect.de) has joined ##c++
2014-09-27 13:38:52		kurahaupo (~kurahaupo@118.148.171.26) has joined ##c++
2014-09-27 13:40:00		hellangel7 (~hellangel@117.192.167.145) has quit (Max SendQ exceeded)
2014-09-27 13:40:30		hellangel7 (~hellangel@117.192.167.145) has joined ##c++
2014-09-27 13:41:03		Anodl (~Anodl@p5DC5A214.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-09-27 13:41:40		hellangel7 (~hellangel@117.192.167.145) has quit (Max SendQ exceeded)
2014-09-27 13:42:09		Chilledheart (~chilledhe@111.204.253.124) has joined ##c++
2014-09-27 13:42:31		Chilledheart (~chilledhe@111.204.253.124) has quit (Client Quit)
2014-09-27 13:43:54		hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-09-27 13:46:05		zap0 (~moofy@123-243-103-30.static.tpgi.com.au) has joined ##c++
2014-09-27 13:46:05		timj1 (~timj@p5DDB19CA.dip0.t-ipconnect.de) has joined ##c++
2014-09-27 13:46:05		ambro718 (~ambro@gentoo/contributor/ambro718) has joined ##c++
2014-09-27 13:46:05		chewyDelicious (~nooblet@124-197-49-156.callplus.net.nz) has joined ##c++
2014-09-27 13:46:05		Yepoleb (~quassel@178-191-131-7.adsl.highway.telekom.at) has joined ##c++
2014-09-27 13:46:05		hachidorii (~hachidori@96.247.57.41) has joined ##c++
2014-09-27 13:46:05		boxofrox (~charetjc@173-165-40-181-Illinois.hfc.comcastbusiness.net) has joined ##c++
2014-09-27 13:46:05		mwehner (~martin@184-100-134-25.ptld.qwest.net) has joined ##c++
2014-09-27 13:46:05		lifenoodles (~lifenoodl@89.100.81.192) has joined ##c++
2014-09-27 13:46:05		urlgrabber (~urlgrabbe@li450-145.members.linode.com) has joined ##c++
2014-09-27 13:46:05		Svetlana (quasselcor@freenode/staff/gry) has joined ##c++
2014-09-27 13:46:05		soulz (~soulz@c-1ff770d5.01-275-67626721.cust.bredbandsbolaget.se) has joined ##c++
2014-09-27 13:46:05		unreal (~unreal@unaffiliated/unreal) has joined ##c++
2014-09-27 13:46:05		agile (~v@whilecoding.com) has joined ##c++
2014-09-27 13:46:05		raypulver (~sal@192.184.84.79) has joined ##c++
2014-09-27 13:46:05		ciaranm (~ciaranm@paludis/shiny-hat-wearer/ciaranm) has joined ##c++
2014-09-27 13:46:05		coty91 (~coty91@cotyrothery.com) has joined ##c++
2014-09-27 13:46:05		zackthehuman (~zmulgrew@dagmar1.corp.linkedin.com) has joined ##c++
2014-09-27 13:46:05		tazle (tazle@kapsi.fi) has joined ##c++
2014-09-27 13:46:05		jpleau (~teppei@unaffiliated/oxez) has joined ##c++
2014-09-27 13:46:05		ineb (~ineb@i5DB518AE.pool.tripleplugandplay.com) has joined ##c++
2014-09-27 13:46:05		gaqwas (~tubi_ga@195.37.61.177) has joined ##c++
2014-09-27 13:46:05		dostoyevsky (~sck@n096h062.rs.de.inter.net) has joined ##c++
2014-09-27 13:46:05		alcedine (lippinj1@gateway/shell/tkk.fi/x-uwuqfpatmphkiiau) has joined ##c++
2014-09-27 13:46:05		milleja46 (~quassel@projecthq.biz) has joined ##c++
2014-09-27 13:46:05		salamanderrake (~quassel@v-72-5-195-78.unman-vds.internap-chicago.nfoservers.com) has joined ##c++
2014-09-27 13:46:05		woodgiraffe (~woodgiraf@109.201.154.133) has joined ##c++
2014-09-27 13:46:05		Rylee (rylee@unaffiliated/rylai) has joined ##c++
2014-09-27 13:46:05		m0shbear (~011899988@servbox.moshbear.net) has joined ##c++
2014-09-27 13:46:05		wickedmic (~wickedmic@obiwahn.org) has joined ##c++
2014-09-27 13:46:06		ahuemer (ahuemer@unaffiliated/ahuemer) has joined ##c++
2014-09-27 13:46:06		anunnaki (~anunnaki@unaffiliated/anunnaki) has joined ##c++
2014-09-27 13:46:06		mads- (~mfrstar@eridanus.whatbox.ca) has joined ##c++
2014-09-27 13:46:06		dexter0 (~dexter0@c-76-126-188-206.hsd1.ca.comcast.net) has joined ##c++
2014-09-27 13:46:06		pippijn (~pippijn@unixcorps/staff/pippijn) has joined ##c++
2014-09-27 13:46:06		gabor-meszaros (~gabor-mes@li500-89.members.linode.com) has joined ##c++
2014-09-27 13:46:06		npaperbot (~npaperbot@dodecahedron.m-ou.se) has joined ##c++
2014-09-27 13:46:06		teklol (~anon@unaffiliated/teklol) has joined ##c++
2014-09-27 13:46:06		dfletcher (~dfletcher@drupal.org/user/72475/view) has joined ##c++
2014-09-27 13:46:48		JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-09-27 13:48:20		Kelsie (~Kelsie@unaffiliated/kelsie) has joined ##c++
2014-09-27 13:49:23		Haix64 (~Haix64@gateway/tor-sasl/haix64) has joined ##c++
2014-09-27 13:49:29		Alex11223 (~Alex11223@78-56-60-143.static.zebra.lt) has joined ##c++
2014-09-27 13:49:48		Kelsie|2 (~Kelsie@unaffiliated/kelsie) has quit (Ping timeout: 245 seconds)
2014-09-27 13:50:27	Alex11223	How should I refactor this method https://gist.github.com/Alex11223/36666952e718db58fb8b ? or similar  https://gist.github.com/Alex11223/98853f840db1ce68423f or a bit different https://gist.github.com/Alex11223/269cdf66b0a3369b5300
2014-09-27 13:50:27	Alex11223	The problem is that there are a lot of execution paths because of returns, throw Exception, break/continue, and each time I need to release all resources.
2014-09-27 13:50:27	Alex11223	C# or Java has try-finally for something like this but here I am a bit confused with RAII.
2014-09-27 13:50:34	Alex11223	I use RAII in constructor and destructor of my class for CoInitialize, WMI connection creation, etc., like here https://github.com/MKisilyov/MoreReports/blob/master/src/Win32/MoreReports/CHardwareFactory.cpp
2014-09-27 13:50:43	Alex11223	But how should I use it in these methods? First of all they are not objects but WinApi handles (CreateFile/CloseHandle), COM objects (with release() method). Creating wrapper classes for each of these things seems to complicated and boring
2014-09-27 13:51:56	RlyDontKnow	write a small scopedrelease that stores the T* and calls Release on it in it's dtor for example
2014-09-27 13:52:13		madist (madist@unaffiliated/madist) has quit (Quit: Leaving)
2014-09-27 13:52:59	Alex11223	can you show some example?
2014-09-27 13:53:28	--	irc: disconnected from server
2014-09-27 19:42:34		dagnachew (~dagnachew@bas1-montreal30-2925417210.dsl.bell.ca) has joined ##c++
2014-09-27 19:42:34	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-27 19:42:34	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-27 19:42:34	--	Channel ##c++: 455 nicks (0 ops, 0 voices, 455 normals)
2014-09-27 19:42:34	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-27 19:42:41		Rudolf (~rodolfo@unaffiliated/rudolf) has quit (Quit: [IRSSI])
2014-09-27 19:42:43	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-27 19:42:51	hs_	scpayson, what is m_ptr?
2014-09-27 19:43:01		Yoofie (~chatzilla@107-147-214-101.res.bhn.net) has joined ##c++
2014-09-27 19:45:26		syncrow (syncrow@unaffiliated/syncrow) has quit (Quit: leaving)
2014-09-27 19:46:26		Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-09-27 19:47:43		ac_slater (~weechat@96.237.110.242) has quit (Quit: WeeChat 0.4.3)
2014-09-27 19:47:46	hs_	scpayson, but std::move(t) will turn t into an rvalue no matter what, so if Bar<T> has a constructor that accepts T&& it should move construct
2014-09-27 19:48:13		ac_slater (~Adium@96.237.110.242) has joined ##c++
2014-09-27 19:48:37		W0rmDr1nk (~WormDrink@unaffiliated/wormdrink) has quit (Ping timeout: 258 seconds)
2014-09-27 19:49:07	tsimpson	the T in Foo(T&&) may well be a reference type
2014-09-27 19:49:10	hs_	well, let me rephrase that.. it will try Bar<T>(T&&), but that might not be a move constructor of the form Bar<T>(Bar<T>&&)
2014-09-27 19:49:45		deekej (~deekej@195.65.3.245) has quit (Quit: See ya! Bye!)
2014-09-27 19:50:02		deekej (~deekej@195.65.3.245) has joined ##c++
2014-09-27 19:50:53	hs_	tsimpson, it is deduced as T or T&, but std::move does remove_reference and then casts as && (unless I am missing something..)
2014-09-27 19:50:59		W0rmDr1nk (~WormDrink@unaffiliated/wormdrink) has joined ##c++
2014-09-27 19:51:36	hs_	oh, but you might get Bar<T&>..
2014-09-27 19:51:38	hs_	is that your point?
2014-09-27 19:51:39	tsimpson	hs_: yes, but T could be some const U&, and the result of std::move on that is const U&&
2014-09-27 19:51:50	tsimpson	that's also a problem, yes
2014-09-27 19:51:55		deekej (~deekej@195.65.3.245) has quit (Client Quit)
2014-09-27 19:52:11		deekej (~deekej@195.65.3.245) has joined ##c++
2014-09-27 19:52:42	hs_	how could T be const U&?
2014-09-27 19:53:22	hs_	oh nm
2014-09-27 19:53:38	hs_	I see what you mean
2014-09-27 19:53:40	hs_	yes
2014-09-27 19:55:21		deekej (~deekej@195.65.3.245) has quit (Client Quit)
2014-09-27 19:55:31		Burga (~andrewm@58-6-219-7.dyn.iinet.net.au) has joined ##c++
2014-09-27 19:55:37		deekej (~deekej@195.65.3.245) has joined ##c++
2014-09-27 19:58:48		gelignite (~gelignite@i5387A080.versanet.de) has quit (Quit: http://bit.ly/nkczDT)
2014-09-27 19:59:14		fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-09-27 19:59:36		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-09-27 20:00:09		Petskull (~Petskull@pool-173-66-213-141.washdc.fios.verizon.net) has joined ##c++
2014-09-27 20:02:31		Gluesticky (~nobody@unaffiliated/gluesticky) has quit (Ping timeout: 244 seconds)
2014-09-27 20:03:24	o]	hs_: have you heard about universal references?
2014-09-27 20:03:49	K-ballo	the trend is to call them "forwarding references" now
2014-09-27 20:03:53	o]	yeah
2014-09-27 20:04:00	o]	scpayson: use std::forward
2014-09-27 20:04:10	hs_	o], no what's that?
2014-09-27 20:04:18	K-ballo	can't say I like either, but forward seems less wrong than universal
2014-09-27 20:04:20	hs_	=p
2014-09-27 20:04:57	o]	scpayson: FTFY  `template <typename T> Foo(T &&t) : ptr(std::make_unique<Bar<T>>(std::forward(t))) {}`  // m_ prefixes are lame
2014-09-27 20:05:19	o]	K-ballo: universal because then CATCH EVERYTHING :)
2014-09-27 20:05:32		IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has joined ##c++
2014-09-27 20:05:46	cbreak	forward needs <T>
2014-09-27 20:06:06	o]	even with only one arg? interesting
2014-09-27 20:06:11	cbreak	hmm...
2014-09-27 20:06:14	cbreak	o]: I think so
2014-09-27 20:06:16	Petskull	I have literally spend all day trying to compile a Hello World..  MSVC2013, clean install of Win7 SP1, I just installed the Windows SDK.  I keep getting errors of not finding SDKDDKVer.h, kernel32.lib, and rc.exe.  The first 2 are killed when I add the relevant folders to Project Right Click->Properties->Configuration Properties->VC++ Directories.  When I add rc.exe and rcdll.dll to an include folder, the build then errors
2014-09-27 20:06:17	Petskull	with 'unable to run <the path>\rc.exe'  Do I have some sort of systemic problem?  Am I missing something obvious?
2014-09-27 20:06:18	K-ballo	o]: yeah, except they don't
2014-09-27 20:06:27	hs_	it can't deduce the forwarding type from t
2014-09-27 20:06:33	o]	K-ballo: they don't? they are HUNGRY
2014-09-27 20:06:44	Petskull	I doubt hack after hack is the standard use case of msvs..
2014-09-27 20:06:48	cbreak	Petskull: no idea about your windows mumbo jumbo, but careful with backslashes
2014-09-27 20:06:49	o]	!give Petskull ot Windows SDK
2014-09-27 20:06:50	nolyc	Petskull: Standard C++ has no notion of `Windows SDK', so you must be talking about some specific OS- or library API (or tool), which is beyond the scope of this channel (which focuses on standard C++).
2014-09-27 20:06:58	cbreak	Petskull: in C++, \r is an escape sequence
2014-09-27 20:07:24		Jesin (~Jesin@Dyn157182.cc.lehigh.edu) has quit (Ping timeout: 258 seconds)
2014-09-27 20:07:25	cbreak	Petskull: just use / like everyone else.
2014-09-27 20:07:34	Petskull	let's try a simple hello world with <iosteam> then..
2014-09-27 20:07:40		jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has joined ##c++
2014-09-27 20:08:05	Petskull	believe me, I'm a *nix coder and it is worlds easier- I'm just trying to find 'the windows way'
2014-09-27 20:08:06	K-ballo	perfect forwarding is full of corner cases, T&& with a deducible T is neither perfect nor universal
2014-09-27 20:08:11	det	scpayson, I dont think that T && t means what you think it means
2014-09-27 20:08:32		deekej (~deekej@195.65.3.245) has quit (Quit: See ya! Bye!)
2014-09-27 20:08:49		deekej (~deekej@195.65.3.245) has joined ##c++
2014-09-27 20:08:59	Petskull	I don't think any of my issues have to do with backslashes, though.  I'm quoting the build errors from the IDE
2014-09-27 20:10:17	scpayson	cbreak: My actual code has <T>, I just forgot it while transcribing
2014-09-27 20:10:27	scpayson	but yes, it does need the argument
2014-09-27 20:10:57	--	scpayson is now known as m_scpayson
2014-09-27 20:11:15	m_scpayson	o]: Thanks for the contribution
2014-09-27 20:11:23	det	scpayson, your code accepts both rvalues and lvalues, but you are unconditionally using move, either you mean to only accept rvalues, and you need to rewrite your function, or you should be using forward
2014-09-27 20:11:59	--	m_scpayson is now known as scpayson
2014-09-27 20:12:01		deekej (~deekej@195.65.3.245) has quit (Client Quit)
2014-09-27 20:12:14	scpayson	oh damn it all
2014-09-27 20:12:18		deekej (~deekej@195.65.3.245) has joined ##c++
2014-09-27 20:12:21	scpayson	o]: you transcribed my code wrong
2014-09-27 20:12:23	scpayson	I used move, not forward
2014-09-27 20:12:33	scpayson	ignore his version
2014-09-27 20:12:43	Petskull	look when I use only iostream:
2014-09-27 20:12:45	Petskull	1>d:\code\testcode\helloworld\helloconsoleapplication1\helloconsoleapplication1\helloconsoleapplication1.cpp(4): warning C4627: '#include <iostream>': skipped when looking for precompiled header use
2014-09-27 20:12:45	Petskull	Add directive to 'stdafx.h' or rebuild precompiled header
2014-09-27 20:12:45	Petskull	1>d:\code\testcode\helloworld\helloconsoleapplication1\helloconsoleapplication1\helloconsoleapplication1.cpp(14): fatal error C1010: unexpected end of file while looking for precompiled header. Did you forget to add '#include "stdafx.h"' to your source?
2014-09-27 20:13:14		w41 (~w41@unaffiliated/w41) has quit (Quit: leaving)
2014-09-27 20:13:16	scpayson	Original m_msg: Anyone know why a constructor that looks like `template <typename T> Foo(T &&t) : m_ptr(std::make_unique<Bar<T>>(std::move(t))) {}` would ever _not_ call the move constructor, if I know Bar<T> has a move constructor?
2014-09-27 20:13:28		w41 (~w41@unaffiliated/w41) has joined ##c++
2014-09-27 20:13:44	hs_	scpayson, see above
2014-09-27 20:14:21	det	scpayson, are you looking for an answer despite the fact that that code is most likely broken ?
2014-09-27 20:14:22		WormDrink (~wormdrink@unaffiliated/wormdrink) has joined ##c++
2014-09-27 20:14:49		Jesin (~Jesin@Dyn157182.cc.lehigh.edu) has joined ##c++
2014-09-27 20:15:07	scpayson	oh I missed the comment explaining why forward was in it -- yes, I'd like to know why
2014-09-27 20:15:10	scpayson	not how to fix
2014-09-27 20:15:22	scpayson	i.e. so I can not make this mistake again because I understand why it happens
2014-09-27 20:16:36	det	It's most important to understand why you should not be using std::move there
2014-09-27 20:17:02	tsimpson	shouldn't you be accepting Bar<T>&& instead of T&& anyway, if you want to invoke the move ctor of Bar<T>?
2014-09-27 20:17:04	scpayson	I see that now. T is being deduced, so it could be a const T &
2014-09-27 20:17:16	det	scpayson, yes
2014-09-27 20:17:28	scpayson	I want to invoke Bar<T>::Bar(T &&t)
2014-09-27 20:17:46	det	but it could also be "T &", which you probably dont want to call std::move on
2014-09-27 20:17:48	hs_	that's not a move constructor
2014-09-27 20:17:51	tsimpson	then you want some more template magic to restrict the valid set for T
2014-09-27 20:18:00	hs_	you mean Bar<T>(Bar<T>&&)
2014-09-27 20:18:25		yates (~user@nc-67-232-24-49.dhcp.embarqhsd.net) has joined ##c++
2014-09-27 20:18:28	scpayson	hs_: are you actually asking if that's what I meant? Or are you correcting me somehow?
2014-09-27 20:19:02	yates	is there a way to get the derived class's name or identifying information from inside a base class member function?
2014-09-27 20:19:23	scpayson	that aside, I see the issue. It's not the same as ConcreteType&&. So, I guess now I want to ask: "how to I ensure that `T &&t` is a rvalue reference?"
2014-09-27 20:19:42	det	scpayson, enable_if + traits
2014-09-27 20:19:43	hs_	scpayson, I am actually telling you actually that Bar<T>::Bar(T&&) is not a move constructor
2014-09-27 20:19:47	det	scpayson, its ugly
2014-09-27 20:20:09	det	scpayson, but a better question is why you want this restriction
2014-09-27 20:20:11	cult-	isn't there compiler flag or standard to be able to avoid the definitions of static variables in cpp file?
2014-09-27 20:20:18	tsimpson	you actually want to ensure T is *not* an rvalue reference
2014-09-27 20:20:32	hs_	how do you construct an object with an unknown rvalue type?
2014-09-27 20:20:50	scpayson	it is parameterised by the type. It is not unknown at instantiation.
2014-09-27 20:20:55	tsimpson	it's reminding me of type erasure
2014-09-27 20:20:55	o]	lol
2014-09-27 20:20:57	scpayson	or am I misunderstanding?
2014-09-27 20:21:09	scpayson	I'm doing type erasure
2014-09-27 20:21:26	scpayson	or you could look at what I'm doing that way
2014-09-27 20:21:30	det	scpayson, typically in your pattern you want to accept both lvalues and rvalues and use forward
2014-09-27 20:21:59	scpayson	ah yes, so having my (const T &) constructors is pointless, because they'll just be forwarded properly
2014-09-27 20:22:09	o]	this is a classical xy problem :)
2014-09-27 20:22:12	scpayson	but if T was concrete, this would be a different story. Ok, this makes sense
2014-09-27 20:22:19		LunarJetman (LunarJetma@05400825.skybroadband.com) has quit (Quit: LunarJetman)
2014-09-27 20:22:26	det	!xy
2014-09-27 20:22:27	nolyc	You're trying to do X, and you thought of solution Y. So you're asking about solution Y, without even mentioning X. The problem is, there might be a better solution, but we can't know that unless you describe what X is.
2014-09-27 20:22:41	scpayson	o]: Only the spinoff stuff was x/y-ish. hs_ is trying to guess the X for my Y, but I just want Y
2014-09-27 20:22:44	scpayson	and I got it
2014-09-27 20:23:16		surd (~surd@unaffiliated/surd) has joined ##c++
2014-09-27 20:23:28	o]	awesome
2014-09-27 20:23:28	o]	!next
2014-09-27 20:23:30	nolyc	Another satisfied customer, next!
2014-09-27 20:23:58		scpayson (~scp@50.247.71.22) has left ##c++
2014-09-27 20:24:29		sohail (~user@unaffiliated/sohail) has quit (Ping timeout: 260 seconds)
2014-09-27 20:26:36		phax (~phax@unaffiliated/phax) has joined ##c++
2014-09-27 20:28:14		cbot` (~FS@ool-4355a0bf.dyn.optonline.net) has quit (Ping timeout: 260 seconds)
2014-09-27 20:28:57		deekej (~deekej@195.65.3.245) has quit (Quit: See ya! Bye!)
2014-09-27 20:29:14		deekej (~deekej@195.65.3.245) has joined ##c++
2014-09-27 20:29:51		NSA_Mio-chan (~Mio-chan@unaffiliated/mio-chan) has joined ##c++
2014-09-27 20:30:03		Garner (uid38417@gateway/web/irccloud.com/x-ngmxhooxcnwplqtd) has quit (Quit: Connection closed for inactivity)
2014-09-27 20:30:36		Mio-chan (~Mio-chan@unaffiliated/mio-chan) has quit (Ping timeout: 272 seconds)
2014-09-27 20:31:14		NSA_Mio-chan (~Mio-chan@unaffiliated/mio-chan) has quit (Remote host closed the connection)
2014-09-27 20:31:33		Mio-chan (~Mio-chan@unaffiliated/mio-chan) has joined ##c++
2014-09-27 20:31:53		only_the_bear (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has quit (Remote host closed the connection)
2014-09-27 20:32:17		only_the_bear (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has joined ##c++
2014-09-27 20:33:05		kurahaupo1 (~Kurahaupo@202.239.252.27.dyn.cust.vf.net.nz) has joined ##c++
2014-09-27 20:34:55		surd (~surd@unaffiliated/surd) has quit (Ping timeout: 245 seconds)
2014-09-27 20:35:50		immibis (~ChatZill1@122-59-227-101.jetstream.xtra.co.nz) has joined ##c++
2014-09-27 20:36:55	ApEk	why is this allowed? i just want to pay for what i use. http://coliru.stacked-crooked.com/a/77cd63580d42c87f
2014-09-27 20:37:02	ApEk	tldr; msvc preallocates in standard containers and why is this allowed by the standard
2014-09-27 20:38:56		deekej_ (~deekej@195.65.3.245) has joined ##c++
2014-09-27 20:38:58	K-ballo	ApEk: it is allowed because why wouldn't it be, and in the case of msvc what you are seeing is the allocation of the "end" node
2014-09-27 20:39:36		sohail (~user@unaffiliated/sohail) has joined ##c++
2014-09-27 20:39:44		deekej (~deekej@195.65.3.245) has quit (Read error: Connection reset by peer)
2014-09-27 20:39:51		Olipro (~Olipro@uncyclopedia/pdpc.21for7.olipro) has joined ##c++
2014-09-28 07:51:29		dagnachew (~dagnachew@bas1-montreal30-2925417210.dsl.bell.ca) has joined ##c++
2014-09-28 07:51:29	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-28 07:51:29	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-28 07:51:29	--	Channel ##c++: 463 nicks (0 ops, 0 voices, 463 normals)
2014-09-28 07:51:29	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-28 07:51:38	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-28 07:53:08		Haswell (~Haswell@unaffiliated/haswell) has quit (Ping timeout: 250 seconds)
2014-09-28 07:54:19		K3|Chris (~ChrisK3@unaffiliated/krill3) has joined ##c++
2014-09-28 07:54:25		Albori (~Albori@67-43-242-246.fidnet.com) has quit (Ping timeout: 250 seconds)
2014-09-28 07:54:36	RlyDontKnow	hs_: re your example from yesterday: sure that the dtor is called twice with only ctor only be called once?
2014-09-28 07:56:05		WormDrink (~wormdrink@unaffiliated/wormdrink) has quit (Ping timeout: 260 seconds)
2014-09-28 07:56:38	RlyDontKnow	it looked like it'd construct the object, then copy it for the pass-by-value, destruct the second one, then the original one
2014-09-28 07:56:52	RlyDontKnow	with ctor only being printed once because that other ctor was synthesized
2014-09-28 07:57:57		Beetny (~Beetny@14-202-48-200.tpgi.com.au) has quit (Ping timeout: 260 seconds)
2014-09-28 07:59:02	RlyDontKnow	http://rextester.com/runcode <- that was the example, wasn't it?
2014-09-28 07:59:09		fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-09-28 07:59:31		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-09-28 07:59:45		mrevil (~mrevil@2601:9:5080:948:7475:53e8:1a3e:f4f5) has joined ##c++
2014-09-28 07:59:56		Jesin (~Jesin@Dyn157182.cc.lehigh.edu) has quit (Ping timeout: 258 seconds)
2014-09-28 08:01:21	RlyDontKnow	erm, sorry, this: http://rextester.com/IFDL29557
2014-09-28 08:01:25	seishun	duncanmv: there is no such thing as typeof
2014-09-28 08:04:47		mrevil (~mrevil@2601:9:5080:948:7475:53e8:1a3e:f4f5) has quit (Ping timeout: 272 seconds)
2014-09-28 08:06:52		D0cN3x (~Thunderbi@dslb-178-007-208-092.178.007.pools.vodafone-ip.de) has joined ##c++
2014-09-28 08:07:26		Rslc (rslc@82-69-84-226.dsl.in-addr.zen.co.uk) has quit
2014-09-28 08:07:59		Furai (~Furai@static.110.94.47.78.clients.your-server.de) has quit (Remote host closed the connection)
2014-09-28 08:08:27		Furai (~Furai@static.110.94.47.78.clients.your-server.de) has joined ##c++
2014-09-28 08:09:00		Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-09-28 08:09:04		Burga (~andrewm@124-148-57-88.dyn.iinet.net.au) has quit (Ping timeout: 260 seconds)
2014-09-28 08:09:40		KAHR-Alpha (~Alpha@AReims-652-1-198-206.w86-192.abo.wanadoo.fr) has joined ##c++
2014-09-28 08:16:21		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-09-28 08:19:00		seishun (~Kakera@81.198.8.108) has quit (Ping timeout: 245 seconds)
2014-09-28 08:19:20		Haix64 (~Haix64@gateway/tor-sasl/haix64) has joined ##c++
2014-09-28 08:20:37		ctchenn (~xp@1-171-63-165.dynamic.hinet.net) has joined ##c++
2014-09-28 08:20:54	--	irc: disconnected from server
2014-09-28 21:21:59		dagnachew (~dagnachew@bas1-montreal30-2925417210.dsl.bell.ca) has joined ##c++
2014-09-28 21:21:59	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-09-28 21:21:59	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-09-28 21:21:59	--	Channel ##c++: 456 nicks (0 ops, 0 voices, 456 normals)
2014-09-28 21:21:59	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-09-28 21:22:08	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-09-28 21:22:16	jeaye	As though, for some reason, he can't perform said logic once it's in the array.
2014-09-28 21:22:41	pussygladiator	k
2014-09-28 21:22:45	pussygladiator	so ill create a temp string?
2014-09-28 21:22:49	pussygladiator	within the for loop?
2014-09-28 21:22:54		maxpeck (~a@unaffiliated/maxpeck) has joined ##c++
2014-09-28 21:23:38	pussygladiator	that is the best way to compare it?
2014-09-28 21:24:24	pussygladiator	actually
2014-09-28 21:24:41	pussygladiator	if there a way I see how many lines are in the text file?
2014-09-28 21:25:04	pussygladiator	like can I have it read through and see how many newlines there are
2014-09-28 21:25:09	pussygladiator	then tell it how many to skip
2014-09-28 21:25:49	tsimpson	yes, use ignore
2014-09-28 21:27:32	tsimpson	{ istringstream in("one\ntwo"); size_t counter=0; while(in.ignore(numeric_limits<streamsize>::max(), '\n')) { ++counter; } cout << counter; }
2014-09-28 21:27:33	geordi	2
2014-09-28 21:29:06		surd (~surd@unaffiliated/surd) has quit (Ping timeout: 272 seconds)
2014-09-28 21:30:34		nikki93 (~nikki93@nat-oitwireless-outside-vapornet3-c-188.Princeton.EDU) has joined ##c++
2014-09-28 21:31:27		glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2014-09-28 21:32:24		schleppel (~quassel@141.39.226.237) has quit (Remote host closed the connection)
2014-09-28 21:33:14		kailoAtWork (~kailoAtWo@cpe-75-83-169-163.socal.res.rr.com) has joined ##c++
2014-09-28 21:33:16		Carbonflux (~BOB@174-21-109-233.tukw.qwest.net) has joined ##c++
2014-09-28 21:35:07		Anxi80 (~Anxi80@unaffiliated/anxi80) has joined ##c++
2014-09-28 21:35:40		nikki93 (~nikki93@nat-oitwireless-outside-vapornet3-c-188.Princeton.EDU) has quit (Ping timeout: 272 seconds)
2014-09-28 21:37:24		EvergreenTree (~quassel@unaffiliated/evergreentree) has quit (Ping timeout: 260 seconds)
2014-09-28 21:38:54		Spark (spark@dog.thdo.woaf.net) has joined ##c++
2014-09-28 21:39:03	Spark	how does one initialise an array in a constructor?
2014-09-28 21:39:03	pussygladiator	actually
2014-09-28 21:39:05	pussygladiator	can I have it
2014-09-28 21:39:09	pussygladiator	nvm lol
2014-09-28 21:39:12	Spark	: foo({1,2,3}) is an error
2014-09-28 21:39:26	tsimpson	Spark: with C++11 and curly braces
2014-09-28 21:39:40	pussygladiator	can I have my input stream count line number?
2014-09-28 21:39:48	pussygladiator	like can I have it count the numbers of newlines
2014-09-28 21:39:57	pussygladiator	with a loop
2014-09-28 21:40:11	tsimpson	you could, but it'd be a lot of work
2014-09-28 21:40:25	Spark	tsimpson: it says "cannot specify explciit initializer for arrays"
2014-09-28 21:40:28	Spark	msvc
2014-09-28 21:40:59	tsimpson	{ Foo f; cout << f.a; } struct Foo { int a[4]; Foo() : a{1,2,3,4} {} };
2014-09-28 21:40:59	geordi	{1, 2, 3, 4}
2014-09-28 21:41:09	Spark	oh without the ()
2014-09-28 21:41:12	tsimpson	yes
2014-09-28 21:41:22		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 272 seconds)
2014-09-28 21:42:46	Spark	intellisense doesn't like it, but we'll see if it builds anyway...
2014-09-28 21:43:05		spagett (~spagett@unaffiliated/spagett) has quit (Remote host closed the connection)
2014-09-28 21:44:04	Spark	same error
2014-09-28 21:45:20	tsimpson	then you have the following options: skip the initialization and copy assign the the ctor body, upgrade the compiler/IDE, get a different compiler/IDE that works
2014-09-28 21:46:20		surd (~surd@unaffiliated/surd) has joined ##c++
2014-09-28 21:47:30		Lobster` (~Lobster@S010620aa4b89619f.ok.shawcable.net) has joined ##c++
2014-09-28 21:47:39	Spark	it's vs 2013
2014-09-28 21:47:48	Spark	i guess i'll just have to deal with it
2014-09-28 21:48:14	jeaye	hah
2014-09-28 21:48:15	Stryyker2	Do you have the updates installed?
2014-09-28 21:48:55	hs_	Spark, try std::array<int,4> a; and then a({1,2,3,4})
2014-09-28 21:49:01	hs_	that seems to work
2014-09-28 21:49:02	jeaye	Yeah, your "standard compliance" package seems a few years old.
2014-09-28 21:49:29		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-09-28 21:49:40	tsimpson	hs_: that shouldn't work
2014-09-28 21:49:43		irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has joined ##c++
2014-09-28 21:50:01	pussygladiator	hey
2014-09-28 21:50:10	pussygladiator	how can I skip a part of a string im reading from a file
2014-09-28 21:50:16	jeaye	...
2014-09-28 21:50:18	tsimpson	actually it may, but I don't like it :(
2014-09-28 21:50:20	pussygladiator	its starts with "1.  "
2014-09-28 21:50:29	pussygladiator	but I want to remove it for the array
2014-09-28 21:50:34	pussygladiator	what function can do that
2014-09-28 21:50:50		qbann0p (~qbann0p@c-50-143-92-195.hsd1.fl.comcast.net) has joined ##c++
2014-09-28 21:50:51	tsimpson	read until you've extracted everything you don't want
2014-09-28 21:51:49		dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 245 seconds)
2014-09-28 21:51:58	jeaye	tsimpson: Makes sense that it would. That's just aggregate initialization, eh?
2014-09-28 21:52:28		talin (~dhf@unaffiliated/talin) has quit (Quit: bbl)
2014-09-28 21:52:31	pussygladiator	but I know how to do character
2014-09-28 21:52:40	pussygladiator	will getline accept a string parameter
2014-09-28 21:52:47	pussygladiator	or ignore*
2014-09-28 21:53:04	Spark	yeah i think the problem is the c-style array, not the aggregate initialization
2014-09-28 21:53:30	tsimpson	jeaye: it's direct initialization
2014-09-28 21:54:36		KAHR-Alpha (~Alpha@AReims-652-1-198-206.w86-192.abo.wanadoo.fr) has quit (Ping timeout: 260 seconds)
2014-09-28 21:55:14	tsimpson	it's doing something similar to array<int, 4>(array<int, 4>{1,2,3,4}) iirc
2014-09-28 21:55:27	tsimpson	which for int is fine, but for something non-trivial may not be
2014-09-28 21:55:39		Cyp______ (~Cyp_@62.61.130.228.generic-hostname.arrownet.dk) has quit (Ping timeout: 245 seconds)
2014-09-28 21:55:51	jeaye	Ah
2014-09-28 21:56:30		kailoAtWork (~kailoAtWo@cpe-75-83-169-163.socal.res.rr.com) has quit (Quit: This computer has gone to sleep)
2014-09-28 21:56:33		hugo86jose (~hugo86jos@177.32.125.56) has quit (Remote host closed the connection)
2014-09-28 21:56:41	jeaye	Taking advantage of {}'s deductive capabilities.
2014-09-28 21:57:29		Cyp______ (~Cyp_@62.61.130.228.generic-hostname.arrownet.dk) has joined ##c++
2014-09-28 21:57:42	Spark	the parens at the top level are special then
2014-09-28 21:57:52	Spark	(({})) would be the same as ({})
2014-09-28 21:57:55	Spark	but not the same as just {}
2014-09-28 21:58:40	o]	I really dont like these rules
2014-09-28 21:59:43		madist (madist@unaffiliated/madist) has joined ##c++
2014-09-28 21:59:47	tsimpson	I don't think (({})) would work
2014-09-28 21:59:56		mattallmill (1000@129.130.175.191) has quit (Quit: Konversation terminated!)
2014-09-28 22:00:20	tsimpson	the ({}) version works because it's invoking the synthesized copy/move ctor with a temporary initialized from the expression within the braces
2014-09-28 22:01:00	tsimpson	as if it had an implicit (decltype(member){})
2014-09-28 22:01:23	Spark	ok msvc is ok with it but gcc isn't
2014-09-28 22:01:28	Spark	it says could not convert from ‘<brace-enclosed initializer list>’ to ‘std::array<float, 4ul>’
2014-09-28 22:01:34		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has joined ##c++
2014-09-28 22:01:46	tsimpson	let's all just assume MS is wrong :)
2014-09-28 22:01:50	jeaye	^
2014-09-28 22:02:18	glenfe	So anyone with access to stdcore should be able to read the standards committee discussion around initializers of arrays of arrays: Peter submitted the question in response to issues we discovered when working on smart pointers
2014-09-28 22:02:20	Spark	http://codepad.org/4kp0eVn7
2014-09-28 22:02:24	Spark	that's the full struct
2014-09-28 22:02:34	glenfe	and it resulted in a debate between Richard Smith (clang) and David Vandervoode (EDG)
2014-09-28 22:02:45	glenfe	Notably: clang was rejecting what EDG and MSVC were allowing.
2014-09-28 22:02:58	o]	BORING  ===>    [19:01] <tsimpson> the ({}) version works because it's invoking the synthesized copy/move ctor with a temporary initialized from the expression within the braces
2014-09-28 22:03:22	o]	we don't need such complexity
2014-09-28 22:03:28	jeaye	o]: The scary side effects of type deduction.
2014-09-28 22:03:38	o]	it could be simpler
2014-09-28 22:03:53	jeaye	It wouldn't need to be if he were using a better compiler.
2014-09-28 22:04:06	glenfe	So, in general, initializer lists still present issues which the bad compiler (referring to MSVC, not EDG) might get correct (and which the rules need to be clear on).
2014-09-28 22:04:07	Spark	why doens't the std::array workaround work on gcc then?
2014-09-28 22:04:11	o]	this uniform shitialization could be a lot better if the commitee weren't on crack
2014-09-28 22:04:24	jeaye	!grab o]
2014-09-28 22:04:32	o]	asddfd
2014-09-28 22:04:34	o]	:D
2014-09-28 22:04:45	jeaye	nolyc!
2014-09-28 22:05:00		ac_slater_ (~weechat@96.237.110.242) has joined ##c++
2014-09-28 22:05:00	Spark	i wouldn't give them too hard a time, they've done a much better job than java
2014-09-28 22:05:00	tsimpson	Spark: it does, just use one set of parentheses around the braces
2014-09-28 22:05:09	jeaye	o]: Damn your nick.
2014-09-28 22:05:10	Spark	that's what i used, see pastebin
2014-09-28 22:05:14	Spark	http://codepad.org/4kp0eVn7
2014-09-28 22:05:17	glenfe	Sometimes badly designed things get into C++; it's just an unfortunate reality.
2014-09-28 22:05:29	tsimpson	<< Foo().a; struct Foo { array<int, 4> a; Foo() : a({1,2,3,4}) {} };
2014-09-28 22:05:29	geordi	{1, 2, 3, 4}
2014-09-28 22:05:55		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has quit (Ping timeout: 250 seconds)
2014-09-28 22:06:42		zwer (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-09-28 22:06:53		gh0zt (~gh0zt@cpe-72-178-97-46.satx.res.rr.com) has left ##c++
2014-09-28 22:07:02		Siberian_Tiger (~Nicholas@199-96-202-110.fidnet.com) has joined ##c++
2014-09-28 22:07:19		surd (~surd@unaffiliated/surd) has quit (Ping timeout: 245 seconds)
2014-09-28 22:07:23	Spark	tsimpson: ok that doesn't work on my gcc
2014-09-28 22:07:25	o]	an excellent idea with some idiotic rules
2014-09-28 22:07:28	Spark	4.6.3
2014-09-28 22:07:41	o]	but ok, I won't complain. at least C++ got attention again after C++11
2014-09-28 22:07:47	tsimpson	4.6 is kind of seriously OLD
2014-09-28 22:07:52	o]	we still can have a mainstream language, at last!
2014-09-28 22:07:56	jeaye	Well, you're running GCC from like 2010, Spark.
2014-09-28 22:08:00	tsimpson	Spark: you're using -std=c++0x?
2014-09-28 22:08:01	jeaye	What's up with you and shitty compilers?
2014-09-28 22:08:07	Spark	tsimpson: yeah
2014-09-28 22:08:13	tsimpson	then upgrade :)
2014-09-28 22:08:32	jeaye	Latest stable is 4.9.1
2014-09-28 22:08:40	Spark	looks like i'm still on precise
2014-09-28 22:08:42	Spark	that's the problem
2014-09-28 22:08:55	o]	" i'm still on precise "   <== wtf does that mean?
2014-09-28 22:08:56	Spark	haven't used htis machine for a while
2014-09-28 22:08:58	Spark	ubunt
2014-09-28 22:09:00	jeaye	o]: Ubuntu thing
2014-09-28 22:09:01	Spark	ubuntu
2014-09-28 22:09:04	o]	ahhhhhhhh
2014-09-28 22:09:20	o]	well, I had to use testing distro on my debian to get a decent c++ compiler :.
2014-09-28 22:09:35	jeaye	The latest Ubuntu runs 4.9
2014-09-28 22:09:44	tsimpson	Spark: upgrade to trusty
2014-09-28 22:09:46	jeaye	(by default, so upgrade)
2014-09-28 22:09:48	o]	debian does that too (testing)
2014-09-28 22:09:49	tsimpson	at least
2014-09-28 22:09:56	o]	4.9 is a charm
2014-09-28 22:10:00	o]	C++14 :D
2014-09-28 22:10:05	o]	optional
2014-09-28 22:10:06	o]	:))))))))
2014-09-28 22:10:11	jeaye	o]: Tell Linus that. ^_^_
2014-09-28 22:10:11	o]	make_unique :]]]]]]]]
2014-09-28 22:10:26		systemfault (~Systemfau@oftn/member/systemfault) has quit
2014-09-28 22:10:40	jeaye	I don't even know what ^_^_ is, actually.
2014-09-28 22:10:53	tsimpson	Spark: you can do a direct upgrade from precise to trusty, and trusty has 4.8.2
2014-09-28 22:10:54	glenfe	jeaye: Singlish for ^_^.
2014-09-28 22:11:05	jeaye	glenfe: Nooooo!
2014-09-28 22:11:09	Spark	tsimpson: i'm on it :)
2014-09-28 22:11:09	glenfe	It's infecting you already.
2014-09-28 22:11:23	jeaye	Aiyo, that's not okayla.
2014-09-28 22:12:04		dovah (~dovah@68-67-93-115.wavecable.com) has joined ##c++
2014-09-28 22:13:42	o]	tsimpson: 4.8? YUCK
2014-09-28 22:14:05		hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-09-28 22:15:01	tsimpson	o]: 4.8 is better than 4.6, by 2
2014-09-28 22:15:22	K-ballo	I think it's exponential
2014-09-28 22:15:29	tsimpson	and one can always go to the latest development pre-release and get 4.9.1
2014-09-28 22:15:37	tsimpson	(or do what I do and backport it)
2014-09-28 22:16:03	jeaye	4.8 had that nasty lvalue reference initialization bug.
2014-09-28 22:17:28	tsimpson	{ tracked::B obj; try { throw obj; } catch(const tracked::B& obj) { cout << obj; } cout, obj; } // 4.9 has this bug still
2014-09-28 22:17:28	geordi	B0* B0=>B1* B1 B1~, error: tried to read pillaged B0. Aborted
2014-09-28 22:17:34		glenfe (~glen@unaffiliated/glenfe) has quit
2014-09-28 22:18:43		GinoMan (~Gino@pool-72-94-39-83.phlapa.fios.verizon.net) has joined ##c++
2014-09-28 22:19:37	Spark	what's that error all about then
2014-09-28 22:19:45	 *	Spark used to work on a compiler team
2014-09-28 22:19:52		SibTiger[Tablet] (~Nicholas@199-96-202-110.fidnet.com) has joined ##c++
2014-09-28 22:20:03	tsimpson	it unconditionally moves the expression thrown
2014-09-28 22:20:30	tsimpson	it's fine when you throw by value, which is like what 99.9% of code does
2014-09-28 22:20:52	o]	but you are throwing by value
2014-09-28 22:21:06	Spark	it's catching by reference
2014-09-28 22:21:09	tsimpson	throwing by value meaning throw T()
2014-09-28 22:21:11	Spark	so it's throwing by reference
2014-09-28 22:21:27	Spark	oh yeah you'll get a temporary in that cas?
2014-09-28 22:21:28	o]	something is wrong there. when you throw any object, a copy is made
2014-09-28 22:21:28	jeaye	No, Spark.
2014-09-28 22:21:30	Spark	if you catch by &
2014-09-28 22:21:35	Spark	but throw an lvalue
2014-09-28 22:21:43	o]	a copy should be made
2014-09-28 22:21:43	jeaye	"throw by value, catch by reference"
2014-09-28 22:21:46	jeaye	Have you not heard this mantra?
2014-09-28 22:21:49	tsimpson	no, the error is that the outer most obj is moved from
2014-09-28 22:22:11	tsimpson	I didn't write throw move(obj); so it should have been copied
2014-09-28 22:22:11	o]	super bug :(
2014-09-28 22:22:35	tsimpson	moving is perfectly valid, but not unconditionally
2014-09-28 22:23:01	o]	tracked::B is moveable only
2014-09-28 22:23:01	o]	?
2014-09-28 22:23:05	tsimpson	no
2014-09-28 22:23:12	o]	that really sucks
2014-09-28 22:23:13	tsimpson	{ tracked::B a, b(a); }
2014-09-28 22:23:13	geordi	B0* B1*(B0) B1~ B0~
2014-09-28 22:23:37	Spark	this tracked::B is some sort of gcc debug thing?
2014-09-28 22:23:59	tsimpson	it's some sort of geordi debug thing
2014-09-28 22:24:23	tsimpson	https://gcc.gnu.org/bugzilla/show_bug.cgi?id=57533 is the bug
2014-09-28 22:24:23	jeaye	{ tracked::B obj; try { throw obj; } catch(tracked::B o) { cout << (obj = move(o)); } cout, obj; }
2014-09-28 22:24:23	geordi	B0* B0=>B1* B2*(B1) B2=>B0 B0 B2~ B1~, B0 B0~
2014-09-28 22:24:56	Spark	oh isee
2014-09-28 22:25:03	Spark	it has operators defined to print out what's going on
2014-09-28 22:25:13	Spark	using some static counter or whatever to identify each object?
2014-09-28 22:25:25	tsimpson	https://github.com/Eelis/geordi/blob/master/prelude/tracked.hpp
2014-09-28 22:25:52		Sauvin (~Sauvin@about/linux/staff/sauvin) has joined ##c++
2014-09-28 22:26:02	tsimpson	it has a rather complex implementation, but it does what you think it does
2014-09-28 22:30:01		plitter (~plitter@84.48.49.52) has quit (Read error: Connection reset by peer)
2014-09-28 22:30:44		plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-09-28 22:30:56		Lobster` (~Lobster@S010620aa4b89619f.ok.shawcable.net) has quit (Read error: Connection reset by peer)
2014-09-28 22:32:44		BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has quit (Ping timeout: 245 seconds)
2014-09-28 22:34:19		Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 258 seconds)
2014-09-28 22:36:27		surd (~surd@unaffiliated/surd) has joined ##c++
2014-09-28 22:38:32		juliohm (~julio@unaffiliated/juliohm) has joined ##c++
2014-09-28 22:39:53	juliohm	Is there any difference in defining a struct inside a class like class A { struct S {}; }; and defining a typedef like class A { typdef struct {} S; }; ?
2014-09-28 22:40:07	o11c	juliohm: yes
2014-09-28 22:40:13	juliohm	o11c, what is the difference?
2014-09-28 22:40:13	o11c	it changes the linkage
2014-09-28 22:40:20	o11c	don't use typedef like that, please
2014-09-28 22:40:28	juliohm	yes, I do not
2014-09-28 22:40:33	juliohm	trying to fix someone else's code
2014-09-28 22:40:33	o11c	all structs should have names, and that name should be used directly
2014-09-28 22:40:33	K-ballo	and since it doesn't have a name, you can't disambiguate
2014-09-28 22:40:44	juliohm	I agree
2014-09-28 22:40:59	juliohm	o11c, out of curiosity, why it changes the linkage and how it changes?
2014-09-28 22:41:02	o11c	(exception: it's okay to put an anonymous struct in a union, but that's different because its members exist directly)
2014-09-28 22:41:09	o11c	juliohm: because it doesn't have a name
2014-09-28 22:41:15	juliohm	interesting
2014-09-28 22:41:33	juliohm	I'll remove that typedef
2014-09-28 22:42:10	moonchild	damn, in catching up i was about to say the anonymous struct/union thing
2014-09-28 22:43:30	moonchild	i think the rule can be generalized 'don't use typedefs in type definitions'
2014-09-28 22:44:01	juliohm	Take this snippet code: template<typename T> struct B { typedef int INT; }; template<typename T> struct D : public B<T> { INT n; };
2014-09-28 22:44:05	juliohm	It compiles in MSVC?
2014-09-28 22:44:24	moonchild	juliohm: really no reason for a 'typedef struct { ...} name; ' in c++
2014-09-28 22:44:29	juliohm	The INT shouldn't be visible in the derived class
2014-09-28 22:44:30	o11c	I think that's invalid
2014-09-28 22:44:38	juliohm	moonchild, yes, I see no reason either
2014-09-28 22:44:43	moonchild	'struct name { ... };' accomplishes the same thing
2014-09-28 22:44:46	K-ballo	juliohm: MSVC is only recently starting to care about typename
2014-09-28 22:44:53	juliohm	I'm fixing someone else's code
2014-09-28 22:45:01	juliohm	K-ballo, MSVC is really stupid compiler
2014-09-28 22:45:18	juliohm	I'm having lots of issues trying to fix a codebas previously compiled with MSVC
2014-09-28 22:45:28	juliohm	this compiler is not compliant with C++ standards
2014-09-28 22:45:38	o11c	yeah, I tried that once
2014-09-28 22:45:45	juliohm	it allows atrocities such as typedef T T;
2014-09-28 22:45:47		BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has joined ##c++
2014-09-28 22:45:53	o11c	I removed some 'if this == null' checks and the program started crashing
2014-09-28 22:45:54	juliohm	typedef foo<T> foo;
2014-09-28 22:46:10		SibTiger[Tablet] (~Nicholas@199-96-202-110.fidnet.com) has quit (Quit: Everyone, I have a very dramatic announcement. So anyone with a weak heart should leave now. Goodbye.)
2014-09-28 22:46:12	lh_mouse	this can't be null.
2014-09-28 22:46:14	juliohm	It allows duplicate explicit instantiation
2014-09-28 22:46:25	K-ballo	{ typedef foo<T> foo; } template <class> struct foo {};
2014-09-28 22:46:26	geordi	error: template argument 1 is invalid
2014-09-28 22:46:32	juliohm	template class foo<int>; template class foo<int>; // compiles on MSVC
2014-09-28 22:46:41	K-ballo	Gentle: replace T with int
2014-09-28 22:46:45	K-ballo	geordi: replace T with int
2014-09-28 22:46:46	geordi	warning: typedef 'foo' locally defined but not used
2014-09-28 22:47:05		hubutm20 (~hubutm20@79.114.25.112) has quit (Ping timeout: 250 seconds)
2014-09-28 22:47:24		hubutm20 (~hubutm20@79.114.25.112) has joined ##c++
2014-09-28 22:47:42		Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-09-28 22:47:53		Atapel (~Atapel@pool-74-101-108-117.nycmny.fios.verizon.net) has quit (Ping timeout: 272 seconds)
2014-09-28 22:48:03	juliohm	how do you access member from a base class template in the derived class? you always have to give a qualified name?
2014-09-28 22:48:10	juliohm	B<T>::member?
2014-09-28 22:48:17	o11c	that or this->
2014-09-28 22:48:25	K-ballo	typename B<T>::member, or this->, or using B<T>::member;
2014-09-28 22:48:29	juliohm	o11c, this doesn't work here
2014-09-28 22:48:33	K-ballo	scratch typename
2014-09-28 22:48:43	juliohm	at least the last time I tried it
2014-09-28 22:48:47	juliohm	this->member
2014-09-28 22:48:48		Atapel (~Atapel@pool-74-101-108-117.nycmny.fios.verizon.net) has joined ##c++
2014-09-28 22:48:54	o11c	sorry, I'm not at my best today
2014-09-28 22:48:58	juliohm	there are some cases where this-> doesn't work
2014-09-28 22:49:11	jeaye	juliohm: Use B<T>::member
2014-09-28 22:49:22	juliohm	I heard that MSVC allows one to omit the template parameters like in B::member, is that true?
2014-09-28 22:49:35	lh_mouse	using base = B<T>;  base::member = balhblah;
2014-09-28 22:49:41	juliohm	Just for curiosity, I do not plan to use that monster compiler
2014-09-28 22:49:49	K-ballo	B would be an injected class name in that context, so it better do
2014-09-28 22:50:12	juliohm	You are saying it's better to use the using statement?
2014-09-28 22:50:16	juliohm	why?
2014-09-28 22:50:30	lh_mouse	it is shorter.
2014-09-28 22:50:45	lh_mouse	(at least not longer)
2014-09-28 22:50:47	juliohm	it doesn't change linkage or something?
2014-09-28 22:50:52	lh_mouse	no.
2014-09-28 22:50:58	juliohm	it's good shortcut
2014-09-28 22:51:48	lh_mouse	I hate to write another_template_used_as_base<some_template_parameter>::member.
2014-09-28 22:52:06	juliohm	me too
2014-09-28 22:52:28	juliohm	and I don't know why this-> doesn't work, let me do a test case
2014-09-28 22:53:09	K-ballo	lh_mouse: it's unlikely that you'd need to specify the template argument
2014-09-28 22:53:21		BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has quit (Ping timeout: 272 seconds)
2014-09-28 22:53:28	juliohm	{D obj; obj.n;} template<typename T> struct B { typedef int INT; }; template<typename T> struct D : public B<T> { INT n; };
2014-09-28 22:53:28	geordi	error: 'obj' was not declared in this scope
2014-09-28 22:53:37	juliohm	{D<double> obj; obj.n;} template<typename T> struct B { typedef int INT; }; template<typename T> struct D : public B<T> { INT n; };
2014-09-28 22:53:37	geordi	error: 'struct D<double>' has no member named 'n'
2014-09-28 22:54:16	lh_mouse	geordi, replace last INT with typename INT
2014-09-28 22:54:16	juliohm	{D<double> obj; obj.n;} template<typename T> struct B { typedef int INT; }; template<typename T> struct D : public B<T> { B<T>::INT n; };
2014-09-28 22:54:16	geordi	Same error.
2014-09-28 22:54:17	geordi	Same error.
2014-09-28 22:54:25	lh_mouse	oh
2014-09-28 22:54:28	juliohm	geordi, show
2014-09-28 22:54:28	geordi	{D<double> obj; obj.n;} template<typename T> struct B { typedef int INT; }; template<typename T> struct D : public B<T> { B<T>::INT n; };
2014-09-28 22:54:49	lh_mouse	prepend typename  before last B
2014-09-28 22:54:58	lh_mouse	it is a dependent name.
2014-09-28 22:55:11	juliohm	geordi, show
2014-09-28 22:55:11	geordi	No change in output.
2014-09-28 22:55:24	juliohm	{D<double> obj; obj.n;} template<typename T> struct B { typedef int INT; }; template<typename T> struct D : public B<T> { typename B<T>::INT n; };
2014-09-28 22:55:24	geordi	warning: statement has no effect
2014-09-28 22:55:27		maciuszek (~maciuszek@TOROON0949W-LP140-04-1096705101.dsl.bell.ca) has joined ##c++
2014-09-28 22:55:36	lh_mouse	geordi, prepend -w
2014-09-28 22:55:36	geordi	<no output>
2014-09-28 22:55:39	juliohm	{D<double> obj; cout << obj.n;} template<typename T> struct B { typedef int INT; }; template<typename T> struct D : public B<T> { typename B<T>::INT n; };
2014-09-28 22:55:40	geordi	warning: 'obj.D<double>::n' is used uninitialized in this function
2014-09-28 22:55:51	juliohm	{D<double> obj; obj.n = 1;} template<typename T> struct B { typedef int INT; }; template<typename T> struct D : public B<T> { typename B<T>::INT n; };
2014-09-28 22:55:51	geordi	warning: variable 'obj' set but not used
2014-09-28 22:55:57	juliohm	oh man
2014-09-28 22:56:05	juliohm	geordi, is pedantic nowadays
2014-09-28 22:56:05	geordi	error: 'is' does not name a type
2014-09-28 22:56:08	lh_mouse	this-> is used to access non-static members.
2014-09-28 22:56:23	jeaye	Next time you make a "Test case", /query geordi first, juliohm.
2014-09-28 22:56:34	juliohm	lh_mouse, is there any static member there?
2014-09-28 22:56:38	juliohm	ok jeaye
2014-09-28 22:56:45	K-ballo	{D<double> obj; auto x = obj.n;} template<typename T> struct B { typedef int INT; }; template<typename T> struct D : public B<T> { typename D::INT n; };
2014-09-28 22:56:45	geordi	warning: 'obj.D<double>::n' is used uninitialized in this function
2014-09-28 22:57:06	lh_mouse	juliohm, no. But INT isn't a non-static member either.
2014-09-28 22:57:20	jeaye	geordi: replace "INT n" with "INT n{}"
2014-09-28 22:57:20	geordi	error: String `"INT n"` does not occur.
2014-09-28 22:57:20	juliohm	yes, we can access INT from D?
2014-09-28 22:57:37	juliohm	I was thinking that INT is only available through B<T>
2014-09-28 22:57:39	jeaye	geordi: replace INT n with INT n{}
2014-09-28 22:57:39	geordi	<no output>
2014-09-28 22:57:47	juliohm	geordi, show
2014-09-28 22:57:47	geordi	{D<double> obj; auto x = obj.n;} template<typename T> struct B { typedef int INT; }; template<typename T> struct D : public B<T> { typename D::INT n{}; };
2014-09-28 22:57:48	jeaye	geordi: show
2014-09-28 22:57:48	geordi	No change in output.
2014-09-28 22:58:20	juliohm	We can access the typedef with D::INT?
2014-09-28 22:58:26	juliohm	Why I missed that?
2014-09-28 22:58:35	juliohm	It is always possible for non-static members?
2014-09-28 22:58:47	jeaye	INT is a type, not a member.
2014-09-28 22:58:49	juliohm	oh
2014-09-28 22:59:11	jeaye	It's a public typedef; anyone knowing B can access it.
2014-09-28 22:59:12		k0nichiwa (~jdoe@wsip-174-77-238-66.ga.at.cox.net) has joined ##c++
2014-09-28 22:59:13	juliohm	so all typedefs defined in Base are accessible in Derived directly if we prepend with D::?
2014-09-28 22:59:19	K-ballo	D is an alias for D<T> which happens to have the same members as B<T> (aliased as D::B)
2014-09-28 22:59:22	k0nichiwa	what is a good channel for discussion of the MVC pattern
2014-09-28 22:59:38	jeaye	I could say B<int>::INT from main() and it'd work, juliohm.
2014-09-28 22:59:42	jeaye	This has nothing to do with inheritance.
2014-09-28 22:59:47		lmat (~lmat@c-98-223-185-216.hsd1.in.comcast.net) has joined ##c++
2014-09-28 22:59:55	--	irc: disconnected from server
2014-10-01 19:29:01		dagnachew (~dagnachew@bas1-montreal30-2925417210.dsl.bell.ca) has joined ##c++
2014-10-01 19:29:01	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-01 19:29:01	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-01 19:29:01	--	Channel ##c++: 478 nicks (0 ops, 0 voices, 478 normals)
2014-10-01 19:29:01	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-01 19:29:10	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-01 19:32:09		TheFuzzball (~TheFuzzba@cpc4-ward10-2-0-cust737.10-2.cable.virginm.net) has joined ##c++
2014-10-01 19:33:04		da2ce7 (~da2ce7@opentransactions/dev/da2ce7) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-01 19:34:12		kurahaupo (~Kurahaupo@97.72.252.27.dyn.cust.vf.net.nz) has quit (Quit: Leaving.)
2014-10-01 19:35:02		nug700 (~nug700@184-98-173-4.phnx.qwest.net) has quit (Quit: bye)
2014-10-01 19:35:43		a_le (~a_le@2001:420:28f:1254:c456:44:b405:7c7a) has quit (Remote host closed the connection)
2014-10-01 19:36:19		a_le (~a_le@nat/cisco/x-fqeysrdcmaqyrgte) has joined ##c++
2014-10-01 19:36:59		hexagoxel_ (~hexagoxel@kiel-5f77b558.pool.mediaWays.net) has joined ##c++
2014-10-01 19:36:59	a_le	i've been implementing a boost::hash<>() specialization for my type... I have the impression that i should have ratther have overloaded boost::hash_value(), but things are working just fine the way I did... any unforeseen culprit?
2014-10-01 19:37:20	kailoAtWork	I have a lot of guard clauses along the lines of " if ( !IsAvailable() ) { //print some error; return false; }
2014-10-01 19:37:30	kailoAtWork	what are some patterns that I can use to avoid this duplication?
2014-10-01 19:37:41		titanium17 (~titanium1@2604:6000:6440:2200:2533:e7c1:a0f2:6bc) has joined ##c++
2014-10-01 19:37:45	kailoAtWork	I'd rather not use a macro to do it
2014-10-01 19:38:12	hs_	kailoAtWork, monad, like optional
2014-10-01 19:38:23	cbreak	kailoAtWork: checkAvailableOrThrow();
2014-10-01 19:38:54	kailoAtWork	cbreak, In this particular case, I'm wrapping an external API and don't want the wrapper to throw
2014-10-01 19:39:14	kailoAtWork	the API may or may not be unstable, but I want to print an error message if so and handle it gracefully
2014-10-01 19:39:18	cbreak	CHECK_AVAILABLE_OR_RETURN_BOOL();
2014-10-01 19:39:32	cbreak	kailoAtWork: an exception is graceful
2014-10-01 19:39:44		hexagoxel (~hexagoxel@kiel-5f768ca7.pool.mediaWays.net) has quit (Ping timeout: 250 seconds)
2014-10-01 19:39:55		Garner (uid38417@gateway/web/irccloud.com/x-ktxjrunsdnxlyovc) has quit (Quit: Connection closed for inactivity)
2014-10-01 19:39:57	cbreak	overloading the return value is quite clumsy in comparison
2014-10-01 19:40:15	kailoAtWork	true
2014-10-01 19:40:35	xico	i have a class whose data depends on a lot of shared_ptr with different types. how can i store that?
2014-10-01 19:43:48		Andy-chan (~Andy-chan@xdsl-84-44-171-72.netcologne.de) has quit (Ping timeout: 260 seconds)
2014-10-01 19:46:17	xico	(i guess i create a class to hold them, with subclassing for the template parameters of shared_ptr)
2014-10-01 19:46:21	xico	(could)
2014-10-01 19:47:08		yayachiken (~yayachike@host-115-67.kawo1.rwth-aachen.de) has quit (Remote host closed the connection)
2014-10-01 19:47:32	xico	like std::vector<SharedPtr*> bla; with "class SharedPtr {}; class SharedPtrImpl<T> : SharedPtr { std::shared_ptr<T> m_ptr; }"
2014-10-01 19:47:40	xico	any better idea?
2014-10-01 19:47:53	cbreak	xico: lots of shared pointer variables...
2014-10-01 19:48:00		ObjectiveMatt (~Objective@66-87-151-146.pools.spcsdns.net) has joined ##c++
2014-10-01 19:48:12		mac_ified (~mac_ified@68.200.222.255) has joined ##c++
2014-10-01 19:49:26		mike_f (~MF@194.28.69.111.static.snap.net.nz) has joined ##c++
2014-10-01 19:49:33		emg (~emg@74.217.148.5) has quit (Quit: emg)
2014-10-01 19:49:52	xico	cbreak: well they can be an arbitrary number of them. i'm representing expressions which depends on data managed by shared_ptr.
2014-10-01 19:50:06		Blue_Hat (~Blue_Hat@66.54.118.122) has quit (Ping timeout: 245 seconds)
2014-10-01 19:50:17	cbreak	arbitrary types too?
2014-10-01 19:51:23	xico	cbreak: no, single class but templatized.
2014-10-01 19:51:48	xico	so yes i guess
2014-10-01 19:51:55	cbreak	hmm...
2014-10-01 19:52:08		titanium17 (~titanium1@2604:6000:6440:2200:2533:e7c1:a0f2:6bc) has quit (Ping timeout: 272 seconds)
2014-10-01 19:52:13	cbreak	obviously you have to know the types at compile time.
2014-10-01 19:52:27	cbreak	so maybe one container per type
2014-10-01 19:52:42	cbreak	maybe in something like a boost::fusion::map
2014-10-01 19:53:08	cbreak	or one container containing boost::variant instead of pointers directly
2014-10-01 19:53:16		ObjectiveMatt (~Objective@66-87-151-146.pools.spcsdns.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-01 19:53:27	cbreak	xico: or give your class template a base class with a base interface
2014-10-01 19:53:35	cbreak	then you can use runtime polymorphism
2014-10-01 19:53:42		ishidableach (~ishidable@192.12.88.223) has joined ##c++
2014-10-01 19:53:46	xico	cbreak: yeah, i guess i will use a base interface
2014-10-01 19:53:53	xico	thanks
2014-10-01 19:54:18		comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has quit (Quit: Bye)
2014-10-01 19:55:51		qbann0p (~qbann0p@c-50-143-92-195.hsd1.fl.comcast.net) has joined ##c++
2014-10-01 19:56:58		wox (~bartleby@unaffiliated/scroy) has joined ##c++
2014-10-01 19:57:21	--	ishidableach is now known as ishi
2014-10-01 19:57:46		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2014-10-01 19:57:55		comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has joined ##c++
2014-10-01 19:58:07		ishi (~ishidable@192.12.88.223) has left ##c++
2014-10-01 19:59:06		fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-10-01 19:59:26		gelignite (~gelignite@i528C34BD.versanet.de) has quit (Quit: http://bit.ly/nkczDT)
2014-10-01 19:59:28		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-10-01 20:00:40		titanium17 (~titanium1@2604:6000:6440:2200:381f:85db:6eec:2912) has joined ##c++
2014-10-01 20:01:38		surd (~surd@unaffiliated/surd) has joined ##c++
2014-10-01 20:08:14		ObjectiveMatt (~Objective@66-87-151-146.pools.spcsdns.net) has joined ##c++
2014-10-01 20:08:47		comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has quit (Quit: Bye)
2014-10-01 20:09:54		ishid (~ishid@192.12.88.223) has joined ##c++
2014-10-01 20:13:22		ncd|leeN (~leeN@213.216.9.132) has quit (Ping timeout: 258 seconds)
2014-10-01 20:13:53		gngrwzrd (~gngrwzrd@c-98-207-174-75.hsd1.ca.comcast.net) has joined ##c++
2014-10-01 20:13:53		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has joined ##c++
2014-10-01 20:15:13		ishid (~ishid@192.12.88.223) has left ##c++ ("Left channel")
2014-10-01 20:16:21		bsdbeard (~bsdbeard@unaffiliated/bsdbeard) has quit (Quit: :wqa[ll]!)
2014-10-01 20:16:53		ishid (~ishid@192.12.88.223) has joined ##c++
2014-10-01 20:18:28		vs73nx (~vs73nx@unaffiliated/vs73nx) has joined ##c++
2014-10-01 20:19:37		gngrwzrd (~gngrwzrd@c-98-207-174-75.hsd1.ca.comcast.net) has quit (Quit: gngrwzrd)
2014-10-01 20:19:50		ObjectiveMatt (~Objective@66-87-151-146.pools.spcsdns.net) has quit (Ping timeout: 260 seconds)
2014-10-01 20:20:45		plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-10-01 20:20:47		josef_k (~Jeremy@203-206-204-113.perm.iinet.net.au) has joined ##c++
2014-10-01 20:21:53		qbann0p (~qbann0p@c-50-143-92-195.hsd1.fl.comcast.net) has quit (Quit: Leaving)
2014-10-01 20:21:55		plitter (~plitter@84.48.49.52) has joined ##c++
2014-10-01 20:22:09		dseitz (~dseitz@ip70-191-237-177.pn.at.cox.net) has quit (Quit: My iMac has gone to sleep. ZZZzzz…)
2014-10-01 20:23:14		qbann0p (~qbann0p@64.237.35.82) has joined ##c++
2014-10-01 20:23:57		DEElekgolo (~DEElekgol@2602:304:cd99:1e60:1447:866d:f954:27fc) has quit (Read error: Connection reset by peer)
2014-10-01 20:24:44		gngrwzrd (~gngrwzrd@c-98-207-174-75.hsd1.ca.comcast.net) has joined ##c++
2014-10-01 20:26:42		Betal (~Beta@unaffiliated/betal) has quit (Remote host closed the connection)
2014-10-01 20:27:03		huckleberry78 (~huckleber@76.97.228.17) has joined ##c++
2014-10-01 20:27:08		qbann0p (~qbann0p@64.237.35.82) has quit (Client Quit)
2014-10-01 20:27:36		huckleberry78 (~huckleber@76.97.228.17) has quit (Client Quit)
2014-10-01 20:27:53		mathu (~matt@162.243.33.110) has joined ##c++
2014-10-01 20:28:27		kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has joined ##c++
2014-10-01 20:28:36	mathu	i have a shared_ptr<...> object here; if the object this points to is destructed, what happens to the shared_ptr?
2014-10-01 20:28:39		mrevil (~mrevil@172.56.38.110) has joined ##c++
2014-10-01 20:30:47		lenarhoyt_ (5b13782b@gateway/web/freenode/ip.91.19.120.43) has quit (Quit: Page closed)
2014-10-01 20:31:28		vs73nx (~vs73nx@unaffiliated/vs73nx) has quit (Remote host closed the connection)
2014-10-01 20:31:48		mrevil (~mrevil@172.56.38.110) has quit (Remote host closed the connection)
2014-10-01 20:32:02		RazielZ (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 246 seconds)
2014-10-01 20:32:35		TheFuzzball (~TheFuzzba@cpc4-ward10-2-0-cust737.10-2.cable.virginm.net) has quit (Quit: Computer has gone to sleep.)
2014-10-01 20:32:37		overdamped (~overdampe@unaffiliated/overdamped) has joined ##c++
2014-10-01 20:32:47		GinoMan (~Gino@pool-98-114-49-65.phlapa.fios.verizon.net) has joined ##c++
2014-10-01 20:35:40		a_le (~a_le@nat/cisco/x-fqeysrdcmaqyrgte) has quit (Read error: Connection reset by peer)
2014-10-01 20:36:45		zwer_v (~zwer@gateway/tor-sasl/zwer) has joined ##c++
2014-10-01 20:37:05		a_le (~a_le@2001:420:28f:1254:c456:44:b405:7c7a) has joined ##c++
2014-10-01 20:37:07	kalven	mathu: unless you have some custom deleter, you'll have bad time when the shared_ptr is destroyed.
2014-10-01 20:37:44		zwer (~zwer@gateway/tor-sasl/zwer) has quit (Ping timeout: 264 seconds)
2014-10-01 20:38:32		BZEN (~nycto@c-52abe655.123-1-64736c12.cust.bredbandsbolaget.se) has joined ##c++
2014-10-01 20:38:40	BZEN	Does it matter if I use C or C++ for a streaming software?
2014-10-01 20:39:59	xiphiasx_	w-what
2014-10-01 20:40:19		t0rc (~t0rc@unaffiliated/t0rc/x-5233201) has quit (Quit: WeeChat 1.0.1)
2014-10-01 20:41:27		xico (~xico@cpe-76-88-16-80.san.res.rr.com) has quit (Ping timeout: 245 seconds)
2014-10-01 20:43:01		overdamped (~overdampe@unaffiliated/overdamped) has quit (Ping timeout: 250 seconds)
2014-10-01 20:44:24		justanotheruser (~Justan@unaffiliated/justanotheruser) has quit (Quit: Lost terminal)
2014-10-01 20:44:25		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2014-10-01 20:44:26		KAHR-Alpha (~Alpha@AReims-652-1-198-206.w86-192.abo.wanadoo.fr) has quit (Read error: Connection reset by peer)
2014-10-01 20:44:42		titanium17 (~titanium1@2604:6000:6440:2200:381f:85db:6eec:2912) has quit (Ping timeout: 272 seconds)
2014-10-01 20:44:55		swgillespie (~textual@131.107.165.238) has joined ##c++
2014-10-01 20:45:10		KAHR-Alpha (~Alpha@AReims-652-1-198-206.w86-192.abo.wanadoo.fr) has joined ##c++
2014-10-01 20:45:34		overdamped (~overdampe@unaffiliated/overdamped) has joined ##c++
2014-10-01 20:47:26		Mayzie (~Mayazcher@unaffiliated/mayazcherquoi) has joined ##c++
2014-10-01 20:47:44		swgillespie (~textual@131.107.165.238) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-01 20:53:20		a_le (~a_le@2001:420:28f:1254:c456:44:b405:7c7a) has quit (Remote host closed the connection)
2014-10-01 20:53:54		vocodork (~vocoder@94-227-99-249.access.telenet.be) has quit (Quit: http://viennaensemblepro.com | http://viennamirpro.com)
2014-10-01 20:53:56		a_le (~a_le@2001:420:28f:1254:c456:44:b405:7c7a) has joined ##c++
2014-10-01 20:54:50		Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has quit (Read error: Connection reset by peer)
2014-10-01 20:55:10		vs73nx (~vs73nx@unaffiliated/vs73nx) has joined ##c++
2014-10-01 20:55:19	mathu	kalven: figured. i was doing something less-than-smart anyway, so i took another approach entirely
2014-10-01 20:55:22	mathu	thanks
2014-10-01 20:56:32		a_le (~a_le@2001:420:28f:1254:c456:44:b405:7c7a) has quit (Remote host closed the connection)
2014-10-01 20:58:31		BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has joined ##c++
2014-10-01 20:59:31		desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-10-01 20:59:47		vs73nx (~vs73nx@unaffiliated/vs73nx) has quit (Ping timeout: 245 seconds)
2014-10-01 21:03:19		xenocons (~otk@unaffiliated/xenocons) has joined ##c++
2014-10-01 21:03:29		hexagoxel_ (~hexagoxel@kiel-5f77b558.pool.mediaWays.net) has quit (Quit: Ex-Chat)
2014-10-01 21:04:40	xenocons	looking for an easy std way to split a vector into vector vectors given N
2014-10-01 21:05:06	xenocons	(efficiency is not important for this one)
2014-10-01 21:06:39		overdamped (~overdampe@unaffiliated/overdamped) has quit (Ping timeout: 258 seconds)
2014-10-01 21:08:10		overdamped (~overdampe@unaffiliated/overdamped) has joined ##c++
2014-10-01 21:08:39		overdamped (~overdampe@unaffiliated/overdamped) has left ##c++
2014-10-01 21:10:19		overdamped (~overdampe@unaffiliated/overdamped) has joined ##c++
2014-10-01 21:14:05		Suchorski (regex@unaffiliated/suchorski) has joined ##c++
2014-10-01 21:14:31		askatasuna (~askatasun@181.47.105.14) has joined ##c++
2014-10-01 21:15:25		kurahaupo (~kurahaupo@118.148.218.61) has joined ##c++
2014-10-01 21:15:27		unreal (~unreal@unaffiliated/unreal) has quit (Ping timeout: 240 seconds)
2014-10-01 21:15:51		Blue_Hat (~Blue_Hat@66.54.118.122) has joined ##c++
2014-10-01 21:17:12		zima (zima@c75.152.27-202.clta.globetrotter.net) has quit (Quit: zima)
2014-10-01 21:17:41		linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:a0a3:f5ba:6302:263c) has joined ##c++
2014-10-01 21:19:40		INSANU (~INSANU@186.213.188.105) has joined ##c++
2014-10-01 21:20:11		skarn (skarn@unaffiliated/skarn) has quit (Ping timeout: 272 seconds)
2014-10-01 21:20:32		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has joined ##c++
2014-10-01 21:20:37		naraku9333 (~quassel@c-68-51-98-34.hsd1.il.comcast.net) has quit (Ping timeout: 245 seconds)
2014-10-01 21:21:15		fold (~JimmyRcom@rp.eliteskills.com) has quit (Quit: WeeChat 0.4.0)
2014-10-01 21:21:38		fold (~JimmyRcom@rp.eliteskills.com) has joined ##c++
2014-10-01 21:21:59		Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-10-01 21:23:12		skarn (skarn@unaffiliated/skarn) has joined ##c++
2014-10-01 21:25:07		dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-10-01 21:25:10		Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has joined ##c++
2014-10-01 21:29:18		thejohnfreeman (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has joined ##c++
2014-10-01 21:30:58		GinoMan (~Gino@pool-98-114-49-65.phlapa.fios.verizon.net) has quit (Ping timeout: 272 seconds)
2014-10-01 21:31:25		kurahaupo (~kurahaupo@118.148.218.61) has quit (Quit: Bye)
2014-10-01 21:32:07		kurahaupo (~kurahaupo@118.148.218.61) has joined ##c++
2014-10-01 21:34:26		aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-10-01 21:34:27		Betal (~Beta@unaffiliated/betal) has joined ##c++
2014-10-01 21:35:25		dvt (~dvt@65.112.10.98) has joined ##c++
2014-10-01 21:36:13		overdamped (~overdampe@unaffiliated/overdamped) has quit (Ping timeout: 244 seconds)
2014-10-01 21:36:26		DTSCode (~dtscode@174.134.25.153) has quit (Read error: Connection reset by peer)
2014-10-01 21:37:11		unreal (~unreal@unaffiliated/unreal) has joined ##c++
2014-10-01 21:39:12		KAHR-Alpha (~Alpha@AReims-652-1-198-206.w86-192.abo.wanadoo.fr) has quit (Ping timeout: 272 seconds)
2014-10-01 21:41:19		ac_slater_ (~weechat@dhcp89-69-173.bbn.com) has quit (Remote host closed the connection)
2014-10-01 21:43:05		hyperair (~hyperair@ubuntu/member/hyperair) has joined ##c++
2014-10-01 21:43:15		peterhu (~peterhuen@peterhuene.info) has quit (Quit: leaving)
2014-10-01 21:43:52		emma (~em@unaffiliated/emma) has quit (Ping timeout: 245 seconds)
2014-10-01 21:44:15		dullea (~dullea@71-211-179-1.hlrn.qwest.net) has joined ##c++
2014-10-01 21:44:16		escapade (~charles@c-24-98-175-189.hsd1.ga.comcast.net) has joined ##c++
2014-10-01 21:46:04		emma (~em@unaffiliated/emma) has joined ##c++
2014-10-01 21:47:24		peterhu (~peterhuen@peterhuene.info) has joined ##c++
2014-10-02 17:34:15		dagnachew (~dagnachew@bas1-montreal30-2925417210.dsl.bell.ca) has joined ##c++
2014-10-02 17:34:15	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-02 17:34:15	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-02 17:34:15	--	Channel ##c++: 528 nicks (0 ops, 0 voices, 528 normals)
2014-10-02 17:34:15	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-02 17:34:23	hs_	PlasmaHH, it creates a string, sure, but you could also just do struct indexer { int a,b,c; } and then do [{1,2,3}]
2014-10-02 17:34:24	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-02 17:34:26	va	anything but standardese is offtopic
2014-10-02 17:34:32	hs_	to dodge the [] problem
2014-10-02 17:34:49		o-O-o (36f0c4ba@gateway/web/freenode/ip.54.240.196.186) has quit (Ping timeout: 246 seconds)
2014-10-02 17:34:56	hs_	is the problem you are raising just with that particular struct?
2014-10-02 17:35:01	PlasmaHH	hs_: yes, thats a proper solution when you want to pass a stirng...
2014-10-02 17:35:32	K-ballo	PlasmaHH: can you explain where the overheads are?
2014-10-02 17:35:45		RazielXYZ (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has joined ##c++
2014-10-02 17:35:50		dullea (~dullea@71-211-179-1.hlrn.qwest.net) has joined ##c++
2014-10-02 17:35:55	PlasmaHH	K-ballo: probably allocating a string is not overhead for you, if that is so, then there is no overhead
2014-10-02 17:36:34	PlasmaHH	hs_: also no matter how you pass it, you always have to allocate that object on the stack somewhere, as opposed to being able to pass all the parameters by reference, if the abi allows it
2014-10-02 17:36:46	K-ballo	PlasmaHH: what do strings have to do with it? the arbitrary index can be whatever you need, if you need a string you make it a string, if you want a string_view you make it a stirng_view, you can even have multiple arbitrary indices and do overloading
2014-10-02 17:36:47		puish (~puish@unaffiliated/jonbryan) has quit (Read error: Connection reset by peer)
2014-10-02 17:37:08		CJKay (~CJKay@unaffiliated/cjkay) has quit (Ping timeout: 258 seconds)
2014-10-02 17:37:25	K-ballo	PlasmaHH: if the ABI worries you, make operator[] a facade to a function
2014-10-02 17:37:26	PlasmaHH	K-ballo: if I want it to be a string and efficient I have to be very careful to not cause any string to be copied
2014-10-02 17:37:38		R40UL (~R40UL@unaffiliated/r40ul) has quit
2014-10-02 17:37:46	K-ballo	yeah, whatever, but it's totally unrelated to the arbitrary index thing
2014-10-02 17:38:02		rcxdude_ (~rcxdude@cpc14-cmbg15-2-0-cust644.5-4.cable.virginm.net) has joined ##c++
2014-10-02 17:38:17		rcxdude (~rcxdude@cpc14-cmbg15-2-0-cust644.5-4.cable.virginm.net) has quit (Ping timeout: 258 seconds)
2014-10-02 17:38:41	PlasmaHH	no matter what that op[] does, you have to create that "tuple" object you pass around somehow
2014-10-02 17:38:42		hellangel7 (~hellangel@117.192.170.146) has quit (Read error: Connection reset by peer)
2014-10-02 17:38:47		neunon (znc@unaffiliated/neunon) has quit (Ping timeout: 250 seconds)
2014-10-02 17:38:52	K-ballo	no...
2014-10-02 17:39:02		RazielZ (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 258 seconds)
2014-10-02 17:39:03		gelignite (~gelignite@i5387A2A1.versanet.de) has quit (Ping timeout: 258 seconds)
2014-10-02 17:39:24		mrevil (~mrevil@12.111.84.106) has quit (Remote host closed the connection)
2014-10-02 17:39:41		CJKay[Work] (~CJKay@unaffiliated/cjkay) has joined ##c++
2014-10-02 17:39:53		neunon (znc@unaffiliated/neunon) has joined ##c++
2014-10-02 17:40:00		j`ey (~joey@unaffiliated/jey/x-00002) has left ##c++
2014-10-02 17:40:01		mrevil (~mrevil@12.111.84.106) has joined ##c++
2014-10-02 17:40:42	PlasmaHH	so you create your index object in a way that using and passing it doesnt need it to be created?
2014-10-02 17:40:43	K-ballo	PlasmaHH: where is that "tuple" object here: http://goo.gl/9MyaGm
2014-10-02 17:41:18	PlasmaHH	K-ballo: its called "index", look at line 3, that begins with "struct index"
2014-10-02 17:42:02	K-ballo	PlasmaHH: heh, I see you are already resorting to those tactics.. promising... note that I said "tuple object", I don't see a tuple object in line 3
2014-10-02 17:42:11		aboudreault (~aboudreau@osgeo/member/aboudreault) has joined ##c++
2014-10-02 17:42:36	PlasmaHH	K-ballo: oh I am very sorry that I didnt name it correctly. Are you happy when I name it "index" object, because thats such a much cooler name?
2014-10-02 17:43:16	K-ballo	PlasmaHH: I find the coolness of the name to be orthogonal, where is that overhead that you talk about?
2014-10-02 17:44:09	--	zwer_v is now known as zwer
2014-10-02 17:45:17	hs_	I think he is worried about your parameter being unnecessarily created
2014-10-02 17:45:39	hs_	but of course index could just have const& parameters and operator[] could accept index const&
2014-10-02 17:45:41	PlasmaHH	K-ballo: so you are saying that because you found an example where the compiler luckily inlined all your things, there is never any overhead? good luck making y an std::string then
2014-10-02 17:46:30	K-ballo	PlasmaHH: ok, where's the overhead now http://goo.gl/W2YbTb ?
2014-10-02 17:46:33	PlasmaHH	hs_: even then it has to be created, unless you can guarantee that it is completely inlined away, which you can not, especially when the definition of op[] is in another TU or just too big or whatever op[] calls is inlined in it
2014-10-02 17:46:50		askatasuna (~askatasun@181.30.10.50) has quit (Ping timeout: 245 seconds)
2014-10-02 17:47:07	K-ballo	as I said before, if that's a situation and it really matters, make op[] a facade for a regular function call
2014-10-02 17:47:42	PlasmaHH	K-ballo: I think we already established that you dont consider the creation of the std::stirng there an overhead. so there is none for your definition.
2014-10-02 17:47:45		Mannn (~Mannn____@cpe-66-69-232-149.austin.res.rr.com) has joined ##c++
2014-10-02 17:48:13	K-ballo	PlasmaHH: I don't really understand you... if I want to have a string as an argument then I have to create one string, if I don't then I don't ... so I gave you two examples
2014-10-02 17:49:03	K-ballo	are you saying the overhead is having a string argument when in fact your index is an int or a foo? because that's not an overhead, that's brain dead code
2014-10-02 17:49:08		o-O-o (36f0c4ba@gateway/web/freenode/ip.54.240.196.186) has joined ##c++
2014-10-02 17:49:28	K-ballo	scratch the string or char const*, make it a foo, a complex and a vector
2014-10-02 17:49:30		mac_ified (~mac_ified@rrcs-24-227-77-162.se.biz.rr.com) has quit (Ping timeout: 246 seconds)
2014-10-02 17:50:15	PlasmaHH	K-ballo: it may surprise you that there are programs where the string already exists somewhere. http://goo.gl/b4zYEH is a much better example. but well, the copy is no overhead for you, ok. find. go for it.
2014-10-02 17:50:35	K-ballo	PlasmaHH: now we are talking! thank you, let me analyze that
2014-10-02 17:52:02	K-ballo	PlasmaHH: http://goo.gl/ekVPE3 good enough?
2014-10-02 17:52:33	hs_	{ niceref blah{24,"herro"}; string s = "hi"; int i = 10; foo(blah); foo({i,s}); foo({10,"hi"}); } struct niceref { int const& j; string const& s; }; void foo(niceref const&) { BARK; }
2014-10-02 17:52:34	geordi	foo(const niceref&) foo(const niceref&) foo(const niceref&)
2014-10-02 17:52:41	K-ballo	the gist of the thing is, whatever your n-ary parameters would be, wrap them in a struct
2014-10-02 17:53:12	hs_	PlasmaHH, I'm not sure I understand what could be inlined away in some other case, e.g., a function call
2014-10-02 17:53:16	PlasmaHH	K-ballo: only for that particular case. what if your op[] wont get inlined? or can you guarantee that it will be?
2014-10-02 17:53:18	K-ballo	in my example, my parameters where int and std::string
2014-10-02 17:53:58	K-ballo	PlasmaHH: yes, I can! I can move the actual logic of op[] to a regular function so I don't have to worry about it
2014-10-02 17:54:18	o-O-o	:)
2014-10-02 17:54:23	PlasmaHH	hs_: imagine the  op[] doing foo(i.x,i.y,i.z) ... now imagine foo gets inlined into op[] but that op is still being called... now instead of being able to use the variables that are already in your registers to call foo() (or an n-ary op[]), we have to create a struct on the stack and pass a pointer to that to op[]
2014-10-02 17:54:49	PlasmaHH	K-ballo: how do you prevent that the compiler inlines that function into op[] and calls op[]?
2014-10-02 17:54:51		PhlowWork (~Phlow@199.44.8.162) has quit
2014-10-02 17:55:23	K-ballo	PlasmaHH: tell me why would I care then?
2014-10-02 17:55:39	PlasmaHH	K-ballo: because it would be slower?
2014-10-02 17:55:49	PlasmaHH	K-ballo: well, *you* probably wouldnt...
2014-10-02 17:56:16	K-ballo	PlasmaHH: would you rather write void print(float real, float img) instead of void print(std::complex<float> c) ?
2014-10-02 17:56:22		Agd_Scorp (~Agd_Scorp@unaffiliated/agd-scorp/x-1847265) has joined ##c++
2014-10-02 17:56:27	Agd_Scorp	What is a buffer?
2014-10-02 17:56:28	K-ballo	because I don't really have to care about those things
2014-10-02 17:56:49	PlasmaHH	K-ballo: if the former is faster, yes I would.
2014-10-02 17:57:04		Mannn (~Mannn____@cpe-66-69-232-149.austin.res.rr.com) has quit (Ping timeout: 244 seconds)
2014-10-02 17:57:22	K-ballo	PlasmaHH: I guess you have weird hotspots...
2014-10-02 17:57:28	K-ballo	and weird compilers...
2014-10-02 17:58:05		Agd_Scorp (~Agd_Scorp@unaffiliated/agd-scorp/x-1847265) has quit (Client Quit)
2014-10-02 17:58:05	PlasmaHH	yes, gcc is weird
2014-10-02 17:58:06		vocodork_ (~vocoder@94-227-99-249.access.telenet.be) has joined ##c++
2014-10-02 17:58:29		zwer (~zwer@gateway/tor-sasl/zwer) has quit (Remote host closed the connection)
2014-10-02 17:58:43		vocodork (~vocoder@94-227-99-249.access.telenet.be) has quit (Ping timeout: 250 seconds)
2014-10-02 17:58:51		PSG_Luna_ (~PSG_Luna@unaffiliated/psg-luna/x-4025268) has quit (Read error: Connection reset by peer)
2014-10-02 17:59:11		ncd|leeN (~leeN@213.216.9.132) has joined ##c++
2014-10-02 17:59:40	PlasmaHH	when you do enough things, you run into certain corner cases that you will try to avoid in the future...
2014-10-02 17:59:54		starship (~duracrisi@unaffiliated/duracrisis) has quit (Read error: Connection reset by peer)
2014-10-02 17:59:57	PlasmaHH	just like never to use std::map<double,T> but trying to convince people to do that is likely futile
2014-10-02 18:00:23		starship (~duracrisi@unaffiliated/duracrisis) has joined ##c++
2014-10-02 18:00:31		mrevil (~mrevil@12.111.84.106) has quit (Remote host closed the connection)
2014-10-02 18:01:17		leeN (~leeN@213.216.9.132) has quit (Ping timeout: 258 seconds)
2014-10-02 18:02:37	wallbroken	is possible to use a function on another function in the same class?
2014-10-02 18:02:47	hs_	PlasmaHH, that's an interesting case
2014-10-02 18:03:07	PlasmaHH	wallbroken: w'ah?
2014-10-02 18:03:12	va	wallbroken: a(b(x))
2014-10-02 18:03:32	wallbroken	no
2014-10-02 18:03:39	PlasmaHH	a(b)?
2014-10-02 18:03:40		King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has quit (Read error: Connection reset by peer)
2014-10-02 18:03:58	hs_	PlasmaHH, I guess it can't really avoid the struct creation, can it
2014-10-02 18:04:22		jitsuin (~chatzilla@216.14.6.130) has quit (Quit: I EAT BABIES!!)
2014-10-02 18:04:36	wallbroken	class1::doSomething(){ class1::soSomethingElse()   }
2014-10-02 18:04:47	PlasmaHH	hs_: unless you can somehow guarantee op[] being inlined, you can not. of course you could argue that gcc has __attribute__((alwasy_inline)) or wahtever that was...
2014-10-02 18:06:09		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has joined ##c++
2014-10-02 18:06:17	va	wallbroken: yes, though you probably want class1::doSomething() { soSomethingElse(); }
2014-10-02 18:06:34	wallbroken	yes
2014-10-02 18:07:14	va	but, in the mathematical sense, that is in essence replacing a function rather than calling a function on a function.
2014-10-02 18:07:47		mrevil (~mrevil@12.111.84.106) has joined ##c++
2014-10-02 18:08:12		a_le_ (~a_le@nat/cisco/x-ohupegykughwgrlk) has quit (Read error: Connection reset by peer)
2014-10-02 18:08:34		a_le (~a_le@2001:420:28f:1254:c456:44:b405:7c7a) has joined ##c++
2014-10-02 18:09:47		kailoAtWork (~kailoAtWo@208.184.77.122) has quit (Ping timeout: 272 seconds)
2014-10-02 18:09:50		Dreadnaught (~Dreadnaug@tlug/member/kulrak) has joined ##c++
2014-10-02 18:10:37		Svetlana (quasselcor@freenode/staff/gry) has quit (Quit: re-connecting)
2014-10-02 18:10:39		a_le (~a_le@2001:420:28f:1254:c456:44:b405:7c7a) has quit (Remote host closed the connection)
2014-10-02 18:11:37		a_le (~a_le@2001:420:28f:1254:c456:44:b405:7c7a) has joined ##c++
2014-10-02 18:13:10		io2 (~io2@unaffiliated/irrequietus) has quit (Quit: ...take irc away, what are you? genius, billionaire, playboy, philanthropist)
2014-10-02 18:13:12	--	oleo is now known as Guest6399
2014-10-02 18:13:20		kailoAtWork (~kailoAtWo@208.184.77.122) has joined ##c++
2014-10-02 18:13:58		cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-10-02 18:14:03	PlasmaHH	hs_: fun starts when people start arguing that the compiler is broken for the map<double case
2014-10-02 18:14:09		BlaXpirit (~blaxpirit@131-144-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-10-02 18:15:08		oleo__ (~oleo@xdsl-78-35-173-44.netcologne.de) has joined ##c++
2014-10-02 18:16:45		Guest6399 (~oleo@xdsl-87-79-199-39.netcologne.de) has quit (Ping timeout: 272 seconds)
2014-10-02 18:17:03	hs_	wait, what's wrong with map<double,T>?
2014-10-02 18:17:31	PlasmaHH	given the right circumstances, it will crash.
2014-10-02 18:17:48	PlasmaHH	(because of multiple nodes having the same key value)
2014-10-02 18:18:14	jfcaron	Because different doubles have the same hash or something?
2014-10-02 18:18:38	PlasmaHH	there is no hashing involved, only op<
2014-10-02 18:18:53	jfcaron	Or just because people *think* they are putting in different doubles, but in fact they are not distinguishable?
2014-10-02 18:19:07	PlasmaHH	nah, that happens too, but it wont crash due to peoples thinking
2014-10-02 18:20:15		hs366 (~ACE@94.254.45.76) has quit (Read error: Connection reset by peer)
2014-10-02 18:20:41		jophish (~jophish@hermi.gotadsl.co.uk) has joined ##c++
2014-10-02 18:20:59		aslant (~aslant@5751a00f.skybroadband.com) has quit (Remote host closed the connection)
2014-10-02 18:22:07		asakura (~asakura@gateway/tor-sasl/asakura) has quit (Ping timeout: 264 seconds)
2014-10-02 18:22:10		francisl (~flavoie@NFBONF.NFB.CA) has quit (Ping timeout: 245 seconds)
2014-10-02 18:22:25		degva (~degva@181.177.248.176) has joined ##c++
2014-10-02 18:22:37		deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-10-02 18:22:59		francisl (~flavoie@199.84.162.127) has joined ##c++
2014-10-02 18:24:05		TheBloke (~TheBloke@host86-163-7-114.range86-163.btcentralplus.com) has joined ##c++
2014-10-02 18:24:21		ValicekB (~tbox@dot.snat.baz.cz) has quit (Ping timeout: 245 seconds)
2014-10-02 18:24:34		asakura (~asakura@gateway/tor-sasl/asakura) has joined ##c++
2014-10-02 18:25:37		a_le (~a_le@2001:420:28f:1254:c456:44:b405:7c7a) has quit (Remote host closed the connection)
2014-10-02 18:26:15		a_le (~a_le@nat/cisco/x-aypakvwqalkpikpp) has joined ##c++
2014-10-02 18:27:15		francisl (~flavoie@199.84.162.127) has quit (Ping timeout: 245 seconds)
2014-10-02 18:27:37		Mannn (~Mannn____@cpe-66-69-232-149.austin.res.rr.com) has joined ##c++
2014-10-02 18:30:10		ValicekB (~tbox@dot.snat.baz.cz) has joined ##c++
2014-10-02 18:30:12		alex10791 (~alex10791@0189800493.0.fullrate.dk) has joined ##c++
2014-10-02 18:30:14		gelignite (~gelignite@i5387A2A1.versanet.de) has joined ##c++
2014-10-02 18:31:36	PlasmaHH	{ set<double> s; s.insert(cos(2.5)); register double c = cos(2.5); cout << s.count(cos(c)); } // hs_ this should sufficiently demonstrate the problem.
2014-10-02 18:31:36	geordi	0
2014-10-02 18:32:00		ValicekB (~tbox@dot.snat.baz.cz) has quit (Excess Flood)
2014-10-02 18:32:28		ValicekB (~tbox@dot.snat.baz.cz) has joined ##c++
2014-10-02 18:32:57	K-ballo	darn buggy implementations :)
2014-10-02 18:33:28		seishun (~Kakera@78.84.152.96) has quit (Ping timeout: 260 seconds)
2014-10-02 18:33:29	hs_	you mean s.count(c)?
2014-10-02 18:34:03	K-ballo	I think he refers to the extra precision doubles get in registers, which was deemed non-conformant more than once at the reflectors
2014-10-02 18:34:31		ObjectiveMatt (~Objective@66.87.150.108) has joined ##c++
2014-10-02 18:34:32	K-ballo	on the other hand, the situation is understandable, even when it contradicts the standard
2014-10-02 18:34:51	hs_	-w { set<double> s; s.insert(cos(2.5)); register double c = cos(2.5); cout << s.count(c); } // extra precision they _can_ get?
2014-10-02 18:35:02	hs_	geordi, -w { set<double> s; s.insert(cos(2.5)); register double c = cos(2.5); cout << s.count(c); } // extra precision they _can_ get?
2014-10-02 18:35:02	geordi	1
2014-10-02 18:35:55		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2014-10-02 18:36:12	PlasmaHH	maybe I am too tired, or maybe geordi isnt running with optimizations
2014-10-02 18:36:16	hs_	so the general floating point identity crisis?
2014-10-02 18:36:22	PlasmaHH	not really
2014-10-02 18:36:29	PlasmaHH	set uses only op< so it should work
2014-10-02 18:36:47	va	hs_: sounds like -fpic
2014-10-02 18:36:48	PlasmaHH	however when things get inlined, op< compares the register with 80bit precision with the memory stored value of 64bit precision
2014-10-02 18:37:01		Betal (~Beta@unaffiliated/betal) has quit (Ping timeout: 272 seconds)
2014-10-02 18:37:16	PlasmaHH	when you force the operand through memory, e.g. by putting it into a volatile, things work again. but who wants to do that all the time...
2014-10-02 18:37:36	PlasmaHH	on gcc using long double instead works, but not on msvc
2014-10-02 18:38:59	K-ballo	or maybe theyve fixed it
2014-10-02 18:39:35	PlasmaHH	"they"?
2014-10-02 18:40:11	K-ballo	gcc
2014-10-02 18:40:15	hs_	so the idea is, the 80bit might compare < (or vice versa) to the 64bit, inserts, but inserts as the same (now converted) 64 bit key?
2014-10-02 18:40:36	PlasmaHH	at leas tin gcc 4.9.1 it still behaves that way with opt
2014-10-02 18:40:40		plamen (user@nat/mslo/x-zrkgkxreyqmvvkmo) has quit (Quit: ERC Version 5.3 (IRC client for Emacs))
2014-10-02 18:40:41	K-ballo	as I said before, the magic changing of precision is not standard conformant
2014-10-02 18:40:51	PlasmaHH	hs_: exactly. so you end up with two nodes with the same 64bit value
2014-10-02 18:41:07	hs_	lovely
2014-10-02 18:41:13	hs_	stupid compiler!!
2014-10-02 18:41:24	PlasmaHH	more like intresting architecture
2014-10-02 18:41:26	Bursihido	de:
2014-10-02 18:41:27	hs_	hehe
2014-10-02 18:41:28	Bursihido	Code: C
2014-10-02 18:41:30	Bursihido	/*
2014-10-02 18:41:32	Bursihido	 * Author: flowjob [from EvilZone.org]
2014-10-02 18:41:34	Bursihido	 * Version: 0.2
2014-10-02 18:41:36	Bursihido	 * Description:
2014-10-02 18:41:37	--	Mode ##c++ [+o PlasmaHH] by ChanServ
2014-10-02 18:41:38	Bursihido	 *      C++ port of a python script
2014-10-02 18:41:39		eean (~quassel@amarok/developer/eean) has quit (Read error: Connection reset by peer)
2014-10-02 18:41:40	Bursihido	 *      I wrote for an IT class, that
2014-10-02 18:41:41	K-ballo	Bursihido: NO
2014-10-02 18:41:41		PlasmaHH has kicked Bursihido (Bursihido)
2014-10-02 18:41:43	hs_	noopasteughbwf
2014-10-02 18:41:45	hs_	myeyes
2014-10-02 18:41:48		eean (~quassel@amarok/developer/eean) has joined ##c++
2014-10-02 18:41:55		ambro718 (~ambro@gentoo/contributor/ambro718) has quit (Ping timeout: 258 seconds)
2014-10-02 18:42:03	hs_	probably an accident, hehe
2014-10-02 18:42:35	@PlasmaHH	hs_: the problem here is that the compilers can not do much, unless they want to massively degrade performance
2014-10-02 18:42:41		Bursihido (~Bursihido@unaffiliated/bursihido) has joined ##c++
2014-10-02 18:42:47	Bursihido	ops
2014-10-02 18:42:52	Bursihido	sorry about that ..
2014-10-02 18:42:57	hs_	PlasmaHH, I was teasing (you said you loved it when people blamed the compiler)
2014-10-02 18:43:18	@PlasmaHH	hs_: I love everything that gets us to the heat death of the universe earlier
2014-10-02 18:43:31	--	Mode ##c++ [-o PlasmaHH] by PlasmaHH
2014-10-02 18:43:39	PlasmaHH	this also means I go to bed now, bye
2014-10-02 18:43:44	hs_	ciao
2014-10-02 18:47:11		dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-10-02 18:47:32	a_le	anyone has any clue why I am getting this error? https://gist.github.com/sandr8/aaad31e4810c7121cdc2
2014-10-02 18:48:02	K-ballo	a_le: because you are not linking to whatever library defines that symbol?
2014-10-02 18:48:22		bitlord (~bitlord@unaffiliated/bitlord) has quit (Quit: bitlord)
2014-10-02 18:48:23		PlasmaHH (~kvirc@speedy.projectiwear.org) has quit (Ping timeout: 260 seconds)
2014-10-02 18:48:23		govg (~govg@unaffiliated/govg) has joined ##c++
2014-10-02 18:48:27	a_le	K-ballo: I am
2014-10-02 18:48:34	a_le	and it's finding all of its other symbols
2014-10-02 18:48:44		mrevil (~mrevil@12.111.84.106) has quit (Remote host closed the connection)
2014-10-02 18:49:02		Jesin (~Jesin@r192085.res.Lehigh.EDU) has quit (Quit: Leaving)
2014-10-02 18:49:26		Jesin (~Jesin@r192085.res.Lehigh.EDU) has joined ##c++
2014-10-02 18:50:33		pmenon (~pmenon@TOROON0246W-LP140-02-1176216706.dsl.bell.ca) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-02 18:51:09		deekej (~deekej@195.65.3.245) has quit (Remote host closed the connection)
2014-10-02 18:51:41		puish (~puish@unaffiliated/jonbryan) has joined ##c++
2014-10-02 18:52:13		Blue_Hat (~Blue_Hat@66.54.118.116) has quit (Ping timeout: 272 seconds)
2014-10-02 18:53:29		crewshin (~crewshin@wsip-70-183-63-66.oc.oc.cox.net) has quit
2014-10-02 19:26:39		dagnachew (~dagnachew@bas1-montreal30-2925417210.dsl.bell.ca) has joined ##c++
2014-10-02 19:26:39	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-02 19:26:39	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-02 19:26:39	--	Channel ##c++: 505 nicks (0 ops, 0 voices, 505 normals)
2014-10-02 19:26:39	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-02 19:26:46		Sc0tty- (~Scottyyy@81.168.24.241) has quit
2014-10-02 19:26:48	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-02 19:27:03		plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-10-02 19:27:29		sohail (~user@unaffiliated/sohail) has quit (Ping timeout: 244 seconds)
2014-10-02 19:28:47		gelignite (~gelignite@i5387A2A1.versanet.de) has quit (Quit: http://bit.ly/nkczDT)
2014-10-02 19:29:51		TheFuzzball (~TheFuzzba@cpc4-ward10-2-0-cust737.10-2.cable.virginm.net) has quit (Quit: Computer has gone to sleep.)
2014-10-02 19:30:34	masterkorp	Guys, what techines do you recomend for debuging a segmentation fault ?
2014-10-02 19:31:30	xico	gdb
2014-10-02 19:31:40	xico	:)
2014-10-02 19:33:51		snyp (~snyp@150.129.132.178) has joined ##c++
2014-10-02 19:35:19	Chris	A debugger
2014-10-02 19:35:34	masterkorp	For a complete noob, (on C++) do you recomend any tutorial ?
2014-10-02 19:35:39		hexagoxel_ (~hexagoxel@kiel-5f76948d.pool.mediaWays.net) has joined ##c++
2014-10-02 19:35:39	masterkorp	Linux user
2014-10-02 19:35:54	Chris	a web search for gdb documentation should suffice.
2014-10-02 19:35:55	masterkorp	I like to use the command line directly
2014-10-02 19:36:03	Oxyd	Then man gdb
2014-10-02 19:36:10	Chris	man gdb isn't particularly useful
2014-10-02 19:36:22	Oxyd	But it is directly on your command line.
2014-10-02 19:36:31	Chris	it's a start
2014-10-02 19:36:33		K-ballo (~sonoio@181.228.139.31) has quit (Read error: Connection reset by peer)
2014-10-02 19:36:34	Chris	the web based gdb docs are far more comprehensive
2014-10-02 19:36:37	masterkorp	most man pages are usefull when you know what you are looking for imho
2014-10-02 19:36:44	Chris	masterkorp: just read the gdb docs.
2014-10-02 19:36:50	masterkorp	but thanks, i will ask them mister googles
2014-10-02 19:38:23		hexagoxel (~hexagoxel@kiel-5f77b558.pool.mediaWays.net) has quit (Ping timeout: 250 seconds)
2014-10-02 19:39:43	tsimpson	it's generally easier to debug from an IDE interface rather than with gdb directly
2014-10-02 19:40:48		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2014-10-02 19:41:00		torei (~manjaro-k@70-91-211-237-BusName-Augusta.hfc.comcastbusiness.net) has quit (Quit: Manjaro-KDE user leaving!)
2014-10-02 19:41:20	--	oleo__ is now known as oleo
2014-10-02 19:41:35		aslant (~aslant@host109-148-172-121.range109-148.btcentralplus.com) has quit (Remote host closed the connection)
2014-10-02 19:42:11		thejohnfreeman (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has quit (Ping timeout: 272 seconds)
2014-10-02 19:42:24	masterkorp	clewn looks interesting
2014-10-02 19:44:52		magic (~magic@unaffiliated/auv5) has quit (Ping timeout: 260 seconds)
2014-10-02 19:44:56		Rslc (rslc@82-69-84-226.dsl.in-addr.zen.co.uk) has quit (Ping timeout: 260 seconds)
2014-10-02 19:45:01		K-ballo (~sonoio@181.228.139.31) has joined ##c++
2014-10-02 19:46:51		EvilPenguin (~EvilPengu@ultramain.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-10-02 19:46:51		Rslc (rslc@82-69-84-226.dsl.in-addr.zen.co.uk) has joined ##c++
2014-10-02 19:49:47		Rslc_s (rslc@82-69-84-226.dsl.in-addr.zen.co.uk) has joined ##c++
2014-10-02 19:49:47		Rslc (rslc@82-69-84-226.dsl.in-addr.zen.co.uk) has quit (Disconnected by services)
2014-10-02 19:49:47	--	Rslc_s is now known as Rslc
2014-10-02 19:50:11		aslant (~aslant@host109-148-172-121.range109-148.btcentralplus.com) has joined ##c++
2014-10-02 19:50:34		Longlius (~longlius@141.225.91.203) has joined ##c++
2014-10-02 19:57:13		thejohnfreeman (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has joined ##c++
2014-10-02 19:59:04		fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-10-02 19:59:26		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-10-02 19:59:54		Garner (uid38417@gateway/web/irccloud.com/x-zdqlfqpgdfujlsdd) has quit (Quit: Connection closed for inactivity)
2014-10-02 20:03:22		SibTiger[Tablet] (~Nicholas@199-96-202-110.fidnet.com) has joined ##c++
2014-10-02 20:03:59		degva (~degva@181.177.248.176) has quit (Ping timeout: 260 seconds)
2014-10-02 20:04:06		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has joined ##c++
2014-10-02 20:04:31		TomyLobo (~TomyLobo@91.65.115.103) has quit (Quit: Standby mode...)
2014-10-02 20:05:16		fr33domlover (~fr33domlo@fsf/member/fr33domlover) has quit (Quit: fr33domlover)
2014-10-02 20:05:55	--	irc: disconnected from server
2014-10-03 11:06:45		dagnachew (~dagnachew@bas1-montreal30-2925417210.dsl.bell.ca) has joined ##c++
2014-10-03 11:06:45	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-03 11:06:45	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-03 11:06:45	--	Channel ##c++: 521 nicks (0 ops, 0 voices, 521 normals)
2014-10-03 11:06:45	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-03 11:06:53	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-03 11:06:56		Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-10-03 11:06:58		VaNNi (~bugz@dti-rtr.wtc.aerioconnect.net) has joined ##c++
2014-10-03 11:07:36		Ulrike_Rayne (~Ulrike_Ra@cpe-65-24-84-7.columbus.res.rr.com) has quit (Ping timeout: 246 seconds)
2014-10-03 11:08:00		syncrow_ (syncrow@unaffiliated/syncrow) has quit (Quit: leaving)
2014-10-03 11:08:12		DexterLB (~dex@79-100-13-124.btc-net.bg) has quit (Read error: Connection reset by peer)
2014-10-03 11:09:18		aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-10-03 11:09:48		Ulrike_Rayne (~Ulrike_Ra@cpe-65-24-84-7.columbus.res.rr.com) has joined ##c++
2014-10-03 11:10:14		adek (~adek@S010678cd8e7c9c40.vc.shawcable.net) has quit (Ping timeout: 272 seconds)
2014-10-03 11:11:56		xico (~xico@cpe-76-88-16-80.san.res.rr.com) has joined ##c++
2014-10-03 11:12:30		D0cN3x (~Thunderbi@dslb-178-007-208-092.178.007.pools.vodafone-ip.de) has joined ##c++
2014-10-03 11:13:14		Nando_k (~Nando_k@dyndsl-178-142-071-096.ewe-ip-backbone.de) has joined ##c++
2014-10-03 11:13:39		DexterLB (~dex@79-100-13-124.btc-net.bg) has joined ##c++
2014-10-03 11:14:56		g4r37h (~g4r37h@host86-153-58-203.range86-153.btcentralplus.com) has joined ##c++
2014-10-03 11:16:17		jj995_ (420380d2@gateway/web/freenode/ip.66.3.128.210) has quit (Quit: Page closed)
2014-10-03 11:16:45		Oxyd (~oxyd@pdpc/supporter/student/oxyd) has quit (Quit: Vanitas vanitatum et omnia vanitas.)
2014-10-03 11:17:00		aslant (~aslant@37.157.33.76) has joined ##c++
2014-10-03 11:18:29		Oxyd (~oxyd@pdpc/supporter/student/oxyd) has joined ##c++
2014-10-03 11:18:41		e2718 (~hdesk@p4FD37425.dip0.t-ipconnect.de) has joined ##c++
2014-10-03 11:20:00		DexterLB (~dex@79-100-13-124.btc-net.bg) has quit (Read error: Connection reset by peer)
2014-10-03 11:23:24		madist (madist@unaffiliated/madist) has quit (Quit: Leaving)
2014-10-03 11:23:56		Dreadnaught (~Dreadnaug@tlug/member/kulrak) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-10-03 11:25:10		DexterLB (~dex@79-100-13-124.btc-net.bg) has joined ##c++
2014-10-03 11:25:56		dreampwnzor (~dreampwnz@unaffiliated/dreampwnzor) has joined ##c++
2014-10-03 11:26:43		safinaskar (~user@178.204.60.253) has joined ##c++
2014-10-03 11:27:16		tkhoa2711 (~tkhoa2711@bb116-15-160-95.singnet.com.sg) has joined ##c++
2014-10-03 11:27:28	safinaskar	geordi: int main(){}
2014-10-03 11:27:28	geordi	<no output>
2014-10-03 11:27:30		avvs (~avvs@gateway/tor-sasl/avvs) has quit (Remote host closed the connection)
2014-10-03 11:27:37		Darth_Ginger (~Thunderbi@cpe-74-138-187-42.swo.res.rr.com) has joined ##c++
2014-10-03 11:28:17		Draecos (~Draecos@106-68-94-228.dyn.iinet.net.au) has quit (Quit: This computer has gone to sleep)
2014-10-03 11:29:22		alex10791 (~alex10791@0189800493.0.fullrate.dk) has joined ##c++
2014-10-03 11:29:50		oleo (~oleo@xdsl-78-35-155-17.netcologne.de) has quit (Quit: Verlassend)
2014-10-03 11:29:51		irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has joined ##c++
2014-10-03 11:31:05		comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has joined ##c++
2014-10-03 11:32:11		oleo (~oleo@xdsl-78-35-155-17.netcologne.de) has joined ##c++
2014-10-03 11:32:48		ambro718 (~ambro@gentoo/contributor/ambro718) has joined ##c++
2014-10-03 11:33:26		jzp113 (~jzp113@210.30.14.110) has quit (Quit: Leaving)
2014-10-03 11:33:45		comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has quit (Client Quit)
2014-10-03 11:34:05		t0rc (~t0rc@unaffiliated/t0rc/x-5233201) has joined ##c++
2014-10-03 11:34:07		TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Quit: Ex-Chat)
2014-10-03 11:34:20		comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has joined ##c++
2014-10-03 11:35:59		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has joined ##c++
2014-10-03 11:36:50		hyperair (~hyperair@ubuntu/member/hyperair) has quit (Ping timeout: 245 seconds)
2014-10-03 11:36:52		francisl (~flavoie@NFBONF.NFB.CA) has quit (Quit: francisl)
2014-10-03 11:38:04		Fiki (~Fiki@chello080109027244.17.14.wu-wien.teleweb.at) has joined ##c++
2014-10-03 11:38:09		n0vacane (~pi@unaffiliated/n0vacane) has quit (Quit: Lost terminal)
2014-10-03 11:38:10		hyperair (~hyperair@ubuntu/member/hyperair) has joined ##c++
2014-10-03 11:40:03		madist (madist@unaffiliated/madist) has joined ##c++
2014-10-03 11:40:37		adek (~adek@S010678cd8e7c9c40.vc.shawcable.net) has joined ##c++
2014-10-03 11:41:56		Sadale (~Sadale@unaffiliated/sadale) has quit (Quit: bye)
2014-10-03 11:42:24		basic6 (~basic6@p4FCB6D80.dip0.t-ipconnect.de) has joined ##c++
2014-10-03 11:44:33		xyz (~xyz@2a01:4f8:200:9164::2) has joined ##c++
2014-10-03 11:44:52		basic6_ (~basic6@p3E9EE179.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2014-10-03 11:45:24		Fiki (~Fiki@chello080109027244.17.14.wu-wien.teleweb.at) has quit (Quit: Leaving)
2014-10-03 11:45:45		Fiki (~Fiki@chello080109027244.17.14.wu-wien.teleweb.at) has joined ##c++
2014-10-03 11:47:15		shintahW (~oer894n@c83-248-102-44.bredband.comhem.se) has quit (Read error: Connection reset by peer)
2014-10-03 11:47:25		Nando_k (~Nando_k@dyndsl-178-142-071-096.ewe-ip-backbone.de) has quit (Ping timeout: 240 seconds)
2014-10-03 11:48:00		hyperair (~hyperair@ubuntu/member/hyperair) has quit (Ping timeout: 272 seconds)
2014-10-03 11:49:00		kaffeetrauma (~Thunderbi@ip-109-91-85-220.hsi12.unitymediagroup.de) has quit (Quit: kaffeetrauma)
2014-10-03 11:49:20		syncrow (syncrow@unaffiliated/syncrow) has quit (Quit: Lost terminal)
2014-10-03 11:50:17		PSG_Luna (~PSG_Luna@unaffiliated/psg-luna/x-4025268) has quit (Read error: Connection reset by peer)
2014-10-03 11:51:35	Eelis	det: line discarding has been in geordi for years.
2014-10-03 11:51:54		Fogger (~Fogger@host81-152-117-95.range81-152.btcentralplus.com) has joined ##c++
2014-10-03 11:53:17		hyperair (~hyperair@ubuntu/member/hyperair) has joined ##c++
2014-10-03 11:54:32		safinaskar (~user@178.204.60.253) has quit (Quit: leaving)
2014-10-03 11:55:16		leeter (~leeter@unaffiliated/leeter) has quit (Quit: Leaving)
2014-10-03 11:56:48		surd (~surd@unaffiliated/surd) has joined ##c++
2014-10-03 11:58:55		adek (~adek@S010678cd8e7c9c40.vc.shawcable.net) has quit
2014-10-03 12:00:30		dvt (~dvt@65.112.10.222) has quit (Ping timeout: 244 seconds)
2014-10-03 12:03:24		reductor (3cf1b567@gateway/web/freenode/ip.60.241.181.103) has joined ##c++
2014-10-03 12:04:11		ambro718 (~ambro@gentoo/contributor/ambro718) has quit (Quit: Konversation terminated!)
2014-10-03 12:05:27		dvt (~dvt@65.112.10.222) has joined ##c++
2014-10-03 12:05:40		t0rc (~t0rc@unaffiliated/t0rc/x-5233201) has quit (Quit: WeeChat 1.0.1)
2014-10-03 12:07:01		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2014-10-03 12:07:43		BlaXpirit (~blaxpirit@108-114-132-95.pool.ukrtel.net) has joined ##c++
2014-10-03 12:08:46		Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2014-10-03 12:08:49	estan	hm. a question about move constructors / rvalue references.. this may be stupid, but how can i actually get a hold of the moved-from object? doesn't it always die immediately after the expression/statement in which it occurs?
2014-10-03 12:09:09	estan	i'd like to unit test that i'm leaving the moved-from object in a certain state.
2014-10-03 12:09:43	Erlkoenig	vector<int> a {1, 2, 3, 4};  vector<int> b; b = std::move (a); assert(a.empty ());
2014-10-03 12:09:45	hs_	if you pass a temporary it will die, but you could pass a non-temporary with std::move
2014-10-03 12:09:50	Erlkoenig	{ vector<int> a {1, 2, 3, 4};  vector<int> b; b = std::move (a); assert(a.empty ()); }
2014-10-03 12:09:50	geordi	<no output>
2014-10-03 12:10:07	estan	ah. of course. thanks to you both.
2014-10-03 12:11:11		tkhoa2711 (~tkhoa2711@bb116-15-160-95.singnet.com.sg) has quit (Quit: tkhoa2711)
2014-10-03 12:11:15	lh_mouse	I don't think that assert will hold in all cases.
2014-10-03 12:11:39		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has joined ##c++
2014-10-03 12:11:42	estan	so that tests the move assignment operator? and vector<int> b(std::move(a)); could then be used to test my move constructor?
2014-10-03 12:11:50		W0rmDr1nk (~wormdrink@unaffiliated/wormdrink) has quit (Ping timeout: 245 seconds)
2014-10-03 12:11:55	hs_	right
2014-10-03 12:12:05	estan	okeli.
2014-10-03 12:12:43	estan	yea, i don't know what exact guarantees the standard library gives. but in my case i just want to test that my moved-from container is left in a default constructed state.
2014-10-03 12:12:57	estan	(i'm not writing unit tests for std::vector here :) )
2014-10-03 12:12:59		interop_madness (~invalid@unaffiliated/interop-madness/x-8858653) has quit (Quit: Leaving)
2014-10-03 12:13:24		Betal (~Beta@unaffiliated/betal) has joined ##c++
2014-10-03 12:15:20		lh_mouse (~lh_mouse@116.230.229.246) has quit (Read error: Connection reset by peer)
2014-10-03 12:15:58		toster (~lurker@109.110.16.192) has joined ##c++
2014-10-03 12:16:14		toster (~lurker@109.110.16.192) has left ##c++ ("so long, suckers!")
2014-10-03 12:16:29		Fiki (~Fiki@chello080109027244.17.14.wu-wien.teleweb.at) has quit (Read error: Connection reset by peer)
2014-10-03 12:16:52	hht	\hi
2014-10-03 12:19:11		DTSCode (~dtscode@174.134.25.153) has joined ##c++
2014-10-03 12:20:48		tworkin (~Adium@97.77.193.138) has joined ##c++
2014-10-03 12:22:00		degva (~degva@181.177.248.176) has joined ##c++
2014-10-03 12:23:11		reductor (3cf1b567@gateway/web/freenode/ip.60.241.181.103) has quit (Quit: Page closed)
2014-10-03 12:24:46		e2718 (~hdesk@p4FD37425.dip0.t-ipconnect.de) has quit (Quit: Konversation terminated!)
2014-10-03 12:25:50		clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Quit: WeeChat 1.0)
2014-10-03 12:26:07		biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has quit (Remote host closed the connection)
2014-10-03 12:28:32		prc (~prc@host-78-148-243-191.as13285.net) has quit (Ping timeout: 272 seconds)
2014-10-03 12:28:33		prc1 (~prc@host-92-16-103-177.as13285.net) has joined ##c++
2014-10-03 12:28:34		tkhoa2711 (~tkhoa2711@bb116-15-160-95.singnet.com.sg) has joined ##c++
2014-10-03 12:29:35		bitlord (~bitlord@unaffiliated/bitlord) has joined ##c++
2014-10-03 12:30:24		Darth_Ginger (~Thunderbi@cpe-74-138-187-42.swo.res.rr.com) has quit (Remote host closed the connection)
2014-10-03 12:31:01		ambro718 (~ambro@gentoo/contributor/ambro718) has joined ##c++
2014-10-03 12:31:45		Darth_Ginger (~Thunderbi@cpe-74-138-187-42.swo.res.rr.com) has joined ##c++
2014-10-03 12:32:05		MulleDK19 (~MulleDK19@0120000080.0.fullrate.dk) has quit (Read error: Connection reset by peer)
2014-10-03 12:33:07		ishid (~ishid@198.151.130.218) has joined ##c++
2014-10-03 12:33:12		hellangel7 (~hellangel@117.216.151.226) has joined ##c++
2014-10-03 12:33:37		MulleDK19 (~MulleDK19@0120000080.0.fullrate.dk) has joined ##c++
2014-10-03 12:35:51		o-O-o (36f0c4ba@gateway/web/freenode/ip.54.240.196.186) has joined ##c++
2014-10-03 12:37:02		sungnyc (~sungnyc@unaffiliated/sungnyc) has joined ##c++
2014-10-03 12:38:14		Gapbrick (~gap@unaffiliated/gapbrick) has joined ##c++
2014-10-03 12:38:37		skfax (c147b472@gateway/web/freenode/ip.193.71.180.114) has quit (Ping timeout: 246 seconds)
2014-10-03 12:42:15		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2014-10-03 12:44:54		da2ce7 (~da2ce7@opentransactions/dev/da2ce7) has joined ##c++
2014-10-03 12:45:00		dvt (~dvt@65.112.10.222) has quit (Ping timeout: 272 seconds)
2014-10-03 12:46:26		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has joined ##c++
2014-10-03 12:47:14		mrevil (~mrevil@c-76-126-201-83.hsd1.ca.comcast.net) has joined ##c++
2014-10-03 12:47:53		da2ce7 (~da2ce7@opentransactions/dev/da2ce7) has quit (Client Quit)
2014-10-03 12:50:27		aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-10-03 12:51:43		scai (~scai@p54B6349D.dip0.t-ipconnect.de) has joined ##c++
2014-10-03 12:51:57		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-10-03 12:53:37		MulleDK20 (~MulleDK19@0120000080.0.fullrate.dk) has joined ##c++
2014-10-03 12:54:22		sungnyc (~sungnyc@unaffiliated/sungnyc) has quit (Quit: leaving)
2014-10-03 12:54:24		MulleDK19 (~MulleDK19@0120000080.0.fullrate.dk) has quit (Ping timeout: 260 seconds)
2014-10-03 12:55:12		vol4ko (~vol4ko@unaffiliated/vol4ko) has joined ##c++
2014-10-03 12:55:31	vol4ko	guys
2014-10-03 12:55:42	vol4ko	how hard is to code alarm clock program in c++ with QT?
2014-10-03 12:55:53	vol4ko	First, is it possible?
2014-10-03 12:56:14	ville	i would say yellow difficulty
2014-10-03 12:56:34	vol4ko	and what color you will codename as very difficult?
2014-10-03 12:57:04	Erlkoenig	black of course
2014-10-03 12:57:20	tworkin	vol4ko: checkered magenta + neon purple
2014-10-03 12:57:31		tkhoa2711 (~tkhoa2711@bb116-15-160-95.singnet.com.sg) has quit (Quit: tkhoa2711)
2014-10-03 12:57:45	wallbroken	guys, i'm writing a function that gets and integer from input and should print in cout the respective message from a file, how should i do that?
2014-10-03 12:57:56	ville	!give vol4ko general
2014-10-03 12:57:57	vol4ko	I am going to write my alarm
2014-10-03 12:57:57	nolyc	vol4ko: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-10-03 12:58:22	Gapbrick	vol4ko, I would say, for you it will be very difficult, because you doubt the possibility of programming an alarm clock
2014-10-03 12:58:24	wallbroken	is there a file with: 1 message1, 2 message2, and so on...
2014-10-03 12:59:09		hexagoxel (~hexagoxel@kiel-5f76948d.pool.mediaWays.net) has joined ##c++
2014-10-03 12:59:15		aicasn (~aicasn@unaffiliated/aicasn) has joined ##c++
2014-10-03 12:59:33	Gapbrick	wallbroken, what are you talking about
2014-10-03 12:59:43		hell_razer (~textual@213.160.135.182) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-10-03 12:59:53	vol4ko	Gapbrick, you are smart!
2014-10-03 13:00:00	vol4ko	I am new to C++
2014-10-03 13:00:10	wallbroken	Gapbrick: display::out(int code)
2014-10-03 13:00:11	rfreeman_w	ville, I would rise it to terrorist red orange
2014-10-03 13:00:41	wallbroken	when i invoke out(3), out should find message num 3 from a txt file and print it to cout display
2014-10-03 13:01:35	ville	wallbroken: rather parse the text file into an std::map<int, std::string> where you do the lookup
2014-10-03 13:03:03		gelignite (~gelignite@i528C3B49.versanet.de) has quit (Quit: http://bit.ly/nkczDT)
2014-10-03 13:03:52		bayoubengal (~bayoubeng@38.96.130.98) has joined ##c++
2014-10-03 13:04:58	bayoubengal	afternoon
2014-10-03 13:05:03	aicasn	class A { public: A(int x); };  class B { public: B(int x); private: A _a[10]; };   how do you instantiate _a?
2014-10-03 13:05:22	aicasn	(with x from B's c'tor)
2014-10-03 13:08:35	bayoubengal	did you try something like a({A(x), A(x), A(x), A(x), A(x), A(x), A(x), A(x), A(x), A(x)}) in the initializer list?
2014-10-03 13:08:48	bayoubengal	not sure that will work, but its what I'd try.
2014-10-03 13:08:50	aicasn	no. the real example is 256, not 10 :)
2014-10-03 13:08:55	ville	aicasn: you can't.
2014-10-03 13:09:06	aicasn	ville: best alternative?
2014-10-03 13:09:26	bayoubengal	_a*
2014-10-03 13:09:52		Errorical (~Errorical@83.243.255.36) has joined ##c++
2014-10-03 13:10:40		dvt (~dvt@65.112.10.222) has joined ##c++
2014-10-03 13:10:41		mrevil (~mrevil@c-76-126-201-83.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2014-10-03 13:10:42	Erlkoenig	class A { public: A(int x); };  class B { public: B(int x) : _a (10, A(x)); private: vector<A> _a; };
2014-10-03 13:11:19		mrevil (~mrevil@2601:9:5080:948:4c5e:5056:cbba:c0e9) has joined ##c++
2014-10-03 13:13:12		dreampwnzor (~dreampwnz@unaffiliated/dreampwnzor) has quit (Quit: Leaving)
2014-10-03 13:14:26		bookmark (IceChat77@173.169.16.235) has quit (Read error: Connection reset by peer)
2014-10-03 13:14:35	ville	aicasn: what are you looking for?
2014-10-03 13:15:06	ville	aicasn: you could just std::fill() rather than try to initialize
2014-10-03 13:16:07		D0cN3x (~Thunderbi@dslb-178-007-208-092.178.007.pools.vodafone-ip.de) has quit (Quit: D0cN3x)
2014-10-03 13:16:31	aicasn	thanks
2014-10-03 13:17:00		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2014-10-03 13:17:23	MrFlibble	aicasn: use std::array
2014-10-03 13:17:35		EvilPenguin (~EvilPengu@ultramain.com) has joined ##c++
2014-10-03 13:17:45		ultrixx (~ultrixx@p5DC77495.dip0.t-ipconnect.de) has joined ##c++
2014-10-03 13:19:08	MrFlibble	std::uninitialized_fill
2014-10-03 13:20:18		prc1 (~prc@host-92-16-103-177.as13285.net) has quit (Quit: Leaving.)
2014-10-03 13:20:36		prc (~prc@host-92-16-103-177.as13285.net) has joined ##c++
2014-10-03 13:20:40	aicasn	so you cannot create an array of things that don't have a default constructor, correct?   class A { public: A(int x); } int main() { A a[10]; }
2014-10-03 13:21:24		Atque (~Atque@unaffiliated/atque) has left ##c++
2014-10-03 13:21:57	MrFlibble	you could derive a class from std::array
2014-10-03 13:22:18	aicasn	without runtime allocation
2014-10-03 13:22:35	MrFlibble	std::array isn't runtime allocation
2014-10-03 13:22:50	aicasn	sorry i was appending my own question
2014-10-03 13:24:14	MrFlibble	template <typename T, std::size_t N> class initialized_array : public std::array<T, N> { initialized_array(T defaultValue) { std::fill(begin(), end(), defaultValue); } };
2014-10-03 13:24:16	MrFlibble	or some such
2014-10-03 13:24:18		DTSCode (~dtscode@174.134.25.153) has quit (Quit: Leaving)
2014-10-03 13:24:39	MrFlibble	but doing that would be over engineering
2014-10-03 13:26:18	aicasn	yes i agree :)
2014-10-03 13:26:35		contempt (contempt@unaffiliated/contempt) has quit (Disconnected by services)
2014-10-03 13:26:36	aicasn	i'm just pushing the language too far. i have re-examined my approach and found another way
2014-10-03 13:26:40	stefandxm	there is no such thing as over engineering in c++ with templates
2014-10-03 13:27:14	MrFlibble	you could use my vecarray class
2014-10-03 13:27:16		contempt (contempt@unaffiliated/contempt) has joined ##c++
2014-10-03 13:27:31	aicasn	now i need to find a workaround for  int x = new int[a][b];  where a,b are non-const
2014-10-03 13:27:59	ville	!give aicasn silly matrix
2014-10-03 13:28:00	nolyc	aicasn: template<typename T> struct matrix { matrix(unsigned m, unsigned n) : m(m), n(n), vs(m*n) {} T& operator ()(unsigned i, unsigned j) { return vs[i + m * j]; } private: unsigned m; unsigned n; std::vector<T> vs; }; /* column-major/opengl: vs[i + m * j], row-major/c++: vs[n * i + j] */
2014-10-03 13:28:35		aslant (~aslant@37.157.33.76) has joined ##c++
2014-10-03 13:28:58		huckleberry78 (~huckleber@76.97.228.17) has quit (Remote host closed the connection)
2014-10-03 13:29:02	aicasn	interesting
2014-10-03 13:29:39		huckleberry78 (~huckleber@76.97.228.17) has joined ##c++
2014-10-03 13:31:14		mrevil (~mrevil@2601:9:5080:948:4c5e:5056:cbba:c0e9) has quit (Read error: Connection reset by peer)
2014-10-03 13:32:02		mrevil (~mrevil@c-76-126-201-83.hsd1.ca.comcast.net) has joined ##c++
2014-10-03 13:32:38		Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-10-03 13:34:17		huckleberry78 (~huckleber@76.97.228.17) has quit (Ping timeout: 258 seconds)
2014-10-03 13:34:18		hz (~hz@unaffiliated/hz) has joined ##c++
2014-10-03 13:39:55		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has joined ##c++
2014-10-03 13:43:46		kurahaupo (~kurahaupo@118.148.177.27) has joined ##c++
2014-10-03 13:44:17		mrevil (~mrevil@c-76-126-201-83.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-10-03 13:44:31		SiGe (~SiGe@usc-secure-wireless-207-014.usc.edu) has joined ##c++
2014-10-03 13:45:04		ishid` (~ishid@198.151.130.218) has joined ##c++
2014-10-03 13:45:18		JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-10-03 13:46:34		madist (madist@unaffiliated/madist) has quit (Quit: Leaving)
2014-10-03 13:47:32		soulcake (~soulcake@unaffiliated/soulcake) has quit (Ping timeout: 260 seconds)
2014-10-03 13:48:15		ishid (~ishid@198.151.130.218) has quit (Ping timeout: 246 seconds)
2014-10-03 13:48:50		degva (~degva@181.177.248.176) has quit (Ping timeout: 245 seconds)
2014-10-03 13:48:51		SiGe (~SiGe@usc-secure-wireless-207-014.usc.edu) has quit (Ping timeout: 258 seconds)
2014-10-03 13:49:39		ishid` (~ishid@198.151.130.218) has quit (Ping timeout: 246 seconds)
2014-10-03 13:50:20		D0cN3x (~Thunderbi@dslb-178-007-208-092.178.007.pools.vodafone-ip.de) has joined ##c++
2014-10-03 13:52:52		litb (~litb@p4FFD071D.dip0.t-ipconnect.de) has joined ##c++
2014-10-03 13:53:22	jfcaron	I'm reading about template metaprogramming.  I'm laughing imagining a "compile-time video game" that doesn't require user input, it just has a score hardcoded in the binary. =p
2014-10-03 13:53:27		aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-10-03 13:53:28		leeter (~leeter@unaffiliated/leeter) has joined ##c++
2014-10-03 13:53:39	jfcaron	You'd get an awesome frame rate too.
2014-10-03 13:54:14	xico	awesomr rate on a term emulator??
2014-10-03 13:54:16		soulcake (~soulcake@unaffiliated/soulcake) has joined ##c++
2014-10-03 13:54:34	xico	its too bad that tpl does not allow io
2014-10-03 13:54:57	xico	like haskell or such, it would be great
2014-10-03 13:55:00	hs_	jfcaron, I am pretty sure that is how games programmed in Haskell work too
2014-10-03 13:55:01		Rslc (rslc@82-69-84-226.dsl.in-addr.zen.co.uk) has joined ##c++
2014-10-03 13:55:10	hstefan	jfcaron: fun fact is that you'd be too old when it finished compiling
2014-10-03 13:55:12	hs_	since it is known that the result is equivalent to a table lookup
2014-10-03 13:55:20		hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-10-03 13:55:36		dvt (~dvt@65.112.10.222) has quit (Ping timeout: 246 seconds)
2014-10-03 13:55:41	jfcaron	strings compile_time_mmo.exe: "YOU LOSE!"
2014-10-03 13:57:54		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit
2014-10-03 13:58:02	jfcaron	Can you only use integer arithmetic in TMP?
2014-10-03 13:59:16		Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-10-03 14:00:07	io2	jfcaron: depends on what you are after
2014-10-03 14:00:42	io2	jfcaron: if you are trying to calculate a value, no; if you are going to use non-type doubles for example for some weird pattern matching based on value, forget about it
2014-10-03 14:00:43	xico	jfcaron: you can use constexpr for compile time float arithmetic
2014-10-03 14:00:49	io2	you will be pulling your teeth out
2014-10-03 14:01:20	xico	(maybe)
2014-10-03 14:01:37	io2	you can use it in constexpr with the same caveat emptor
2014-10-03 14:01:41		madist (madist@unaffiliated/madist) has joined ##c++
2014-10-03 14:01:47		SibTiger[Tablet] (~Nicholas@199-96-202-110.fidnet.com) has joined ##c++
2014-10-03 14:01:55	jfcaron	Well, I have a recursive template to evaluate a polynomial of order N where N is compile-time, but with runtime coefficients & argument.
2014-10-03 14:02:00		soulcake (~soulcake@unaffiliated/soulcake) has quit (Ping timeout: 260 seconds)
2014-10-03 14:02:01	--	Nemus is now known as NEMUS
2014-10-03 14:02:07	io2	floats are kind of weird in comparisons after all
2014-10-03 14:02:09	coolcat	Hi, I am doing some benchmarks on std::set, boost::flat_set and on my own. Anyone knows if boost offers pool allocators to would improve performance of std::set?
2014-10-03 14:02:19	hs_	jfcaron, you can only use integral types as template parameters, but you can perhaps use non-integral values in calculations.. haven't tried it
2014-10-03 14:02:25	jfcaron	I also have a function for evaluating the arbitrary derivative of the same polynomial, but I need to transform the coefficients in a specific way.
2014-10-03 14:02:28	ville	coolcat: your compiler comes with one likely
2014-10-03 14:02:45	io2	hs_: you can use non integral types, but you will be very sorry
2014-10-03 14:02:46	lenarhoyt_	what does the & mean in: Foo& getFoo(); ?
2014-10-03 14:02:50		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-10-03 14:02:55	ville	(your standard library more specifically)
2014-10-03 14:03:02		francisl (~flavoie@NFBONF.NFB.CA) has joined ##c++
2014-10-03 14:03:13	coolcat	ville, I use stdc++
2014-10-03 14:03:16	AbleBacon	lenarhoyt_: it means that the function returns a reference to a "Foo"
2014-10-03 14:03:28	coolcat	or stdlibc++
2014-10-03 14:03:38	ville	coolcat: poke around the headers. libstdc++ has ~5 different allocators
2014-10-03 14:04:36	ville	ah you're using it. then look at something like /usr/include/c++/4.9.1/ext directory
2014-10-03 14:04:56	coolcat	I will have a look. thanks
2014-10-03 14:05:13		rtdos (~gdos@216.67.187.221) has joined ##c++
2014-10-03 14:05:35		immibis (~ChatZill1@203-97-111-43.cable.telstraclear.net) has joined ##c++
2014-10-03 14:06:05	jfcaron	io2, xico: I'm wondering if I can do some of the calculations for cprime at compile-time in PolyDeriv here: http://ideone.com/eheSjn
2014-10-03 14:06:28	lenarhoyt_	AbleBacon: in which cases is that favored over Foo* foo();?
2014-10-03 14:06:46		soulcake (~soulcake@unaffiliated/soulcake) has joined ##c++
2014-10-03 14:06:47		ultrixx (~ultrixx@p5DC77495.dip0.t-ipconnect.de) has quit (Quit: Bye.)
2014-10-03 14:07:07	AbleBacon	ah--that i'm not sure i could answer
2014-10-03 14:07:11	ville	there is also boost pool library but i forget if that's the one which has been broken for ages
2014-10-03 14:07:26	hs_	jfcaron, looks like it "works"
2014-10-03 14:07:28	hs_	{ foo<4>(); } constexpr float bob(){ return 3.14f; } template <int n> typename enable_if< bob() < n,void>::type foo(){ BARK; }  //
2014-10-03 14:07:31	geordi	foo() [with int n = 4; enable_if<(bob() < n), void>::type = void]
2014-10-03 14:08:05	ville	lenarhoyt_: T* rises such questions who owns the resource and whether you have to check for 0
2014-10-03 14:08:06		lleo (~Lleo@5ED09ADB.cm-7-1c.dynamic.ziggo.nl) has joined ##c++
2014-10-03 14:08:36	jfcaron	hs_: In almost all of your examples I am confused by your use of BARK, what is that?
2014-10-03 14:08:42	hs_	I think T* is starting to only mean check for 0
2014-10-03 14:08:54		puish (~puish@unaffiliated/jonbryan) has joined ##c++
2014-10-03 14:08:59	ville	jfcaron: it's just a macro: std::cout << __PRETTY_FUNCTION__; or so
2014-10-03 14:09:05	hs_	and that ownership isn't relevant anymore
2014-10-03 14:09:10	io2	jfcaron: you need VERY weird code to use doubles/floats in TMP
2014-10-03 14:09:12		scai (~scai@p54B6349D.dip0.t-ipconnect.de) has left ##c++ ("[IRSSI]")
2014-10-03 14:09:14	ville	hs_: tell that to qt people
2014-10-03 14:09:15	hs_	jfcaron, just a ^^ that
2014-10-03 14:09:20		lleo (~Lleo@5ED09ADB.cm-7-1c.dynamic.ziggo.nl) has quit (Read error: Connection reset by peer)
2014-10-03 14:09:26		goezzi (~Lleo@5ED09ADB.cm-7-1c.dynamic.ziggo.nl) has joined ##c++
2014-10-03 14:09:27	hs_	a macro to print at that spot
2014-10-03 14:09:34	io2	jfcaron: constexpr may be more helpful for what you are after
2014-10-03 14:09:34	jfcaron	Ah ok.
2014-10-03 14:09:41	hs_	(not a _macro_, but some expression that prints)
2014-10-03 14:09:41		ObjectiveMatt (~Objective@66.87.150.59) has joined ##c++
2014-10-03 14:09:51	lenarhoyt_	ville: so a reference is a c++ object, which somehow wraps the type and even does smart pointer things?
2014-10-03 14:10:15	ville	lenarhoyt_: it doesn't do smart pointer things unless your smart pointers are particularly dumb
2014-10-03 14:10:26	aicasn	a reference is a safer pointer
2014-10-03 14:10:28	hs_	ville, we must cleanse them
2014-10-03 14:10:29		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2014-10-03 14:10:35	MrFlibble	a reference isn't an object
2014-10-03 14:10:47	io2	I remember somebody have implemented a way to abuse a parameter list to fake doubles as non-types
2014-10-03 14:10:51	MrFlibble	it will likely occupy a region of storage like objects though
2014-10-03 14:10:52	io2	nontype parameters*
2014-10-03 14:10:54	ville	those people who think T* is acceptable for non-owning are kidding them selves. there is so much code out there that uses owning T* that any use of it otherwise just gets drowned out. just use a different type for it
2014-10-03 14:11:07	io2	!grab ville
2014-10-03 14:11:07	nolyc	By your command.
2014-10-03 14:11:19	io2	true story
2014-10-03 14:12:03	MrFlibble	T* is fine for non-owning when pointer semantics are required
2014-10-03 14:12:31		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has joined ##c++
2014-10-03 14:12:50		mentoc (~half@unaffiliated/mentoc) has joined ##c++
2014-10-03 14:13:04	ville	observe one of the delusional ones
2014-10-03 14:13:06		SibTiger[Tablet] (~Nicholas@199-96-202-110.fidnet.com) has quit (Quit: Everyone, I have a very dramatic announcement. So anyone with a weak heart should leave now. Goodbye.)
2014-10-03 14:13:22	io2	MrFlibble: that is not what ville is saying
2014-10-03 14:13:35	MrFlibble	a naked pointer into an array or buffer is perfectly fine
2014-10-03 14:13:44	io2	yes, but that is not what he is saying
2014-10-03 14:14:08	MrFlibble	well you obviously shoul prefer references to pointers
2014-10-03 14:14:14	MrFlibble	+d
2014-10-03 14:14:15	io2	neither
2014-10-03 14:14:23	io2	he is saying that you should not rely on this convention
2014-10-03 14:14:25	ville	i could agree if you are talking of a contained scope. if you are talking about an interface of anything then i won't.
2014-10-03 14:14:38		Errorical (~Errorical@83.243.255.36) has quit (Quit: Leaving)
2014-10-03 14:15:08	io2	ville: i doubt he is suggesting a contained scope
2014-10-03 14:15:19		ikrima (~ikrima@76.91.23.45) has joined ##c++
2014-10-03 14:15:46	MrFlibble	naked pointers to objects that manage their own lifetime are also fine
2014-10-03 14:15:58	ville	void f() { aa x[10]; aa* p; } there i can agree with use of a plain pointer. i won't agree in aa* f() or void f(aa*)
2014-10-03 14:16:04		surd (~surd@unaffiliated/surd) has quit (Ping timeout: 260 seconds)
2014-10-03 14:16:05	MrFlibble	as are pointers to objects that do there own reference counting
2014-10-03 14:16:16	MrFlibble	their*
2014-10-03 14:16:19	K-ballo	ville: are you saying something like template <typename T> using non_owning_ptr = T*; so that intent is clear?
2014-10-03 14:16:35	MrFlibble	one of my methods: virtual const i_vector<i_plugin*>& plugins() const
2014-10-03 14:16:36	ville	K-ballo: i'd go for an actual type rather than an alias
2014-10-03 14:16:40	MrFlibble	nothing wrong with that
2014-10-03 14:16:57		rendar (~I@host86-180-dynamic.23-79-r.retail.telecomitalia.it) has quit (Ping timeout: 246 seconds)
2014-10-03 14:17:17		goezzi (~Lleo@5ED09ADB.cm-7-1c.dynamic.ziggo.nl) has quit (Read error: Connection reset by peer)
2014-10-03 14:17:32		lleo (~Lleo@5ED09ADB.cm-7-1c.dynamic.ziggo.nl) has joined ##c++
2014-10-03 14:17:37	mentoc	Why the trailing const?
2014-10-03 14:18:29	hs_	so it can be called by a const
2014-10-03 14:20:03		biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has joined ##c++
2014-10-03 14:20:10	mentoc	If I wanted to store, say 150MB of data, would it make sense to break it up into chunks and load all of that into a vector? Or would a single vector be sufficient?
2014-10-03 14:20:26	mentoc	let me rephrase...
2014-10-03 14:20:35		KAHR-Alpha (~Alpha@AReims-652-1-198-206.w86-192.abo.wanadoo.fr) has joined ##c++
2014-10-03 14:20:40		soulcake (~soulcake@unaffiliated/soulcake) has quit (Ping timeout: 260 seconds)
2014-10-03 14:20:40	mentoc	load all of the data into several different vectors as opposed to one vector
2014-10-03 14:21:10	ville	K-ballo: i guess such alias could be sufficient? not sure what compiler support an actual type would buy
2014-10-03 14:21:35		Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-10-03 14:21:37	K-ballo	ville: well, it's irrelevant to my question, I was asking if what you meant is that T* does not convey intent (should have kept it simple like that)
2014-10-03 14:22:47	hs_	mentoc, unless there is a constraint you haven't mentioned, one vector.. (if you were going to have them all at the same time, then what would the difference be?)
2014-10-03 14:23:03	io2	as he said, it does not convey intent because it has no guarantee as to the intent
2014-10-03 14:23:06	hs_	mentoc, just be sure to reserve it at initialization
2014-10-03 14:23:18		soulcake (~soulcake@unaffiliated/soulcake) has joined ##c++
2014-10-03 14:23:25	io2	that is why rust for example, doesn't share the same pointer model with C/C++
2014-10-03 14:23:30	hs_	you don't have to guarantee usage to convey intent
2014-10-03 14:23:39		Sauvin (~Sauvin@about/linux/staff/sauvin) has quit (Read error: Connection reset by peer)
2014-10-03 14:23:47		rendar (~I@host86-180-dynamic.23-79-r.retail.telecomitalia.it) has joined ##c++
2014-10-03 14:23:48	hs_	but I do agree that it does not convey intent because of its history and common usage
2014-10-03 14:23:48	mentoc	hs_: What if the size was unknown?
2014-10-03 14:23:54		hell_razer (~textual@host-176-38-97-10.la.net.ua) has joined ##c++
2014-10-03 14:24:21		goezzi (~Lleo@5ED09ADB.cm-7-1c.dynamic.ziggo.nl) has joined ##c++
2014-10-03 14:24:35		lleo (~Lleo@5ED09ADB.cm-7-1c.dynamic.ziggo.nl) has quit (Read error: Connection reset by peer)
2014-10-03 14:24:43	ville	K-ballo: yes. T* is just too generic so people want to attach semantics to it. now the problem is we have very large body of code with very different semantics of the new proposed semantics. forget the new proposed semantics and use a new untainted type.
2014-10-03 14:24:49	io2	hs_: the moment you start considering T * as non-owning, you are in a sense saying to people you are guaranteeing this
2014-10-03 14:24:52	hs_	mentoc, then don't worry about it and watch for exceptions if you expect problems
2014-10-03 14:25:00		vocodork (~vocoder@94-227-99-249.access.telenet.be) has quit (Ping timeout: 246 seconds)
2014-10-03 14:25:06		vocodork_ (~vocoder@94-227-99-249.access.telenet.be) has joined ##c++
2014-10-03 14:25:10	MrFlibble	to me a naked pointer is a non-owning pointer; the fact the other people write crap code does not change this.
2014-10-03 14:25:15	mentoc	hs_: It seems like reserve is more of a courtesy function?
2014-10-03 14:25:22	lenarhoyt_	Bikeshedding Question: how do you highlight important sections in the source code, for example a section with tweak parameters in it, or special declarations of any kind?
2014-10-03 14:25:22	io2	T* offers no secure assumption as to what it is doing with its semantics in 3 decades of code coexisting
2014-10-03 14:25:30	MrFlibble	in MY code a naked pointer is non-owning.
2014-10-03 14:25:31	lenarhoyt_	like this? // ------------------------------------------------------------------------------------------------------------------
2014-10-03 14:25:53	hs_	lenarhoyt_, an ascii version of dickbutt.jpg
2014-10-03 14:26:22		goezzi (~Lleo@5ED09ADB.cm-7-1c.dynamic.ziggo.nl) has quit (Read error: Connection reset by peer)
2014-10-03 14:26:34	io2	anyway, I think that it is pragmatic to have a loose definition of what T* is to provide in the end because of what ville said; there is too much code already with it
2014-10-03 14:26:41		lleo (~Lleo@5ED09ADB.cm-7-1c.dynamic.ziggo.nl) has joined ##c++
2014-10-03 14:26:48	hs_	but hold on
2014-10-03 14:26:55		Zupoman (~mistrzmag@unaffiliated/zupoman) has joined ##c++
2014-10-03 14:27:09	io2	but in the end, we don't really care that much, do we
2014-10-03 14:27:19	io2	:)
2014-10-03 14:27:20	hs_	we agree T* has such a vague purpose that it has no real connotation besides "pointer"
2014-10-03 14:27:27		alex10791 (~alex10791@0189800493.0.fullrate.dk) has quit (Ping timeout: 246 seconds)
2014-10-03 14:27:30	hs_	so use it as such and _assume_ nothing more
2014-10-03 14:27:34	hs_	new rule!
2014-10-03 14:27:38	MrFlibble	what is worse that could happen? someone thinks my pointer needs deleting?
2014-10-03 14:27:42	io2	hs_: we dpm
2014-10-03 14:27:44	io2	we don
2014-10-03 14:27:46	ville	i see no reason to write new code using the "T* means non-owning". you could just as easily use a dedicated type as a service to everyone else reading your code.
2014-10-03 14:27:47	io2	crap
2014-10-03 14:27:49	io2	we dono
2014-10-03 14:27:56	io2	eh shit, keybord
2014-10-03 14:28:19	MrFlibble	I disagree quite strongly ville; I am not going to restrict myself because others write shite code
2014-10-03 14:28:22	io2	we don't have a time machine to go back and fix everybody's assumptions, especially with legacy code
2014-10-03 14:28:22	hs_	ville, I agree that is the best approach currently
2014-10-03 14:28:29	K-ballo	poll question: when was the last time you've used T* as other than a non-owning pointer? :P
2014-10-03 14:28:43	hs_	but I think in a few years it will be obvious enough to everyone, and everyone will be tired of writing special * types
2014-10-03 14:28:43	ville	K-ballo: 5 minutes ago
2014-10-03 14:28:47	io2	lol
2014-10-03 14:29:03	io2	K-ballo: btw, what is this crap about allowing commas in [] ?
2014-10-03 14:29:03	K-ballo	last time I did was when implementing unique_ptr ;)
2014-10-03 14:29:04	io2	:)
2014-10-03 14:29:14	hs_	and Bjarne will resurrect after 3 days and visit us
2014-10-03 14:29:17	io2	I saw your name someplace, then the thread went too wild
2014-10-03 14:29:31	hs_	such glory awaits us
2014-10-03 14:29:41	ville	hs_: we wouldn't have to if the committee hadn't bungled. they didn't get the observer_ptr in c++14
2014-10-03 14:29:47	io2	hs_: he is not dead yet, but his time will come as with everything in life.
2014-10-03 14:29:49	io2	:P
2014-10-03 14:29:49	K-ballo	io2: apparently people think it's a good idea for v[1, 2] to sometimes mean v[2] and sometimes mean v[1][2], with absolutely no contextual clues of what does it actually mean
2014-10-03 14:29:57	ville	(or whatever the name ends up being)
2014-10-03 14:29:58	io2	LOL
2014-10-03 14:30:10	MrFlibble	I have reference counted objects that delete themselves in my framework so I have non-owning pointers to such objects
2014-10-03 14:30:29	K-ballo	MrFlibble: dude, weak_ptr!
2014-10-03 14:30:41	jfcaron	How can I use "N > n" in the first template argument of enable_if?  Is that what std::greater & others are for?
2014-10-03 14:30:47	MrFlibble	K-ballo: I am aware of it and it was not appropriate.
2014-10-03 14:30:47	io2	K-ballo: is this the beginning of [1,2,3,4,...] ???
2014-10-03 14:30:52		g4r37h (~g4r37h@host86-153-58-203.range86-153.btcentralplus.com) has quit
2014-10-03 14:31:18	K-ballo	I don't know, people apparently find very common the case that a multidimensional view cannot be addressed on each dimension
2014-10-03 14:31:26	MrFlibble	I use smart pointers where appropriate; smart pointers are not appropriate for a plugin framework.
2014-10-03 14:31:26	io2	jfcaron: typename std::enable_if<(N>n),void>::type
2014-10-03 14:31:44	jfcaron	io2: Ah thanks, I didn't think to just put parens around it. =p
2014-10-03 14:31:52	io2	jfcaron: np
2014-10-03 14:32:02	jfcaron	Obviously enable_if< N > n, double> wasn't working!
2014-10-03 14:32:18	io2	welcome to the wonderful world of angle brackets
2014-10-03 14:32:51	ville	wonder how many tools still choke on the c++11 >> change
2014-10-03 14:33:55	jfcaron	Like std::vector<std::pair<double,double>>?
2014-10-03 14:34:07	ville	yes
2014-10-03 14:34:20	jfcaron	I'm still used to putting spaces between > just in case.
2014-10-03 14:34:26	io2	>> in that case was an oversight
2014-10-03 14:34:36	io2	now we can use >>>>>>>>>>> and consider it valid
2014-10-03 14:34:38		lleo (~Lleo@5ED09ADB.cm-7-1c.dynamic.ziggo.nl) has quit (Read error: Connection reset by peer)
2014-10-03 14:34:56	io2	geordi: [](){}();
2014-10-03 14:34:56	geordi	error: expected unqualified-id before ')' token
2014-10-03 14:35:01	K-ballo	we still have the others though, like foo<::bar>
2014-10-03 14:35:12	io2	geordi: { [](){}(); }
2014-10-03 14:35:12	geordi	<no output>
2014-10-03 14:35:13	ville	K-ballo: that's fixed too.
2014-10-03 14:35:32	K-ballo	{ foo<::bar> x; } template <typename T> struct foo {}; struct bar {};
2014-10-03 14:35:32	geordi	<no output>
2014-10-03 14:35:35	K-ballo	awesome!
2014-10-03 14:35:40	ville	K-ballo: that is it won't be a trigraph in c++11 and c++14 removes them?
2014-10-03 14:35:47	K-ballo	it's a digraph
2014-10-03 14:35:55	ville	ah right di
2014-10-03 14:35:55	hs_	what is? <::?
2014-10-03 14:36:25	K-ballo	<: is [
2014-10-03 14:37:07	K-ballo	!ggl bearded lambda
2014-10-03 14:37:09	nolyc	http://stackoverflow.com/questions/15736282/what-is-this-smiley-with-beard-expression
2014-10-03 14:37:43	hs_	hehe lovely
2014-10-03 14:38:27	io2	inane bullshit actually
2014-10-03 14:38:31	ville	what was the last language with digraphs or similar feature?
2014-10-03 14:38:50	K-ballo	C++ ?
2014-10-03 14:39:11	ville	i can't think of any but i only know some of the more popular ones.
2014-10-03 14:39:33	K-ballo	because trigraphs weren't enough!
2014-10-03 14:39:54	TommyC	Out of curiosity, how do you guys store flags to be passed to your programs? Just one big array with all of the options in it?
2014-10-04 15:54:35		dagnachew (~dagnachew@bas1-montreal30-2925417210.dsl.bell.ca) has joined ##c++
2014-10-04 15:54:35	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-04 15:54:35	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-04 15:54:35	--	Channel ##c++: 530 nicks (0 ops, 0 voices, 530 normals)
2014-10-04 15:54:35	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-04 15:54:35	tsimpson	it's very rare you ever have to use typeid or std::type_info directly
2014-10-04 15:54:45	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-04 15:54:47		Hannibal_Smith (~Hannibal_@host224-36-dynamic.6-87-r.retail.telecomitalia.it) has quit (Quit: Sto andando via)
2014-10-04 15:54:50	lmat	MrFlibble: Here and there, I need to check the type, so I do  myvariant.type == typeid(A)
2014-10-04 15:54:57	tsimpson	if you're doing it as some kind of type switch, it's wrong
2014-10-04 15:54:58		jophish (~jophish@85.255.234.245) has joined ##c++
2014-10-04 15:55:02	lmat	tsimpson: :(
2014-10-04 15:55:15	lmat	tsimpson: I didn't want to make a visitor for every little thing :)
2014-10-04 15:55:16	MrFlibble	ah yes
2014-10-04 15:55:29	MrFlibble	I do use typeid in my boost.variant wrapper class
2014-10-04 15:55:30	tsimpson	comparison against a stored member isn't necessarily a type swich
2014-10-04 15:55:37	lmat	tsimpson: Not technically a switch, just   if (..) elseif(...) elseif ...
2014-10-04 15:55:54	lmat	MrFlibble: It's the path of least resistance :)
2014-10-04 15:56:25		degva (~degva@190.234.105.44) has quit (Ping timeout: 240 seconds)
2014-10-04 15:56:28		justinmburrous (~justinmbu@184-76-56-35.war.clearwire-wmx.net) has quit (Remote host closed the connection)
2014-10-04 15:56:34		ObjectiveMatt (~Objective@66.87.150.226) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-04 15:56:44	wallbroken	    for(mappaTagli::iterator itor=resto.begin(); itor != resto.end(); itor++)
2014-10-04 15:56:44	wallbroken	        outBuffResto << "taglio: " << itor->first << " " << "quantità: " << itor->second << endl;
2014-10-04 15:56:54	wallbroken	i used this way to output a map structure to a file
2014-10-04 15:57:07	wallbroken	now if i want to read it, how should i do?
2014-10-04 15:59:02	lmat	wallbroken: you need to have a deserialization function...
2014-10-04 15:59:09	lmat	wallbroken: yikes...that's a mess
2014-10-04 15:59:31		JamesNZ (~james@fedora/JamesNZ) has quit (Remote host closed the connection)
2014-10-04 15:59:54	wallbroken	lmat, can you help me in doing this?
2014-10-04 16:00:32	lmat	nope.
2014-10-04 16:00:42	lmat	wallbroken: You need to make sure that your output format can't be confused...
2014-10-04 16:00:58	lmat	wallbroken: Perhaps use null separators and ensure that itor->first (serialized) can't contain null?
2014-10-04 16:01:53	wallbroken	what is null?
2014-10-04 16:02:37		KnownSyntax (uid7983@gateway/web/irccloud.com/x-ttyjgxhfvyjzzrgi) has joined ##c++
2014-10-04 16:02:50	systemfault	... baby don't hurt me, don't hurt me... no more.
2014-10-04 16:03:37		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has joined ##c++
2014-10-04 16:04:15		lleo (~Lleo@5ED09ADB.cm-7-1c.dynamic.ziggo.nl) has quit (Ping timeout: 250 seconds)
2014-10-04 16:04:50		torei (~manjaro-k@70-91-211-237-BusName-Augusta.hfc.comcastbusiness.net) has quit (Quit: Manjaro-KDE user leaving!)
2014-10-04 16:04:56	lmat	wallbroken: dude... ##c++-beginner  I think
2014-10-04 16:05:31	o]	`!basic
2014-10-04 16:05:34	o]	!basic
2014-10-04 16:05:36	nolyc	Please ask your question in ##C++-basic, as it involves the fundamental basics of the language.
2014-10-04 16:06:47		iveevue (~na@unaffiliated/iveevue) has quit (Quit: Leaving)
2014-10-04 16:08:18		degva (~degva@190.234.105.44) has joined ##c++
2014-10-04 16:09:34		hamid (~nithp@unaffiliated/hamid) has quit (Quit: Lost terminal)
2014-10-04 16:09:56		Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-10-04 16:10:37		fatalhalt (~fatalhalt@c-71-201-7-76.hsd1.il.comcast.net) has quit (Quit: Leaving)
2014-10-04 16:11:45		jophish (~jophish@85.255.234.245) has quit (Read error: Connection reset by peer)
2014-10-04 16:12:24		clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-10-04 16:12:59		Garner (uid38417@gateway/web/irccloud.com/x-nneskbsgglwbtytf) has joined ##c++
2014-10-04 16:15:09		kurahaupo1 (~Kurahaupo@39.204.252.27.dyn.cust.vf.net.nz) has joined ##c++
2014-10-04 16:16:15		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2014-10-04 16:16:58		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has joined ##c++
2014-10-04 16:19:27		lleo (~Lleo@5ED09ADB.cm-7-1c.dynamic.ziggo.nl) has joined ##c++
2014-10-04 16:19:45		hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 245 seconds)
2014-10-04 16:21:42		jophish (~jophish@31.97.217.132) has joined ##c++
2014-10-04 16:22:03		D0cN3x (~Thunderbi@dslb-178-007-208-092.178.007.pools.vodafone-ip.de) has quit (Quit: D0cN3x)
2014-10-04 16:23:11		dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-10-04 16:23:58		devbug (~quassel@d108-180-247-142.bchsia.telus.net) has joined ##c++
2014-10-04 16:25:55		Rslc (rslc@82-69-84-226.dsl.in-addr.zen.co.uk) has quit
2014-10-04 16:26:44	lenarhoyt	glm::vec3& SimpleCamera::getDirection() { return glm::normalize(getLookAt() - getPosition()); }
2014-10-04 16:26:59	lenarhoyt	error: invalid initialization of non-const reference of type 'glm::vec3& {aka glm::detail::tvec3<float>&}' from an rvalue of type 'glm::detail::tvec3<float>'
2014-10-04 16:27:03	lenarhoyt	why?
2014-10-04 16:27:32		Jackneill (~Jackneill@unaffiliated/jackneill) has quit (Remote host closed the connection)
2014-10-04 16:27:59		paulmcquad (~paulmcqua@78.18.70.101) has quit (Quit: Leaving)
2014-10-04 16:28:24	Erlkoenig	you can't take a non-const reference of a temporary object
2014-10-04 16:28:48	Erlkoenig	just return a glm::vec3
2014-10-04 16:30:00	DTSCode	i cant remember... if i have this:: std::vector<char> then can i have an initializer list that looks like this? {"        "}?
2014-10-04 16:30:41		Nando_k (~Nando_k@dyndsl-178-142-065-051.ewe-ip-backbone.de) has quit (Ping timeout: 272 seconds)
2014-10-04 16:31:31	lenarhoyt	Erlkoenig: I could take a const reference of a temporary object? what is the reasoning behind this?
2014-10-04 16:32:29	Erlkoenig	yes. something about non-const being complicated to compile, but const being easy
2014-10-04 16:32:31		clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Quit: WeeChat 1.0)
2014-10-04 16:32:53	Erlkoenig	however returning a const-ref will break to, as the temporary object will disappear as soon as the function returns, rendering the returned reference invalid
2014-10-04 16:33:21	Erlkoenig	or, actually, maybe not
2014-10-04 16:35:06	Erlkoenig	oh well, it does break
2014-10-04 16:35:12		Munnu (~timo@91-158-146-113.elisa-laajakaista.fi) has quit (Remote host closed the connection)
2014-10-04 16:35:19	Erlkoenig	but i don't know exactly why :}
2014-10-04 16:36:39		lleo (~Lleo@5ED09ADB.cm-7-1c.dynamic.ziggo.nl) has quit (Read error: Connection reset by peer)
2014-10-04 16:36:45		goezzi (~Lleo@5ED09ADB.cm-7-1c.dynamic.ziggo.nl) has joined ##c++
2014-10-04 16:36:49	--	Grizzly[BNC] is now known as Gr1zzly
2014-10-04 16:38:31		jophish (~jophish@31.97.217.132) has quit (Remote host closed the connection)
2014-10-04 16:39:58	lmat	tsimpson: "You can't use typeid on an incomplete type
2014-10-04 16:39:59	lenarhoyt	 ok, I got an idea what it's about, maybe I shouldn't worry about it. thanks
2014-10-04 16:40:09	lmat	tsimpson: "    Is that within the TU or at linking?
2014-10-04 16:41:48		govg_ (~govg@unaffiliated/govg) has joined ##c++
2014-10-04 16:42:22	--	govg is now known as Guest26396
2014-10-04 16:42:22		Guest26396 (~govg@unaffiliated/govg) has quit (Killed (wolfe.freenode.net (Nickname regained by services)))
2014-10-04 16:42:22	--	govg_ is now known as govg
2014-10-04 16:42:25		g4r37h (~g4r37h@host86-153-58-203.range86-153.btcentralplus.com) has joined ##c++
2014-10-04 16:42:42	lmat	tsimpson: In my situation, a type is declared in header.h, and defined in file.c.  I'm getting the bad typeid()s in other.c (which also includes header.h).
2014-10-04 16:43:04	lmat	tsimpson: Actually, it's worse than that: it works just fine on gcc and clang.
2014-10-04 16:43:06		Blue_Hat (~Blue_Hat@66.54.118.122) has joined ##c++
2014-10-04 16:43:13	lmat	tsimpson: For my friend, though, using apple clang, it doesn't work.
2014-10-04 16:43:25		jeaton (~jeaton@unaffiliated/jeaton) has joined ##c++
2014-10-04 16:44:43		Siberian_Tiger (~Nicholas@199-96-202-110.fidnet.com) has joined ##c++
2014-10-04 16:50:03		desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-10-04 16:51:23		arborist (~arborist@46.28.53.4) has quit (Read error: Connection reset by peer)
2014-10-04 16:51:38	lenarhoyt	hm. I have a couple of global maps and enums in a header file which is included several times. the header file has precompiler directives to prevent multiple processing, however I still get this error message: "multiple definition of ..."
2014-10-04 16:52:23	lmat	lenarhoyt: I don't think pch helps against "multiple definitions of".
2014-10-04 16:52:39	Erlkoenig	every time the file is #include'd, one instance of every variable defined there is created
2014-10-04 16:52:41	lmat	lenarhoyt: I mean...I guess it seems like it should, but it's not the right solution.
2014-10-04 16:52:45	Erlkoenig	and upon linking, you get conflicts
2014-10-04 16:52:47	lmat	Erlkoenig: Even with PCH?
2014-10-04 16:52:56	Erlkoenig	PCH doesn't change compiler's behaviour
2014-10-04 16:53:01	Erlkoenig	it just speeds it up.
2014-10-04 16:53:04	lmat	Erlkoenig: okay, that's what I wanted to say ^_^
2014-10-04 16:53:21	lmat	lenarhoyt: The right solution is to put the definition into a TU. Only one TU.
2014-10-04 16:53:27	lmat	later (AFK)
2014-10-04 16:54:47		jsoft (~jsoft@unaffiliated/jsoft) has quit (Ping timeout: 260 seconds)
2014-10-04 16:54:48		PlasmaHH (~kvirc@speedy.projectiwear.org) has joined ##c++
2014-10-04 16:56:28		ikrima (~ikrima@76.91.23.45) has quit (Ping timeout: 258 seconds)
2014-10-04 16:58:50	jeaton	im needing some good c++ material, any suggestions
2014-10-04 16:59:12	PlasmaHH	strings /dev/urandom
2014-10-04 16:59:35	jeaton	ive been reading some c++ primer 4th edition on and off, but I figured I go with something else
2014-10-04 17:00:09		dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 250 seconds)
2014-10-04 17:00:29		DLPeterson (~hazelnuss@67.164.20.248) has joined ##c++
2014-10-04 17:00:51	PlasmaHH	pengwings?
2014-10-04 17:01:11		BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has joined ##c++
2014-10-04 17:01:21	K-ballo	io2: https://www.dropbox.com/s/rusc06dejwbp4mt/Transform_reduce_proposal_structs.pdf?dl=0
2014-10-04 17:01:27	DLPeterson	can anybody explain why this MWE of default template parameters is not correct?  https://bpaste.net/raw/0d3a6635957a
2014-10-04 17:02:23	K-ballo	DLPeterson: your default comparator compares iterators, it needs to compare values
2014-10-04 17:02:52	io2	K-ballo: bonus points for page 4, formula.
2014-10-04 17:02:55	io2	:)
2014-10-04 17:04:15	DLPeterson	K-ballo, I tried replacing std::less<Iterator> with std::less<typename Iterator::value_type>, and that did not work
2014-10-04 17:05:10	K-ballo	DLPeterson: you should be using typename std::iterator_traits<Iterator>::value_type, there's no requirement an Iterator has a nested value_type
2014-10-04 17:05:40		Burgundy (~burgundy@86.127.135.184) has joined ##c++
2014-10-04 17:54:37		dagnachew (~dagnachew@bas1-montreal30-2925417210.dsl.bell.ca) has joined ##c++
2014-10-04 17:54:37	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-04 17:54:37	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-04 17:54:37	--	Channel ##c++: 523 nicks (0 ops, 0 voices, 523 normals)
2014-10-04 17:54:37	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-04 17:54:47	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-04 17:55:03		BinaryAddicted (~kvirc@194.230.155.112) has quit
2014-10-04 17:56:47		byte0x00 (~byte0x00@ool-4573b5ea.dyn.optonline.net) has joined ##c++
2014-10-04 17:56:59		BinaryAddicted (~BinaryAdd@194.230.155.112) has joined ##c++
2014-10-04 17:57:15		Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has quit (Quit: ZNC - http://znc.sourceforge.net)
2014-10-04 17:57:56	o11c	okay, filed http://llvm.org/bugs/show_bug.cgi?id=21159
2014-10-04 17:58:05	o11c	IMO "constructors don't work" is bad
2014-10-04 17:59:09		fatalhalt (~fatalhalt@c-71-201-7-76.hsd1.il.comcast.net) has joined ##c++
2014-10-04 17:59:11		rnickb (~rnickb@pool-108-27-84-69.nycmny.east.verizon.net) has joined ##c++
2014-10-04 18:00:13	rnickb	anyone know of an allocator that implements the std::allocator interface, but allows for verification checks on what was allocated/deallocated so that you can use it for unit testing?
2014-10-04 18:00:37		dvt (~dvt@65.112.10.222) has quit (Ping timeout: 260 seconds)
2014-10-04 18:01:20		ObjectiveMatt (~Objective@66.87.150.226) has quit (Ping timeout: 272 seconds)
2014-10-04 18:01:26		top4o (~chatzilla@93.152.162.95) has joined ##c++
2014-10-04 18:01:42		Zifre_ (~Zifre@unaffiliated/zifre) has quit (Remote host closed the connection)
2014-10-04 18:02:30		titanium17 (~titanium1@2604:6000:6440:2200:c405:9426:8d18:f9b3) has joined ##c++
2014-10-04 18:03:18	MrFlibble	rnickb: I think you can assume allocations suceed (or bad_alloc is thrown).
2014-10-04 18:03:26	MrFlibble	succeed*
2014-10-04 18:03:58	MrFlibble	you want to know if an allocation request was made?
2014-10-04 18:04:20	rnickb	MrFlibble: i mean for unit test (e.g. i make a class, I pass in an allocator, run a test, then the allocator provides and interface to verify that all the memory was deallocated)
2014-10-04 18:04:33		systemfault (~Systemfau@oftn/member/systemfault) has quit
2014-10-04 18:04:36	MrFlibble	unless you are writing your own container and I don't you need to unit test allocator.
2014-10-04 18:04:52	MrFlibble	unless you are writing your own container I don't think you need to unit test allocator.
2014-10-04 18:04:56	rnickb	right, but people do write their own containers
2014-10-04 18:05:08	MrFlibble	I know, I have written two containers
2014-10-04 18:05:14	MrFlibble	are you writing your own container?
2014-10-04 18:05:16	rnickb	yes
2014-10-04 18:05:18		Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-10-04 18:05:27	MrFlibble	what is it?
2014-10-04 18:05:38	hs_	o11c, I can't recreate that error with clangbot
2014-10-04 18:06:11	hs_	clang, { foo(); } struct A { explicit A(int*p = nullptr) noexcept {} }; struct B { A a; }; void foo(void) {  struct B f{}; } // am i missing something?
2014-10-04 18:06:14	clang	<no output>
2014-10-04 18:06:15	hs_	clang, -v
2014-10-04 18:06:17	clang	Clang 3.5
2014-10-04 18:06:35	MrFlibble	rnickb: what type of container is it?
2014-10-04 18:06:47	rnickb	an array-like container
2014-10-04 18:06:53	MrFlibble	elaborate...
2014-10-04 18:07:02		kaffeetrauma (~Thunderbi@ip-109-91-85-220.hsi12.unitymediagroup.de) has quit (Quit: kaffeetrauma)
2014-10-04 18:07:11		fatalhalt (~fatalhalt@c-71-201-7-76.hsd1.il.comcast.net) has quit (Quit: Leaving)
2014-10-04 18:07:14		schleppel (~quassel@141.39.226.237) has quit (Read error: Connection reset by peer)
2014-10-04 18:08:03		degva (~degva@190.234.105.44) has quit (Read error: Connection reset by peer)
2014-10-04 18:08:03	MrFlibble	if it is a segmented_array container then det and myself have already beaten you to it
2014-10-04 18:08:17	o11c	hs_: I don't see anything missing ...
2014-10-04 18:08:19	MrFlibble	s/segmented_array/"segmented array"
2014-10-04 18:08:23	o]	no one cares
2014-10-04 18:08:33	o11c	hs_: but is clang-bot using a snapshot or a release?
2014-10-04 18:09:12	o11c	hs_: I've checked with Debian packages only
2014-10-04 18:09:18	hs_	o11c, no idea..
2014-10-04 18:09:28	o11c	specifically, Debian clang version 3.5.0-4
2014-10-04 18:09:42		notpara (~para@ip-90-186-211-30.web.vodafone.de) has joined ##c++
2014-10-04 18:10:19		jophish (~jophish@hermi.gotadsl.co.uk) has joined ##c++
2014-10-04 18:10:28	rnickb	MrFlibble: yes, not a segmented array. a multidimensional array (similar to boost multi_array), but allows to work with both static and dynamic extents
2014-10-04 18:11:09	MrFlibble	can't see the point of that mate
2014-10-04 18:11:18	MrFlibble	just use boost or std::array
2014-10-04 18:11:47	rnickb	MrFlibble: std::array is not multi-dimensional, and boost doesn’t not allow static extents.
2014-10-04 18:12:03	MrFlibble	std::array<std::array<int, 10>, 10>
2014-10-04 18:12:28	rnickb	very cumbersome. also, it allows for both dynamic and heap allocation.
2014-10-04 18:12:38		asQuirreL (~asQuirreL@cpc15-croy21-2-0-cust42.19-2.cable.virginm.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-04 18:12:59	MrFlibble	one of my other containers can simulate that
2014-10-04 18:13:10	jeaton	what are some good c++ material to get me started with the language?
2014-10-04 18:14:04		PlasmaHH (~kvirc@speedy.projectiwear.org) has quit (Ping timeout: 260 seconds)
2014-10-04 18:14:04		Orion] (~nname@unaffiliated/orion/x-3970838) has joined ##c++
2014-10-04 18:14:18		rendar (~I@host176-193-dynamic.252-95-r.retail.telecomitalia.it) has quit
2014-10-04 18:14:37		ultrixx (~ultrixx@p5DC7653E.dip0.t-ipconnect.de) has quit (Quit: Bye.)
2014-10-04 18:14:38		jitsuin (~chatzilla@cpe-23-243-174-121.socal.res.rr.com) has quit (Ping timeout: 272 seconds)
2014-10-04 18:15:04	Nizumzen	jeaton: The C++ Programming Language 4th Edition is good
2014-10-04 18:15:17	Nizumzen	jeaton: assuming you have prior programming experience
2014-10-04 18:16:29	jeaton	that's actually the book I have and I keep jumping in an out of it
2014-10-04 18:16:37	lenarhoyt	a reference does not delete the referenced object when leaving the scope, right?
2014-10-04 18:17:02	jeaton	absolutely nothing wrong with it, just a very big book
2014-10-04 18:17:27	hs_	lenarhoy_, it will if it was the first to be bound to an rvalue
2014-10-04 18:17:29	hs_	lenarhoy_, but otherwise no
2014-10-04 18:18:04	Nizumzen	jeaton: C++ is a big language :)
2014-10-04 18:18:18	byte0x00	I need a jumping algorithm
2014-10-04 18:18:19	Nizumzen	needs a lot of pages to describe :)
2014-10-04 18:18:37	byte0x00	My sprite stays stuck in the air when i jump, but i cannot seem to bring him back down.
2014-10-04 18:18:54	byte0x00	i tried using some while()loops and break statements
2014-10-04 18:19:02	jeaton	that's true
2014-10-04 18:19:16	Nizumzen	byte0x00: err sounds like basic physics to me
2014-10-04 18:19:31	byte0x00	so if its basic, tell me
2014-10-04 18:19:51	byte0x00	even thoiugh im sure i will figure it out eventually if i dont get assistance
2014-10-04 18:19:53	MrFlibble	byte0x00: it is just basic physics
2014-10-04 18:20:06	Nizumzen	byte0x00: newtons law of gravity would be a good start
2014-10-04 18:20:38		phax (~phax@unaffiliated/phax) has joined ##c++
2014-10-04 18:21:18		rnickb (~rnickb@pool-108-27-84-69.nycmny.east.verizon.net) has quit (Quit: rnickb)
2014-10-04 18:21:28	MrFlibble	when I have finished v3 of this damn IRC client I might make a simple game with physics and stuff, sounds like fun.
2014-10-04 18:22:36		degva (~degva@190.234.105.143) has joined ##c++
2014-10-04 18:23:16		io2 (~io2@unaffiliated/irrequietus) has quit (Quit: ...take irc away, what are you? genius, billionaire, playboy, philanthropist)
2014-10-04 18:23:42		Barrin6 (~Barrin6@user-0c8gm3t.cable.mindspring.com) has quit
2014-10-04 18:24:14	byte0x00	MrFlibble, what library will u use?
2014-10-04 18:24:27	MrFlibble	I will write my own physics engine
2014-10-04 18:24:57	byte0x00	Complex
2014-10-04 18:25:01	kalven	with blackjack, and hookers
2014-10-04 18:25:02	MrFlibble	but write it in such a way that I could substitute a HW engine
2014-10-04 18:25:18	MrFlibble	writing your own physics engine is part of the fun
2014-10-04 18:26:26	byte0x00	im no pro at game development, its been a couple days since i grasped some SDL2
2014-10-04 18:27:20		faenil (4e0c62d4@gateway/web/freenode/ip.78.12.98.212) has joined ##c++
2014-10-04 18:27:24		titanium17 (~titanium1@2604:6000:6440:2200:c405:9426:8d18:f9b3) has quit (Ping timeout: 272 seconds)
2014-10-04 18:27:29	byte0x00	it is quite entertaining rendering your own objects though
2014-10-04 18:27:36	faenil	hello people, is this the right channel for c++ questions?
2014-10-04 18:27:44	Nizumzen	yes
2014-10-04 18:27:51	MrFlibble	mayne
2014-10-04 18:27:53	MrFlibble	maybe
2014-10-04 18:27:55		desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has quit (Ping timeout: 244 seconds)
2014-10-04 18:27:57	MrFlibble	depends on the question
2014-10-04 18:28:00	faenil	my issue is:
2014-10-04 18:28:02	faenil	https://github.com/mer-packages/sensorfw/blob/master/core/bufferreader.h#L54
2014-10-04 18:28:09	faenil	is causing http://pastie.org/private/rzkhho36pobboet0ybqfw
2014-10-04 18:28:28	faenil	using this->addSource fixes it, but I'd like to understand what's going on instead of just fixing it blindly
2014-10-04 18:28:58	faenil	I can't see how the argument-dependent lookup doesn't find addSource
2014-10-04 18:29:23	faenil	(preliminary: I didn't write the code in that repo, I'm just trying to make it build on gcc4.8 )
2014-10-04 18:29:38	o]	I am not looking at your code, but if templates are involved, this-> for member functions is highly recommended
2014-10-04 18:30:22	faenil	o]: ok thanks for the advice...I'm still curious about what is not working in my case, though :D
2014-10-04 18:30:38	MrFlibble	faenil: it looks like nokia's code is illformed
2014-10-04 18:30:50	MrFlibble	illformed in such a way that it works on some shite compilers
2014-10-04 18:30:52	faenil	in what way
2014-10-04 18:30:59	MrFlibble	because templates
2014-10-04 18:31:07	faenil	(it builds on gcc4.6)
2014-10-04 18:31:21	MrFlibble	you need to qualify or use this-> if name is in base template class
2014-10-04 18:31:50	faenil	MrFlibble: okay, but what happens? why doesn't it find it?
2014-10-04 18:31:53	MrFlibble	faenil: the error you posted suggests it didn't build
2014-10-04 18:32:04	faenil	that's with 4.8, it builds with gcc4.6
2014-10-04 18:32:20	o]	go complain to gcc developers
2014-10-04 18:32:21	o]	!next
2014-10-04 18:32:23	nolyc	Another satisfied customer, next!
2014-10-04 18:32:24	MrFlibble	then 4.6 has a bug
2014-10-04 18:32:39	MrFlibble	in addition to the bug in nokia code
2014-10-04 18:32:50	byte0x00	class X{int x; public: X(int x){ this->x = x; }
2014-10-04 18:32:54	faenil	I just want to understand how the resolution works..
2014-10-04 18:32:57	MrFlibble	er 4.8
2014-10-04 18:33:12	MrFlibble	geordi: --version
2014-10-04 18:33:12	geordi	g++ (GCC) 5.0.0 20140923 (experimental)
2014-10-04 18:33:15	o]	class X{int x; public: X(int x): x(x){} }; // byte0x00
2014-10-04 18:33:31	byte0x00	lol nice
2014-10-04 18:33:55		ultrixx (~ultrixx@p5DC7653E.dip0.t-ipconnect.de) has joined ##c++
2014-10-04 18:34:30	MrFlibble	faenil: it is how templates work; a template derived class accessing a name in a template base class must either use explicit scope qualification or this->
2014-10-04 18:35:11		TheBloke (~TheBloke@host86-163-7-114.range86-163.btcentralplus.com) has quit
2014-10-04 18:35:15	faenil	explicit scope qual as in Base::fun?
2014-10-04 18:35:20	MrFlibble	yes
2014-10-04 18:35:44	faenil	mmm ok
2014-10-04 18:35:48	faenil	I've been reading https://stackoverflow.com/questions/20924599/strange-behavior-when-perform-argument-dependent-name-lookup-in-template
2014-10-04 18:35:49	nolyc	<http://tinyurl.com/ky7sf5e> (at stackoverflow.com)
2014-10-04 18:36:05	faenil	but it just pointed to declaration ordering errors
2014-10-04 18:36:32	MrFlibble	geordi: template <typename T> struct base { typedef int foo; }; template <typename T> struct derived : base<T> { typedef foo bar; };
2014-10-04 18:36:32	geordi	error: 'foo' does not name a type
2014-10-04 18:36:45	MrFlibble	geordi: template <typename T> struct base { typedef int foo; }; template <typename T> struct derived : base<T> { typedef base<T>::foo bar; };
2014-10-04 18:36:45	geordi	error: need 'typename' before 'base<T>::foo' because 'base<T>' is a dependent scope
2014-10-04 18:36:50	MrFlibble	geordi: template <typename T> struct base { typedef int foo; }; template <typename T> struct derived : base<T> { typedef typename base<T>::foo bar; };
2014-10-04 18:36:50	geordi	Success
2014-10-04 18:36:56	MrFlibble	look at those errors
2014-10-04 18:36:58	MrFlibble	and success
2014-10-04 18:37:01	MrFlibble	faenil
2014-10-04 18:37:12	faenil	ok w8 :D
2014-10-04 18:37:52	o11c	ugh
2014-10-04 18:37:59	o11c	and the worst thing about reporting bugs in clang is
2014-10-04 18:38:06	o11c	"why do you think this is a bug"
2014-10-04 18:38:15		Betal (~Beta@unaffiliated/betal) has quit (Ping timeout: 246 seconds)
2014-10-04 18:38:25	o11c	so I just spent the last 30 minutes tracking down standards references
2014-10-04 18:39:08		Betal (~Beta@unaffiliated/betal) has joined ##c++
2014-10-04 18:39:09	faenil	MrFlibble: ok..
2014-10-04 18:39:12	MrFlibble	if life was easy we would all just sit in a box in our own shit all day.
2014-10-04 18:39:26	faenil	lol
2014-10-04 18:39:45		jitsuin (~chatzilla@cpe-23-243-174-121.socal.res.rr.com) has joined ##c++
2014-10-04 18:39:57	ultrixx	MrFlibble: very cool statement
2014-10-04 18:41:34	moonchild	ok, i got a standards question
2014-10-04 18:42:01	moonchild	22.4.1.4 says 'specialization codecvt<char16_t, char, mbstate_t> converts between the UTF-16 and UTF-8'
2014-10-04 18:42:23	moonchild	why is codecvt_utf8_utf16 needed?
2014-10-04 18:42:25		davek (~davek@unaffiliated/tracekill) has joined ##c++
2014-10-04 18:43:05	faenil	MrFlibble: this is quite clear about the issue: http://www.parashift.com/c++-faq-lite/nondependent-name-lookup-members.html
2014-10-04 18:43:18	faenil	though I think addSource *is* dependant, is it not?
2014-10-04 18:43:53	MrFlibble	ah yes you can also use a using declaration
2014-10-04 18:43:57	faenil	the first type is a Source<TYPE> source_;
2014-10-04 18:43:59	MrFlibble	as a third option
2014-10-04 18:44:00	o11c	moonchild: it looks like a convenience subclass
2014-10-04 18:44:19	moonchild	like just one that has a public dtor?
2014-10-04 18:44:29		Blue_Hat (~Blue_Hat@66.54.118.122) has quit (Ping timeout: 260 seconds)
2014-10-04 18:44:43	faenil	MrFlibble: thought those solutions are for when you have a non-dependant function, which doesn't seem to be my case
2014-10-04 18:44:50	faenil	thought*
2014-10-04 18:44:52	faenil	though*
2014-10-04 18:45:06		FunkyAss (~Funky@unaffiliated/funkyass) has quit (Quit: Make my Funk the P-Funk)
2014-10-04 18:45:12	moonchild	(since facets for some reason can't be instantiated by an end user)
2014-10-04 18:45:35	moonchild	i wanna punch the person that thought that one up in the face :P
2014-10-04 18:48:02		hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-10-04 18:48:15		hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Client Quit)
2014-10-04 18:48:44		hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-10-04 18:49:33		degva (~degva@190.234.105.143) has quit (Ping timeout: 260 seconds)
2014-10-04 18:51:21		RangerBob (~Brian@pool-173-72-144-130.clppva.fios.verizon.net) has joined ##c++
2014-10-04 18:51:26		Frisky-Ka (SomeWhere@90.208.59.225) has joined ##c++
2014-10-04 18:52:17		micom (~micom@unaffiliated/micom) has quit (Remote host closed the connection)
2014-10-04 18:52:21		askatasuna (~askatasun@198-211-245-190.fibertel.com.ar) has quit (Quit: WeeChat 1.0.1)
2014-10-04 18:52:35	byte0x00	This google voice is awesome, it would be even coolers if we can code with only our voices.
2014-10-04 18:53:04		davidstone (~david@174-29-88-81.hlrn.qwest.net) has joined ##c++
2014-10-04 18:53:27		roxfan (dunno@87.66.208.143) has quit (Ping timeout: 245 seconds)
2014-10-04 18:53:38	byte0x00	i tried but unfortunately it spells out the symbols, unless there is an option to configure idk. If i said Left curly brace, it spells it out.
2014-10-04 18:53:51		TheFuzzball (~TheFuzzba@cpc4-ward10-2-0-cust737.10-2.cable.virginm.net) has quit (Quit: Computer has gone to sleep.)
2014-10-04 18:53:55	moonchild	heh 'if open-paren x bang equal foo dot method open-paren close-paren close-paren' ... yeah, awesome
2014-10-04 18:54:08	byte0x00	is that the commands?
2014-10-04 18:54:11	byte0x00	voice commands.
2014-10-04 18:54:21		huckleberry78 (~huckleber@76.97.228.17) has joined ##c++
2014-10-04 18:54:32		TheFuzzball (~TheFuzzba@cpc4-ward10-2-0-cust737.10-2.cable.virginm.net) has joined ##c++
2014-10-04 18:54:33	faenil	MrFlibble: ok thanks anyway!
2014-10-04 18:54:38		FriskyKat (SomeWhere@2.221.159.42) has quit (Ping timeout: 272 seconds)
2014-10-04 18:54:45	moonchild	i'm saying that coding via voice is evil
2014-10-04 18:54:48		askatasuna (~askatasun@198-211-245-190.fibertel.com.ar) has joined ##c++
2014-10-04 18:55:11	byte0x00	how is it evil?
2014-10-04 18:55:25	moonchild	it takes 10x longer to say than to type
2014-10-04 18:55:35	davidstone	But you can't type while driving!
2014-10-04 18:55:43	byte0x00	good point david lol
2014-10-04 18:55:50	moonchild	i can't code and drive either :P
2014-10-04 18:58:38	byte0x00	maybe in the future, one will be able to voice code programs
2014-10-04 18:59:46		Tectu (~Tectu@78-167.60-188.cust.bluewin.ch) has quit (Quit: Leaving)
2014-10-04 18:59:53		MutSbeta (~user@128-69-63-190.broadband.corbina.ru) has joined ##c++
2014-10-04 18:59:53		Andy-chan2 (~Andy-chan@xdsl-87-78-149-211.netcologne.de) has quit (Read error: Connection reset by peer)
2014-10-04 19:00:00		Suchorski (regex@unaffiliated/suchorski) has joined ##c++
2014-10-04 19:00:03		Andy-chan (~Andy-chan@xdsl-87-78-149-211.netcologne.de) has joined ##c++
2014-10-04 19:01:03		jophish (~jophish@hermi.gotadsl.co.uk) has quit (Remote host closed the connection)
2014-10-04 19:01:17	hs_	faenil, is addSource a member function of the base class?
2014-10-04 19:01:46	faenil	hs_: yes it is, but since it's a dependent function, I don't see why it fails
2014-10-04 19:02:01		askatasuna (~askatasun@198-211-245-190.fibertel.com.ar) has quit (Quit: WeeChat 1.0.1)
2014-10-04 19:02:16	--	Frisky-Ka is now known as FriskyKat
2014-10-04 19:02:27	--	byte0x00 is now known as FriskyDog
2014-10-04 19:02:41	hs_	since it's a "dependent" or did you mean "non-dependent"?
2014-10-04 19:02:56	hs_	it is a dependent name and that is why it fails
2014-10-04 19:03:02	faenil	I meant dependent, because its first parameter depends on the template type
2014-10-04 19:03:30	faenil	mmm isn't adding "this->" just a way to force it to use a dependent lookup?
2014-10-04 19:03:31	hs_	I don't quite follow.. if it is a dependent name them you know why it fails
2014-10-04 19:03:40		huckleberry78 (~huckleber@76.97.228.17) has quit (Remote host closed the connection)
2014-10-04 19:03:49	faenil	no, I don't :)
2014-10-04 19:04:14	hs_	ok, think of it this way: what "has" the addSource member function?
2014-10-04 19:04:16	hs_	what class?
2014-10-04 19:04:44		Isnogud_ (~Isnogud@37.120.112.200) has quit (Quit: Leaving)
2014-10-04 19:04:57	faenil	the base class
2014-10-04 19:05:03	hs_	and what class is that?
2014-10-04 19:05:15	faenil	Producer iirc
2014-10-04 19:05:33	hs_	"RingBufferReader<TYPE>"
2014-10-04 19:05:33		jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has quit (Ping timeout: 246 seconds)
2014-10-04 19:05:38	hs_	so what class is the base class?
2014-10-04 19:05:59	faenil	addSource is a member of Producer
2014-10-04 19:06:46	hs_	I thought you said it was a member of the base class?
2014-10-04 19:06:56	hs_	I am looking at this BufferReader.h you pasted
2014-10-04 19:08:05	faenil	yes
2014-10-04 19:08:15		Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has joined ##c++
2014-10-04 19:08:17	faenil	so
2014-10-04 19:08:38		Balzy (~Balzy@host221-162-dynamic.14-87-r.retail.telecomitalia.it) has joined ##c++
2014-10-04 19:08:58		Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Ping timeout: 272 seconds)
2014-10-04 19:09:00	faenil	BufferReader : public RingBufferReader<TYPE> : public Pusher : public Producer
2014-10-04 19:09:03	faenil	that's the chain
2014-10-04 19:09:11	faenil	BufferReader<TYPE>
2014-10-04 19:09:22	faenil	while pusher and producer are not templated
2014-10-04 19:09:37	hs_	ok, so the base class of BufferReader is what?
2014-10-04 19:09:39	 *	o] pukes
2014-10-04 19:09:47		Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-10-04 19:09:48	o]	inheritance sucks
2014-10-04 19:10:09		dvt (~dvt@65.112.10.98) has joined ##c++
2014-10-04 19:10:11	faenil	hs_: ahm...Producer?
2014-10-04 19:10:15	MrFlibble	inheritance does not suck.
2014-10-04 19:10:24	MrFlibble	you suck.
2014-10-04 19:10:26	hs_	no, RingBufferReader<TYPE>
2014-10-04 19:10:30	faenil	xD
2014-10-04 19:10:31	o]	inheritance abuse yields schizoid designs and MrFlibble
2014-10-04 19:10:39	o]	MrFlibble = java coder
2014-10-04 19:10:41	hs_	but what class is that?
2014-10-04 19:10:55	hs_	here's where you say "that depends.. what is TYPE?"
2014-10-04 19:10:56	faenil	hs_: what do you mean "what" ?
2014-10-04 19:11:09	MrFlibble	o] would have a stroke if he was forced to do TDD.
2014-10-04 19:11:10	faenil	TapData, iirc
2014-10-04 19:11:18	hs_	RingBufferReader<TYPE> is not a class
2014-10-04 19:11:36	wallbroken	how to use a funcion in another function of the same class?
2014-10-04 19:11:39	faenil	it's a template
2014-10-04 19:12:14	hs_	faenil, right.. so does RingBufferReader<TYPE> have a member function called addSource, or does one of its base classes have it?
2014-10-04 19:12:35	faenil	Producer has it! XD
2014-10-04 19:12:49	hs_	no, here's where you say "That depends"
2014-10-04 19:12:53	faenil	its grandpa!
2014-10-04 19:13:02	faenil	mmm ok
2014-10-04 19:14:33	hs_	https://ideone.com/TJvPAT // faenil
2014-10-04 19:14:52	hs_	faenil, see if you can figure out why the one line works and the other doesn't
2014-10-04 19:14:59	faenil	ok
2014-10-04 19:15:03		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-10-04 19:18:27	faenil	hs_: because the empty struct is declared after the templated A?
2014-10-04 19:20:22	hs_	and so why would that cause a problem?
2014-10-04 19:20:27		seishun (~Kakera@84.237.197.157) has quit (Ping timeout: 245 seconds)
2014-10-04 19:20:44	hs_	this should probably be in ##C++-basic
2014-10-04 19:21:04	faenil	hehe
2014-10-04 19:21:17		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Ping timeout: 245 seconds)
2014-10-04 19:21:18	faenil	we can move there if you wish
2014-10-04 19:21:28	hs_	not to disparage you; yes
2014-10-04 19:21:57	FriskyDog	i didnt know they had a C++-basic
2014-10-04 19:21:59	faenil	no problem ;)
2014-10-04 19:22:51	FriskyDog	suprise they dont have a #C++-spoonfeed
2014-10-04 19:27:05		r3n1c0n (~r3n1c0n@2001:41d0:8:b330::1) has left ##c++ ("BB!")
2014-10-04 19:27:51		ToApolytoXaos (~ToApolyto@46.21.62.128) has quit (Quit: Leaving)
2014-10-04 19:28:38		BlaXpirit (~blaxpirit@203-37-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-10-04 19:30:56		shintah (bebble@h-140-107.a336.priv.bahnhof.se) has quit (Quit: Hejdå!)
2014-10-04 19:33:06		hexagoxel_ (~hexagoxel@kiel-5f77b225.pool.mediaWays.net) has joined ##c++
2014-10-04 19:33:23		deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-10-04 19:36:06		hexagoxel (~hexagoxel@kiel-4d067714.pool.mediaWays.net) has quit (Ping timeout: 250 seconds)
2014-10-04 19:36:12		Supicioso (~Supicioso@2607:5300:100:200::5e4) has quit (Ping timeout: 260 seconds)
2014-10-04 19:37:30		gelignite (~gelignite@i528C3524.versanet.de) has quit (Quit: http://bit.ly/nkczDT)
2014-10-04 19:40:03		NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-10-04 19:40:47		Jeeb_ (~Jeeb_@u193-11-162-37.studentnatet.se) has quit (Read error: Connection reset by peer)
2014-10-04 19:43:02		AndyLe (~Andy@unaffiliated/andyle) has quit (Ping timeout: 250 seconds)
2014-10-04 19:43:44	davek	I'm having trouble specializing a template as detailed here: http://hastebin.com/tudehasaha.cpp
2014-10-04 19:44:12	davek	Kind of curious why that is not a valid specialization (or not a _complete_ specialization as the error indicates.
2014-10-04 19:46:10	davek	Not sure if its relevant to this particular case but is_static_container is just a type trait meta-function that enables if the given type has std::get<> and std::tuple_size overloads.
2014-10-04 19:47:46	davidstone	typename std::true_type::type is kind of useless
2014-10-04 19:47:51		glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2014-10-04 19:47:57	davidstone	It's not a dependent type, so you don't need the typename
2014-10-04 19:48:09	davidstone	and std::true_type::type is just std::true_type
2014-10-04 19:48:25	davek	Ah of course.
2014-10-04 19:50:48		K-ballo (~sonoio@181.228.139.31) has quit (Read error: Connection reset by peer)
2014-10-04 19:51:44		Barrin6 (~Barrin6@user-0c8gm3t.cable.mindspring.com) has joined ##c++
2014-10-04 19:53:47		K-ballo (~sonoio@181.228.139.31) has joined ##c++
2014-10-04 19:55:36	davek	Ah, I figured out my issue. I should have specialized the SFINAE fallback, so specifying the true_type altogether was not necessary.
2014-10-04 19:56:59		glenfe (~glen@unaffiliated/glenfe) has quit (Ping timeout: 258 seconds)
2014-10-04 19:57:21	pragma-	sfinae is a god-awful initialism.
2014-10-04 19:59:02		fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-10-04 19:59:24		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-10-04 19:59:31	o11c	pragma-: fitting though
2014-10-04 19:59:56	o11c	sfinae = "dammit, what exact order of these elements do I need?"
2014-10-04 20:03:58	davek	pragma-, I think it works well as an acronym too.
2014-10-04 20:04:17	davek	sfeenay...
2014-10-04 20:04:21		Jesin (~Jesin@r192085.res.Lehigh.EDU) has quit (Quit: Leaving)
2014-10-04 20:04:21		TomyLobo (~TomyLobo@91.65.115.103) has quit (Quit: Standby mode...)
2014-10-04 20:04:25		da2ce7 (~da2ce7@opentransactions/dev/da2ce7) has joined ##c++
2014-10-04 20:04:56		boxofrox (~charetjc@173-165-40-181-Illinois.hfc.comcastbusiness.net) has quit (Ping timeout: 272 seconds)
2014-10-04 20:05:07		Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-10-04 20:06:04		cyberspace- (20253@ninthfloor.org) has quit (Remote host closed the connection)
2014-10-04 20:06:10		da2ce7 (~da2ce7@opentransactions/dev/da2ce7) has quit (Client Quit)
2014-10-04 20:07:26		cyberspace- (20253@ninthfloor.org) has joined ##c++
2014-10-04 20:07:26		ultrixx (~ultrixx@p5DC7653E.dip0.t-ipconnect.de) has quit (Quit: Bye.)
2014-10-04 20:07:32		riksteri (~riksteri@dsl-tkubrasgw3-54f96b-216.dhcp.inet.fi) has quit (Read error: Connection reset by peer)
2014-10-04 20:08:25		Mayzie (~Mayazcher@unaffiliated/mayazcherquoi) has joined ##c++
2014-10-04 20:11:12		Andy-chan (~Andy-chan@xdsl-87-78-149-211.netcologne.de) has quit (Ping timeout: 260 seconds)
2014-10-04 20:13:11		Rudolf (~rodolfo@unaffiliated/rudolf) has joined ##c++
2014-10-04 20:13:30		Erlkoenig (~erlkoenig@ip-109-90-150-61.hsi11.unitymediagroup.de) has quit (Quit: Leaving.)
2014-10-04 20:14:58		adek (~adek@S010678cd8e7c9c40.vc.shawcable.net) has joined ##c++
2014-10-04 20:16:04		adek (~adek@S010678cd8e7c9c40.vc.shawcable.net) has quit (Remote host closed the connection)
2014-10-04 20:16:31		systemfault (~Systemfau@oftn/member/systemfault) has joined ##c++
2014-10-04 20:16:50		systemfault (~Systemfau@oftn/member/systemfault) has quit (Max SendQ exceeded)
2014-10-04 20:17:36		vocodork (~vocoder@94-227-99-249.access.telenet.be) has quit (Quit: http://viennaensemblepro.com | http://viennamirpro.com)
2014-10-04 20:19:59		deekej (~deekej@195.65.3.245) has quit (Ping timeout: 258 seconds)
2014-10-04 20:22:33		huckleberry78 (~huckleber@76.97.228.17) has joined ##c++
2014-10-04 20:22:39		devm33 (~devm33@59-190-41-168f1.nar1.eonet.ne.jp) has joined ##c++
2014-10-04 20:23:14		unK_ (~drunK@dynamic-87-105-138-193.ssp.dialog.net.pl) has quit (Quit: KVIrc 4.3.1 Aria http://www.kvirc.net/)
2014-10-04 20:26:57		shiver32 (~shiver@nat-alex-runet-out-8.rutgers.edu) has joined ##c++
2014-10-04 20:27:28		snakenerd (~Thunderbi@177.43.6.53) has joined ##c++
2014-10-04 20:31:28		boxofrox (~charetjc@173-165-40-181-Illinois.hfc.comcastbusiness.net) has joined ##c++
2014-10-04 20:33:06		Bursihido (~Bursihido@unaffiliated/bursihido) has quit (Quit: WeeChat 1.0)
2014-10-04 20:33:18		deekej (~deekej@195.65.3.245) has joined ##c++
2014-10-04 20:33:23	lmat	It has been said that 'typeid' cannot be used on an incomplete type.
2014-10-04 20:33:33		systemfault (~Systemfau@oftn/member/systemfault) has joined ##c++
2014-10-04 20:33:48	lmat	What is meant by 'incomplete type'? Is the type considered incomplete relative to the TU, or at linking time?
2014-10-04 20:34:04		K-ballo (~sonoio@181.228.139.31) has quit (Read error: Connection reset by peer)
2014-10-04 20:34:56		degva (~degva@190.234.105.143) has joined ##c++
2014-10-04 20:37:28		snyp (~Snyp@150.129.132.64) has joined ##c++
2014-10-04 20:41:03		NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-10-04 20:42:50		lenarhoyt (5b13782b@gateway/web/freenode/ip.91.19.120.43) has quit (Quit: Page closed)
2014-10-04 20:46:04		ObjectiveMatt (~Objective@66.87.150.226) has joined ##c++
2014-10-04 20:46:21	MrFlibble	a type is incomplete if compiler can only see a declaration rather than a definition for it.
2014-10-04 20:46:30		NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Ping timeout: 272 seconds)
2014-10-04 20:46:54	MrFlibble	it has nothing to do with linking
2014-10-04 20:47:22	--	oleo is now known as Guest85944
2014-10-04 20:47:58		hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 258 seconds)
2014-10-04 20:48:28		alex10791 (~alex10791@0189800493.0.fullrate.dk) has quit (Ping timeout: 244 seconds)
2014-10-04 20:49:14		oleo__ (~oleo@xdsl-78-35-183-93.netcologne.de) has joined ##c++
2014-10-04 20:50:58		Guest85944 (~oleo@xdsl-78-35-140-25.netcologne.de) has quit (Ping timeout: 260 seconds)
2014-10-04 20:51:39		JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-10-04 20:53:11		snakenerd (~Thunderbi@177.43.6.53) has quit (Quit: snakenerd)
2014-10-04 20:54:12		Irrelium (~Irrelium@71.19.153.241) has quit (Quit: I need a cool quote to put here D:)
2014-10-04 20:54:55		stefandxm (~stefan@deusexmachinae.se) has quit (Excess Flood)
2014-10-04 20:56:06		stefandxm (~stefan@deusexmachinae.se) has joined ##c++
2014-10-04 20:59:31		Supicioso (~Supicioso@2607:5300:100:200::5e4) has joined ##c++
2014-10-04 20:59:35		glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2014-10-04 21:00:45		AndyLe (~Andy@unaffiliated/andyle) has joined ##c++
2014-10-04 21:02:47	o11c	lmat: a type can be incomplete at one point in the TU, and complete later. Arrays of unknown bound can never complete.
2014-10-04 21:02:50	o11c	I think void also
2014-10-04 21:04:05		glenfe (~glen@unaffiliated/glenfe) has quit (Ping timeout: 250 seconds)
2014-10-04 21:04:51		heedypo1 (~heedypo@2.222.221.201) has joined ##c++
2014-10-04 21:05:28	--	BinaryAddicted is now known as BinaryAddicted|A
2014-10-04 21:06:20		zima (zima@c75.152.27-202.clta.globetrotter.net) has quit (Quit: zima)
2014-10-04 21:06:22		BadApe (~BadApe@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has quit (Ping timeout: 260 seconds)
2014-10-04 21:06:50		ikrima (~ikrima@static-108-0-216-91.lsanca.fios.verizon.net) has joined ##c++
2014-10-04 21:08:16		heedypo (~heedypo@05470caa.skybroadband.com) has quit (Ping timeout: 272 seconds)
2014-10-04 21:08:37		Supicioso (~Supicioso@2607:5300:100:200::5e4) has quit (Ping timeout: 260 seconds)
2014-10-04 21:09:01		Jesin (~Jesin@r192085.res.Lehigh.EDU) has joined ##c++
2014-10-04 21:09:32		fluter (~fluter@fedora/fluter) has joined ##c++
2014-10-04 21:09:59		ikrima (~ikrima@static-108-0-216-91.lsanca.fios.verizon.net) has quit (Read error: Connection reset by peer)
2014-10-04 21:10:23		degva (~degva@190.234.105.143) has quit (Ping timeout: 240 seconds)
2014-10-04 21:10:32		ikrima (~ikrima@static-108-0-216-91.lsanca.fios.verizon.net) has joined ##c++
2014-10-04 21:10:35	lmat	o11c: Thanks for the info!
2014-10-04 21:10:54	lmat	MrFlibble: Okay, so we're looking at the TU. Thanks!
2014-10-04 21:11:09	lmat	MrFlibble: wait... so I can't use  typeid on anything for which I only have an header? crazy...
2014-10-04 21:12:07		degva (~degva@190.234.105.143) has joined ##c++
2014-10-04 21:12:45		Burga (~andrewm@58-6-136-250.dyn.iinet.net.au) has joined ##c++
2014-10-04 21:14:45		Orbitrix (~Huevos@c-76-113-30-226.hsd1.nm.comcast.net) has quit (Read error: Connection reset by peer)
2014-10-04 21:15:26		Suchorski (regex@unaffiliated/suchorski) has quit
2014-10-04 21:16:31		glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2014-10-04 21:16:47		deekej (~deekej@195.65.3.245) has quit (Remote host closed the connection)
2014-10-04 21:18:18		lmat (~lawsa@c-98-223-185-216.hsd1.in.comcast.net) has quit (Quit: leaving)
2014-10-04 21:18:27		Orbitrix (~Huevos@c-76-113-30-226.hsd1.nm.comcast.net) has joined ##c++
2014-10-04 21:18:36		lmat (~lmat@c-98-223-185-216.hsd1.in.comcast.net) has joined ##c++
2014-10-04 21:21:00	MrFlibble	lmat: I didn't say that
2014-10-04 21:21:16	lmat	MrFlibble: oops... I closed the window. What did I say you said? ^_^
2014-10-04 21:21:31	MrFlibble	classes are defined in header files usually
2014-10-04 21:21:47	MrFlibble	so are complete
2014-10-04 21:22:03	MrFlibble	if header file is included
2014-10-04 21:22:10	lmat	MrFlibble: Ah, right... That's what I'm currently clearing up in c++-general (when I rejoined, I accidentally went over there )
2014-10-04 21:22:16	lmat	MrFlibble: Right, right...
2014-10-04 21:22:34	lmat	MrFlibble: So I have this struct foo { GList * l; }; and I don't want anybody to know its definition...
2014-10-04 21:22:37	lmat	gee...how ghetto
2014-10-04 21:23:08	lmat	okay, I think I see now.
2014-10-04 21:23:24		huckleberry78 (~huckleber@76.97.228.17) has quit (Ping timeout: 272 seconds)
2014-10-04 21:23:32	lmat	Now what about this, MrFlibble
2014-10-04 21:23:43	lmat	Is the pointer to a complete class complete?
2014-10-04 21:24:01	hs_	pointer to an incomplete class is also complete
2014-10-04 21:24:18	lmat	why did you say 'also'?
2014-10-04 21:24:19		degva (~degva@190.234.105.143) has quit (Read error: Connection reset by peer)
2014-10-04 21:24:36	hs_	to avoid saying "yes, and also..."
2014-10-04 21:24:42	lmat	so sizeof(*struct A); is good?
2014-10-04 21:24:46	lmat	hs_: OHH, right, thanks.
2014-10-04 21:24:51		huckleberry78 (~huckleber@76.97.228.17) has joined ##c++
2014-10-04 21:25:02	lmat	in every context.
2014-10-04 21:25:06	lmat	more or less ^_^
2014-10-04 21:25:16	lmat	you know...like...you know
2014-10-04 21:25:27	hs_	<< sizeof(A*); struct A;
2014-10-04 21:25:28	geordi	8
2014-10-04 21:25:37	lmat	Okay... I'm hitting a problem where it runs fine for me on gcc and clang, but my buddy
2014-10-04 21:25:40	lmat	whoa...
2014-10-04 21:25:47	lmat	it doesn't even know what A is when it gets sizeof, right?
2014-10-04 21:25:56	lmat	it's not complete, it's not even declared!
2014-10-04 21:25:58	hs_	it knows A is a struct
2014-10-04 21:26:05	lmat	hs_: By reading ahead?
2014-10-04 21:26:35	lmat	My buddy's compiler doesn't do it right. We're running typeid on a forward-declared struct (definition is in another TU).
2014-10-04 21:27:56	hs_	lmat, the bot here parses the first bit after the rest, so you can put your "main" in the front
2014-10-04 21:28:02	lmat	hs_: gotcha
2014-10-04 21:28:07	hs_	but in general you need to have a declaration of A available
2014-10-04 21:28:08		RangerBob (~Brian@pool-173-72-144-130.clppva.fios.verizon.net) has quit (Quit: Help help I'm being repressed!)
2014-10-04 21:28:11	lmat	You have been very helpful.
2014-10-04 21:28:13	lmat	hs_: makes sense
2014-10-04 21:28:23	lmat	so, in our case, by the way, we're not using sizeof, we're using typeid.
2014-10-04 21:28:37	lmat	So, there is a typeid(foo*); in a TU that doesn't have a definition.
2014-10-04 21:29:13		hexagoxel_ (~hexagoxel@kiel-5f77b225.pool.mediaWays.net) has quit (Ping timeout: 250 seconds)
2014-10-04 21:29:35		Orion] (~nname@unaffiliated/orion/x-3970838) has quit
2014-10-04 21:29:39		qbann0p (~qbann0p@66.55.134.220) has quit (Quit: Leaving)
2014-10-04 21:30:48		Rslc (rslc@82-69-84-226.dsl.in-addr.zen.co.uk) has joined ##c++
2014-10-04 21:32:26		Balzy (~Balzy@host221-162-dynamic.14-87-r.retail.telecomitalia.it) has quit (Ping timeout: 258 seconds)
2014-10-04 21:35:53		Carbonflux (~BOB@174-21-109-233.tukw.qwest.net) has joined ##c++
2014-10-04 21:35:54		Guede (~chatzilla@HSI-KBW-095-208-211-114.hsi5.kabel-badenwuerttemberg.de) has left ##c++
2014-10-04 21:36:28		Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-10-04 21:37:27		huckleberry78 (~huckleber@76.97.228.17) has quit
2014-10-04 21:37:31	lmat	Is there a c-string (null-terminated) comparor class?
2014-10-04 21:37:42	lmat	In the standard of course ^_^, or should I make one?
2014-10-04 21:38:04	lmat	I have a map <const char *, foo>; and nothing matches because the pointers aren't equal.
2014-10-04 21:38:05		kailoAtWork (~kailoAtWo@cpe-75-83-169-163.socal.res.rr.com) has joined ##c++
2014-10-04 21:39:04		degva (~degva@190.234.106.239) has joined ##c++
2014-10-04 21:39:20	lmat	hey, hey!  std::strcmp!
2014-10-04 21:39:23	lmat	They thought of everything
2014-10-04 21:40:51		FriskyDog (~byte0x00@ool-4573b5ea.dyn.optonline.net) has quit (Quit: Leaving)
2014-10-04 21:41:15		degva (~degva@190.234.106.239) has quit (Client Quit)
2014-10-04 21:41:22		asakura (~asakura@gateway/tor-sasl/asakura) has quit (Remote host closed the connection)
2014-10-04 21:41:50	lmat	oh, wait, that's a function...can I pass that in?
2014-10-04 21:42:23	lmat	"expected a type, got strcmp" :(
2014-10-04 21:42:32	lmat	can I tell it "shut up, it'll work, I promise!"
2014-10-04 21:43:14		asakura (~asakura@gateway/tor-sasl/asakura) has joined ##c++
2014-10-04 21:44:56		Highvolts (~D@unaffiliated/loman) has joined ##c++
2014-10-04 21:45:09		Barrin6 (~Barrin6@user-0c8gm3t.cable.mindspring.com) has quit
2014-10-04 21:46:58		lleo (~Lleo@5ED09ADB.cm-7-1c.dynamic.ziggo.nl) has joined ##c++
2014-10-04 21:47:15		lleo (~Lleo@5ED09ADB.cm-7-1c.dynamic.ziggo.nl) has quit (Remote host closed the connection)
2014-10-04 21:49:59		kailoAtWork (~kailoAtWo@cpe-75-83-169-163.socal.res.rr.com) has quit (Quit: This computer has gone to sleep)
2014-10-04 21:50:41		ikrima (~ikrima@static-108-0-216-91.lsanca.fios.verizon.net) has quit (Read error: Connection reset by peer)
2014-10-04 21:50:58		SCHAAP137 (dorian@77-173-0-137.ip.telfort.nl) has quit (Remote host closed the connection)
2014-10-04 21:51:13		ikrima (~ikrima@static-108-0-216-91.lsanca.fios.verizon.net) has joined ##c++
2014-10-04 21:53:02		arescorpio (~arescorpi@190.190.244.100) has joined ##c++
2014-10-04 21:53:45		backinside (50f9a101@gateway/web/freenode/ip.80.249.161.1) has joined ##c++
2014-10-04 21:53:50		degva (~degva@190.234.106.239) has joined ##c++
2014-10-04 21:54:46		Irrelium (~Irrelium@71.19.153.241) has joined ##c++
2014-10-04 21:54:54		Irrelium (~Irrelium@71.19.153.241) has quit (Client Quit)
2014-10-04 21:55:34		Irrelium (~Irrelium@71.19.153.241) has joined ##c++
2014-10-04 21:55:57		nfk (~nfk@unaffiliated/nfk) has quit (Quit: yawn)
2014-10-04 22:03:22		licnep (uid4387@gateway/web/irccloud.com/x-seklfswyumskgfas) has joined ##c++
2014-10-04 22:03:48		Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-10-04 22:04:23		Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has quit (Read error: Connection reset by peer)
2014-10-04 22:04:42	licnep	guys i'm using "Mat *m = new Mat()" is it possible to do the equivalent without using a pointer? I think it was, but i forgot the syntax
2014-10-04 22:05:34		dvt (~dvt@65.112.10.98) has quit (Read error: Connection reset by peer)
2014-10-04 22:06:04		CHC (~CHC@unaffiliated/chc) has joined ##c++
2014-10-04 22:06:06	o]	licnep: auto m = make_unique<Mat>();
2014-10-04 22:06:15	o]	if you need a pointer
2014-10-04 22:06:20	o]	or else, just do Mat m;
2014-10-04 22:06:50	licnep	o]:  but i can't do "Mat m = new Mat(asdfasdfasdf)" right?
2014-10-04 22:07:04	o]	Mat m(sdfsdf);
2014-10-04 22:07:08	o]	Mat m{dfsdfdsf};
2014-10-04 22:07:14	o]	auto m = Mat{fdfsdfs};
2014-10-04 22:07:20	licnep	mm ok, thanks
2014-10-04 22:08:22		aabramov (~boringwal@pool-72-78-109-250.phlapa.fios.verizon.net) has quit (Ping timeout: 272 seconds)
2014-10-04 22:09:29		glenfe (~glen@unaffiliated/glenfe) has quit (Ping timeout: 272 seconds)
2014-10-08 17:58:17		dagnachew (~dagnachew@bas1-montreal30-2925417210.dsl.bell.ca) has joined ##c++
2014-10-08 17:58:17	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-08 17:58:17	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-08 17:58:17	--	Channel ##c++: 544 nicks (0 ops, 0 voices, 544 normals)
2014-10-08 17:58:18	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-08 17:58:25		francisl (~flavoie@NFBONF.NFB.CA) has quit (Ping timeout: 258 seconds)
2014-10-08 17:58:28	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-08 17:58:46		BlaXpirit (~blaxpirit@239-56-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-10-08 18:00:23		deekej (~deekej@nat184.lu.usi.ch) has joined ##c++
2014-10-08 18:00:45		mrevil (~mrevil@12.111.84.106) has quit (Remote host closed the connection)
2014-10-08 18:01:04		halim (~halim@unaffiliated/halim) has quit (Quit: Leaving)
2014-10-08 18:01:07		Stryyker (stryyker16@about/windows/staff/stryyker) has quit (Disconnected by services)
2014-10-08 18:01:11		Betal (~Beta@unaffiliated/betal) has joined ##c++
2014-10-08 18:01:22		stryyker2 (stryyker16@about/windows/staff/stryyker) has joined ##c++
2014-10-08 18:02:15		Cirus (~textual@c-98-210-235-117.hsd1.ca.comcast.net) has joined ##c++
2014-10-08 18:02:23		shintah (bebble@h-140-107.a336.priv.bahnhof.se) has quit (Read error: Connection reset by peer)
2014-10-08 18:03:17		leen^| (~leeN@f051227057.adsl.alicedsl.de) has quit (Read error: Connection reset by peer)
2014-10-08 18:04:23		leen^| (~leeN@f051227057.adsl.alicedsl.de) has joined ##c++
2014-10-08 18:04:24		dapz (~textual@216.239.45.90) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-10-08 18:04:58		kexmex (~kexmex@178.136.234.6) has joined ##c++
2014-10-08 18:06:07		stdvector (~stdvector@gateway/tor-sasl/stdvector) has quit (Quit: Leaving)
2014-10-08 18:06:11		plamen (user@nat/mslo/x-hogpakxkagyujwug) has quit (Quit: ERC Version 5.3 (IRC client for Emacs))
2014-10-08 18:06:19		kailoAtWork (~kailoAtWo@208.184.77.122) has quit (Quit: Leaving)
2014-10-08 18:06:28		dapz (~textual@216.239.45.90) has joined ##c++
2014-10-08 18:06:35		kailoAtWork (~kailoAtWo@208.184.77.122) has joined ##c++
2014-10-08 18:06:37		Cirus (~textual@c-98-210-235-117.hsd1.ca.comcast.net) has quit (Ping timeout: 250 seconds)
2014-10-08 18:08:30		ncd|leeN (~leeN@e180191202.adsl.alicedsl.de) has joined ##c++
2014-10-08 18:08:36		DanteLA (~DanteLA@a91-154-125-124.elisa-laajakaista.fi) has joined ##c++
2014-10-08 18:08:52		ra4king (~ra4king@unaffiliated/ra4king) has quit (Excess Flood)
2014-10-08 18:09:19		ra4king (~ra4king@unaffiliated/ra4king) has joined ##c++
2014-10-08 18:10:04		leen^| (~leeN@f051227057.adsl.alicedsl.de) has quit (Ping timeout: 244 seconds)
2014-10-08 18:10:49		dapz (~textual@216.239.45.90) has quit (Ping timeout: 246 seconds)
2014-10-08 18:11:05		DanteLA (~DanteLA@a91-154-125-124.elisa-laajakaista.fi) has quit (Client Quit)
2014-10-08 18:11:20		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has joined ##c++
2014-10-08 18:19:25		dagnachew (~dagnachew@bas1-montreal30-2925417210.dsl.bell.ca) has joined ##c++
2014-10-08 18:19:25	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-08 18:19:25	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-08 18:19:25	--	Channel ##c++: 536 nicks (0 ops, 0 voices, 536 normals)
2014-10-08 18:19:25	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-08 18:19:29		io2 (~io2@unaffiliated/irrequietus) has quit (Quit: ...take irc away, what are you? genius, billionaire, playboy, philanthropist)
2014-10-08 18:19:33	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-08 18:19:43	kadoban	DLPeterson: Is it me or did your paste just show both working?
2014-10-08 18:19:44	lmat	DLPeterson: I think the C++ is fine there. What compiler are you using?
2014-10-08 18:19:54	lmat	kadoban: oh yeah!
2014-10-08 18:20:08	lmat	DLPeterson: But as soon as I ask what compiler you're using, we're in
2014-10-08 18:20:11	lmat	!general
2014-10-08 18:20:11	nolyc	##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-10-08 18:20:13	lmat	land
2014-10-08 18:20:31		micom (~micom@unaffiliated/micom) has quit (Remote host closed the connection)
2014-10-08 18:21:30	DLPeterson	kadoban, i get an error, did you try compiling it?
2014-10-08 18:21:45	DLPeterson	lmat, gcc-4.9.1 on my local machine
2014-10-08 18:21:45	lmat	DLPeterson: ideone compiles it for you.
2014-10-08 18:21:47	kadoban	DLPeterson: The website you pasted it to automatically did.
2014-10-08 18:22:05	kalven	you take a non-const reference
2014-10-08 18:23:38	DLPeterson	lmat, kadoban I get this error on ideone: https://bpaste.net/show/16895825fd5b
2014-10-08 18:24:14		MrFlibble (LunarJetma@2.221.166.187) has quit (Quit: MrFlibble)
2014-10-08 18:24:17	DLPeterson	lmat, kadoban and on my local machine i get the same: https://bpaste.net/show/042aabcb5605
2014-10-08 18:24:19		Munnu (~timo@91-158-146-113.elisa-laajakaista.fi) has quit (Remote host closed the connection)
2014-10-08 18:24:21	kadoban	kalven's suggestion is looking pretty good
2014-10-08 18:24:32	lmat	DLPeterson: oh...
2014-10-08 18:24:40		K3|Chris (~ChrisK3@unaffiliated/krill3) has quit (Remote host closed the connection)
2014-10-08 18:24:41	lmat	DLPeterson: do a RHS ref
2014-10-08 18:24:43		jitsuin (~chatzilla@cpe-23-243-174-121.socal.res.rr.com) has joined ##c++
2014-10-08 18:24:44		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2014-10-08 18:24:56		Hannibal_Smith (~Hannibal_@host68-159-dynamic.6-87-r.retail.telecomitalia.it) has quit (Quit: Sto andando via)
2014-10-08 18:25:09	lmat	DLPeterson: You see that your function is getting a reference to that parameter? And you understand that  int & a = 6; is no good?
2014-10-08 18:25:29	lmat	DLPeterson: You can either take a right-hand reference or take by value.
2014-10-08 18:25:59	tsimpson	it should take a const_reference
2014-10-08 18:27:24	xico	is it possible to define a class method in a class template parametrized with N, only if N!=0? i tried with std::enable_if_t but the compiler yells at me.
2014-10-08 18:27:25	DLPeterson	ok, so typename std::iterator_traits<Iterator>::value_type value works with both
2014-10-08 18:27:55	tsimpson	there's no reason to take by value
2014-10-08 18:28:01	K-ballo	xico: yes, but you need a dependent argument on which to enable_if, try template <int DepedentN = N> enable_if<whatever
2014-10-08 18:28:16		nANdy (6d380eee@gateway/web/freenode/ip.109.56.14.238) has joined ##c++
2014-10-08 18:28:29	DLPeterson	tsimpson, i'm not sure how to take by reference correctly
2014-10-08 18:28:34	K-ballo	xico: enable_if only works when the resulting type is a depending type
2014-10-08 18:28:48	DLPeterson	                       const typename std::iterator_traits<Iterator>::reference& value,
2014-10-08 18:28:52	DLPeterson	does not work
2014-10-08 18:29:21	ekem	i was just goofing with that last night....... good luck DLPeterson!
2014-10-08 18:29:21	kadoban	*just guessing* blahblah::const_reference ?
2014-10-08 18:30:08	xico	K-ballo: wah, did not knew about dependent arguments. thanks a lot!
2014-10-08 18:30:14	tsimpson	DLPeterson: use ::const_reference instead
2014-10-08 18:30:31	DLPeterson	kadoban, that is not part of iterator_traits<Iterator>
2014-10-08 18:30:34	davek	What kadoban said but also isn't std::iterator_traits<Iterator>::reference already a reference type? So you're trying to create a const reference reference type?
2014-10-08 18:30:35	DLPeterson	tsimpson, ^
2014-10-08 18:31:11	kadoban	Yeah, that does seems suspicious too
2014-10-08 18:31:47		snakenerd (~Thunderbi@177.43.5.27) has joined ##c++
2014-10-08 18:32:01	lmat	davek: that's what I thought.
2014-10-08 18:33:25		s5s (~s5s@unaffiliated/s5s) has quit (Quit: WeeChat 1.0.1)
2014-10-08 18:34:12	tsimpson	<< TYPE<const_reference<std::vector<int>::iterator>>; template<typename Iterator> using const_reference = std::add_lvalue_reference_t<std::add_const_t<std::remove_reference_t<typename std::iterator_traits<Iterator>::reference>>>; // DLPeterson hack away
2014-10-08 18:34:13	geordi	int const&
2014-10-08 18:34:57	davek	Sweet christ.
2014-10-08 18:35:04	DLPeterson	wow
2014-10-08 18:35:08	tsimpson	yes, and that's the *short* version
2014-10-08 18:35:40	davek	I'm impressed and nauseous and the same time.
2014-10-08 18:35:59		PlasmaHH (~kvirc@speedy.projectiwear.org) has quit (Ping timeout: 260 seconds)
2014-10-08 18:36:29	DLPeterson	so basically, for small types typename std::iterator_traits<Iterator>::value_type value
2014-10-08 18:37:00	tsimpson	of course, one can just: add_const_t<typename iterator_traits<Iterator>::value_type>&
2014-10-08 18:37:11	DLPeterson	tsimpson, can you fork and edit that ideone with your edit?  I'm not sure I am getting your solution
2014-10-08 18:37:16	tsimpson	or const typename iterator_traits<Iterator>::value_type&
2014-10-08 18:38:02	DLPeterson	tsimpson, const typename iterator_traits<Iterator>::value_type& is the magic bullet i was looking for
2014-10-08 18:38:03		ObjectiveMatt (~Objective@66.87.151.143) has joined ##c++
2014-10-08 18:38:08	DLPeterson	tsimpson, thanks
2014-10-08 18:38:36		jrow (~james.row@unaffiliated/jrow) has joined ##c++
2014-10-08 18:39:51		pixelate (~pixelate@139.195.48.96) has quit (Quit: WeeChat 1.0)
2014-10-08 18:40:59	hs_	DLPeterson, why don't you just add a parameter to the template (U), add U const& u to the parameter list, and use u
2014-10-08 18:41:00	DLPeterson	tsimpson, except that doesn't work for rvalues
2014-10-08 18:41:19	tsimpson	DLPeterson: sure it does, rvalues can bind to lvalue references to const
2014-10-08 18:41:33	tsimpson	{ const int& x = 42; cout << x; }
2014-10-08 18:41:34	geordi	42
2014-10-08 18:41:53		pixelate (~pixelate@139.195.48.96) has joined ##c++
2014-10-08 18:42:01	hs_	instead of having a big ugly type generated to guarantee correctness that errors out if it isn't correct, just use a type and let it error out if not correct
2014-10-08 18:42:39		schleppel (~quassel@141.39.226.237) has quit (Read error: Connection reset by peer)
2014-10-08 18:42:44	DLPeterson	tsimpson, when I pass in something like v[0], i get a compiler error, where v is a vector, so v[0] is a const_reference
2014-10-08 18:43:01		ObjectiveMatt (~Objective@66.87.151.143) has quit (Ping timeout: 250 seconds)
2014-10-08 18:43:43	tsimpson	DLPeterson: http://ideone.com/qaT6dn
2014-10-08 18:46:03		Nando_k (~Nando_k@dslb-088-071-172-233.088.071.pools.vodafone-ip.de) has quit (Ping timeout: 250 seconds)
2014-10-08 18:48:17	DLPeterson	tsimpson, ok, thanks that works. I'm getting some other compiler error
2014-10-08 18:48:30	DLPeterson	tsimpson, unrelated to what you have there
2014-10-08 18:48:37		FunkyAss (~Funky@unaffiliated/funkyass) has quit (Quit: Make my Funk the P-Funk)
2014-10-08 18:48:57		Kulrak (kulrak@tlug/member/kulrak) has joined ##c++
2014-10-08 18:49:58	hs_	http://ideone.com/qgsZMk // DLPeterson
2014-10-08 18:50:14	hs_	U!!
2014-10-08 18:51:04		ln27 (5b13782b@gateway/web/freenode/ip.91.19.120.43) has quit (Quit: Page closed)
2014-10-08 18:52:47		destenson (~destenson@wsip-70-167-188-130.sd.sd.cox.net) has quit (Ping timeout: 260 seconds)
2014-10-08 18:53:23		seishun (~Kakera@46.109.243.192) has quit (Ping timeout: 245 seconds)
2014-10-08 18:55:19	tsimpson	U&&
2014-10-08 18:55:50	tsimpson	more symbols must be better code
2014-10-08 18:56:21		deekej (~deekej@nat184.lu.usi.ch) has quit (Remote host closed the connection)
2014-10-08 18:56:27	hs_	more better code
2014-10-08 18:59:32		jitsuin (~chatzilla@cpe-23-243-174-121.socal.res.rr.com) has quit (Ping timeout: 245 seconds)
2014-10-08 18:59:49		Andy-chan (~Andy-chan@xdsl-87-78-158-20.netcologne.de) has quit (Read error: Connection reset by peer)
2014-10-08 19:00:03		Andy-chan (~Andy-chan@xdsl-87-78-158-20.netcologne.de) has joined ##c++
2014-10-08 19:01:05		Cirus (~textual@c-98-210-235-117.hsd1.ca.comcast.net) has joined ##c++
2014-10-08 19:01:54		SirJonthe (~SirJonthe@c83-176-216-93.cust.tele2.se) has quit (Quit: SirJonthe)
2014-10-08 19:02:13		kexmex (~kexmex@178.136.234.6) has quit (Quit: Computer has gone to sleep.)
2014-10-08 19:03:14		bitlord (~bitlord@unaffiliated/bitlord) has quit (Quit: bitlord)
2014-10-08 19:04:12	DLPeterson	hs_, thanks that works.  can you explain this now: http://ideone.com/C56Lj5 ?
2014-10-08 19:04:36	DLPeterson	if i use ::binary_search it fixes things, but I'm confused why that is needed
2014-10-08 19:04:46	DLPeterson	or if I change the name
2014-10-08 19:04:54	K-ballo	!give DLPeterson stdref adl
2014-10-08 19:04:56	nolyc	DLPeterson: http://en.cppreference.com/w/cpp/language/adl
2014-10-08 19:05:29	tsimpson	short answer, rename your function
2014-10-08 19:05:30		Cirus (~textual@c-98-210-235-117.hsd1.ca.comcast.net) has quit (Ping timeout: 258 seconds)
2014-10-08 19:05:35	DLPeterson	tsimpson, :)
2014-10-08 19:06:31	DLPeterson	so the std namespace has priority over the global namespace since the types of begin(v) and end(v) are std::vector::iterator's, essentially?
2014-10-08 19:07:33	K-ballo	priority? no no no
2014-10-08 19:07:39	tsimpson	not priority no, if they did it wouldn't be ambiguous
2014-10-08 19:07:42	K-ballo	it's just as good
2014-10-08 19:07:56	tsimpson	they are simply added to the scope of lookup
2014-10-08 19:08:14	tsimpson	and the call becomes ambiguous because it fits both
2014-10-08 19:08:24		K-ballo (~sonoio@181.228.139.31) has quit (Read error: Connection reset by peer)
2014-10-08 19:08:37	DLPeterson	hmmm, ok
2014-10-08 19:09:21	tsimpson	it's why begin(v) works, because v is std::vector and it's an unqualified call the namespace std is added to the scope of lookup and std::begin is found
2014-10-08 19:09:42		K-ballo (~sonoio@181.228.139.31) has joined ##c++
2014-10-08 19:10:05	tsimpson	it's also how operator overloading is implemented, and why std::cout << something; works (adding namespace std to the scope to look for a matching operator<<)
2014-10-08 19:11:48	DLPeterson	so change name or put in a different namespace and explicitly refer to it within that namespace
2014-10-08 19:12:06	tsimpson	yes
2014-10-08 19:12:25	DLPeterson	cool, thanks for the help
2014-10-08 19:12:56	hs_	someone can correct me, but I think if you had a non-template function it would pick yours over the std::
2014-10-08 19:12:57	hs_	even with adl
2014-10-08 19:13:03	tsimpson	ADL is useful, but you need to avoid polluting the global namespace
2014-10-08 19:13:26		Backinside (~Thunderbi@business-86-101-237-121.business.broadband.hu) has quit (Quit: Backinside)
2014-10-08 19:13:30		King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has quit (Read error: Connection reset by peer)
2014-10-08 19:13:33		asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-08 19:14:00	tsimpson	std:: isn't special in any way other than it's the reserved name for the standard library
2014-10-08 19:14:16	K-ballo	hs_: adl doesn't affect the way overload resolution selects the best match, it just adds more candidates
2014-10-08 19:14:23	DLPeterson	tsimpson, make sense
2014-10-08 19:14:35		huckleberry78 (~huckleber@76.97.228.17) has joined ##c++
2014-10-08 19:14:44	hs_	K-ballo, but doesn't it only add candidates and go looking if it doesn't find a match in the available scope?
2014-10-08 19:15:19	K-ballo	hs_: nope, it goes looking for aaaaall possible candidates before it even starts picking one.. first you create an overload set, then resolve the call
2014-10-08 19:16:11	K-ballo	basically, it is no different than an implicit using namespace whatever
2014-10-08 19:16:35	K-ballo	(not exactly, but it's a good way of seeing it initially)
2014-10-08 19:17:40		EvilPenguin (~EvilPengu@ultramain.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-10-08 19:18:11		rnickb (~rnickb@rrcs-208-105-23-238.nyc.biz.rr.com) has joined ##c++
2014-10-08 19:18:43		dvt (~dvt@65.112.10.222) has quit (Ping timeout: 245 seconds)
2014-10-08 19:18:55		huckleberry78 (~huckleber@76.97.228.17) has quit (Ping timeout: 258 seconds)
2014-10-08 19:18:58	rnickb	is it possible to access the ith element of a constexpr std::array with c++11? i know you can with c++14
2014-10-08 19:21:20		Bursihido (bursihido@unaffiliated/bursihido) has quit (Quit: WeeChat 1.0-dev)
2014-10-08 19:24:00		Bursihido (bursihido@unaffiliated/bursihido) has joined ##c++
2014-10-08 19:25:31		systemfault (~Systemfau@oftn/member/systemfault) has joined ##c++
2014-10-08 19:27:03		alxgnon (~alxgnon@unaffiliated/alxgnon) has joined ##c++
2014-10-08 19:27:25		Darth_Ginger (~Thunderbi@cpe-74-138-187-42.swo.res.rr.com) has quit (Quit: Darth_Ginger)
2014-10-08 19:29:39		dreampwnzor (~dreampwnz@unaffiliated/dreampwnzor) has quit (Remote host closed the connection)
2014-10-08 19:29:41	hs_	K-ballo, are you sure? what am I missing here?
2014-10-08 19:29:47	hs_	{ foo(A::B{}); } namespace A { struct B {}; template <typename T> void foo(T) { BARK; } } template <typename T> void foo(T) { BARK; } void foo(A::B) { BARK; } //
2014-10-08 19:29:47	geordi	foo(A::B)
2014-10-08 19:29:55	hs_	{ foo(A::B{}); } namespace A { struct B {}; template <typename T> void foo(T) { BARK; } } template <typename T> void foo(T) { BARK; }  // ambiguous
2014-10-08 19:29:55	geordi	error: call of overloaded 'foo(A::B)' is ambiguous
2014-10-08 19:30:08	hs_	{ foo(A::B{}); } namespace A { struct B {}; template <typename T> void foo(T) { BARK; } }  // adl
2014-10-08 19:30:08	geordi	A::foo(A::B)
2014-10-08 19:31:13	K-ballo	hs_: are you missing that one is a better match in the first snippet? don't think so.. what's the question?
2014-10-08 19:31:35	hs_	yeah.. if it finds a match in scope it doesn't do adl
2014-10-08 19:31:48	tsimpson	{ foo(A::B{}); } namespace A { struct B {}; void foo(B) { BARK; } } template<typename T> void foo(T) {BARK;} // ADL
2014-10-08 19:31:48	geordi	A::foo(A::B)
2014-10-08 19:32:08	tsimpson	foo(T) is a match, but ADL gives us A::foo(B)
2014-10-08 19:32:09	hs_	K-ballo, that's what I said earlier.. if he had a non-template function that matched his binar_search call it would not consider adl
2014-10-08 19:32:31	tsimpson	the non-template one is in the namespace, the template one is in the global namespace
2014-10-08 19:32:37	hs_	oh yeah one sec
2014-10-08 19:32:46	tsimpson	the global one would match, but ADL found a *better* match
2014-10-08 19:33:02		Backinside (~Thunderbi@business-86-101-237-121.business.broadband.hu) has joined ##c++
2014-10-08 19:33:15		Siberian_Tiger (~Nicholas@199-96-202-110.fidnet.com) has quit (Ping timeout: 244 seconds)
2014-10-08 19:33:17		pyon-yuri (~suckmy@unaffiliated/pyon) has quit (Ping timeout: 250 seconds)
2014-10-08 19:33:20		Siberian_Tiger (~Nicholas@199-96-202-110.fidnet.com) has joined ##c++
2014-10-08 19:33:23	hs_	yeah I see
2014-10-08 19:33:32	K-ballo	{ foo(A::B{}); } namespace A { struct B{}; template <typename T> void foo(T) { BARK; } void foo(A::B){ BARK: } } template <typename T> void foo(T) { BARK; }
2014-10-08 19:33:32	geordi	error: expected ';' before ':' token
2014-10-08 19:33:35	hs_	I was confusing myself with the template in the namespace
2014-10-08 19:33:52	K-ballo	geordi: replace BARK: with BARK;
2014-10-08 19:33:53	geordi	A::foo(A::B)
2014-10-08 19:34:08	hs_	it only skips adl if it finds a function at block scope
2014-10-08 19:34:08	K-ballo	best match is the best match
2014-10-08 19:35:04	hs_	{ void foo(A::B); foo(A::B{}); } namespace A { struct B {}; void foo(B) { BARK; } } void foo(A::B) { BARK; } // so this kind of thing
2014-10-08 19:35:04	geordi	foo(A::B)
2014-10-08 19:36:45		jitsuin (~chatzilla@cpe-23-243-174-121.socal.res.rr.com) has joined ##c++
2014-10-08 19:37:40		eghdk (80eb08a8@gateway/web/freenode/ip.128.235.8.168) has joined ##c++
2014-10-08 19:38:18		ultrixx (~ultrixx@p5B2DECE4.dip0.t-ipconnect.de) has quit (Quit: Bye.)
2014-10-08 19:39:42		jrow (~james.row@unaffiliated/jrow) has quit (Quit: Lost terminal)
2014-10-08 19:39:46	eghdk	Hello I'm trying to complete a small project in c++, but I'm a java dev. I was wondering if someone could explain to me why my ide is giving a method declaration a compile error. pastebin: http://pastebin.com/RB4srAGZ
2014-10-08 19:39:48		m0shbear (~011899988@servbox.moshbear.net) has quit (Ping timeout: 240 seconds)
2014-10-08 19:40:06		gelignite (~gelignite@i528C3004.versanet.de) has quit (Quit: http://bit.ly/nkczDT)
2014-10-08 19:40:13	ekem	hey guys and gals, im trying to figure out the best practice for giving methods of a class the same function that live...? thats my question, in c++ what are some options for aliasing member functions to another class --- a macro, constexpr?
2014-10-08 19:40:35	ekem	im using string iterators in the function id like to share which seems to rule out macros
2014-10-08 19:41:20	tsimpson	eghdk: getToken is missing a return type
2014-10-08 19:41:50	eghdk	Is there a void return type (like java)?
2014-10-08 19:42:56	tsimpson	you mean the one java took from C and C++, yes
2014-10-08 19:43:00	tsimpson	it's called "void"
2014-10-08 19:43:55	kadoban	eghdk: Writing C++ without ever learning about it is going to go...very poorly.
2014-10-08 19:44:18	kadoban	eghdk: Get a book or something
2014-10-08 19:44:19	K-ballo	lol
2014-10-08 19:45:02	eghdk	I'm trying. I'm reading a C book so I get a lot of it, but not all.
2014-10-08 19:45:03	K-ballo	when C++11 was about to be ratified, some guy told me it was about time C++ did something of his own instead of just reaping everything from java :P
2014-10-08 19:45:14	eghdk	Just getting stuck on some small things.
2014-10-08 19:45:41		zima (zima@c75.152.27-202.clta.globetrotter.net) has quit (Quit: zima)
2014-10-08 19:46:03		crewshin_ (~crewshin@wsip-70-183-63-66.oc.oc.cox.net) has quit
2014-10-08 19:46:43		pyon-yuri (~suckmy@unaffiliated/pyon) has joined ##c++
2014-10-08 19:47:06		rnickb (~rnickb@rrcs-208-105-23-238.nyc.biz.rr.com) has quit (Quit: rnickb)
2014-10-08 19:47:25		quaz0r (quaz@c-67-183-243-24.hsd1.wa.comcast.net) has quit (Ping timeout: 255 seconds)
2014-10-08 19:47:36	o-O-o	!give eghdk C
2014-10-08 19:47:38	nolyc	eghdk: C is an old byte processing language without templates, exceptions, namespaces, constructors/destructors (and therefore RAII), virtual function polymorphism, references, operator/function overloading, reusable standard generic containers, or explicitly named casts.
2014-10-08 19:48:26	eghdk	Well I'm trying to use c and c++ for trying some NDK in Android development.
2014-10-08 19:48:38	o-O-o	just use C++
2014-10-08 19:48:55	eghdk	So for right now I'm trying to write basic programs to just see if I can implement them through java/jni
2014-10-08 19:48:59	eghdk	Appreciate any help on this header issue also: http://pastebin.com/jeeEQENK
2014-10-08 19:49:05	kadoban	eghdk: First step would be to pick one. C and C++ aren't one language
2014-10-08 19:49:21		sohail (~user@unaffiliated/sohail) has quit (Ping timeout: 260 seconds)
2014-10-08 19:49:45	eghdk	kadoban: Well my c++ professor said "C is C++ if you take all of the shit out of it", so I don't really know who to believe any more. heh.
2014-10-08 19:50:03		hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 245 seconds)
2014-10-08 19:50:07	ekem	eghdk: thats a truthful concept
2014-10-08 19:50:27	tsimpson	almost, C++ is not a total super-set of C
2014-10-08 19:50:34	ekem	c++ initially solved some of the problems C had in producing intuitive code
2014-10-08 19:50:42	eghdk	But it's only an elective class, I do full time java dev. So I'm familiar with OOP,.
2014-10-08 19:50:49	ekem	but at this point its not helpful to make that comparison, as its changed quit a bit
2014-10-08 19:50:53	tsimpson	eghdk: types from the standard library live in the std:: namespace
2014-10-08 19:50:54	eghdk	Well c++ is OOP right ekem and C is functional?
2014-10-08 19:51:02	tsimpson	don't be silly
2014-10-08 19:51:04	ekem	eh you can't even say that
2014-10-08 19:51:11	kadoban	eghdk: Except C++ didn't take anything out of C...
2014-10-08 19:51:12	tsimpson	C++ can express many programming styles
2014-10-08 19:51:21	ekem	C is just as OOP, but c++ enables more routes to that end game
2014-10-08 19:51:29	kadoban	C is extremely far from functional, functional means something else.
2014-10-08 19:51:32	tsimpson	C++ did take things out of C
2014-10-08 19:51:33	ekem	like tsimpson is saying much better, it is more 'expressive'
2014-10-08 19:51:34	kadoban	Maybe you're thinking of imperitive?
2014-10-08 19:51:41	tsimpson	like implicit conversion from void*
2014-10-08 19:51:50		quaz0r (quaz@c-67-183-243-24.hsd1.wa.comcast.net) has joined ##c++
2014-10-08 19:51:54	kadoban	tsimpson: Not much though. It certainly didn't take "all of the shit" out.
2014-10-08 19:51:55	ekem	functional is another actual term, so you can't use it as adjuctive
2014-10-08 19:52:05	ekem	adjective
2014-10-08 19:52:10		ketamin (~Thunderbi@189.219.47.2) has joined ##c++
2014-10-08 19:52:18	tsimpson	kadoban: it's referring to the "shit" in C++, stripping it so you're left with C
2014-10-08 19:52:25		sohail (~user@unaffiliated/sohail) has joined ##c++
2014-10-08 19:52:26	eghdk	Hmm... well I'll keep looking into it. I learned java first and love it. In my spare time I'm reading K & R and I'll eventually get to a C++ book.
2014-10-08 19:52:41	kadoban	tsimpson: Hmm, I see
2014-10-08 19:52:43	ekem	c is just more literal, and sits pretty close to what it is doing, so memory management is right there in front of you -- you need to deal with it
2014-10-08 19:52:53	tsimpson	Java took abstraction and OOP and said "This is all we'll ever need"
2014-10-08 19:53:03	ekem	c++ abstracts a bit more into objects that handle these things that you would normally be doing in C
2014-10-08 19:53:27	ekem	C doesn't have a built up library, its expected the programmer implement what they would like to happen, themselves
2014-10-08 19:53:28	tsimpson	C++ *enables* the use of abstraction and/or OOP and/or a bunch of other styles and says "Use what you need"
2014-10-08 19:53:28		MutSbeta (~user@128-68-173-169.broadband.corbina.ru) has quit (Quit: Leaving.)
2014-10-08 19:53:32	ekem	so there is another different
2014-10-08 19:53:34	ekem	difference
2014-10-08 19:53:55	tsimpson	no, C++ abstractions are not "more into objects"
2014-10-08 19:53:56	ekem	good point on the abstraction tsimpson, the library size is probably a more relevent point
2014-10-08 19:54:03	ekem	yeah i am agreeing
2014-10-08 19:54:22	ekem	its obfuscating more? can we say that?
2014-10-08 19:54:28	eghdk	In the meantime, I'm trying to learn how to introduce native code in java that can speed up certain parts of my application. So I'm trying to write a simple c++ program, so I appreciate the help. Sometimes it's just really weird going from one lang to another. I see online that c++ and java are similar... and I'm just like "No way in hell" hahaha
2014-10-08 19:54:32	tsimpson	it enables better encapsulation
2014-10-08 19:54:39	ekem	alright i like that
2014-10-08 19:55:17		ambro718 (~ambro@gentoo/contributor/ambro718) has quit (Ping timeout: 272 seconds)
2014-10-08 19:55:17	tsimpson	they are only visually similar, in terms of the core syntax
2014-10-08 19:55:21	ekem	eghdk, it all ends up trying to make the processor and memory do *something* and so all languages end up doing the same thing
2014-10-08 19:55:28	tsimpson	they are vastly different languages and environments
2014-10-08 19:55:32	eghdk	So if I'm declaring a string in my c++ header file I need to do std::string myVariable;?
2014-10-08 19:55:40	ekem	yes
2014-10-08 19:55:47	ekem	but use non hungarian :P
2014-10-08 19:55:48	kadoban	Yeah, C++ and Java are only superficially similar. If you squint pretty hard they look kinda similar. Otherwise they're totally different.
2014-10-08 19:56:15	eghdk	interesting. So std:: means standard library?
2014-10-08 19:56:23	ekem	its a namespace
2014-10-08 19:56:34	ekem	and its the std namespace
2014-10-08 19:56:38	eghdk	Can't I just import/include std? so that when I type string it knows what I mean?
2014-10-08 19:56:40		Kaedenn (~kaedenn@unaffiliated/kaedenn) has joined ##c++
2014-10-08 19:57:06	ekem	namespace is a token to filter codeblocks that are declared as part of that namespace
2014-10-08 19:57:12	kadoban	eghdk: You can 'using' it, but don't; it's a bad idea in general. You can't know what else is in the namespace, and what it will conflict with.
2014-10-08 19:57:16	ekem	they might sit in different libs though
2014-10-08 19:57:25	kadoban	eghdk: If you really want to shorten it, you can say 'using std::string;'
2014-10-08 19:57:26	ekem	so you include a source file
2014-10-08 19:57:33		desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-10-08 19:57:40	ekem	then it has portions in different name space, or all in one, etc
2014-10-08 19:57:59	eghdk	Okay, I'll just do std::string
2014-10-08 19:58:10	tsimpson	you get used to typing std:: pretty quickly
2014-10-08 19:58:13	ekem	its better practice to just declare it literally like that
2014-10-08 19:58:21	ekem	instead of declaring global namespaces
2014-10-08 19:58:22	eghdk	So when I look up documentation for what methods I can call on a string I'm actually looking for documentation on "std::string"?
2014-10-08 19:58:39	--	stryyker2 is now known as Stryyker
2014-10-08 19:58:44	ekem	yes, thats the class it is using
2014-10-08 19:58:48	ekem	string
2014-10-08 19:58:48	tsimpson	you're actually looking at std::basic_string<char, std::char_traits<char>, std::allocator<char>>, but yeah :)
2014-10-08 19:58:50	ekem	so
2014-10-08 19:58:55	ekem	#include <string>
2014-10-08 19:58:57		fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-10-08 19:59:16	tsimpson	http://en.cppreference.com/w/cpp/string/basic_string
2014-10-08 19:59:19		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-10-08 19:59:33		Backinside (~Thunderbi@business-86-101-237-121.business.broadband.hu) has quit (Quit: Backinside)
2014-10-08 19:59:41	ekem	eghdk: but you can still use c style strings
2014-10-08 19:59:49	ekem	which are arrays of char types
2014-10-08 19:59:55	eghdk	ekem: ? Really?
2014-10-08 19:59:58	ekem	indeed
2014-10-08 20:00:04		Garner (uid38417@gateway/web/irccloud.com/x-rswrfenhsbkcxrjf) has quit (Quit: Connection closed for inactivity)
2014-10-08 20:00:05	pi-	Is it possible to pass 'p,q' as a single parameter into a preprocessor macro, without it seeing two arguments?
2014-10-08 20:00:07	eghdk	What's more of the convention?
2014-10-08 20:00:07	ekem	but you still have to deal with counting them etc
2014-10-08 20:00:20	ekem	using std::string
2014-10-08 20:00:29	ekem	depends on your application
2014-10-08 20:00:44	ekem	but for a normal win/linux program just using the string class
2014-10-08 20:01:03	eghdk	Got it. Thanks. Back to some programming. Will definitely be back with more questions. Really appreciate clearing this up for me. Definitely a lot less hazy.
2014-10-08 20:01:47		Cirus (~textual@c-98-210-235-117.hsd1.ca.comcast.net) has joined ##c++
2014-10-08 20:02:31		netj (~netj@128.12.245.135) has joined ##c++
2014-10-08 20:02:59	eghdk	Sorry. Why is cplusplus.com showing this as a string? "string mystring = "This is a string";"
2014-10-08 20:03:35	tsimpson	because cplusplus.com is a crap resource
2014-10-08 20:03:51	eghdk	Oh man.
2014-10-08 20:04:13	eghdk	What's the official c++ docs? Like java has oracle? What's the equivalent to c++?
2014-10-08 20:04:25	ekem	the iso standard :P
2014-10-08 20:04:33	ekem	youll find that all compilers differ a bit
2014-10-08 20:04:42	ekem	so..
2014-10-08 20:04:47	K-ballo	the official C++ "docs" is the standard, but cppreference.com is the best reference I know of
2014-10-08 20:05:16	ekem	yeah thats half the fun i guess : P you can't expect uniform results from the language on an environments implementation
2014-10-08 20:05:22	kadoban	The C++ standard is pretty close to unreadable to a newbie, so yeah cppreferenc...and get a book.
2014-10-08 20:05:25	ekem	but you can buy the actual standard
2014-10-08 20:05:33	tsimpson	use cppreference http://en.cppreference.com/w/cpp/string/basic_string
2014-10-08 20:05:36	eghdk	isocpp.org?
2014-10-08 20:05:47	kadoban	You can get drafts online for free too if you really need the standard...which you kind of do if you write a lot of C++
2014-10-08 20:05:49	eghdk	okay. Will use cppreference
2014-10-08 20:05:59	tsimpson	it's not an "official" reference but there is no such thing except the standard itself, and it's a good resource
2014-10-08 20:06:08	ekem	its like "where do i get info on linux commands?"
2014-10-08 20:06:10	ekem	well man of course
2014-10-08 20:06:13		Cirus (~textual@c-98-210-235-117.hsd1.ca.comcast.net) has quit (Ping timeout: 245 seconds)
2014-10-08 20:06:29	ekem	but... but... its not really much of a help... until you do it a ton.
2014-10-08 20:06:32		VladolfPutler (~jasper@5ED7DF59.cm-7-8d.dynamic.ziggo.nl) has quit (Quit: Leaving)
2014-10-08 20:08:27		Mayzie (~Mayazcher@unaffiliated/mayazcherquoi) has joined ##c++
2014-10-08 20:09:13		sohail (~user@unaffiliated/sohail) has quit (Remote host closed the connection)
2014-10-08 20:09:34		sohail (~user@unaffiliated/sohail) has joined ##c++
2014-10-08 20:10:09		stelvin (~stelvin@gateway/tor-sasl/stelvin) has joined ##c++
2014-10-08 20:11:17		ac_slater_ (~weechat@dhcp89-69-173.bbn.com) has joined ##c++
2014-10-08 20:11:46		tinti (~tinti@pdpc/supporter/student/tinti) has quit (Quit: Leaving)
2014-10-08 20:12:23		Nemus (~Nemus@unaffiliated/nemus) has left ##c++
2014-10-08 20:16:23		BinaryAddicted (~BinaryAdd@194.230.155.112) has quit
2014-10-08 20:16:44		BinaryAddicted (~BinaryAdd@194.230.155.112) has joined ##c++
2014-10-08 20:16:44		t_p (~textual@115.199.255.66) has quit (Quit: Computer has gone to sleep.)
2014-10-08 20:19:45		BinaryAddicted (~BinaryAdd@194.230.155.112) has quit (Client Quit)
2014-10-08 20:21:47		BinaryAddicted (~BinaryAdd@194.230.155.112) has joined ##c++
2014-10-08 20:23:29		Kaedenn (~kaedenn@unaffiliated/kaedenn) has left ##c++
2014-10-08 20:25:40		hyperair (~hyperair@ubuntu/member/hyperair) has quit (Ping timeout: 260 seconds)
2014-10-08 20:26:40		Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has quit (Read error: Connection reset by peer)
2014-10-08 20:32:18		comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has quit (Quit: Bye)
2014-10-08 20:33:18		xico (~xico@cpe-76-88-16-80.san.res.rr.com) has quit (Ping timeout: 245 seconds)
2014-10-08 20:34:09		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has joined ##c++
2014-10-08 20:34:15		lduros (~user@fsf/member/lduros) has quit (Remote host closed the connection)
2014-10-08 20:35:57		maazu (~maazu@120.141.57.218) has joined ##c++
2014-10-08 20:36:48		nANdy (6d380eee@gateway/web/freenode/ip.109.56.14.238) has quit (Ping timeout: 246 seconds)
2014-10-08 20:37:24		Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has joined ##c++
2014-10-08 20:37:40		Zifre_ (~Zifre@unaffiliated/zifre) has quit (Quit: No Ping reply in 180 seconds.)
2014-10-08 20:38:10		Zifre (~Zifre@unaffiliated/zifre) has joined ##c++
2014-10-08 20:43:19		snakenerd (~Thunderbi@177.43.5.27) has quit (Quit: snakenerd)
2014-10-08 20:43:27		da2ce7 (~da2ce7@opentransactions/dev/da2ce7) has joined ##c++
2014-10-08 20:44:48		pstone (~dpeng@216.2.203.2) has quit (Ping timeout: 250 seconds)
2014-10-08 20:44:51		maazu (~maazu@120.141.57.218) has left ##c++ ("Konversation terminated!")
2014-10-08 20:47:18		emg (~emg@74.217.148.5) has quit (Quit: emg)
2014-10-08 20:47:38		pyon-yuri (~suckmy@unaffiliated/pyon) has quit (Ping timeout: 246 seconds)
2014-10-08 20:47:54		ac_slater_ (~weechat@dhcp89-69-173.bbn.com) has quit (Read error: Connection reset by peer)
2014-10-08 20:49:45		thwest (~Adium@99-51-187-8.lightspeed.austtx.sbcglobal.net) has joined ##c++
2014-10-08 20:50:37		irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has quit (Quit: Lost terminal)
2014-10-08 20:52:12		fluter (~fluter@fedora/fluter) has joined ##c++
2014-10-08 20:53:23		esas (~esas@unaffiliated/esas) has quit
2014-10-11 11:57:26		dagnachew (~dagnachew@bas1-montreal30-2925417210.dsl.bell.ca) has joined ##c++
2014-10-11 11:57:26	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-11 11:57:26	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-11 11:57:26	--	Channel ##c++: 543 nicks (0 ops, 0 voices, 543 normals)
2014-10-11 11:57:26	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-11 11:57:35	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-11 11:57:36		desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-10-11 12:02:28		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-10-11 12:02:47		ApEk (43ee1665@gateway/web/freenode/ip.67.238.22.101) has left ##c++
2014-10-11 12:02:53		ApEk (43ee1665@gateway/web/freenode/ip.67.238.22.101) has joined ##c++
2014-10-11 12:03:48		hrolf (~hrolf@unaffiliated/hrolf) has quit (Ping timeout: 250 seconds)
2014-10-11 12:04:52		jitsuin (~chatzilla@cpe-23-243-174-121.socal.res.rr.com) has joined ##c++
2014-10-11 12:05:29		hrolf (~hrolf@unaffiliated/hrolf) has joined ##c++
2014-10-11 12:06:19		sohail (~user@unaffiliated/sohail) has joined ##c++
2014-10-11 12:06:24		Vexyl (~Vexyl@unaffiliated/vexyl) has quit (Remote host closed the connection)
2014-10-11 12:07:15		SibTiger[Tablet] (~Nicholas@bluesocket.cameron.edu) has joined ##c++
2014-10-11 12:09:07		Oxyd (~oxyd@pdpc/supporter/student/oxyd) has quit (Quit: Vanitas vanitatum et omnia vanitas.)
2014-10-11 12:09:39		hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-10-11 12:09:41		aslant (~aslant@5751a00f.skybroadband.com) has quit (Remote host closed the connection)
2014-10-11 12:10:18		lolek (~lolek@unaffiliated/marcin) has joined ##c++
2014-10-11 12:10:26		Smrtz|Lab (~uaslab@137.155.2.143) has quit (Ping timeout: 260 seconds)
2014-10-11 12:10:33		only_the_bear (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has quit (Ping timeout: 264 seconds)
2014-10-11 12:10:43		lolek (~lolek@unaffiliated/marcin) has quit (Read error: Connection reset by peer)
2014-10-11 12:10:54		lolek (~lolek@unaffiliated/marcin) has joined ##c++
2014-10-11 12:11:06		lolek (~lolek@unaffiliated/marcin) has left ##c++
2014-10-11 12:12:04		Kaedenn (~kaedenn@unaffiliated/kaedenn) has joined ##c++
2014-10-11 12:12:38	Kaedenn	Using C++11 (I don't have a compiler with C++14), what would be a nice simple library that'd give me mathematical vectors in 2D?
2014-10-11 12:12:46		andreyv (~andrey@unaffiliated/andreyv) has quit (Ping timeout: 260 seconds)
2014-10-11 12:12:53	Kaedenn	With dot/cross product, scalar multiplication/division, addition, etc.
2014-10-11 12:13:08	Kaedenn	I'd rather not continue to reinvent the wheel if there's something nicer.
2014-10-11 12:14:11	lh_mouse	std::complex?
2014-10-11 12:14:18		w41 (~w41@unaffiliated/w41) has joined ##c++
2014-10-11 12:14:42		systemfault (~Systemfau@oftn/member/systemfault) has joined ##c++
2014-10-11 12:14:47		rszn` (~rszn`@unafiliated/rszn-/x-38475634) has joined ##c++
2014-10-11 12:15:21	moonchild	no, std::complex implements something different
2014-10-11 12:15:22	Erlkoenig	Kaedenn: eigen library
2014-10-11 12:15:36	Kaedenn	I do NOT want to abuse std::complex for this.
2014-10-11 12:15:41	moonchild	there's most definitely something in boost that does it
2014-10-11 12:15:41	Erlkoenig	http://eigen.tuxfamily.org/
2014-10-11 12:15:44	Kaedenn	Erlkoenig: I just found that via stackoverflow.
2014-10-11 12:15:54	Kaedenn	And... I quite like it.
2014-10-11 12:16:03	Erlkoenig	me too
2014-10-11 12:16:03		gaganjyot (~gaganjyot@124.253.225.90) has joined ##c++
2014-10-11 12:16:27	moonchild	in addition, you might want to take a look at some of the stuff in <valarray>
2014-10-11 12:16:47	moonchild	i don't think that's what you want, but you may find some useful bits there
2014-10-11 12:16:48	tsimpson	like anyone actually uses valarray
2014-10-11 12:17:09	moonchild	yeah, i know
2014-10-11 12:17:30	moonchild	the problem is that it made it into the standard as something rather incomplete
2014-10-11 12:17:54	Kaedenn	valarray has almost exactly what I need.
2014-10-11 12:18:01	moonchild	oh, Kaedenn another thing you might give a look at...
2014-10-11 12:18:01	Kaedenn	I just need to store values and perform simple maths on them.
2014-10-11 12:18:01		lukevinc (~luke@gateway/tor-sasl/lukevinc) has joined ##c++
2014-10-11 12:18:10		mwehner (~martin@184-100-134-25.ptld.qwest.net) has quit (Quit: back later)
2014-10-11 12:18:14	moonchild	the thrust library for cuda
2014-10-11 12:18:16	Kaedenn	I don't need solvers or anything like that.
2014-10-11 12:18:26	Kaedenn	...cuda? You got my attention now.
2014-10-11 12:18:28	lukevinc	hello, i've read the sourcecode of mega.co.nz engine was made in c++, someone have the code?
2014-10-11 12:18:38		andreyv (~andrey@unaffiliated/andreyv) has joined ##c++
2014-10-11 12:18:43		paul424 (~chatzilla@apn-46-76-74-234.dynamic.gprs.plus.pl) has joined ##c++
2014-10-11 12:18:56		basic6_ (~basic6@p4FCB7D82.dip0.t-ipconnect.de) has joined ##c++
2014-10-11 12:19:02	moonchild	thrust is c++ container wrappers for cuda programming, but you can compile stuff to run on native cpu's with it
2014-10-11 12:19:10		koulchilebaiz (~koulchile@AMarseille-651-1-277-97.w92-153.abo.wanadoo.fr) has joined ##c++
2014-10-11 12:19:18	moonchild	it is not easy to use however
2014-10-11 12:19:31	Erlkoenig	what is a not-native cpu? a conquistadore?
2014-10-11 12:20:01		basic6 (~basic6@p4FCB71EE.dip0.t-ipconnect.de) has quit (Ping timeout: 245 seconds)
2014-10-11 12:20:28	Kaedenn	So I can write CUDA without writing CUDA?
2014-10-11 12:20:28	moonchild	the shiny warm thing your monitor is connected to
2014-10-11 12:20:48	moonchild	Kaedenn: *shrug* there's a huge learning curve
2014-10-11 12:21:02	Kaedenn	That's the precise reason why I haven't started using CUDA.
2014-10-11 12:21:49	moonchild	the big issue is that you really need to understand where stuff runs and control the marshalling of data back and forth from the gpu
2014-10-11 12:22:07	moonchild	that isn't a small task to figure out
2014-10-11 12:22:55	moonchild	but its actually pretty trivial to use if you're doing something like throwing a huge amount of data into a vector and sorting it :)
2014-10-11 12:22:57	Kaedenn	I have a basic understanding of glsl and don't know if that'll be usable in this project.
2014-10-11 12:23:12	Kaedenn	I'm making a particle simulation.
2014-10-11 12:23:18	Kaedenn	A scriptable one at that.
2014-10-11 12:23:23		xCoder-Exploiter (~Exploiter@36.68.35.187) has joined ##c++
2014-10-11 12:23:40	Kaedenn	Because I'm working on creating a synesthesia-reproduction program.
2014-10-11 12:24:03	Kaedenn	For audactory chromesthesia
2014-10-11 12:24:11		Smrtz|Lab (~uaslab@137.155.2.143) has joined ##c++
2014-10-11 12:24:45	Kaedenn	Anyway, libeigen is almost exactly what I need. It'll probably be exactly what I need once I read the docs over.
2014-10-11 12:25:19	alcedine	How do you know what it looks like? Do you experience it?
2014-10-11 12:25:44	Kaedenn	To some degree. I also have friends who experience it completely.
2014-10-11 12:25:54	Kaedenn	The premise is to "teach" chromesthesia.
2014-10-11 12:26:25	 *	Kaedenn -> ##c++-social
2014-10-11 12:26:33	Kaedenn	alcedine: Let's take this topic there.
2014-10-11 12:27:59		nelfi (~nelfi@186.150.162.247) has joined ##c++
2014-10-11 12:28:16		kurahaupo_ (~kurahaupo@118.148.208.108) has quit (Ping timeout: 240 seconds)
2014-10-11 12:29:35		Dacia (~make@unaffiliated/bryeware) has quit (Quit: Ta)
2014-10-11 12:30:59		Sadale (~Sadale@unaffiliated/sadale) has quit (Read error: Connection reset by peer)
2014-10-11 12:31:40		nelfi (~nelfi@186.150.162.247) has quit (Quit: Konversation terminated!)
2014-10-11 12:31:52		Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-10-11 12:32:56		DexterLB (~dex@79-100-13-124.btc-net.bg) has quit (Ping timeout: 245 seconds)
2014-10-11 12:34:04		jitsuin (~chatzilla@cpe-23-243-174-121.socal.res.rr.com) has quit (Ping timeout: 244 seconds)
2014-10-11 12:34:23		sohail (~user@unaffiliated/sohail) has quit (Remote host closed the connection)
2014-10-11 12:34:57		sohail (~user@unaffiliated/sohail) has joined ##c++
2014-10-11 12:35:32		DexterLB (~dex@79-100-10-223.btc-net.bg) has joined ##c++
2014-10-11 12:36:10		jitsuin (~chatzilla@cpe-23-243-174-121.socal.res.rr.com) has joined ##c++
2014-10-11 12:36:14		stdvector__ (~stdvector@gateway/tor-sasl/stdvector) has quit (Remote host closed the connection)
2014-10-11 12:37:06		gaganjyot (~gaganjyot@124.253.225.90) has quit (Remote host closed the connection)
2014-10-11 12:39:13	V-ille	!grab Erlkoenig
2014-10-11 12:39:13	nolyc	By your command.
2014-10-11 12:39:20		Dacia (~make@unaffiliated/bryeware) has joined ##c++
2014-10-11 12:39:48	Erlkoenig	nobody replied to my clever witty comment, but it got grabbed. Got that going for me, which is nice. ...
2014-10-11 12:40:12		PSG_Luna (~PSG_Luna@unaffiliated/psg-luna/x-4025268) has joined ##c++
2014-10-11 12:42:58		PSG_Luna_ (~PSG_Luna@unaffiliated/psg-luna/x-4025268) has quit (Ping timeout: 255 seconds)
2014-10-11 12:43:12	marvimias	Erlkoenig, What was it? :P
2014-10-11 12:43:29	greenbagels	Erlkoenig> what is a not-native cpu? a conquistadore?
2014-10-11 12:43:35	greenbagels	^
2014-10-11 12:43:38	 *	sixequalszero sighs
2014-10-11 12:43:56	sixequalszero	All that time wasted, but I'm glad my problem is solved.
2014-10-11 12:44:11		Tectu (~Tectu@78-167.60-188.cust.bluewin.ch) has quit (Remote host closed the connection)
2014-10-11 12:44:56		spruceLee (~mable_Len@101.163.31.23) has quit (Ping timeout: 245 seconds)
2014-10-11 12:44:59	lukevinc	jesus, nobody read my messages, i'm a ghost around here?
2014-10-11 12:45:21		stelvin (~stelvin@gateway/tor-sasl/stelvin) has quit (Ping timeout: 264 seconds)
2014-10-11 12:45:57	kadoban	lukevinc: I think we were all hoping you would realize that your question was horribly off topic and more than a bit dumb.
2014-10-11 12:46:10		stelvin (~stelvin@gateway/tor-sasl/stelvin) has joined ##c++
2014-10-11 12:47:55	moonchild	i personally was just ignoring it
2014-10-11 12:48:21	greenbagels	lukevinc, it's literally
2014-10-11 12:48:23	greenbagels	go to the site
2014-10-11 12:48:26	greenbagels	look at the bottom
2014-10-11 12:48:30	greenbagels	Tada! SDK button!
2014-10-11 12:49:02	lukevinc	hell no, i was asking about mega, it's was written using c++, goodbye. you don't worth answer my question
2014-10-11 12:49:11	greenbagels	https://mega.co.nz/#dev
2014-10-11 12:49:15	greenbagels	are you daft
2014-10-11 12:49:35	quaz0r	all you daft are belong to lukevinc
2014-10-11 12:49:57		zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Remote host closed the connection)
2014-10-11 12:50:06	moonchild	quaz0r: you worthed me a laugh! it's was funny
2014-10-11 12:50:13	quaz0r	lul
2014-10-11 12:50:22	greenbagels	heh
2014-10-11 12:50:53	marvimias	lukevinc, we all have you on /ignore
2014-10-11 12:51:21	lukevinc	fuck you all
2014-10-11 12:51:26		lukevinc (~luke@gateway/tor-sasl/lukevinc) has quit (Quit: ChatZilla 0.9.91 [Firefox 24.8.0/20000101000000])
2014-10-11 12:51:39	kadoban	Hehe
2014-10-11 12:51:53		koderok (~koderok@106.216.211.215) has joined ##c++
2014-10-11 12:52:05	marvimias	At least he left with a rhyme :)
2014-10-11 12:52:21	greenbagels	##c++ - where you ask inane questions and get ridiculed
2014-10-11 12:52:28	greenbagels	We hate people who are off-topic!
2014-10-11 12:52:40	moonchild	so, on topic...
2014-10-11 12:53:06	moonchild	i'm wondering what they were smoking with the creation of codecvt_utf8 & friends
2014-10-11 12:53:49	moonchild	the more of the codecvt stuff i implement the more i realize how ridiculous it is
2014-10-11 12:54:37	moonchild	codecvt<char32_t, char> goes utf32->utf8 as does codecvt_utf8<char32, char>
2014-10-11 12:55:34	moonchild	but codecvt<char16, char> goes utf16->utf8, while codecvt_utf8<char16, char> goes ucs2->utf8
2014-10-11 12:56:51	moonchild	oh, and codecvt_utf16<char16, char> goes utf32 -> utf16 (big or little endian)
2014-10-11 12:57:53		xico (~xico@cpe-76-88-16-80.san.res.rr.com) has joined ##c++
2014-10-11 12:58:01	moonchild	(technically its ucs2->utf16)
2014-10-11 12:59:04		svaksha (~svaksha@perrier.eu.org) has quit (Remote host closed the connection)
2014-10-11 13:01:46		hodl (~csecoshi@h87.70.89.75.dynamic.ip.windstream.net) has joined ##c++
2014-10-11 13:02:15		hrolf (~hrolf@unaffiliated/hrolf) has quit (Ping timeout: 258 seconds)
2014-10-11 13:02:57		s5s (~s5s@unaffiliated/s5s) has joined ##c++
2014-10-11 13:03:45	hodl	I'm working with detours / hooking functions and I have the signatures of a class and the address of the functions i've found in a disassembler. Is there a way to make the linker use my address for the member method instead of giving me an unresolved symbol error?
2014-10-11 13:04:07		hrolf (~hrolf@unaffiliated/hrolf) has joined ##c++
2014-10-11 13:04:20	moonchild	yeah, there's some magic in the gcc toolchain for that
2014-10-11 13:04:25	moonchild	give me a minute
2014-10-11 13:04:39		xico (~xico@cpe-76-88-16-80.san.res.rr.com) has quit (Ping timeout: 260 seconds)
2014-10-11 13:05:43	moonchild	hodl: check out the '--wrap' option to ld
2014-10-11 13:06:14	hodl	thanks
2014-10-11 13:06:33	hodl	i'm unfortunately using msvc++ but i'll google around and see if there's an analog
2014-10-11 13:06:42	moonchild	sorry :(
2014-10-11 13:07:01	moonchild	i don't know the MS toolchain much at all (thank god) :)
2014-10-11 13:07:06	hodl	nah if using gcc was easier I would be :)
2014-10-11 13:07:27	hodl	i'm reverse engineering a video game to add features, and it builds a dll and hooks d3d functions etc
2014-10-11 13:07:36	hodl	and visual studio isn't so bad, so i've kept with it
2014-10-11 13:08:16		Anoniem4l (~Anoniem4l@unaffiliated/anoniem4l) has quit (Ping timeout: 245 seconds)
2014-10-11 13:08:23		fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-10-11 13:08:37	moonchild	i know on linux, the symbols that get sucked in during the link end up first-come first-serve from the libraries you specify on the link line
2014-10-11 13:10:34		koulchilebaiz (~koulchile@AMarseille-651-1-277-97.w92-153.abo.wanadoo.fr) has quit (Quit: koulchilebaiz)
2014-10-11 13:10:36		windsurf_ (~windsurf_@50.68.72.180) has joined ##c++
2014-10-11 13:12:39		notpara (~para@213.187.75.26) has quit (Remote host closed the connection)
2014-10-11 13:13:17		hamid (~nithp@unaffiliated/hamid) has quit (Quit: Lost terminal)
2014-10-11 13:13:23		notpara (~para@213.187.75.26) has joined ##c++
2014-10-11 13:13:38		DrSkyLizard (~universe@unaffiliated/shiningthrough) has joined ##c++
2014-10-11 13:14:01		notpara (~para@213.187.75.26) has quit (Remote host closed the connection)
2014-10-11 13:14:40		notpara (~para@213.187.75.26) has joined ##c++
2014-10-11 13:15:27		OptimusMK (OptimusMK@77.29.229.15) has joined ##c++
2014-10-11 13:16:26	windsurf_	i’m thinking of making an addObserver method with a callback fn pointer arg. How should I maintain a list of the pointers? Fixed size array that’s large enough or use realloc? Would a dynamic array of pointers suffer from heap fragmentation the way other dynamic things can? (no boost or std lib, arduino)
2014-10-11 13:16:44		DTSCode (ae861999@gateway/web/cgi-irc/kiwiirc.com/ip.174.134.25.153) has joined ##c++
2014-10-11 13:17:39		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-10-11 13:18:08	tsimpson	surely you have vector?
2014-10-11 13:18:13	windsurf_	no vector
2014-10-11 13:18:47		hrolf (~hrolf@unaffiliated/hrolf) has quit (Ping timeout: 240 seconds)
2014-10-11 13:18:54	lh_mouse	list of fixed sized arrays
2014-10-11 13:19:10	moonchild	windsurf_: you're extremely memory constrained on that platform
2014-10-11 13:19:15	windsurf_	yes
2014-10-11 13:19:21	windsurf_	8k for my atmega2560
2014-10-11 13:19:50	moonchild	best bet is to use something like a deque, in that its a linked list of array chunks
2014-10-11 13:20:05	cbreak	just fix it to a single callback.
2014-10-11 13:20:08	moonchild	no reallocs are needed
2014-10-11 13:20:20	greenbagels	hodl, you can use gcc on windows
2014-10-11 13:20:21	lh_mouse	nope deques are ARRAYs of arrays.
2014-10-11 13:20:42	hodl	yeah, I know
2014-10-11 13:20:43	lh_mouse	moonchild, lists of arrays are not random accessable.
2014-10-11 13:20:44		hrolf (~hrolf@unaffiliated/hrolf) has joined ##c++
2014-10-11 13:20:53	cbreak	do you think you'll want to remove callbacks?
2014-10-11 13:20:56		stef204 (~kvirc@unaffiliated/stef-204/x-384198) has joined ##c++
2014-10-11 13:21:00	windsurf_	yes
2014-10-11 13:21:08	windsurf_	yes carandraug
2014-10-11 13:21:12	lh_mouse	(why the hell did they create a random accessable deque?!)
2014-10-11 13:21:13	windsurf_	i mean yes cbreak
2014-10-11 13:21:25	hodl	I can implement the function with __thiscall but then it won't be in my class to use with the -> operator and funks up the arguments a bit :/
2014-10-11 13:21:29		stef204 (~kvirc@unaffiliated/stef-204/x-384198) has quit (Client Quit)
2014-10-11 13:21:34	moonchild	lh_mouse: it isn't awful speed-wise
2014-10-11 13:21:34	cbreak	lh_mouse: it's a reference-stable random access container
2014-10-11 13:21:54		stef204 (~kvirc@unaffiliated/stef-204/x-384198) has joined ##c++
2014-10-11 13:22:00	windsurf_	how much memory does a pointer take, one byte?
2014-10-11 13:22:06	cbreak	depends.
2014-10-11 13:22:13	moonchild	iirc, 2 on the atmega
2014-10-11 13:22:13	cbreak	8 bytes on normal 64 bit system
2014-10-11 13:22:21	windsurf_	moonchild: i think you’re right
2014-10-11 13:22:26		xico (~xico@cpe-76-88-16-80.san.res.rr.com) has joined ##c++
2014-10-11 13:22:34	windsurf_	maybe having a fixed-size list that’s not much bigger than max i need is ok
2014-10-11 13:22:40	moonchild	it is very much 8088-esque :)
2014-10-11 13:22:52	lh_mouse	How would we benefit from random accessing a double-ended QUEUE?
2014-10-11 13:22:54	cbreak	lists take up a lot of space
2014-10-11 13:22:57	lh_mouse	It is a QUEUE.
2014-10-11 13:23:06	cbreak	an array would be better if you want fixed size
2014-10-11 13:24:03	DTSCode	i was wondering the same thing lh_mouse
2014-10-11 13:24:16		Zephyrus (~Zephyrus@unaffiliated/zephyrus) has joined ##c++
2014-10-11 13:24:22	windsurf_	thanks guys, gtg
2014-10-11 13:24:23		windsurf_ (~windsurf_@50.68.72.180) has quit (Quit: windsurf_)
2014-10-11 13:25:01	lh_mouse	By saying a 'queue' we want to push to/pop from both ends but what about random accessing? I see no reason.
2014-10-11 13:25:03		irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has joined ##c++
2014-10-11 13:25:03	moonchild	lh_mouse: in that you can sort it quickly
2014-10-11 13:25:04		plitter (~plitter@84.48.49.52) has quit (Read error: Connection reset by peer)
2014-10-11 13:25:26	lh_mouse	moonchild, wrong use case.
2014-10-11 13:25:30	moonchild	or partially sort, to be more exact
2014-10-11 13:25:40	lh_mouse	You can use a set/map for that purpose.
2014-10-11 13:25:58	moonchild	not if order of insertion is important
2014-10-11 13:26:00		Aichan (~Aichan@45.148-65-87.adsl-dyn.isp.belgacom.be) has quit (Ping timeout: 258 seconds)
2014-10-11 13:26:01	lh_mouse	And if it is a FIFO queue you can use priority_queue.
2014-10-11 13:26:25		plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-10-11 13:26:26	moonchild	lets not bring the container adapters into this
2014-10-11 13:26:37	moonchild	they're pretty much useless
2014-10-11 13:26:58	hodl	well I have the function being called using the class reference with a little boilerplate crap above it
2014-10-11 13:27:05	hodl	but it's working and keeping ecx in place :)
2014-10-11 13:27:23	moonchild	ecx?
2014-10-11 13:27:49	hodl	that register has the this pointer
2014-10-11 13:28:02	moonchild	ahh
2014-10-11 13:28:04	lh_mouse	std::deque should be a queue(list of fixed-sized arrays) not what can be random accessed but turns out to be a vector of vectors which is known to suck.
2014-10-11 13:28:11	cbreak	why not use proper 64 bit registers?
2014-10-11 13:28:25	hodl	typedef int (__thiscall *_App__IsLocal)(void*);
2014-10-11 13:28:33	hodl	and then I cast it to an address underneath
2014-10-11 13:28:37	hodl	cbreak: i'm hacking a 32bit game
2014-10-11 13:28:48	hodl	extending rather, not for cheats
2014-10-11 13:28:50	cbreak	there are still 32 bit apps?
2014-10-11 13:28:59	cbreak	maybe for a phone
2014-10-11 13:29:01	hodl	this game was released in 2004 :)
2014-10-11 13:29:02	cbreak	hmm...
2014-10-11 13:29:21		hrolf (~hrolf@unaffiliated/hrolf) has quit (Ping timeout: 244 seconds)
2014-10-11 13:29:57		Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has joined ##c++
2014-10-11 13:30:31	hodl	I'm diving through ida and finding function pointers to extend the netcode and add a new scripting runtime to a tony hawk game
2014-10-11 13:31:15		hrolf (~hrolf@unaffiliated/hrolf) has joined ##c++
2014-10-11 13:35:02	moonchild	that sounds painful
2014-10-11 13:35:38		sixequalszero (~sixequals@14-200-252-111.static.tpgi.com.au) has quit (Quit: Gone forever until I return)
2014-10-11 13:35:48		destenson (~destenson@wsip-70-167-188-130.sd.sd.cox.net) has joined ##c++
2014-10-11 13:35:55	hodl	it's fun for me
2014-10-11 13:36:24	hodl	My job is writing javascript, this is my "fun"
2014-10-11 13:36:54		top4o (~chatzilla@93.152.162.95) has joined ##c++
2014-10-11 13:36:57		Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-10-11 13:37:11	hodl	but hopefully worth it -- there's a small community of players that will appreciate it
2014-10-11 13:37:16		clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-10-11 13:37:37		rendar (~I@host86-181-dynamic.3-87-r.retail.telecomitalia.it) has quit (Ping timeout: 244 seconds)
2014-10-11 13:38:21	moonchild	question: do typedefs from a base class get inherited by a derived class?
2014-10-11 13:39:59	cbreak	moonchild: all members are inherited
2014-10-11 13:40:17		sixequalszero (~w246@14-200-252-111.static.tpgi.com.au) has joined ##c++
2014-10-11 13:40:39	cbreak	inheriting typedefs is the main reason for existence for classes like std::iterator, std::true_type, std::false_type
2014-10-11 13:40:53	moonchild	i was running into something a little while back where an enum defined in a grandparent class didn't seem to be visible in the grandchild
2014-10-11 13:40:57	cbreak	well, not the last two...
2014-10-11 13:41:07	cbreak	moonchild: templates?
2014-10-11 13:41:27	moonchild	yeah, through specializations of codecvt
2014-10-11 13:41:42	moonchild	i think i know why now, but *shrug*
2014-10-11 13:41:43		io2 (~io2@unaffiliated/irrequietus) has joined ##c++
2014-10-11 13:41:44	cbreak	moonchild: templated base classes are special
2014-10-11 13:41:59	moonchild	how so?
2014-10-11 13:42:03	cbreak	or rather, dependent base classes are special
2014-10-11 13:42:12		Gr1zzly (Elite9820@gateway/shell/elitebnc/x-xbyjkowsnsptvoud) has quit (Ping timeout: 272 seconds)
2014-10-11 13:42:22	cbreak	since they depend on the template argument, it is not known what they contain until they are instantiated
2014-10-11 13:42:47	moonchild	gotcha
2014-10-11 13:42:49	cbreak	therefore, unless it is known that something depends on the template arguments, which causes it to be resolved later in phase two
2014-10-11 13:42:53	cbreak	it is resolved in phase 1
2014-10-11 13:43:02	cbreak	and there, base class members aren't considered
2014-10-11 13:43:11	cbreak	you can use this-> or Base:: where applicable
2014-10-11 13:43:19		mrclarinet (~mrclarine@016.237-93-216-nokia-dsl.dynamic.surewest.net) has joined ##c++
2014-10-11 13:43:22	lh_mouse	geordi, << bar<foo>::val; struct foo { static constexpr int val = 123; }; template<typename T> struct bar : T { }; // moonchild
2014-10-11 13:43:22	geordi	123
2014-10-11 13:43:42	lh_mouse	um
2014-10-11 13:43:59		rendar (~I@host86-181-dynamic.3-87-r.retail.telecomitalia.it) has joined ##c++
2014-10-11 13:44:27	moonchild	heh
2014-10-11 13:44:29		hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-10-11 13:45:16		DrDuck (6cc3a6f6@gateway/web/freenode/ip.108.195.166.246) has joined ##c++
2014-10-11 13:45:30		JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-10-11 13:45:49		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-10-11 13:45:53		clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 260 seconds)
2014-10-11 13:47:06	lh_mouse	{ bar<foo>().bark(); } struct foo { static constexpr int val = 123; }; template<typename T> struct bar : T { void bark(){ cout <<val; } }; // moonchild
2014-10-11 13:47:06	geordi	error: 'val' was not declared in this scope
2014-10-11 13:47:14	lh_mouse	geordi, insert T:: before last val
2014-10-11 13:47:14	geordi	123
2014-10-11 13:47:18	lh_mouse	moonchild, look!
2014-10-11 13:47:45	K-ballo	geordi: replace T:: with this->
2014-10-11 13:47:45	geordi	123
2014-10-11 13:48:25	lh_mouse	Member of dependent types are not involved during name lookup.
2014-10-11 13:49:03	cbreak	they are, but only in phase two
2014-10-11 13:49:09		hellangel7 (~hellangel@117.192.160.86) has joined ##c++
2014-10-11 13:49:13	cbreak	when the compiler resolves dependent things
2014-10-11 13:50:37	DrDuck	Is it worth getting Scott Meyer's Modern Effective C++ right now?
2014-10-11 13:50:52	DrDuck	The ebook
2014-10-11 13:51:04		thwest (~Adium@99-51-187-8.lightspeed.austtx.sbcglobal.net) has joined ##c++
2014-10-11 13:52:09		thwest (~Adium@99-51-187-8.lightspeed.austtx.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-10-11 13:52:20		kurahaupo_ (~kurahaupo@118.148.142.250) has joined ##c++
2014-10-11 13:53:07	joph	DrDuck, ist the new version already out?
2014-10-11 13:53:41	joph	oh, the early version is out
2014-10-11 13:53:50		DrSkyLizard (~universe@unaffiliated/shiningthrough) has quit
2014-10-11 13:54:06	DrDuck	joph: And only in ebook format.
2014-10-11 13:54:08	joph	yeah
2014-10-11 13:54:38	io2	cbreak: pm?
2014-10-11 13:54:44	joph	one of my docent suggested it
2014-10-11 13:55:19	io2	joph: it is one of the books C++ programmers have read
2014-10-11 13:55:45	io2	I take it you are starting out on C++, so it may be good enough for you to read it for some good habits to grow
2014-10-11 13:56:06	DrDuck	joph: docent?
2014-10-11 13:56:10		stelvin (~stelvin@gateway/tor-sasl/stelvin) has quit (Ping timeout: 264 seconds)
2014-10-11 13:56:12	joph	professor
2014-10-11 13:56:23	joph	probably got the wrong translation from dict.cc
2014-10-11 13:56:40	io2	DrDuck: it comes from the latin docere actually
2014-10-11 13:56:48	DrDuck	ahh
2014-10-11 13:56:59	io2	http://en.wikipedia.org/wiki/Docere
2014-10-11 13:57:26	io2	italians also say "docente" usually for the supercluster of any kind of teacher :P~
2014-10-11 13:57:47		IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has joined ##c++
2014-10-11 13:58:10	io2	latin is highly lovable, too bad it is a dead language
2014-10-11 13:58:32	joph	teacher at the university ;)
2014-10-11 13:58:40		IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has quit (Client Quit)
2014-10-11 13:58:47		clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-10-11 13:59:34	greenbagels	[ALERT] OFF TOPIC DETECTED [ALERT]
2014-10-11 13:59:46	greenbagels	;) just kidding
2014-10-11 13:59:47	plash	wee woo wee woo
2014-10-11 13:59:54	io2	joph: yeah, but usually political correctness extends that to the yoga instructor
2014-10-11 13:59:57	io2	go figure
2014-10-11 14:00:27		stelvin (~stelvin@gateway/tor-sasl/stelvin) has joined ##c++
2014-10-11 14:00:51		kailoAtWork (~kailoAtWo@107-1-3-130-ip-static.hfc.comcastbusiness.net) has joined ##c++
2014-10-11 14:01:56		codebrainz (~codebrain@S0106687f74ddf92f.vn.shawcable.net) has quit (Read error: Connection reset by peer)
2014-10-11 14:02:42		thwest (~Adium@99-51-187-8.lightspeed.austtx.sbcglobal.net) has joined ##c++
2014-10-11 14:02:53		madist (madist@unaffiliated/madist) has quit (Quit: Leaving)
2014-10-11 14:03:53		Sauvin (~Sauvin@about/linux/staff/sauvin) has quit (Remote host closed the connection)
2014-10-11 14:04:10	joph	lol
2014-10-11 14:04:47		dseitz (~dseitz@ip70-191-237-177.pn.at.cox.net) has joined ##c++
2014-10-11 14:04:49		sixequalszero (~w246@14-200-252-111.static.tpgi.com.au) has left ##c++
2014-10-11 14:06:06		OptimusMK (OptimusMK@77.29.229.15) has quit
2014-10-11 14:06:50	Tecan	pick a number between 1
2014-10-11 14:06:52		codebrainz (~codebrain@S0106687f74ddf92f.vn.shawcable.net) has joined ##c++
2014-10-11 14:07:03		King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has quit (Quit: Am RIP)
2014-10-11 14:07:35		King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has joined ##c++
2014-10-11 14:08:16		Sadale (~Sadale@unaffiliated/sadale) has quit (Quit: bye)
2014-10-11 14:08:57		SibTiger[Tablet] (~Nicholas@bluesocket.cameron.edu) has quit (Ping timeout: 258 seconds)
2014-10-11 14:09:08		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-10-11 14:09:28	greenbagels	1
2014-10-11 14:09:28		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-10-11 14:09:53	Tecan	not bad guess
2014-10-11 14:10:52	moonchild	i think the guess was a little low :P
2014-10-11 14:11:49	Tecan	moonchild wins
2014-10-11 14:12:32	Tecan	a guy can get down to some serious decimals
2014-10-11 14:12:55	Tecan	1.9999999999999999999999999999999999999999999 ^ infinity
2014-10-11 14:13:20	Tecan	i should make a lottery called pick a number between 1
2014-10-11 14:14:27	hodl	magikarp just called me
2014-10-11 14:14:34	hodl	said he put all of the coins into satoshidice and lose them
2014-10-11 14:14:35		davek (~davek@unaffiliated/tracekill) has joined ##c++
2014-10-11 14:16:29		svaksha (~svaksha@perrier.eu.org) has joined ##c++
2014-10-11 14:17:05		fstd_ (~fstd@unaffiliated/fisted) has joined ##c++
2014-10-11 14:17:10		svaksha (~svaksha@perrier.eu.org) has quit (Client Quit)
2014-10-11 14:17:22		svaksha (~svaksha@perrier.eu.org) has joined ##c++
2014-10-11 14:17:27		svaksha (~svaksha@perrier.eu.org) has quit (Client Quit)
2014-10-11 14:17:45		fstd (~fstd@unaffiliated/fisted) has quit (Ping timeout: 246 seconds)
2014-10-11 14:17:46	--	fstd_ is now known as fstd
2014-10-11 14:17:56		saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has quit (Ping timeout: 260 seconds)
2014-10-11 14:18:47		mrclarinet (~mrclarine@016.237-93-216-nokia-dsl.dynamic.surewest.net) has quit (Ping timeout: 260 seconds)
2014-10-11 14:20:13		lh_mouse (~lh_mouse@101.86.95.234) has quit (Read error: Connection reset by peer)
2014-10-11 14:20:43		xCoder-Exploiter (~Exploiter@36.68.35.187) has quit (Quit: Leaving)
2014-10-11 14:20:51		svaksha (~svaksha@perrier.eu.org) has joined ##c++
2014-10-11 14:22:06		thwest (~Adium@99-51-187-8.lightspeed.austtx.sbcglobal.net) has quit (Quit: Leaving.)
2014-10-11 14:23:07		thwest (~Adium@99-51-187-8.lightspeed.austtx.sbcglobal.net) has joined ##c++
2014-10-11 14:23:15		magic_ (~magic@unaffiliated/auv5) has joined ##c++
2014-10-11 14:24:31		eean (~quassel@amarok/developer/eean) has quit (Read error: Connection reset by peer)
2014-10-11 14:26:06		ircnick123 (~eman@89.15.238.97) has left ##c++
2014-10-11 14:26:37		eean (~quassel@amarok/developer/eean) has joined ##c++
2014-10-11 14:27:05		starless (~starless@cpe-67-247-235-240.buffalo.res.rr.com) has joined ##c++
2014-10-11 14:28:17		DrDuck (6cc3a6f6@gateway/web/freenode/ip.108.195.166.246) has quit (Ping timeout: 246 seconds)
2014-10-11 14:29:10		stelvin (~stelvin@gateway/tor-sasl/stelvin) has quit (Ping timeout: 264 seconds)
2014-10-11 14:30:44	starless	Hello. Is there a function specified in the C++11 standard to parse a string containing a C++ string literal ("\"Hello, world!\n\tetc.\"") and return what it would typically be compiled to ("Hello, world!
2014-10-11 14:30:46	starless	    etc.")? Thanks in advance.
2014-10-11 14:31:13	starless	minus "typically". dunno why I slipped that word in there.
2014-10-11 14:31:43	ville	i am not sure i understand but i vote "no"
2014-10-11 14:32:03	starless	also, I'm pretty sure my example strings describe what I'm trying to do incorrectly. It's a little confusing.
2014-10-11 14:32:31	starless	ville: I want to be able to interpret a C++ string typed into STDIN like so: "\n\tHello"
2014-10-11 14:32:38	ville	you want to remove escape sequences
2014-10-11 14:32:46	starless	essentially
2014-10-11 14:32:54	starless	and the quotes
2014-10-11 14:32:58	starless	the quotes will be there.
2014-10-11 14:33:00		stelvin (~stelvin@gateway/tor-sasl/stelvin) has joined ##c++
2014-10-11 14:33:38	EwIck	just read it into a string without the surrounding quotes and feed it back into snprintf with "%s", and say hello to hackers
2014-10-11 14:34:52	EwIck	err
2014-10-11 14:35:00		MrFlibble (LunarJetma@2.221.166.187) has joined ##c++
2014-10-11 14:35:02	--	MrFlibble is now known as LunarJetman
2014-10-11 14:35:16	EwIck	I mean pass the string as the format
2014-10-11 14:35:37		paul424 (~chatzilla@apn-46-76-74-234.dynamic.gprs.plus.pl) has quit (Ping timeout: 246 seconds)
2014-10-11 14:36:54		kailoAtWork (~kailoAtWo@107-1-3-130-ip-static.hfc.comcastbusiness.net) has quit (Quit: This computer has gone to sleep)
2014-10-11 14:37:04		karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-10-11 14:37:17		Vinnie_win (thevinn@pdpc/supporter/gold/thevinn) has quit (Ping timeout: 240 seconds)
2014-10-11 14:37:38		kailoAtWork (~kailoAtWo@107-1-3-130-ip-static.hfc.comcastbusiness.net) has joined ##c++
2014-10-11 14:38:02		kailoAtWork (~kailoAtWo@107-1-3-130-ip-static.hfc.comcastbusiness.net) has quit (Remote host closed the connection)
2014-10-11 14:39:12		eean (~quassel@amarok/developer/eean) has quit (Read error: Connection reset by peer)
2014-10-11 14:39:44		Tecan (~fasdf@unaffiliated/unit41) has left ##c++ ("Live Long And Phosphor!")
2014-10-11 14:40:22		Smrtz|Lab (~uaslab@137.155.2.143) has quit (Ping timeout: 245 seconds)
2014-10-11 14:40:47		clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Remote host closed the connection)
2014-10-11 14:40:54	davek	Better yet, use gets() to read in the string EwIck's suggestion.
2014-10-11 14:41:20	davek	and then*
2014-10-11 14:41:24		eean (~quassel@amarok/developer/eean) has joined ##c++
2014-10-11 14:43:46		stef204 (~kvirc@unaffiliated/stef-204/x-384198) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-10-11 14:45:18		ambro718 (~ambro@gentoo/contributor/ambro718) has quit (Ping timeout: 244 seconds)
2014-10-11 14:45:29		Oxyd (~oxyd@pdpc/supporter/student/oxyd) has joined ##c++
2014-10-11 14:47:59	LunarJetman	davek: gets must never be used, stop trolling.
2014-10-11 14:48:35		Siberian_Tiger (~Nicholas@199-96-202-110.fidnet.com) has joined ##c++
2014-10-11 14:48:53		paul424 (~chatzilla@apn-46-76-74-234.dynamic.gprs.plus.pl) has joined ##c++
2014-10-11 14:50:09	cbreak	io2: hmm? :)
2014-10-11 14:50:11	davek	LunarJetman, of course. Sorry I thought it was an apparent joke in light of EwIck's comment. No trolling intended.
2014-10-11 14:50:46	LunarJetman	!give davek fun
2014-10-11 14:50:48	nolyc	davek: ##c++ is a topical channel. There is No Fun Allowed in ##c++.
2014-10-11 14:51:15	EwIck	boo
2014-10-11 14:51:38		hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-10-11 14:52:06	cbreak	starless: what would be the point of that?
2014-10-11 14:52:14	cbreak	starless: just write it properly in the first place?
2014-10-11 14:52:18		Kaedenn (~kaedenn@unaffiliated/kaedenn) has left ##c++
2014-10-11 14:52:43		Smrtz|Lab (~uaslab@137.155.2.143) has joined ##c++
2014-10-11 14:53:13		snyp (~snyp@150.129.132.151) has joined ##c++
2014-10-11 14:54:53		refp (~tmp@82.118.24.98) has joined ##c++
2014-10-11 14:55:06		PJBoy (~PJBoy@unaffiliated/pjboy) has joined ##c++
2014-10-11 14:55:30		chrelad (~chrisdale@66.234.113.42) has joined ##c++
2014-10-11 14:55:41		chrelad (~chrisdale@66.234.113.42) has left ##c++
2014-10-11 14:56:48		forgottenone (~forgotten@217.131.207.43) has quit (Quit: Konversation terminated!)
2014-10-11 14:57:41		josdeha_rt (~josdehart@535299F3.cm-6-3c.dynamic.ziggo.nl) has joined ##c++
2014-10-11 14:57:43	josdeha_rt	?
2014-10-11 14:58:07		josdeha_rt (~josdehart@535299F3.cm-6-3c.dynamic.ziggo.nl) has left ##c++
2014-10-11 14:58:36		m0shbear (~011899988@servbox.moshbear.net) has quit (Remote host closed the connection)
2014-10-11 14:58:38		Nando_k (~Nando_k@dslb-178-003-079-002.178.003.pools.vodafone-ip.de) has quit (Ping timeout: 272 seconds)
2014-10-11 14:59:04		thwest (~Adium@99-51-187-8.lightspeed.austtx.sbcglobal.net) has quit (Ping timeout: 246 seconds)
2014-10-11 15:00:19		unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has joined ##c++
2014-10-11 15:00:58		thwest (~Adium@99-51-187-8.lightspeed.austtx.sbcglobal.net) has joined ##c++
2014-10-11 15:01:15		Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2014-10-11 15:03:15		chatsiri_ (~chatsiri_@119-46-191-20.static.asianet.co.th) has quit (Read error: Connection reset by peer)
2014-10-11 15:05:13	starless	cbreak: parsing a string at runtime != writing a compile time string improperly?
2014-10-11 15:05:20	starless	not sure what you mean.
2014-10-11 15:05:31	starless	EwIck: trying your suggestion.
2014-10-11 15:05:39	starless	(thank you)
2014-10-11 15:05:57	cbreak	starless: why do you want to have to parse it?
2014-10-11 15:06:13	cbreak	why do you demand that users have to write the string in an inconvenient way?
2014-10-11 15:07:04		bmf1 (~bmf1@242-91-252-216.dsl.colba.net) has quit (Ping timeout: 272 seconds)
2014-10-11 15:07:14	starless	cbreak: I don't think my user base would consider it inconvenient
2014-10-11 15:07:51	cbreak	I'd rather write "Hello World!" than \"Hello World\!\"
2014-10-11 15:08:06	starless	cbreak: to express a simple text string.
2014-10-11 15:08:12	starless	I'm parsing the string into a regex pattern.
2014-10-11 15:08:27		rainforest (~see@gateway/tor-sasl/alexandrite) has joined ##c++
2014-10-11 15:08:56	LunarJetman	"Default space after paragraph: %w:width(\"0.00\")% lines"
2014-10-11 15:09:21	Eelis	{ istringstream iss("\"bla\""); string s; iss >> quoted(s); cout << s; }
2014-10-11 15:09:21	geordi	bla
2014-10-11 15:09:27		bmf1 (~bmf1@216.252.64.241) has joined ##c++
2014-10-11 15:09:45		sixequalszero (~w246@unaffiliated/sixequalszero) has joined ##c++
2014-10-11 15:09:47	rainforest	what was that other paste site
2014-10-11 15:09:48	rainforest	not ideone
2014-10-11 15:10:04		thwest (~Adium@99-51-187-8.lightspeed.austtx.sbcglobal.net) has quit (Quit: Leaving.)
2014-10-11 15:10:07	cbreak	http://gcc.godbolt.org/? :D
2014-10-11 15:10:09	LunarJetman	!paste
2014-10-11 15:10:10	nolyc	Paste your test case to http://ideone.com Do _not_ paste to the channel. See the testcase checklist at http://eel.is/c++/testcase
2014-10-11 15:10:16	LunarJetman	use ideone
2014-10-11 15:10:17	cbreak	http://coliru.stacked-crooked.com/? :)
2014-10-11 15:10:51		Hannibal_Smith (~Hannibal_@host68-159-dynamic.6-87-r.retail.telecomitalia.it) has joined ##c++
2014-10-11 15:11:21	LunarJetman	godbolt is written by a brit
2014-10-11 15:11:24	cbreak	starless: I have no idea why that's different. I can put a string into a regex. Even in C++ itself I wouldn't use ("\"Hello, world!\n\tetc.\"" as you showed, I'd just use raw string literals so I don't have to write it in an inconvenient way
2014-10-11 15:11:31	LunarJetman	"colourise" instead of "colorize" :)
2014-10-11 15:11:48		sixequalszero (~w246@unaffiliated/sixequalszero) has left ##c++
2014-10-11 15:12:01	cbreak	LunarJetman: doesn't it look much more civilised that way? :D
2014-10-11 15:12:13	LunarJetman	yes
2014-10-11 15:12:38		koderok (~koderok@106.216.211.215) has quit (Quit: koderok)
2014-10-11 15:12:38	LunarJetman	my IRC client will be in UK English but I might add a US English too
2014-10-11 15:12:44	rainforest	guys im having problems with headers
2014-10-11 15:12:58	rainforest	im not sure how ideone can work with them??
2014-10-11 15:13:11	LunarJetman	however colourize is also a valid UK English spelling
2014-10-11 15:13:25	starless	cbreak: well this is also in the context of a DSHL, so there are constructs other than strings flying around.
2014-10-11 15:13:38	starless	cbreak: you seem very adamant about not parsing C++-style strings.
2014-10-11 15:13:41	starless	why?
2014-10-11 15:13:46	cbreak	because it's inconvenient
2014-10-11 15:13:55		deekej (~deekej@nat184.lu.usi.ch) has quit (Quit: See ya! Bye!)
2014-10-11 15:13:56	starless	to the user?
2014-10-11 15:13:56	rainforest	if i just include the .cc files and not the headers my program works fine
2014-10-11 15:13:59	cbreak	if you already have a domain specific language, then just use that language's lexer/parser
2014-10-11 15:14:02	cbreak	starless: of course
2014-10-11 15:14:07		pfo__ (~pfo@chello084114049188.14.vie.surfer.at) has quit (Ping timeout: 245 seconds)
2014-10-11 15:14:08	rainforest	otherwise i get an undefined reference error regarding one of my class' constructor
2014-10-11 15:14:12	rainforest	it makes no sense!
2014-10-11 15:14:17	starless	cbreak: no, I'm writing a DSHL
2014-10-11 15:14:21	cbreak	starless: it's a pain in the ass for C++ Programmers to write such messy strings, that's why we have raw string literals now
2014-10-11 15:14:42	davek	What's the "H" stand for?
2014-10-11 15:14:42	cbreak	starless: you're writing a language ... without writing a parser for it?
2014-10-11 15:14:49		BadQuanta (~badquanta@2601:7:100:f45:79c4:9933:7636:cc41) has joined ##c++
2014-10-11 15:14:55	cbreak	hidden. or hyper I guess.
2014-10-11 15:14:59	LunarJetman	davek: Hologram
2014-10-11 15:14:59	starless	davek: high-level
2014-10-11 15:15:01	rainforest	is it worth noting that the constructor of that class initializes some variables n stuff (the initialization stuff isnt in the header, the header is just like declared idk)
2014-10-11 15:15:16	 *	cbreak uses Lua as DSEL
2014-10-11 15:15:17	davek	That seems like a valueless addition.
2014-10-11 15:15:29	cbreak	(the E stands for "Embedded")
2014-10-11 15:15:42	ville	EDSL
2014-10-11 15:16:05	o]	cbreak: what wrapper are you using/
2014-10-11 15:16:07	starless	davek: to DSL? sure. I just always hear it said DSHL.
2014-10-11 15:16:08	o]	have you tried SOL?
2014-10-11 15:16:19		only_the_bear (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has joined ##c++
2014-10-11 15:16:21	LunarJetman	FOAD?
2014-10-11 15:16:25	davek	starless, bizarre. Anyway, so you're trying to leverage C++ string literals to implement this?
2014-10-11 15:16:45	cbreak	o]: I was using luabridge
2014-10-11 15:16:51	cbreak	haven't used it in over five years...
2014-10-11 15:16:57	cbreak	it was rather neat back then
2014-10-11 15:17:26	starless	cbreak: I'm writing a parser, but why would I parse the strings myself if I could simply use a built-in function?
2014-10-11 15:17:30	cbreak	starless: consider using a tokenizer/parser for that, and not write special code yourself
2014-10-11 15:17:40	starless	...
2014-10-11 15:17:43	starless	yeah
2014-10-11 15:17:57	cbreak	there's really no point writing string parts yourself
2014-10-11 15:18:06	cbreak	chances are it'll be a pain
2014-10-11 15:18:15	cbreak	and there's lots that can go wrong
2014-10-11 15:18:35	starless	...yes. my original question was: Is there a function specified in the C++11 standard to parse a string containing a C++ string literal?
2014-10-11 15:18:39	cbreak	I've always wanted to try boost::spirit, it's interesting
2014-10-11 15:18:45	cbreak	but there are other parser generators of course
2014-10-11 15:18:54	cbreak	starless: C++ doesn't have any parsers
2014-10-11 15:19:00	cbreak	starless: and why do you want to write code yourself?
2014-10-11 15:19:17	cbreak	why do you want to treat string literals in a special way?
2014-10-11 15:19:31	cbreak	it's a silly thing to do
2014-10-11 15:19:46	rainforest	Here's my program: Main.cc - http://ideone.com/sWlNBh, Arctic.cc - http://ideone.com/qzi6rJ, Arctic.h - http://ideone.com/TpwGYF, Penguin.cc - http://ideone.com/iUEdzb, Penguin.h - http://ideone.com/SAM2sA
2014-10-11 15:20:07	rainforest	This is the error I get when I try to compile my program (sorry for the paste):
2014-10-11 15:20:15	rainforest	Main.o: In function `main':
2014-10-11 15:20:15	rainforest	Main.cc:(.text+0x52): undefined reference to `Arctic::Arctic(boost::asio::io_service&, short)'
2014-10-11 15:20:16	rainforest	collect2: error: ld returned 1 exit status
2014-10-11 15:20:48	starless	cbreak: who said I want to treat string literals in a special way? what do you mean by that?
2014-10-11 15:20:55	davek	cbreak, it works rather well actually. Certainly a step above bison for simple grammars.
2014-10-11 15:21:09	LunarJetman	rainforest: you need to link Arctic.cc
2014-10-11 15:21:10	o]	cbreak: SOL can even bind to lambdas and std::function objects :)
2014-10-11 15:21:17	starless	cbreak: and what do you mean, "why do you want to write code yourself?"
2014-10-11 15:21:32	starless	who will write code? what's the code in question?
2014-10-11 15:21:36	LunarJetman	SOL? FOAD.
2014-10-11 15:21:55	cbreak	starless: if you write a language, typically you have a grammar
2014-10-11 15:21:57	rainforest	LunarJetman: I'm linking it, I'm having g++ compile everything with the .cc extension and link/compile everything with the .o extension
2014-10-11 15:22:02	cbreak	for that you have a parser
2014-10-11 15:22:06	davek	If you combine the generated parser with the C++11 expression templates pattern you can get _really_ efficient little DSL.
2014-10-11 15:22:10	rainforest	basically, g++ -c *.cc -std=c++11 -lboost_system and g++ -o program *.o -std=c++11 -lboost_system
2014-10-11 15:22:16	rainforest	to make sure I'm not possibly missing anything
2014-10-11 15:22:22	cbreak	and from that parser you get something out. Callbacks, an AST
2014-10-11 15:22:24	cbreak	something like that
2014-10-11 15:22:36	cbreak	(unless you write shitty compilers like microsoft... :D)
2014-10-11 15:22:38		Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-10-11 15:23:10	cbreak	davek: neat
2014-10-11 15:23:24		hrolf (~hrolf@unaffiliated/hrolf) has quit (Quit: Lost terminal)
2014-10-11 15:23:33	cbreak	o]: SOL is?
2014-10-11 15:23:50	cbreak	this one? https://github.com/Rapptz/sol
2014-10-11 15:24:11		Kirrahe (~kirrahe@ip51cc442b.adsl-surfen.hetnet.nl) has joined ##c++
2014-10-11 15:24:12	cbreak	reminds me of luabridge
2014-10-11 15:24:24	rainforest	LunarJetman: any idea? :(
2014-10-11 15:24:33	starless	cbreak: my grammar is nothing more than commands and expressions. trust me I understand this stuff good and fine. I know it's no simple task to write a C++ string parser and if there isn't one available I'll consider my other options
2014-10-11 15:24:58	LunarJetman	rainforest: no. I imaging the first -l is redundant as you are just compiling not linking.
2014-10-11 15:25:04	LunarJetman	imagine*
2014-10-11 15:26:13	rainforest	LunarJetman: it is
2014-10-11 15:26:27		plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-10-11 15:26:36	LunarJetman	rainforest: you are doing it wrong anyway
2014-10-11 15:26:46	LunarJetman	rainforest: you are defining a class in both a .cpp file and a header files
2014-10-11 15:26:56	LunarJetman	you should not define it twice
2014-10-11 15:27:02	starless	cbreak: your points are well taken, however. thank you for the help.
2014-10-11 15:27:14		sohail (~user@unaffiliated/sohail) has quit (Ping timeout: 255 seconds)
2014-10-11 15:27:23		DanteLA (~DanteLA@a91-154-125-124.elisa-laajakaista.fi) has joined ##c++
2014-10-11 15:27:25	rainforest	LunarJetman: how should I be doing it?
2014-10-11 15:27:46		plitter (~plitter@84.48.49.52) has joined ##c++
2014-10-11 15:27:56	LunarJetman	arctic.cc: Arctic::Artic(...) {}
2014-10-11 15:28:07	LunarJetman	no "class"
2014-10-11 15:28:23		eslbaer (~eslbaer@p548A5F04.dip0.t-ipconnect.de) has joined ##c++
2014-10-11 15:28:24	rainforest	LunarJetman: no class anywhere?
2014-10-11 15:28:36	rainforest	uhh
2014-10-11 15:28:38		EvergreenTree (~quassel@unaffiliated/evergreentree) has joined ##c++
2014-10-11 15:28:38	LunarJetman	you should not define a class twice
2014-10-11 15:28:48	LunarJetman	you define just the member functions in the .cc
2014-10-11 15:29:13	o]	cbreak: this one. exactly.
2014-10-11 15:29:27	o]	cbreak: I liked the way the author did the api. look at the examples
2014-10-11 15:29:36	o]	and it is being constantly updated
2014-10-11 15:29:55	rainforest	LunarJetman: ok, so in that case, i include Arctic.h in the .cc too?
2014-10-11 15:30:00	LunarJetman	yes
2014-10-11 15:30:52	rainforest	LunarJetman: how do I define the Accept method in Arctic.cc?
2014-10-11 15:30:56	rainforest	Arctic::Accept ?
2014-10-11 15:31:05	rainforest	(just like the constructor?)
2014-10-11 15:31:36	LunarJetman	what?
2014-10-11 15:31:43	LunarJetman	yes
2014-10-11 15:31:59	rainforest	ok, thanks
2014-10-11 15:31:59	LunarJetman	you can define member functions either in .cc or inline in the header
2014-10-11 15:32:48	rainforest	LunarJetman: how would i work with the class' variables though (without inline)
2014-10-11 15:32:50	LunarJetman	rainforest: you probably need to be in !basic not here
2014-10-11 15:32:57	o]	yup
2014-10-11 15:33:05	o]	!give rainforest book
2014-10-11 15:33:06	nolyc	rainforest: The Definitive C++ Book Guide and List -> http://stackoverflow.com/q/388242/1090079
2014-10-11 15:33:13		hamid (~nithp@unaffiliated/hamid) has quit (Quit: Lost terminal)
2014-10-11 15:33:15	LunarJetman	!give rainforest basic
2014-10-11 15:33:17	nolyc	rainforest: Please ask your question in ##C++-basic, as it involves the fundamental basics of the language.
2014-10-11 15:33:35		kailoAtWork (~kailoAtWo@107-1-3-130-ip-static.hfc.comcastbusiness.net) has joined ##c++
2014-10-11 15:34:03		kailoAtWork (~kailoAtWo@107-1-3-130-ip-static.hfc.comcastbusiness.net) has quit (Client Quit)
2014-10-11 15:36:12		Anoniem4l (~Anoniem4l@unaffiliated/anoniem4l) has joined ##c++
2014-10-11 15:36:52	rainforest	thanks
2014-10-11 15:37:55		DTSCode (ae861999@gateway/web/cgi-irc/kiwiirc.com/ip.174.134.25.153) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2014-10-11 15:38:35		starless (~starless@cpe-67-247-235-240.buffalo.res.rr.com) has quit (Quit: Leaving)
2014-10-11 15:39:13		nug700 (~nug700@184-98-173-4.phnx.qwest.net) has joined ##c++
2014-10-11 15:39:46		Nando_k (~Nando_k@dslb-178-003-079-002.178.003.pools.vodafone-ip.de) has joined ##c++
2014-10-11 15:41:06		proteusguy (~proteusgu@ppp-110-168-229-155.revip5.asianet.co.th) has joined ##c++
2014-10-11 15:44:00	DanteLA	If I have: "std::vector<Base*> all; std::vector<Derived> storage;" then how could I make it so that for some (changing) elements in storage a different virtual function gets called with all[n]->vf() than the normal one? I could put 'if' at the start of 'vf()' but that caused a performance hit that I need to avoid
2014-10-11 15:44:59	cbreak	DanteLA: doesn't sound like you want virtual functions
2014-10-11 15:45:04	cbreak	(dispatching based on type)
2014-10-11 15:45:05	LunarJetman	DanteLA: you mean storage has defferent elements types?
2014-10-11 15:45:10	LunarJetman	different
2014-10-11 15:45:12	cbreak	sounds more like you want std::function member
2014-10-11 15:45:19	cbreak	-> parametrisable functions
2014-10-11 15:45:27		liberal (~rocketeer@gateway/tor-sasl/rocketeer) has quit (Remote host closed the connection)
2014-10-11 15:45:36	o]	ugh
2014-10-11 15:45:38	cbreak	if you don't need full parametrisation, an enum might do, but...
2014-10-11 15:45:46	DanteLA	Well my code design heavily relies on virtual functions.. but I do need this functionality
2014-10-11 15:45:58	o]	ugh ugh
2014-10-11 15:46:05	o]	good luck :)))))))))))))))))))))))))
2014-10-11 15:46:08	DanteLA	LunarJetman: Well not really, they are the same data but I need different vf()
2014-10-11 15:46:16	LunarJetman	that makes no sense
2014-10-11 15:46:20		liberal (~rocketeer@gateway/tor-sasl/rocketeer) has joined ##c++
2014-10-11 15:46:36		hellangel7 (~hellangel@117.192.160.86) has quit (Read error: Connection reset by peer)
2014-10-11 15:46:39	LunarJetman	store a std::function in all then
2014-10-11 15:46:50		diod (~diod@unaffiliated/diod) has joined ##c++
2014-10-11 15:47:17	DanteLA	LunarJetman: You could say that for some elements I have another derived class which is otherwise identical but has different vf()
2014-10-11 15:47:36	DanteLA	Ok, will look into this std::function
2014-10-11 15:47:38	LunarJetman	you can only store elements of the same type in a container
2014-10-11 15:47:42	DanteLA	I know
2014-10-11 15:47:50	LunarJetman	if you want different derived classes you need to use a variant
2014-10-11 15:47:57	LunarJetman	or different containers
2014-10-11 15:48:46		JamesNZ (~james@fedora/JamesNZ) has quit (Remote host closed the connection)
2014-10-11 15:49:17		xico (~xico@cpe-76-88-16-80.san.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-10-11 15:49:18	LunarJetman	std::vector<std::unique_ptr<Base>, std::function<void()>> is also an option
2014-10-11 15:49:26	DanteLA	Certainly could do this if using C function pointers instead of virtual function calls
2014-10-11 15:49:30	LunarJetman	std::vector<std::pair<std::unique_ptr<Base>, std::function<void()>>> is also an option
2014-10-11 15:50:30		madist (madist@unaffiliated/madist) has joined ##c++
2014-10-11 15:52:27	DanteLA	Which would be identical design to what LunarJetman just proposed
2014-10-11 15:52:45	LunarJetman	?
2014-10-11 15:53:00	DanteLA	I mean store a function poiner with each object
2014-10-11 15:54:11		kailoAtWork (~kailoAtWo@107-1-3-130-ip-static.hfc.comcastbusiness.net) has joined ##c++
2014-10-11 15:54:48		forgottenone (~forgotten@217.131.207.43) has joined ##c++
2014-10-11 15:58:13		stealth``` (~stealth@p4FDCC43F.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2014-10-11 15:58:26		ambro718 (~ambro@gentoo/contributor/ambro718) has joined ##c++
2014-10-11 15:58:36		oleo__ (~oleo@xdsl-87-79-199-28.netcologne.de) has joined ##c++
2014-10-11 15:58:42		jitsuin (~chatzilla@cpe-23-243-174-121.socal.res.rr.com) has quit (Quit: ur all a bunch of naggers!!!)
2014-10-11 15:58:51	--	oleo is now known as Guest72639
2014-10-11 16:00:51		Guest72639 (~oleo@xdsl-84-44-209-128.netcologne.de) has quit (Ping timeout: 250 seconds)
2014-10-11 16:01:33		Anoniem4l (~Anoniem4l@unaffiliated/anoniem4l) has quit (Quit: say wat)
2014-10-11 16:02:03		Anoniem4l (~Anoniem4l@unaffiliated/anoniem4l) has joined ##c++
2014-10-11 16:03:13	o11c	sigh
2014-10-11 16:03:52	o11c	I wish I could forbid no-arg ctor when building an object on its own, but allow it in arrays
2014-10-11 16:04:31		oleo__ (~oleo@xdsl-87-79-199-28.netcologne.de) has quit (Quit: Verlassend)
2014-10-11 16:04:50	cbreak	why?
2014-10-11 16:04:58		oleo__ (~oleo@xdsl-87-79-199-28.netcologne.de) has joined ##c++
2014-10-11 16:05:02	K-ballo	why would you want T v; and T v[1]; to behave differently?
2014-10-11 16:05:10		oleo__ (~oleo@xdsl-87-79-199-28.netcologne.de) has quit (Read error: Connection reset by peer)
2014-10-11 16:05:10		alenn (~alenn@89.204.137.143) has joined ##c++
2014-10-11 16:05:48		Flannel (~flannel@ubuntu/member/flannel) has quit (Read error: Connection reset by peer)
2014-10-11 16:06:19		Flannel (~flannel@ubuntu/member/flannel) has joined ##c++
2014-10-11 16:06:42		bmf1 (~bmf1@216.252.64.241) has quit (Ping timeout: 245 seconds)
2014-10-11 16:07:09		oleo (~oleo@xdsl-87-79-199-28.netcologne.de) has joined ##c++
2014-10-11 16:08:02		EvergreenTree (~quassel@unaffiliated/evergreentree) has quit (Read error: Connection reset by peer)
2014-10-11 16:08:57		unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has quit (Quit: unixpro1970 has off IRC)
2014-10-11 16:09:20		alenn (~alenn@89.204.137.143) has left ##c++
2014-10-11 16:10:14	o11c	K-ballo: I prefer explicit over implicit, but it's hard to make `std::array` do something special
2014-10-11 16:10:35		Anoniem4l (~Anoniem4l@unaffiliated/anoniem4l) has quit (Quit: say wat)
2014-10-11 16:10:49	ville	this would be my cue to rant about c++ initialization rules
2014-10-11 16:10:59	o11c	\o/
2014-10-11 16:11:05		Anoniem4l (~Anoniem4l@unaffiliated/anoniem4l) has joined ##c++
2014-10-11 16:11:14	cbreak	T t; // looks quite explicit to me
2014-10-11 16:11:43	cbreak	not as explicit as T t = T(); or T t{}. but ... at least a bit explicit
2014-10-11 16:11:46	o11c	cbreak: not when the logical no-arg ctor is the only way to put the object in a "bad state"
2014-10-11 16:12:12		Anoniem4l (~Anoniem4l@unaffiliated/anoniem4l) has quit (Client Quit)
2014-10-11 16:12:15	cbreak	std::move(t)?
2014-10-11 16:12:29	o11c	ah, that does too
2014-10-11 16:12:58	o11c	but speaking of std::move
2014-10-11 16:12:59	ville	first order of business is to abolish the T x(1) vs T x = 1;.
2014-10-11 16:13:31	cbreak	the zeroeth order is to abolish T t()
2014-10-11 16:13:34	o11c	I have some scary code that looks like:    foo(x.name, std::move(x));
2014-10-11 16:13:49	cbreak	that's... kind of evil.
2014-10-11 16:13:50	K-ballo	looks UBish
2014-10-11 16:13:53	o11c	nope
2014-10-11 16:14:01	ville	make that just syntactic sugar and if someone really really needs to prevent the types with explicit ctors then make a type trait for it that people can static_assert on.
2014-10-11 16:14:05	o11c	because the function's second parameter is a T&&, but the first is a U
2014-10-11 16:14:19	ville	at least the intent is explicit then
2014-10-11 16:14:32	o11c	so the copy actually occurs before the move - remember that std::move is just static_cast<T&&>
2014-10-11 16:15:07	 *	o11c <3 how hard Rust makes it to give a variable an uninitialized value
2014-10-11 16:15:22		EwIck (~EwIck@50.66.59.108.express.oricom.ca) has quit
2014-10-11 16:15:56	ville	0th order of business is abolishing default-initialization and make value-initialization the default-initialization
2014-10-11 16:15:57	DanteLA	I wonder what is the benefit of having std::function in C++ over C function pointers?
2014-10-11 16:16:21	cbreak	DanteLA: std::function can store any callable
2014-10-11 16:16:28	cbreak	not just function pointers
2014-10-11 16:16:37	ville	if you want uninitialized-initialization then invent new syntax for it; explicit int x; or whatever.
2014-10-11 16:16:41	cbreak	you can store the result of a bind expression, lambdas, function pointers, ...
2014-10-11 16:18:01	DanteLA	Hmm. So if I do a C function pointer style design with std::function then it will compile to what one would get with function pointers?
2014-10-11 16:20:09	K-ballo	DanteLA: what's a "C function pointer style design with std::function" ?
2014-10-11 16:20:30	o11c	ville: I'm a fan of: int x = undef;
2014-10-11 16:20:50	ville	guess he is asking if he stores a pointer-to-function in an std::function what the assembly looks like when making a call
2014-10-11 16:21:01	o11c	std::function generates horrible code
2014-10-11 16:21:09	o11c	it tries to do everything, and does it all badly
2014-10-11 16:21:13	DanteLA	Like storing a function pointer with each pointer to base class 'std::vector<std::pair<Base*, void*> >'
2014-10-11 16:21:32	DanteLA	versus std::vector<std::pair<std::unique_ptr<Base>, std::function<void()>>>
2014-10-11 16:21:37	o11c	it would be much better to have separate std::unique_function, std::copy_function, std::ref_function, std::shared_function classes
2014-10-11 16:22:35	DanteLA	o11c: It doesn't sound like I want to use it in my inner-inner loop where a single additional if () lost 5% performance
2014-10-11 16:22:57		NEMUS (~Nemus@unaffiliated/nemus) has quit (Ping timeout: 250 seconds)
2014-10-11 16:23:02	K-ballo	DanteLA: are you ok with a function pointer, or do you need more?
2014-10-11 16:23:03	DanteLA	(even it if always evaluated to the same path)
2014-10-11 16:23:22	ApEk	DanteLA: http://s18.postimg.org/gzushmyfd/time_1_07.png
2014-10-11 16:23:35	davek	Bit of a TMP question, is there a reliable method of getting the arity of a function at compile time?
2014-10-11 16:24:19	K-ballo	davek: of a function type? sure. otherwise, depends
2014-10-11 16:24:27	DanteLA	K-ballo: Well I haven't really used them but it seems they solve my problem, like the std::function that was proposed
2014-10-11 16:24:49		Nemus (~Nemus@unaffiliated/nemus) has joined ##c++
2014-10-11 16:24:57	o11c	DanteLA: if efficiency is a concern, use (function pointer taking void*, void*) pairs
2014-10-11 16:25:32	o11c	that's no less flexible than std::function if you ignore the fact that std::function is copyable
2014-10-11 16:25:59	o11c	I dunno if boost has implemented this properly
2014-10-11 16:27:16	davek	K-ballo, exactly that yeah, of a callable type.
2014-10-11 16:27:50	K-ballo	davek: a function type and a callable type are waaaaaaaay different.. pick one
2014-10-11 16:28:37	o11c	hm
2014-10-11 16:28:46	K-ballo	{ cout << arity<void(int, float, double)>::value; } template <typename T> struct arity; template <typename R, typename ...Args> struct arity<R(Args...)> : integral_constant<size_t, sizeof...(Args)> {};
2014-10-11 16:28:46	geordi	3
2014-10-11 16:28:56	davek	A callable type, K-ballo.
2014-10-11 16:29:07	K-ballo	davek: can't be done then, there is no single signature for a callable type
2014-10-11 16:29:22	o11c	davek: overloaded operator()s are a thing
2014-10-11 16:30:26	davek	o11c, yes that's what I have. Perhaps my understanding of a callable type is not correct. Doesn't overloading the operator() indicate a callable type? Or does that refer to things like operator bool() that are called implicitly?
2014-10-11 16:31:03	K-ballo	davek: "callable" is a concept strongly tied to the arguments you use, so you can't get the arity for those
2014-10-11 16:31:20	o11c	{ frob<3>(); } struct Foo { Foo(nullptr_t) {} };  template<size_t n> std::array<Foo, n> frob() { return {Foo(nullptr), Foo(nullptr), Foo(nullptr)}; };
2014-10-11 16:31:20	geordi	error: extra ';'
2014-10-11 16:31:34	K-ballo	struct foo { template <typename ...Ts> void operator()(Ts...){} }; // what's the arity? infinity? variadic?
2014-10-11 16:31:35	o11c	{ frob<3>(); } struct Foo { Foo(nullptr_t) {} };  template<size_t n> std::array<Foo, n> frob() { return {Foo(nullptr), Foo(nullptr), Foo(nullptr)}; }
2014-10-11 16:31:35	geordi	<no output>
2014-10-11 16:31:45		hz (~username@unaffiliated/hz) has quit (Quit: Leaving.)
2014-10-11 16:31:45	o11c	is there a way to do this, but generically over n?
2014-10-11 16:31:59	o11c	possibly with template index expansion?
2014-10-11 16:33:06	davek	K-ballo, I see the issue, could the application of this metafunction for finding arity not detect the fact that its a variadic function and return false_type?
2014-10-11 16:33:34	K-ballo	davek: nope, there's no way of knowing the potential signatures of a "callable"
2014-10-11 16:33:34		ObjectiveMatt (~Objective@66.87.151.2) has joined ##c++
2014-10-11 16:33:53	davek	Wow, how weird.
2014-10-11 16:34:08	ObjectiveMatt	how do you call a function on this?
2014-10-11 16:34:37	davek	K-ballo, if this were a normal member function rather than an operator overload, would such a thing be possible?
2014-10-11 16:35:05	K-ballo	davek: yes, a member function has type member-pointer + function type, and I showed you how to do it for function types
2014-10-11 16:35:16		BinaryAddicted (~BinaryAdd@194.230.155.112) has joined ##c++
2014-10-11 16:35:51		kailoAtWork (~kailoAtWo@107-1-3-130-ip-static.hfc.comcastbusiness.net) has quit (Quit: This computer has gone to sleep)
2014-10-11 16:36:11	hs_	o11c, with a template parameter int...ns you can return {(ns,Foo(nullptr)...};
2014-10-11 16:36:15		mrclarinet (~mrclarine@016.237-93-216-nokia-dsl.dynamic.surewest.net) has joined ##c++
2014-10-11 16:36:46		DanteLA (~DanteLA@a91-154-125-124.elisa-laajakaista.fi) has quit (Quit: leaving)
2014-10-11 16:36:47		Anoniem4l (~Anoniem4l@unaffiliated/anoniem4l) has joined ##c++
2014-10-11 16:36:53	hs_	o11c, {(ns,Foo(nullptr))...}; rather.. but anyway, the ns will expand and do nothing in the comma-operator list; Foo(nullptr) will get returned ns times
2014-10-11 16:37:21		mrclarinet (~mrclarine@016.237-93-216-nokia-dsl.dynamic.surewest.net) has left ##c++
2014-10-11 16:37:43		mrclarinet (~mrclarine@016.237-93-216-nokia-dsl.dynamic.surewest.net) has joined ##c++
2014-10-11 16:38:28		Anoniem4l (~Anoniem4l@unaffiliated/anoniem4l) has quit (Client Quit)
2014-10-11 16:38:58		Anoniem4l (~Anoniem4l@unaffiliated/anoniem4l) has joined ##c++
2014-10-11 16:39:09		DianaMadsen (~diana@www.dianamadsen.dk) has joined ##c++
2014-10-11 16:41:57		Anoniem4l (~Anoniem4l@unaffiliated/anoniem4l) has quit (Client Quit)
2014-10-11 16:42:27		Anoniem4l (~Anoniem4l@unaffiliated/anoniem4l) has joined ##c++
2014-10-11 16:42:55		ikrima (~ikrima@76.91.23.45) has quit (Ping timeout: 255 seconds)
2014-10-11 16:43:33		BlaXpirit (~blaxpirit@115-5-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-10-11 16:45:33	ObjectiveMatt	if I have a char c
2014-10-11 16:45:44	ObjectiveMatt	can I check if it is space by saying if c == ' '
2014-10-11 16:46:21		mrclarinet (~mrclarine@016.237-93-216-nokia-dsl.dynamic.surewest.net) has quit (Ping timeout: 250 seconds)
2014-10-11 16:46:30	Anoniem4l	yes
2014-10-11 16:46:35	ObjectiveMatt	thx.
2014-10-11 16:48:47		QualityAddict (~Jason.Smi@ip68-102-62-117.ks.ok.cox.net) has joined ##c++
2014-10-11 16:49:49		BoomerBile (~BoomerBil@97-91-102-175.dhcp.roch.mn.charter.com) has quit (Read error: Connection reset by peer)
2014-10-11 16:50:09	--	vol4ko_d is now known as vol4ko
2014-10-11 16:51:19	o11c	ah wait a second
2014-10-11 16:51:22	o11c	I'm so retarded
2014-10-11 16:51:30	o11c	I forgot about NSDMIs *again*
2014-10-11 16:52:01	ObjectiveMatt	how to convert char to an int? like '9' to 9?
2014-10-11 16:52:10	ObjectiveMatt	do I do c - '0'
2014-10-11 16:52:13	ObjectiveMatt	if c is the char
2014-10-11 16:52:24		hackkitten (~jigoku_ai@HSI-KBW-37-209-98-22.hsi15.kabel-badenwuerttemberg.de) has quit (Ping timeout: 260 seconds)
2014-10-11 16:52:33	ObjectiveMatt	like int myint = c - '0';
2014-10-11 16:52:56		kaffeetrauma (~Thunderbi@ip-109-91-85-220.hsi12.unitymediagroup.de) has quit (Quit: kaffeetrauma)
2014-10-11 16:53:02	o11c	ObjectiveMatt: yeah, that works for a single digit
2014-10-11 16:53:18	ObjectiveMatt	=-\
2014-10-11 16:53:31	ObjectiveMatt	so I'm processing an input file with space delimited integers
2014-10-11 16:53:40	ObjectiveMatt	so not necessarily a single digit
2014-10-11 16:53:42		forgottenone (~forgotten@217.131.207.43) has quit (Quit: Konversation terminated!)
2014-10-11 16:53:46	ObjectiveMatt	I'm doing it character by character
2014-10-11 16:53:53	ObjectiveMatt	so how would I get the ints out of that
2014-10-11 16:53:56	ObjectiveMatt	some are negative
2014-10-11 16:54:24	K-ballo	{ stringstream ss("1 14 -5"); int i; while (ss >> i) { cout << i; } }
2014-10-11 16:54:24	geordi	114-5
2014-10-11 16:55:31		kurahaupo (~Kurahaupo@17.79.252.27.dyn.cust.vf.net.nz) has quit (Ping timeout: 244 seconds)
2014-10-11 16:56:39	ObjectiveMatt	well K-ballo what if it is something that looks liek this
2014-10-11 16:56:40	ObjectiveMatt	http://ideone.com/WUNObg
2014-10-11 16:56:51	ObjectiveMatt	there will be 3 lines, and each line represents a set of integers
2014-10-11 16:57:30	K-ballo	ObjectiveMatt: I'm sure you can figure it out, you have the fundamental pieces now
2014-10-11 16:57:41		BlaXpirit (~blaxpirit@115-5-132-95.pool.ukrtel.net) has joined ##c++
2014-10-11 16:57:42	ObjectiveMatt	do I do line >> i
2014-10-11 16:57:44	ObjectiveMatt	in my case
2014-10-11 16:58:14	o11c	sigh
2014-10-11 16:58:25	o11c	I WISH C++ HAD GUARANTEED FREE MOVES
2014-10-11 16:58:56	ObjectiveMatt	?
2014-10-11 16:58:58	o11c	problem of the moment that that would solve: variant requires a nothrow default ctor for the first element
2014-10-11 16:59:12	K-ballo	sounds like a broken variant
2014-10-11 16:59:23	o11c	it's impossible to implement a variant otherwise
2014-10-11 16:59:29	K-ballo	lol
2014-10-11 16:59:33	o11c	unless you fall back to heap allocations, which are Not Cool™
2014-10-11 16:59:54	K-ballo	I only know one variant design that requires that, and it is one that tends to fall back to heap allocation unfortunatelly
2014-10-11 17:00:09	o11c	okay, how do you do emplaces then?
2014-10-11 17:00:21		mentoc (~lmn@unaffiliated/mentoc) has joined ##c++
2014-10-11 17:00:29	o11c	Variant<T, U, V> currently contains a U, and you want to .emplaace<V>(v1, v2)
2014-10-11 17:00:34	rainforest	is it ok to have a header file just for #includes?
2014-10-11 17:00:41	o11c	it's quite reasonable for V(v1, v2) to throw
2014-10-11 17:00:47		Hannibal_Smith (~Hannibal_@host68-159-dynamic.6-87-r.retail.telecomitalia.it) has quit (Quit: Sto andando via)
2014-10-11 17:01:08		stef204 (~kvirc@unaffiliated/stef-204/x-384198) has joined ##c++
2014-10-11 17:01:09	ObjectiveMatt	Implicit instantiation of undefined template 'std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >'
2014-10-11 17:01:18	o11c	so either you destruct the U first and emplace the V, then need to put something back - or you build the V first and then move it in
2014-10-11 17:01:24	ObjectiveMatt	when I say std::stringstream ss(mystring);
2014-10-11 17:01:32	o11c	without free moves, you *need* a nothrow ctor
2014-10-11 17:01:40		deekej (~deekej@195.65.3.245) has joined ##c++
2014-10-11 17:01:50	o11c	nothrow 0-arg ctor for the first element, specifically
2014-10-11 17:01:50	mentoc	I'm trying to stay away from managing a simple char buffer[256]; and instead using std::vector<char> buffer; .. but I'm calling a function that accepts a char*, I'm trying to use a vector like this: (char*)&bufferVector[0] .. Is this the best way to go about using c arrays?
2014-10-11 17:02:00	o11c	mentoc: .data()
2014-10-11 17:02:17	o11c	but you shouldn't need the cast anyway
2014-10-11 17:02:18	K-ballo	o11c: first let me point that the standard union and the experimental::optional which is designed as a variant don't have a strong exception guarantee in that case if you are not nothrow, which is reasonable
2014-10-11 17:02:33	K-ballo	o11c: then, let me ask what does nothrow default constructible buy you in that case?
2014-10-11 17:03:41	o11c	K-ballo: strong exception guarantee means rollback, but without nothrow you don't even have the ability to keep *any* valid state at all
2014-10-11 17:04:12	o11c	(trivial move could provide the strong exception guarantee)
2014-10-11 17:04:28	K-ballo	o11c: nod, I asked about nothrow default construction, not nothrow moves
2014-10-11 17:04:49	o11c	okay, let me repeat my question: what do you do if you have a U and you want to emplace a V?
2014-10-11 17:05:02	o11c	note that emplace includes move construction
2014-10-11 17:05:25		kurahaupo_ (~kurahaupo@118.148.142.250) has quit (Ping timeout: 255 seconds)
2014-10-11 17:05:25	o11c	the invariant of the class is that there must always be a valid element of some type in it
2014-10-11 17:05:31		BadQuanta (~badquanta@2601:7:100:f45:79c4:9933:7636:cc41) has quit (Ping timeout: 272 seconds)
2014-10-11 17:05:50		rainforest (~see@gateway/tor-sasl/alexandrite) has quit (Quit: Leaving)
2014-10-11 17:06:10	K-ballo	ditch the invariant, it's broken
2014-10-11 17:06:20	o11c	experimental::optional's "none" state is obviously nothrow
2014-10-11 17:06:25	o11c	...
2014-10-11 17:06:49		madist (madist@unaffiliated/madist) has quit (Ping timeout: 246 seconds)
2014-10-11 17:07:37	o11c	sure, let me violate literally everybody's fundamental expectation of a variant just because the language doesn't supply what I need/
2014-10-11 17:07:38	K-ballo	you are either modeling a union which doesn't have that invariant, or you are modeling something that needs heap allocation which is not a union
2014-10-11 17:07:58	o11c	It is not some strange thing that I ask for
2014-10-11 17:08:09	K-ballo	who is "everybody"? how many variant designs do you know and how many of them have a (broken) never-empty guarantee?
2014-10-11 17:08:18		MutSbeta (~user@128-72-119-108.broadband.corbina.ru) has joined ##c++
2014-10-11 17:08:24	o11c	never-empty is the FUNDAMENTAL property of a variant
2014-10-11 17:08:33	o11c	otherwise it would be called an optional-variant
2014-10-11 17:09:18	o11c	*anybody* - including a dtor called during unwinding - needs to be able to assume that the variant contains exactly one value. that's what it's *for*
2014-10-11 17:09:42	ObjectiveMatt	Set<ItemType>::~Set() does that look like the right syntax for a template implementation file?
2014-10-11 17:09:51	o11c	ObjectiveMatt: yes
2014-10-11 17:10:23		Jackneill (~Jackneill@unaffiliated/jackneill) has quit (Ping timeout: 272 seconds)
2014-10-11 17:14:15		paul424 (~chatzilla@apn-46-76-74-234.dynamic.gprs.plus.pl) has quit (Quit: ChatZilla 0.9.91 [Firefox 31.1.0/2014082900])
2014-10-11 17:14:25		Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has quit (Read error: Connection reset by peer)
2014-10-11 17:15:46		DianaMadsen (~diana@www.dianamadsen.dk) has quit (Quit: Lost terminal)
2014-10-11 17:16:10	ObjectiveMatt	if this is Set.h
2014-10-11 17:16:10	ObjectiveMatt	http://ideone.com/U5ccPf
2014-10-11 17:16:17	ObjectiveMatt	http://ideone.com/S9Y4tu and that's Set.tem
2014-10-11 17:16:25	ObjectiveMatt	I have a bunch of compiler errors I cannot figure out
2014-10-11 17:19:42		yayachiken (~yayachike@host-115-67.kawo1.rwth-aachen.de) has joined ##c++
2014-10-11 17:19:51	o11c	ObjectiveMatt: it's quite strange for your template parameter to shadow the name of a real class
2014-10-11 17:19:52	ApEk	!give ObjectiveMatt ggl site:stackoverflow.com c++ template definition
2014-10-11 17:19:54	nolyc	ObjectiveMatt: http://stackoverflow.com/questions/115703/storing-c-template-function-definitions-in-a-cpp-file
2014-10-11 17:19:55	o11c	also, !not a testcase
2014-10-11 17:20:05	o11c	ApEk: this is all in a header
2014-10-11 17:20:40	ObjectiveMatt	yeah I suppose that is strange
2014-10-11 17:21:12	o11c	ObjectiveMatt: once I cat the .tem file onto the .hpp file, the only errors I get are for missing headers afaics
2014-10-11 17:21:14	o11c	!testcase
2014-10-11 17:21:15	nolyc	A testcase is the _least_ amount of code that explains your problem, paste it to http://ideone.com and give us the link. Do _not_ paste to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2014-10-11 17:21:21	ObjectiveMatt	as far as i cs?
2014-10-11 17:21:25		hell_razer (~textual@host-176-38-97-10.la.net.ua) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-10-11 17:21:30		Betal (~Beta@unaffiliated/betal) has joined ##c++
2014-10-11 17:21:47	ObjectiveMatt	as far as i can see?
2014-10-11 17:22:23		BlaXpirit (~blaxpirit@115-5-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-10-11 17:22:24	o11c	right
2014-10-11 17:22:29		Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-10-11 17:22:40	o11c	I'm not going to fix your testcase for you, that's your job
2014-10-11 17:22:48	ObjectiveMatt	http://postimg.org/image/b4c46mbj7/
2014-10-11 17:22:55	ObjectiveMatt	http://postimg.org/image/nk8u0d4v7/
2014-10-11 17:22:58	ObjectiveMatt	those are my errors
2014-10-11 17:24:32		BlaXpirit (~blaxpirit@115-5-132-95.pool.ukrtel.net) has joined ##c++
2014-10-11 17:25:20	hs_	i'm guessing those errors are just your ide's way of saying "wtf is this .tem thing?"
2014-10-11 17:25:33	ObjectiveMatt	haha
2014-10-11 17:25:44	ObjectiveMatt	that could be, right now the entire file is gray
2014-10-11 17:25:45	hs_	since it has no #includes or forwards
2014-10-11 17:25:54	hs_	and probably unknown type
2014-10-11 17:25:57	ObjectiveMatt	am I doing something wrong?
2014-10-11 17:26:03	ObjectiveMatt	is .tem not a standard thing?
2014-10-11 17:26:08	hs_	not really
2014-10-11 17:26:26	ObjectiveMatt	not really to which question
2014-10-11 17:26:34	hs_	not really a standard thing
2014-10-11 17:26:44	hs_	but that's just an ide issue; it should compile just fine
2014-10-11 17:26:55	ObjectiveMatt	i mean it's putting red errors in all the grayed out code
2014-10-11 17:26:59	ObjectiveMatt	which is really irritating me
2014-10-11 17:27:01	ObjectiveMatt	will not build
2014-10-11 17:27:01	hs_	if you want it to light up properly in your ide just put your code in the .h file
2014-10-11 17:27:52	hs_	well, separate those two kinds of errors: ide errors vs compilation errors
2014-10-11 17:28:08		ASHER1 (~user@unaffiliated/asher1) has joined ##c++
2014-10-11 17:28:10		fstd (~fstd@unaffiliated/fisted) has quit (Ping timeout: 246 seconds)
2014-10-11 17:28:15	ObjectiveMatt	right
2014-10-11 17:28:26		Tectu (~Tectu@78-167.60-188.cust.bluewin.ch) has joined ##c++
2014-10-11 17:28:55	ObjectiveMatt	i feel like for some reason the ide is not seeing the closing parenthesis
2014-10-11 17:29:31	ObjectiveMatt	also, what about the erros in my header
2014-10-11 17:29:42	ObjectiveMatt	in the first pic
2014-10-11 17:30:47		glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2014-10-11 17:30:49	Erlkoenig	this. is wrong, it has to be this->
2014-10-11 17:31:01	Erlkoenig	despite looking like Java, C++ is in fact not Java :P
2014-10-11 17:33:40	o11c	ObjectiveMatt: .tcc is the only semi-standard extensions I've seen for template definitions
2014-10-11 17:33:58	ObjectiveMatt	haha
2014-10-11 17:34:01	ObjectiveMatt	erlkoenig.
2014-10-11 17:34:02		Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has joined ##c++
2014-10-11 17:34:14	ObjectiveMatt	my teach says .tem for some reason =-\
2014-10-11 17:34:24	moonchild	Erlkoenig: thank god, and you have it wrong, java looks like c++
2014-10-11 17:34:28		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-10-11 17:34:31	Erlkoenig	huehue
2014-10-11 17:34:49	Erlkoenig	so close yet so different
2014-10-11 17:35:03	--	irc: disconnected from server
2014-10-11 18:31:26		dagnachew (~dagnachew@bas1-montreal30-2925417210.dsl.bell.ca) has joined ##c++
2014-10-11 18:31:26	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-11 18:31:26	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-11 18:31:26	--	Channel ##c++: 537 nicks (0 ops, 0 voices, 537 normals)
2014-10-11 18:31:26	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-11 18:31:29	Erlkoenig	and we could actually see what's wrong
2014-10-11 18:31:32	ObjectiveMatt	xcode is so good at doing c++ haha
2014-10-11 18:31:34	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-11 18:31:45	ObjectiveMatt	you miss a template thing
2014-10-11 18:31:51	ObjectiveMatt	and it says hey parenthesis error
2014-10-11 18:32:13	moonchild	xcode sucks in that it makes c++ almost too easy to write, so easy to not think
2014-10-11 18:32:28	ObjectiveMatt	well without Foo.h, there is no GREATER EQUAL LESS enum
2014-10-11 18:32:46	ObjectiveMatt	so without this itemtype
2014-10-11 18:32:48	Erlkoenig	then move that enum into the file, it's just one line anyway
2014-10-11 18:32:55	ObjectiveMatt	k
2014-10-11 18:33:27	juliohm	moonchild, we need to pass the type to make_shared?
2014-10-11 18:33:36	juliohm	It cant be inferred from the argument?
2014-10-11 18:33:56	moonchild	juliohm: it cannot
2014-10-11 18:33:57	Erlkoenig	also, such an enum is rather unusual. Most "compare" kind of functions just return an int, with it < 0 meaning "less", = 0 meaning "equal", > 0 meaning "greater"
2014-10-11 18:34:03	juliohm	moonchild, why not?
2014-10-11 18:34:19	moonchild	juliohm: think shared_ptr<Base> p(new derived)
2014-10-11 18:34:22	Erlkoenig	because that's exactly what the "r" in { int a, b, r;  r = a - b; }  means when you would compare "a" and "b"...
2014-10-11 18:34:38	ObjectiveMatt	I may have simply mistyped that
2014-10-11 18:34:54	juliohm	moonchild, what about the case where we know the pointer is of the correct type already?
2014-10-11 18:35:02	juliohm	(previous dynamic_cast)
2014-10-11 18:35:23	juliohm	can we do the dynamic_cast directly with make_shared?
2014-10-11 18:35:36	ObjectiveMatt	you see the line     if ((listData->info.ComparedTo(item) == LESS) {
2014-10-11 18:35:36	juliohm	oh, I don't think it's the same thing
2014-10-11 18:35:42	moonchild	should that case limit the use of it in cases where you'd want something else?
2014-10-11 18:35:48	ObjectiveMatt	inside of the function PutItem?
2014-10-11 18:36:08	juliohm	moonchild, of course not
2014-10-11 18:36:12	ObjectiveMatt	the book has that line verbatim if((listData->info.ComparedTo(item)--LESS
2014-10-11 18:36:14	juliohm	moonchild, but templates work like that, no?
2014-10-11 18:36:21	ObjectiveMatt	the opening brace { on the next line
2014-10-11 18:36:30	juliohm	template<typename T> func(T arg);
2014-10-11 18:36:34	ObjectiveMatt	but I assumed it meant "==" rather than "--"
2014-10-11 18:36:38	juliohm	if we pass func(2), T is int
2014-10-11 18:36:45	moonchild	anyway, make_shared<foo>(some_ptr_type p) shouldn't derive the return type from p
2014-10-11 18:36:52	juliohm	if we say func<double>(2) we are explicit
2014-10-11 18:37:06	juliohm	I think it should work
2014-10-11 18:37:15	juliohm	even when we do not provide the type
2014-10-11 18:37:26	juliohm	hmmm
2014-10-11 18:37:29	Erlkoenig	ObjectiveMatt: if only book authors would actually compile their example codes
2014-10-11 18:37:31	juliohm	understand, only for pointer types
2014-10-11 18:37:37	ObjectiveMatt	that's completely ridiculous
2014-10-11 18:37:40	Erlkoenig	that's why there are in fact very few good books
2014-10-11 18:37:45	ObjectiveMatt	it's a textbook it needs way the hell less typos
2014-10-11 18:37:52	ObjectiveMatt	and a place where you can actually access the code
2014-10-11 18:37:56	moonchild	juliohm: also, cv-qualifiers
2014-10-11 18:38:02	juliohm	moonchild, you're saying make_shared doesn't have type deduction for pointers?
2014-10-11 18:38:31	juliohm	I need to review C++ at some point
2014-10-11 18:38:41	juliohm	too much time programming in other languages
2014-10-11 18:38:46	juliohm	(productive languages)
2014-10-11 18:38:59		K-ballo (~sonoio@181.228.59.173) has joined ##c++
2014-10-11 18:39:12	moonchild	oh, i know why
2014-10-11 18:39:14		stelvin (~stelvin@gateway/tor-sasl/stelvin) has joined ##c++
2014-10-11 18:39:38	moonchild	template< class T, class... Args > shared_ptr<T> make_shared( Args&&... args ); <- variadic construction
2014-10-11 18:41:08		geordi (~geordi@vps38193.public.cloudvps.com) has quit (Remote host closed the connection)
2014-10-11 18:41:08		Eelis (~Eelis@unaffiliated/eelis) has quit (Read error: Connection reset by peer)
2014-10-11 18:41:19	moonchild	that's the answer :)
2014-10-11 18:43:00	juliohm	moonchild, why the variadic interferes?
2014-10-11 18:43:16	juliohm	What is the best way to wrap an existent raw pointer into shared_ptr and return?
2014-10-11 18:43:31	juliohm	return shared_ptr<Foo>(ptr);
2014-10-11 18:43:40	moonchild	auto p = make_shared<vector<int>>({1, 2, 3, 4});
2014-10-11 18:44:02	ObjectiveMatt	so what's with this?
2014-10-11 18:44:02	ObjectiveMatt	http://ideone.com/XLQbWf
2014-10-11 18:44:14	juliohm	moonchild, let me show you the code
2014-10-11 18:44:27	ObjectiveMatt	compiler error line 30
2014-10-11 18:45:05	Erlkoenig	maybe missed an #include for stringstream
2014-10-11 18:45:11	moonchild	the idea is, juliohm, make_shared can take the place of 'new type(some, random, list, of, args)'
2014-10-11 18:45:40	juliohm	{func();} struct Foo {}; shared_ptr<Foo> func() { Foo* ptr = new Foo; return make_shared(ptr); }
2014-10-11 18:45:49	juliohm	moonchild, ^
2014-10-11 18:46:01		King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has quit (Ping timeout: 272 seconds)
2014-10-11 18:46:05	juliohm	this code is not compiling
2014-10-11 18:46:08	juliohm	where is geordi?
2014-10-11 18:46:36	juliohm	I have a ptr to Foo already
2014-10-11 18:46:44	juliohm	and want to wrap it
2014-10-11 18:46:49	moonchild	so... shared_ptr<Foo> func() { auto ptr = make_shared<Foo>(); return ptr; }
2014-10-11 18:47:19	ObjectiveMatt	Erlkoenig
2014-10-11 18:47:29	juliohm	moonchild, but the pointer is already in the code as the result of a dynamic_cast<>
2014-10-11 18:47:30	ObjectiveMatt	I was thinking it's weird that they make ItemType generic and took out the class Foo
2014-10-11 18:47:42	juliohm	moonchild, I cannot call make_shared to create it
2014-10-11 18:47:42	ObjectiveMatt	because the class Foo and Set are codependent
2014-10-11 18:47:44	moonchild	juliohm: then change the code
2014-10-11 18:47:46	ObjectiveMatt	coupled
2014-10-11 18:47:50	Erlkoenig	wtf is Int
2014-10-11 18:48:04	Erlkoenig	no, they are completely independant after making NodeType a template
2014-10-11 18:48:07	ObjectiveMatt	because the PutItem uses Foo's member function ComparedTo
2014-10-11 18:48:24		Palando (~palando@dslb-094-222-187-190.094.222.pools.vodafone-ip.de) has quit (Quit: Konversation terminated!)
2014-10-11 18:48:27	ObjectiveMatt	And I renamed Foo to Int, because that's the value being used in the assignment
2014-10-11 18:48:33	ObjectiveMatt	The set will be a set of integers
2014-10-11 18:48:40	ObjectiveMatt	you know what I mean?
2014-10-11 18:48:52	ObjectiveMatt	if itemtype is generic, how does it know that itemtype implements ComparedTo
2014-10-11 18:49:08	Sausage	raw pointer to shared pointer isn't make_shared's job. Just do  return shared_ptr<T>(ptr);
2014-10-11 18:49:41	Erlkoenig	it doesn't need to
2014-10-11 18:49:53	ObjectiveMatt	well what if itemtype does not implement compared to
2014-10-11 18:50:01	Erlkoenig	then you get a compiler error
2014-10-11 18:50:01	juliohm	moonchild, I'll try
2014-10-11 18:50:01		realtime (~realtime@unaffiliated/realtime) has quit (Read error: Connection reset by peer)
2014-10-11 18:50:08	Erlkoenig	it uses the CompareTo function of the ItemType class, no matter what ItemType is
2014-10-11 18:50:14	ObjectiveMatt	k..
2014-10-11 18:50:30	Erlkoenig	PutItem uses "ItemType"'s .ComparedTo function and has nothing to do with "Foo"
2014-10-11 18:50:37	ObjectiveMatt	anyhow I need to include what for stringstream
2014-10-11 18:50:48		vl4kn0 (~vl4kn0@85-135-199-208.bsa.slovanet.sk) has joined ##c++
2014-10-11 18:50:49		realtime (~realtime@unaffiliated/realtime) has joined ##c++
2014-10-11 18:51:16	moonchild	ok, question
2014-10-11 18:51:18	juliohm	moonchild, suppose I have a shared_ptr<Foo> and want a shared_ptr<Bar>, how to achieve that? Currently the code is doing dynamic_cast<Bar>
2014-10-11 18:51:22	ObjectiveMatt	sstream apparently
2014-10-11 18:51:26	juliohm	if you have a solution for that, I'm done
2014-10-11 18:51:37	Erlkoenig	ObjectiveMatt: http://en.cppreference.com/w/cpp/io/basic_stringstream
2014-10-11 18:51:38	moonchild	codecvt_utf8... when the generate_header flag is used on it...
2014-10-11 18:51:54	juliohm	moonchild, dynamic_cast<Bar*> with ptr.get() I mean
2014-10-11 18:52:11	moonchild	should it output a bom once per do_out() call, or once at the first do_out() call?
2014-10-11 18:52:38	juliohm	The only thing that this mess function is doing is taking a shared_ptr<Foo>, checking if it is valid and returning a shared_ptr<Bar>
2014-10-11 18:52:41	juliohm	moonchild,
2014-10-11 18:52:45	moonchild	juliohm: you want a shared_ptr to the base
2014-10-11 18:52:57	Sausage	There's shared_dynamic_cast
2014-10-11 18:53:02	juliohm	the classes are not related
2014-10-11 18:53:04	juliohm	somehow
2014-10-11 18:53:15	juliohm	they don't have inheritance with each other
2014-10-11 18:53:25	Sausage	Nevermind that was a boostism
2014-10-11 18:53:25	moonchild	also: http://en.cppreference.com/w/cpp/memory/shared_ptr/pointer_cast
2014-10-11 18:53:25	juliohm	is it possible to have dynamic_cast<> in this case?
2014-10-11 18:54:08	juliohm	that is exactly what i need
2014-10-11 18:54:14	moonchild	but.... dynamic cast doesn't work on things unrelated
2014-10-11 18:54:18	juliohm	except that I'm using boost::shared_ptr :/
2014-10-11 18:54:40	moonchild	i.e. if (is_base_of<T, U>::value != true)
2014-10-11 18:54:53	moonchild	yeah, well, boost sucks
2014-10-11 18:55:14	juliohm	yeah!
2014-10-11 18:55:19	juliohm	they are realted
2014-10-11 18:55:30	juliohm	just my VIM hacks pointing me to the wrong definition
2014-10-11 18:55:48	juliohm	the dynamic_cast<> is from base to derived
2014-10-11 18:56:08	moonchild	a normal assignment would work in that case
2014-10-11 18:56:10		PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Quit: ChatZilla 0.9.91 [Firefox 32.0.3/20140923175406])
2014-10-11 18:56:21		deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-10-11 18:56:36	moonchild	err, n/m, read that backward
2014-10-11 18:56:52	juliohm	so if I have a shared_ptr<Base> how to return a shared_ptr<Derived>?
2014-10-11 18:56:58	juliohm	using Boost
2014-10-11 18:57:29	juliohm	I really need to go inside and take the ptr.get()?
2014-10-11 18:57:38	juliohm	do the dynamic_cast and wrap back?
2014-10-11 18:57:52		The_Coolest (~Arthur_Li@bzq-79-177-137-46.red.bezeqint.net) has quit (Ping timeout: 260 seconds)
2014-10-11 18:58:03	K-ballo	!stdref dynamic_pointer_cast
2014-10-11 18:58:04	nolyc	http://en.cppreference.com/w/cpp/memory/shared_ptr/pointer_cast
2014-10-11 18:58:45	Sausage	Boost has those as well...
2014-10-11 18:59:03	juliohm	Sausage, I'll check the headers, thanks
2014-10-11 18:59:14	Sausage	Why not check the documentation instead
2014-10-11 18:59:26	Sausage	http://www.boost.org/doc/libs/1_56_0/libs/smart_ptr/shared_ptr.htm
2014-10-11 18:59:30		stelvin (~stelvin@gateway/tor-sasl/stelvin) has quit (Remote host closed the connection)
2014-10-11 18:59:49		stelvin (~stelvin@gateway/tor-sasl/stelvin) has joined ##c++
2014-10-11 19:00:11	juliohm	you're awesome :)
2014-10-11 19:01:52		Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has quit (Quit: ZNC - http://znc.sourceforge.net)
2014-10-11 19:02:40		The_Coolest (~Arthur_Li@bzq-79-177-139-235.red.bezeqint.net) has joined ##c++
2014-10-11 19:02:52	ObjectiveMatt	http://ideone.com/jBpJrC
2014-10-11 19:03:06	ObjectiveMatt	how do I use a generic set for each of the three cases
2014-10-11 19:03:28	ObjectiveMatt	sort of like get the pointer to whatever set was created
2014-10-11 19:04:10	moonchild	anyone ever try wiostreams in gcc?
2014-10-11 19:04:17	tsimpson	what are you doing/trying to do?
2014-10-11 19:04:44		ironhoof (~ironhoof@184-156-49-150.dyn.centurytel.net) has joined ##c++
2014-10-11 19:04:54	moonchild	i'm looking at the definition of codecvt<wchar_t, char, mbstate_t> in libstdc++, and it looks like it leaves do_in & do_out unimplemented
2014-10-11 19:04:54	tsimpson	{ wcout << L"Hello Wide World"; }
2014-10-11 19:04:59	tsimpson	clang: { wcout << L"Hello Wide World"; }
2014-10-11 19:05:02	clang	Hello Wide World
2014-10-11 19:05:24	ObjectiveMatt	http://ideone.com/vM2gv7
2014-10-11 19:05:24	tsimpson	moonchild: they're implemented in the library
2014-10-11 19:05:27	ObjectiveMatt	sorry, if I do this
2014-10-11 19:05:40	moonchild	tsimpson: I'm looking at the implementation file :)
2014-10-11 19:05:49	ObjectiveMatt	then will I be able to modify set in the rest of the code, after the switch, and then A B and C will retain the changes
2014-10-11 19:05:55	ObjectiveMatt	point to the same set?
2014-10-11 19:06:14	ironhoof	im getting no matching function calls for the constructors, I am new to this polymorphism area: http://pastebin.com/wzG02WkF
2014-10-11 19:06:28		biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has quit (Remote host closed the connection)
2014-10-11 19:08:12		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-10-11 19:09:49	ironhoof	keeps pointing out no matching function call for kframes::frame::frame() which is a constructor...
2014-10-11 19:09:59	davek	Is anyone using boost::mpi successfully or is it ultimately fruitless to resist the use of the C bindings?
2014-10-11 19:11:29		destenson (~destenson@wsip-70-167-188-130.sd.sd.cox.net) has quit (Ping timeout: 260 seconds)
2014-10-11 19:12:34		D0cN3x (~Thunderbi@dslb-178-007-216-171.178.007.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2014-10-11 19:12:49		D0cN3x (~Thunderbi@dslb-178-007-216-171.178.007.pools.vodafone-ip.de) has joined ##c++
2014-10-11 19:13:06	ObjectiveMatt	Erlkoenig
2014-10-11 19:13:24	ObjectiveMatt	For example, if Set does not know about Foo
2014-10-11 19:13:32	ObjectiveMatt	how does it know about the enum GREATER LESS EQUAL
2014-10-11 19:13:41	tsimpson	moonchild: http://ideone.com/f0CQCH seems to work, so they must be implemented somewhere
2014-10-11 19:13:41	ObjectiveMatt	I put the enum at the top of Set
2014-10-11 19:13:49	ObjectiveMatt	but then Foo.h is a redefinition of it
2014-10-11 19:13:56	Erlkoenig	remove it from Foo.h
2014-10-11 19:14:09	Erlkoenig	the enum is directly used in Set, so it belongs into the Set header file
2014-10-11 19:14:20		notpara (~para@213.187.75.26) has quit (Remote host closed the connection)
2014-10-11 19:14:31	Erlkoenig	any class that could be placed inside the Set, like Foo, should #include the Set header and use that enum
2014-10-11 19:14:42		PSG_Luna (~PSG_Luna@unaffiliated/psg-luna/x-4025268) has quit (Read error: Connection reset by peer)
2014-10-11 19:14:52		notpara (~para@213.187.75.26) has joined ##c++
2014-10-11 19:15:15	ObjectiveMatt	I feel like this is strange design
2014-10-11 19:15:25	ObjectiveMatt	cool the project actually built
2014-10-11 19:15:26		notpara (~para@213.187.75.26) has quit (Remote host closed the connection)
2014-10-11 19:15:50		micom (~micom@unaffiliated/micom) has quit (Remote host closed the connection)
2014-10-11 19:16:17		notpara (~para@213.187.75.26) has joined ##c++
2014-10-11 19:18:22		shintah (bebble@h-140-107.a336.priv.bahnhof.se) has quit (Read error: Connection reset by peer)
2014-10-11 19:18:24	Erlkoenig	sounds like usual design
2014-10-11 19:20:05		devbug (~quassel@d108-180-247-142.bchsia.telus.net) has joined ##c++
2014-10-11 19:21:18		IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has quit (Quit: Leaving)
2014-10-11 19:21:23		stelvin (~stelvin@gateway/tor-sasl/stelvin) has quit (Ping timeout: 264 seconds)
2014-10-11 19:21:57	ObjectiveMatt	so now my issue is
2014-10-11 19:22:02	ObjectiveMatt	when I try to put an item into an empty list
2014-10-11 19:22:19	ObjectiveMatt	my code crashes in PutItem at     if (listData->info.ComparedTo(item) == LESS) {
2014-10-11 19:22:31	ObjectiveMatt	because it tries to compare with a null Item I believe
2014-10-11 19:22:51		Dacia (~make@unaffiliated/bryeware) has left ##c++ ("Ta")
2014-10-11 19:24:35		Andy-chan (~Andy-chan@xdsl-84-44-174-19.netcologne.de) has joined ##c++
2014-10-11 19:24:39	BinaryAddicted	have you code?
2014-10-11 19:24:47		Joyd (~make@unaffiliated/bryeware) has joined ##c++
2014-10-11 19:25:56	ObjectiveMatt	Erlkoenig does I believe haha
2014-10-11 19:26:31	Erlkoenig	well then, get a debugger...
2014-10-11 19:26:43	ObjectiveMatt	what for
2014-10-11 19:26:45	ObjectiveMatt	I am using a debugger
2014-10-11 19:27:56	BinaryAddicted	can you put any code snippets to figure out whats wrong with your code
2014-10-11 19:28:06	BinaryAddicted	ideone.com
2014-10-11 19:28:09	BinaryAddicted	for example
2014-10-11 19:28:35		deekej (~deekej@195.65.3.245) has quit (Ping timeout: 246 seconds)
2014-10-11 19:28:36	Erlkoenig	for determining the reason for the crash.
2014-10-11 19:29:35		BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has quit
2014-10-11 19:30:09	ObjectiveMatt	yea sure
2014-10-11 19:32:08	ObjectiveMatt	http://ideone.com/rEE2fH http://ideone.com/kw8do2 http://ideone.com/adDC0E http://ideone.com/GsAmq8 http://ideone.com/kFsdsh
2014-10-11 19:32:25	ObjectiveMatt	that is main.cpp Set.h Set.tem Int.h Int.cpp
2014-10-11 19:32:27	ObjectiveMatt	respectively
2014-10-11 19:33:00	ObjectiveMatt	I crash at main's set->PutItem(*temp); line
2014-10-11 19:33:23	ObjectiveMatt	in Set.tem's     if (listData->info.ComparedTo(item) == LESS) { line
2014-10-11 19:33:32	ObjectiveMatt	because listData is initially pointing to NULL I believe
2014-10-11 19:34:45	Erlkoenig	easy enough to check.
2014-10-11 19:35:55	ObjectiveMatt	k, so?
2014-10-11 19:36:32		robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-10-11 19:36:48		robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Remote host closed the connection)
2014-10-11 19:38:14		kadoban_ (~kadoban@ip68-3-86-107.ph.ph.cox.net) has joined ##c++
2014-10-11 19:38:46		robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-10-11 19:40:34		arescorpio (~arescorpi@190.190.244.100) has joined ##c++
2014-10-11 19:40:48		kadoban (~kadoban@ip68-3-86-107.ph.ph.cox.net) has quit (Ping timeout: 245 seconds)
2014-10-11 19:41:28		deekej (~deekej@195.65.3.245) has joined ##c++
2014-10-11 19:41:48		Andy-chan (~Andy-chan@xdsl-84-44-174-19.netcologne.de) has quit (Ping timeout: 240 seconds)
2014-10-11 19:44:01		rszn` (~rszn`@unafiliated/rszn-/x-38475634) has quit (Read error: Connection reset by peer)
2014-10-11 19:46:44		deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-10-11 19:47:09		dardevelin (~dardeveli@a95-95-29-159.cpe.netcabo.pt) has joined ##c++
2014-10-11 19:48:32	ironhoof	nvm, I figured my problem out with frame() {} constructor.. bit confused by that, but ok.
2014-10-11 19:49:21		jitsuin (~chatzilla@cpe-23-243-174-121.socal.res.rr.com) has joined ##c++
2014-10-11 19:50:25		stelvin (~stelvin@gateway/tor-sasl/stelvin) has joined ##c++
2014-10-11 19:50:37		deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-10-11 19:51:07		rival (rival@unaffiliated/rival) has joined ##c++
2014-10-11 19:51:41	BinaryAddicted	ObjectiveMatt: how do you destroy the allocated memory for 'temp' in your loop? you always allocate memory to the same object if my tired eyes don't lie to me
2014-10-11 19:51:56	ObjectiveMatt	what loop what file
2014-10-11 19:52:08	BinaryAddicted	the main file in the while loop
2014-10-11 19:52:20	BinaryAddicted	Int* temp = new Int();
2014-10-11 19:52:26	BinaryAddicted	everytime the same call
2014-10-11 19:53:00	BinaryAddicted	by the way: what is the error you get, after running the application?
2014-10-11 19:53:15	ObjectiveMatt	BAD_EXC_ACCESS
2014-10-11 19:53:18	ObjectiveMatt	it's like a bad memory deal
2014-10-11 19:53:31	ObjectiveMatt	I believe it's because I try to compareTo on a null object
2014-10-11 19:54:00		robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Quit: Konversation terminated!)
2014-10-11 19:54:06		K3|Chris (~ChrisK3@unaffiliated/krill3) has quit (Remote host closed the connection)
2014-10-11 19:54:10	BinaryAddicted	I guess it's because allocate memory to a object in this loop and after the new loop begins, it allocates memory to an existing object
2014-10-11 19:54:37	ObjectiveMatt	what, you think it's because of an error related to temp?
2014-10-11 19:54:45	BinaryAddicted	yes
2014-10-11 19:54:55	ObjectiveMatt	it crashes on the first loop
2014-10-11 19:54:57	ObjectiveMatt	have you not ran it?
2014-10-11 19:55:15	BinaryAddicted	no, can't at the moment
2014-10-11 19:55:31	BinaryAddicted	hold on... putting it into my ide. is that all code?
2014-10-11 19:55:32		vinleod (~vinleod@198.0.42.83) has joined ##c++
2014-10-11 19:55:46	ObjectiveMatt	yes
2014-10-11 19:55:48	ObjectiveMatt	5 files
2014-10-11 19:55:48	BinaryAddicted	i mean, the complete
2014-10-11 19:55:50	BinaryAddicted	okay
2014-10-11 19:55:56	davek	Is there no mechanism in C++11 for typed variadic functions? I.e. Function f can take one or more parameters of a known type T?
2014-10-11 19:56:42	davek	It seems, from a brief search, that the only solutions are template variadism + unpacking (which I suppose I can enforce type restrictions on via SFINAE) and good ol' C-style function variadics.
2014-10-11 19:58:13		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-10-11 19:58:23		snyp (~snyp@150.129.132.7) has joined ##c++
2014-10-11 19:58:44	ObjectiveMatt	I'm gonna go somewhere for a sec
2014-10-11 19:58:58		fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-10-11 19:59:19		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-10-11 20:02:11		srcspider (~sety@79.115.90.136) has quit (Quit: Leaving)
2014-10-11 20:02:16		IWishIKnew (~IWishIKne@ip68-224-135-32.lv.lv.cox.net) has joined ##c++
2014-10-11 20:04:52		halim (~halim@unaffiliated/halim) has quit (Quit: Leaving)
2014-10-11 20:05:19		phao (~phao@179-197-110-41.user.veloxzone.com.br) has quit (Ping timeout: 240 seconds)
2014-10-11 20:05:20		schleppel (~quassel@141.39.226.237) has quit (Read error: Connection reset by peer)
2014-10-11 20:09:44		ObjectiveMatt (~Objective@66.87.151.2) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-11 20:13:10		nfk (~nfk@unaffiliated/nfk) has quit (Quit: yawn)
2014-10-11 20:13:59		nfk (~nfk@unaffiliated/nfk) has joined ##c++
2014-10-11 20:14:50		Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has quit (Read error: Connection reset by peer)
2014-10-11 20:18:50	wallbroken	buffResto.seekg(0);
2014-10-11 20:18:50	wallbroken	buffResto << NULL;
2014-10-11 20:18:56	wallbroken	i'm trying to make it work
2014-10-11 20:19:09	wallbroken	i need to erease the content of a file
2014-10-11 20:19:17		syncrow (syncrow@unaffiliated/syncrow) has quit (Quit: Lost terminal)
2014-10-11 20:20:50		D0cN3x (~Thunderbi@dslb-178-007-216-171.178.007.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2014-10-11 20:21:05		D0cN3x (~Thunderbi@dslb-178-007-216-171.178.007.pools.vodafone-ip.de) has joined ##c++
2014-10-11 20:22:36		m0shbear (~011899988@servbox.moshbear.net) has joined ##c++
2014-10-11 20:25:10		BlaXpirit-UA (~blaxpirit@80-53-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-10-11 20:27:15		Nando_k (~Nando_k@dslb-178-003-079-002.178.003.pools.vodafone-ip.de) has quit (Ping timeout: 276 seconds)
2014-10-11 20:27:48		plitter (~plitter@84.48.49.52) has quit (Read error: Connection reset by peer)
2014-10-11 20:29:07		plitter (~plitter@84.48.49.52) has joined ##c++
2014-10-11 20:30:45		The_Coolest (~Arthur_Li@bzq-79-177-139-235.red.bezeqint.net) has quit (Quit: FOLD For The Cause!!!)
2014-10-11 20:32:41		irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has quit (Quit: Lost terminal)
2014-10-11 20:34:55		juliohm (~julio@unaffiliated/juliohm) has quit (Quit: Leaving)
2014-10-11 20:36:38		Malsasa (~Malsasa@36.73.222.178) has quit (Ping timeout: 245 seconds)
2014-10-11 20:37:50	TommyC	Curious, do you guys generally use throw/catch/try versus a die macro/function?
2014-10-11 20:37:55		jhao (~user@207-237-52-187.c3-0.elm-ubr1.qens-elm.ny.cable.rcn.com) has joined ##c++
2014-10-11 20:38:57		jhao (~user@207-237-52-187.c3-0.elm-ubr1.qens-elm.ny.cable.rcn.com) has quit (Remote host closed the connection)
2014-10-12 15:07:20		dagnachew (~dagnachew@bas1-montreal30-2925417210.dsl.bell.ca) has joined ##c++
2014-10-12 15:07:20	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-12 15:07:20	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-12 15:07:20	--	Channel ##c++: 561 nicks (0 ops, 0 voices, 561 normals)
2014-10-12 15:07:20	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-12 15:07:20		danmerz (~u931732@sloan0.ut.mephi.ru) has left ##c++
2014-10-12 15:07:21	darkerstar	why not use an atomic_flag? why count and not just flag?
2014-10-12 15:07:29	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-12 15:07:31	darkerstar	it can only be 0 or 1, after all
2014-10-12 15:07:51		lolek (~lolek@unaffiliated/marcin) has joined ##c++
2014-10-12 15:07:56		lolek (~lolek@unaffiliated/marcin) has left ##c++
2014-10-12 15:09:11	Sausage	Actually I'm triple dumb, it's allowed if you write  enum E : int  instead
2014-10-12 15:09:16	lh_mouse	void my_class::set_property(){ if(++number_of_objects_that_have_property > 1){ --number_of_objects_that_have_property; throw something_bad(); } do_set_property(); } // darkerstar
2014-10-12 15:09:31		herdinger (~herdinger@port-7068.pppoe.wtnet.de) has joined ##c++
2014-10-12 15:09:56	herdinger	Hey guy,  got a quick question. I'm trying to make sense of a template error.
2014-10-12 15:10:16	fps	lh_mouse: that would work. i completely disregarded static...
2014-10-12 15:10:23	BinaryAddicted	herdinger: go ahead
2014-10-12 15:10:25	darkerstar	yeah, but why not "static atomic_flag theres_an_object_with_property", then "if (theres_an_object_with_property.test_and_set()) throw something_bad;"?
2014-10-12 15:10:37	fps	that would work, too
2014-10-12 15:10:46	darkerstar	it would also be guaranteed lock-free
2014-10-12 15:10:52		QualityAddict (~Jason.Smi@ip68-102-62-117.ks.ok.cox.net) has joined ##c++
2014-10-12 15:10:52	herdinger	I got a const std::function<double(double)> as a member and want to initialize it with bind
2014-10-12 15:10:57	Sausage	Quadruple dumb, non-fixed enums still have a minimum value of at least zero
2014-10-12 15:11:03		FunkyAss (~Funky@unaffiliated/funkyass) has quit (Quit: Make my Funk the P-Funk)
2014-10-12 15:11:48		lh_mouse (~lh_mouse@101.86.91.98) has quit (Read error: Connection reset by peer)
2014-10-12 15:11:52	fps	thread safety is no requirement, luckily. i was just being stupid, not considering static..
2014-10-12 15:12:04	fps	also it wouldn't work if you have two collections of objects ;)
2014-10-12 15:12:26	fps	i have to think about that being a requirement though..
2014-10-12 15:12:53	darkerstar	yeah, you'd need a way to uniquely identify collections, then a map
2014-10-12 15:13:01		jfeltz (~beefcube@65-128-78-120.hlrn.qwest.net) has quit (Quit: Leaving)
2014-10-12 15:13:54	darkerstar	but honestly, if it's a property of the *collection* that it can only have one element in it with have_property set, then that should be something you deal with in the collection type, not the value type
2014-10-12 15:16:30	fps	true
2014-10-12 15:17:27		desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-10-12 15:18:11		xico (~xico@cpe-76-88-16-80.san.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-10-12 15:20:01	xiphiasx_	question
2014-10-12 15:20:05	xiphiasx_	what syntax is std::regex
2014-10-12 15:20:44		ObjectiveMatt (~Objective@66.87.151.190) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-12 15:20:50		paul424 (~chatzilla@91.207.69.217) has joined ##c++
2014-10-12 15:20:54		vol4ko (null@unaffiliated/vol4ko) has quit (Ping timeout: 250 seconds)
2014-10-12 15:21:10	darkerstar	xiphiasx_, there's a flag to select from like 3 or 4 options
2014-10-12 15:21:33		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-10-12 15:22:00	Sausage	There's ECMA and a few variations on POSIX
2014-10-12 15:22:32	xiphiasx_	i can choose ecma, basic, extended, awk, grep, and egrep
2014-10-12 15:22:36	xiphiasx_	i'm pretty sure awk uses PCRE
2014-10-12 15:22:39	xiphiasx_	i could be wrong though
2014-10-12 15:22:55	Sausage	It's "Modified ECMA" apparently =\
2014-10-12 15:23:09	xiphiasx_	sounds disgusting
2014-10-12 15:23:20	xiphiasx_	std::regex::extended is POSIX apparently
2014-10-12 15:24:04		FunkyAss (~Funky@unaffiliated/funkyass) has joined ##c++
2014-10-12 15:24:25	fps	what's the channel for more application oriented c++ discussion?
2014-10-12 15:24:36	Sausage	##c++-general
2014-10-12 15:24:40	fps	thanks
2014-10-12 15:25:49		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Ping timeout: 245 seconds)
2014-10-12 15:25:57	xiphiasx_	can't even use backspaces
2014-10-12 15:26:03	xiphiasx_	compiler treats it as an escape
2014-10-12 15:26:06	xiphiasx_	was to be expected i guess
2014-10-12 15:26:13	Sausage	Then escape the backslash?
2014-10-12 15:26:25	xiphiasx_	that works
2014-10-12 15:26:32	K-ballo	or use raw string literals
2014-10-12 15:26:55		wheals (~wheals@pool-96-241-216-117.washdc.fios.verizon.net) has quit (Ping timeout: 246 seconds)
2014-10-12 15:28:31	herdinger	I just realized I haven't actually asked a question, so why can't you init a functionobject with bind?
2014-10-12 15:28:34		Hannibal_Smith (~Hannibal_@host68-159-dynamic.6-87-r.retail.telecomitalia.it) has joined ##c++
2014-10-12 15:28:42		wheals (~wheals@pool-96-241-216-117.washdc.fios.verizon.net) has joined ##c++
2014-10-12 15:29:03		madist (madist@unaffiliated/madist) has quit (Quit: Leaving)
2014-10-12 15:29:47		FunkyAss (~Funky@unaffiliated/funkyass) has quit (Quit: Make my Funk the P-Funk)
2014-10-12 15:30:52		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has joined ##c++
2014-10-12 15:31:14	--	irc: disconnected from server
2014-10-12 15:31:34		dagnachew (~dagnachew@bas1-montreal30-2925417210.dsl.bell.ca) has joined ##c++
2014-10-12 15:31:34	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-12 15:31:34	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-12 15:31:34	--	Channel ##c++: 559 nicks (0 ops, 0 voices, 559 normals)
2014-10-12 15:31:35	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-12 15:31:39	K-ballo	herdinger: you can, testcase please
2014-10-12 15:31:49	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-12 15:31:51	M-ou-se	!testcase
2014-10-12 15:31:53	nolyc	A testcase is the _least_ amount of code that explains your problem, paste it to http://ideone.com and give us the link. Do _not_ paste to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2014-10-12 15:32:20	Sausage	clang { function<int(int,int)> f(add); auto g = bind(f, placeholders::_1, 100); cout << g(55); } int add(int a, int b) { return a + b; }
2014-10-12 15:32:23	clang	error: rvalue reference to type 'int (*)(int, int)' cannot bind to lvalue of type 'int (*)(int, int)'
2014-10-12 15:32:33	Sausage	I dunno what I broke with the std::function but, but pretty sure that works just fine
2014-10-12 15:32:53		ac_slater (~weechat@96.237.110.242) has joined ##c++
2014-10-12 15:35:17		pzp (uid11754@gateway/web/irccloud.com/x-dtkgynkgxgzkznza) has joined ##c++
2014-10-12 15:35:39	K-ballo	clang: cout << _LIBCPP_VERSION
2014-10-12 15:35:41	clang	error: unknown type name 'cout'
2014-10-12 15:35:50	K-ballo	clang: { cout << _LIBCPP_VERSION; }
2014-10-12 15:35:52	clang	1101
2014-10-12 15:38:20	herdinger	ok I'm a fool who didn't see he was using the wrong type signature all along
2014-10-12 15:42:07		scai (~scai@pD9EA66F8.dip0.t-ipconnect.de) has left ##c++ ("[IRSSI]")
2014-10-12 15:42:24		Jackneill (~Jackneill@unaffiliated/jackneill) has quit (Ping timeout: 245 seconds)
2014-10-12 15:44:21		nucc1 (~fanen@pdpc/supporter/student/nucc1) has joined ##c++
2014-10-12 15:46:05		ruler501 (~ruler@pool-71-252-174-45.dllstx.fios.verizon.net) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2014-10-12 15:46:30		xiliax (~ilia@78-83-56-246.spectrumnet.bg) has quit (Read error: Connection reset by peer)
2014-10-12 15:46:32		cbot` (~FS@ool-4355a0bf.dyn.optonline.net) has quit (Ping timeout: 255 seconds)
2014-10-12 15:46:52		clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Remote host closed the connection)
2014-10-12 15:47:17		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2014-10-12 15:48:00		Haswell (~Haswell@unaffiliated/haswell) has quit (Quit: Haswell)
2014-10-12 15:48:02		cbot` (~FS@ool-4355a0bf.dyn.optonline.net) has joined ##c++
2014-10-12 15:51:30		Sc0tty- (~Scottyyy@81.168.24.241) has quit
2014-10-12 15:52:09		herdinger (~herdinger@port-7068.pppoe.wtnet.de) has quit (Quit: leaving)
2014-10-12 15:53:03		DTSCode (ae861999@gateway/web/freenode/ip.174.134.25.153) has joined ##c++
2014-10-12 15:53:09		Andy-chan2 (~Andy-chan@xdsl-87-78-153-253.netcologne.de) has joined ##c++
2014-10-12 15:56:16		titanium17 (~titanium1@2604:6000:6440:2200:dc8b:d485:9f48:85) has joined ##c++
2014-10-12 15:56:45		sohail (~user@unaffiliated/sohail) has joined ##c++
2014-10-12 15:57:12		Pilum (~Pilum@2a02:1660:6207:c400:21f:3cff:fecc:cf50) has joined ##c++
2014-10-12 15:57:53		juliohm (~julio@unaffiliated/juliohm) has joined ##c++
2014-10-12 15:58:16	juliohm	about C++11 in-class member initialization, do they support brace syntax?
2014-10-12 15:58:30	Sausage	Yes, but you need to use the assignment-initialization syntax I think
2014-10-12 15:58:40	Sausage	int x = {};
2014-10-12 15:58:41	juliohm	{} class foo { int i {3}; };
2014-10-12 15:58:53	juliohm	oh, geordi is dead :/
2014-10-12 15:59:02	juliohm	Sausage, why we need the =?
2014-10-12 15:59:13	Sausage	int x{}; looks like a function definition I guess
2014-10-12 15:59:24	Sausage	clang { } class Foo { int x{3}; };
2014-10-12 15:59:27	clang	<no output>
2014-10-12 15:59:31	Sausage	Oh, I guess you don't need it
2014-10-12 15:59:35		nug700 (~nug700@184-98-173-4.phnx.qwest.net) has quit (*.net *.split)
2014-10-12 15:59:36		_petr (~petr@178.248.249.175) has quit (*.net *.split)
2014-10-12 15:59:36		basic6_ (~basic6@p4FCB42F1.dip0.t-ipconnect.de) has quit (*.net *.split)
2014-10-12 15:59:36		biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has quit (*.net *.split)
2014-10-12 15:59:36		neunon (znc@unaffiliated/neunon) has quit (*.net *.split)
2014-10-12 15:59:36		Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (*.net *.split)
2014-10-12 15:59:36		prc (~prc@host-2-97-67-71.as13285.net) has quit (*.net *.split)
2014-10-12 15:59:36		hodl (~csecoshi@h87.70.89.75.dynamic.ip.windstream.net) has quit (*.net *.split)
2014-10-12 15:59:37		yrter (~yrter@unaffiliated/yrter) has quit (*.net *.split)
2014-10-12 15:59:37		necrogami (~necrogami@unaffiliated/necrogami) has quit (*.net *.split)
2014-10-12 15:59:37		fzzy (~fzzy@melkinpaasi.cs.helsinki.fi) has quit (*.net *.split)
2014-10-12 15:59:37		HiggsPossum_ (~HiggsPoss@unaffiliated/higgspossum) has quit (*.net *.split)
2014-10-12 15:59:37		manny- (~manny-@191.233.71.39) has quit (*.net *.split)
2014-10-12 15:59:37		luny (~luny@unaffiliated/luny) has quit (*.net *.split)
2014-10-12 15:59:38		asmx (asmx@shell.uw-team.org) has quit (*.net *.split)
2014-10-12 15:59:38		Brando753 (~Brando753@unaffiliated/brando753) has quit (*.net *.split)
2014-10-12 15:59:38		Phlow (~Kiss@c-98-192-129-67.hsd1.fl.comcast.net) has quit (*.net *.split)
2014-10-12 15:59:38		mplang (~michael@192.81.214.135) has quit (*.net *.split)
2014-10-12 15:59:38		bolt (~r00t@unaffiliated/bolt) has quit (*.net *.split)
2014-10-12 15:59:38		martiert (~martin@220.37-191-147.fiber.lynet.no) has quit (*.net *.split)
2014-10-12 15:59:38		peterhu (~peterhuen@peterhuene.info) has quit (*.net *.split)
2014-10-12 15:59:38		o11c (~ben@unaffiliated/o11c) has quit (*.net *.split)
2014-10-12 15:59:38		Silex (~silex@188.226.176.246) has quit (*.net *.split)
2014-10-12 15:59:38		snzmn (~cashscam@freemoney.cashscam.biz) has quit (*.net *.split)
2014-10-12 15:59:39		huntercool (~huntercoo@5.231.48.129) has quit (*.net *.split)
2014-10-12 15:59:39		b_jonas (~x@russell2.math.bme.hu) has quit (*.net *.split)
2014-10-12 15:59:39		wto (~wto@h-141-69.a336.priv.bahnhof.se) has quit (*.net *.split)
2014-10-12 15:59:39		paracyst (qlpugbot@unaffiliated/paracyst) has quit (*.net *.split)
2014-10-12 15:59:39		ido (~ido@pdpc/supporter/student/ido) has quit (*.net *.split)
2014-10-12 15:59:39		ascheel (~ascheel@ampache/staff/ascheel) has quit (*.net *.split)
2014-10-12 15:59:39		wITTus (~wITTus@et-0-nat-4.gw-nat-a.spb.muc.de.oneandone.net) has quit (*.net *.split)
2014-10-12 15:59:39		dmatysiak (~daniel@a-chinaman.com) has quit (*.net *.split)
2014-10-12 15:59:39		TinoDidriksen (~TinoDidri@alpha.visl.sdu.dk) has quit (*.net *.split)
2014-10-12 15:59:40		rainforest (~see@gateway/tor-sasl/alexandrite) has quit (*.net *.split)
2014-10-12 15:59:40		tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has quit (*.net *.split)
2014-10-12 15:59:40		stelvin (~stelvin@gateway/tor-sasl/stelvin) has quit (*.net *.split)
2014-10-12 15:59:40		liberal (~rocketeer@gateway/tor-sasl/rocketeer) has quit (*.net *.split)
2014-10-12 15:59:40		only_the_bear (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has quit (*.net *.split)
2014-10-12 15:59:40		rfreeman_w (~rfreeman@gateway/tor-sasl/rfreemanw) has quit (*.net *.split)
2014-10-12 15:59:40		asakura0 (~asakura@gateway/tor-sasl/asakura) has quit (*.net *.split)
2014-10-12 15:59:40		BoredHam1 (~root@gateway/tor-sasl/boredhamster) has quit (*.net *.split)
2014-10-12 15:59:40		McMAGIC--Copy (~McMAGIC--@gateway/tor-sasl/mcmagic--copy) has quit (*.net *.split)
2014-10-12 15:59:40	juliohm	:)
2014-10-12 15:59:43		biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has joined ##c++
2014-10-12 15:59:44		b_jonas (~x@russell2.math.bme.hu) has joined ##c++
2014-10-12 15:59:52		wto (~wto@h-141-69.a336.priv.bahnhof.se) has joined ##c++
2014-10-12 15:59:54		dmatysiak (~daniel@a-chinaman.com) has joined ##c++
2014-10-12 15:59:55		Phlow (~Kiss@c-98-192-129-67.hsd1.fl.comcast.net) has joined ##c++
2014-10-12 15:59:59		paracyst (qlpugbot@unaffiliated/paracyst) has joined ##c++
2014-10-12 15:59:59		ascheel (~ascheel@ampache/staff/ascheel) has joined ##c++
2014-10-12 16:00:01		ido (~ido@pdpc/supporter/student/ido) has joined ##c++
2014-10-12 16:00:03		luny (~luny@unaffiliated/luny) has joined ##c++
2014-10-12 16:00:03		necrogami (~necrogami@unaffiliated/necrogami) has joined ##c++
2014-10-12 16:00:03		nug700 (~nug700@184-98-173-4.phnx.qwest.net) has joined ##c++
2014-10-12 16:00:03		HiggsPossum_ (~HiggsPoss@unaffiliated/higgspossum) has joined ##c++
2014-10-12 16:00:09		neunon (znc@unaffiliated/neunon) has joined ##c++
2014-10-12 16:00:18		hackkitten (~jigoku_ai@HSI-KBW-37-209-98-22.hsi15.kabel-badenwuerttemberg.de) has joined ##c++
2014-10-12 16:00:19		Silex (~silex@188.226.176.246) has joined ##c++
2014-10-12 16:00:20		Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-10-12 16:00:28	juliohm	clang { foo obj; cout << obj.x;} struct foo { int x{3}; }
2014-10-12 16:00:30	clang	error: expected ';' after struct (fix known)
2014-10-12 16:00:34	juliohm	?
2014-10-12 16:00:39		gaganjyot (~gaganjyot@124.253.225.90) has quit (Quit: Leaving)
2014-10-12 16:00:45	juliohm	what happened to clang?
2014-10-12 16:00:45	Sausage	It died apparently
2014-10-12 16:00:45		prc (~prc@host-2-97-67-71.as13285.net) has joined ##c++
2014-10-12 16:00:50	juliohm	ok
2014-10-12 16:01:12	juliohm	we are out of compiler bots
2014-10-12 16:01:21	juliohm	neither geordi nor clang
2014-10-12 16:01:21	K-ballo	clang is there
2014-10-12 16:01:31	K-ballo	clang: append ;
2014-10-12 16:01:33		sohail (~user@unaffiliated/sohail) has quit (Ping timeout: 260 seconds)
2014-10-12 16:01:33	clang	3
2014-10-12 16:01:36		o11c (~ben@unaffiliated/o11c) has joined ##c++
2014-10-12 16:01:48	Sausage	vs2010 << "Hello, world!";
2014-10-12 16:02:09	Sausage	There he is
2014-10-12 16:02:18		snyp (~snyp@150.129.132.114) has joined ##c++
2014-10-12 16:03:07	juliohm	:)
2014-10-12 16:03:13	Sausage	c++11 spec says brace-or-equal-initializer so I guess it's fine
2014-10-12 16:03:21	juliohm	what happens if we ommit the in-class initiatialization for a pointer member?
2014-10-12 16:03:33	Sausage	Then it's not initialized
2014-10-12 16:03:39	juliohm	it's assigned nullptr automatically?
2014-10-12 16:03:42	o11c	no
2014-10-12 16:03:44	juliohm	ok
2014-10-12 16:03:46	Sausage	Unless a constructor specifies a value
2014-10-12 16:03:46	o11c	it's assigned garbager
2014-10-12 16:03:53	o11c	except in a few cases
2014-10-12 16:03:59	o11c	e.g. static variables are zero-initialized
2014-10-12 16:04:05		ValicekB (~tbox@dot.snat.baz.cz) has quit (Ping timeout: 258 seconds)
2014-10-12 16:04:07		Brando753 (~Brando753@unaffiliated/brando753) has joined ##c++
2014-10-12 16:04:41		mplang (~michael@192.81.214.135) has joined ##c++
2014-10-12 16:04:42	DTSCode	can anyone help with this?
2014-10-12 16:04:48	DTSCode	http://paste.ubuntu.com/8548109/
2014-10-12 16:05:02		rainforest (~see@gateway/tor-sasl/alexandrite) has joined ##c++
2014-10-12 16:05:02		tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has joined ##c++
2014-10-12 16:05:02		stelvin (~stelvin@gateway/tor-sasl/stelvin) has joined ##c++
2014-10-12 16:05:02		liberal (~rocketeer@gateway/tor-sasl/rocketeer) has joined ##c++
2014-10-12 16:05:02		only_the_bear (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has joined ##c++
2014-10-12 16:05:02		rfreeman_w (~rfreeman@gateway/tor-sasl/rfreemanw) has joined ##c++
2014-10-12 16:05:02		BoredHam1 (~root@gateway/tor-sasl/boredhamster) has joined ##c++
2014-10-12 16:05:02		McMAGIC--Copy (~McMAGIC--@gateway/tor-sasl/mcmagic--copy) has joined ##c++
2014-10-12 16:05:04		yrter (~yrter@unaffiliated/yrter) has joined ##c++
2014-10-12 16:05:16		stelvin (~stelvin@gateway/tor-sasl/stelvin) has quit (Max SendQ exceeded)
2014-10-12 16:05:16		rfreeman_w (~rfreeman@gateway/tor-sasl/rfreemanw) has quit (Max SendQ exceeded)
2014-10-12 16:05:16		liberal (~rocketeer@gateway/tor-sasl/rocketeer) has quit (Max SendQ exceeded)
2014-10-12 16:05:16		only_the_bear (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has quit (Max SendQ exceeded)
2014-10-12 16:05:16		tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has quit (Max SendQ exceeded)
2014-10-12 16:05:16		McMAGIC--Copy (~McMAGIC--@gateway/tor-sasl/mcmagic--copy) has quit (Max SendQ exceeded)
2014-10-12 16:05:16	DTSCode	ooops sorry wrong channel
2014-10-12 16:05:38		stelvin (~stelvin@unaffiliated/arvent) has joined ##c++
2014-10-12 16:05:44		liberal (~rocketeer@unaffiliated/rocketeer) has joined ##c++
2014-10-12 16:05:54		tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has joined ##c++
2014-10-12 16:05:57	juliohm	this is haskell, off-topic
2014-10-12 16:06:07		only_the_bear (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has joined ##c++
2014-10-12 16:06:13		asakura0 (~asakura@gateway/tor-sasl/asakura) has joined ##c++
2014-10-12 16:06:21		wakd_ (~wakd@124.169.153.90) has quit (Ping timeout: 255 seconds)
2014-10-12 16:06:21	DTSCode	i know. i thought i was in a different channel
2014-10-12 16:06:34		McMAGIC--Copy (~McMAGIC--@gateway/tor-sasl/mcmagic--copy) has joined ##c++
2014-10-12 16:06:47	juliohm	it's somehow related though
2014-10-12 16:06:52	juliohm	you're trying to build geordi
2014-10-12 16:07:01		FunkyAss (~Funky@unaffiliated/funkyass) has joined ##c++
2014-10-12 16:07:03		rfreeman_w (~rfreeman@gateway/tor-sasl/rfreemanw) has joined ##c++
2014-10-12 16:07:03	juliohm	maybe you can ask in ##C++-general
2014-10-12 16:07:19	DTSCode	good point
2014-10-12 16:07:32	M-ou-se	Eelis is offline.
2014-10-12 16:07:40	M-ou-se	(and so is geordi)
2014-10-12 16:07:47	o11c	freenode is under attack I think
2014-10-12 16:07:51	M-ou-se	it always is.
2014-10-12 16:07:56	o11c	services have > 60 seconds lag
2014-10-12 16:08:03	DTSCode	not for me
2014-10-12 16:08:14		aphorise (~aphoriser@d97ac432.cm-3-3d.dynamic.ziggo.nl) has quit (Ping timeout: 276 seconds)
2014-10-12 16:08:48		deekej (~deekej@nat184.lu.usi.ch) has quit (Remote host closed the connection)
2014-10-12 16:09:20		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has joined ##c++
2014-10-12 16:09:30		ValicekB (~tbox@dot.snat.baz.cz) has joined ##c++
2014-10-12 16:09:51		vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has joined ##c++
2014-10-12 16:09:55		stealth`` (~stealth@p5B02D7CA.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2014-10-12 16:10:30	juliohm	I got a lot of people quiting the channel at once, something is happening for sure
2014-10-12 16:10:50		stelvin (~stelvin@unaffiliated/arvent) has quit (Changing host)
2014-10-12 16:10:50		stelvin (~stelvin@gateway/tor-sasl/stelvin) has joined ##c++
2014-10-12 16:10:50		liberal (~rocketeer@unaffiliated/rocketeer) has quit (Changing host)
2014-10-12 16:10:50		liberal (~rocketeer@gateway/tor-sasl/rocketeer) has joined ##c++
2014-10-12 16:10:56		Betal (~Beta@unaffiliated/betal) has joined ##c++
2014-10-12 16:12:22		asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has joined ##c++
2014-10-12 16:14:25		vinleod (~vinleod@75-164-229-219.ptld.qwest.net) has quit (Client Quit)
2014-10-12 16:15:17	juliohm	I have a design question...
2014-10-12 16:15:38		deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-10-12 16:15:41	DTSCode	dont ask to ask
2014-10-12 16:15:59	juliohm	How do you decide between a raw pointer and a unique_ptr<> as a member of a class?
2014-10-12 16:16:12		TinoDidriksen (~TinoDidri@alpha.visl.sdu.dk) has joined ##c++
2014-10-12 16:16:13	juliohm	DTSCode, I was typing the question obviously
2014-10-12 16:16:28	DTSCode	;)
2014-10-12 16:16:30		ambro718 (~ambro@gentoo/contributor/ambro718) has joined ##c++
2014-10-12 16:16:42	DTSCode	i never use raw pointers in c++
2014-10-12 16:16:45	darkerstar	if it's an owning pointer, use a unique_ptr
2014-10-12 16:16:48	det	juliohm, raw pointer is for when you dont have ownership or are writing something very low level like a data structure
2014-10-12 16:17:16	juliohm	class Foo { std::unique_ptr<bar> member; // or bar * member; };
2014-10-12 16:17:39	det	juliohm, if you need to delete member then use a unique_ptr
2014-10-12 16:18:01	juliohm	I tending to unique_ptr<>, but would like to know any negative side of using it
2014-10-12 16:18:13	flodin	juliohm: there should always be at least one unique_ptr or shared_ptr
2014-10-12 16:18:24	Sausage	Is there a reliable way to use readsome() to extract up to n bytes of data from a stream?
2014-10-12 16:18:49	juliohm	I'll check here to see if any of the members is actually shared
2014-10-12 16:18:52	darkerstar	reliable?
2014-10-12 16:19:08	Sausage	Well readsome() returns whatever's in the buffer and doesn't touch underflow I believe
2014-10-13 11:55:56		dagnachew (~dagnachew@bas1-montreal30-2925417210.dsl.bell.ca) has joined ##c++
2014-10-13 11:55:56	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-13 11:55:56	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-13 11:55:56	--	Channel ##c++: 540 nicks (0 ops, 0 voices, 540 normals)
2014-10-13 11:55:57	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-13 11:55:57		a_le (~a_le@203.sub-70-197-13.myvzw.com) has quit (Ping timeout: 240 seconds)
2014-10-13 11:56:11	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-13 11:56:18		a_le_ (~a_le@66.sub-70-197-6.myvzw.com) has quit (Read error: Connection reset by peer)
2014-10-13 11:56:26		desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-10-13 12:00:33		anunnaki (~chris@unaffiliated/anunnaki) has quit (Quit: leaving)
2014-10-13 12:01:39		govg (~govg@unaffiliated/govg) has joined ##c++
2014-10-13 12:03:32		phao (~phao@187-127-43-30.user.veloxzone.com.br) has quit (Quit: Leaving)
2014-10-13 12:03:43		Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Read error: Connection reset by peer)
2014-10-13 12:04:19		PlasmaHH (~plasmahh@213.61.9.75) has quit
2014-10-13 12:04:26		Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-10-13 12:05:35		rszn` (~rszn`@unafiliated/rszn-/x-38475634) has joined ##c++
2014-10-13 12:06:10		green_tooth (~green_too@91-150-103-45.dynamic.isp.telekom.rs) has quit (Quit: return(0);)
2014-10-13 12:06:20		g4r37h_ (~g4r37h@host86-153-58-203.range86-153.btcentralplus.com) has joined ##c++
2014-10-13 12:06:27		Pullphinger (~Pullphing@12.40.23.68) has joined ##c++
2014-10-13 12:07:09		jimvideo (~jimvideo@184-12-233-44.dr01.brny.ca.frontiernet.net) has joined ##c++
2014-10-13 12:07:39		interop_madness (~invalid@unaffiliated/interop-madness/x-8858653) has quit (Quit: Leaving)
2014-10-13 12:07:55		FreezingCold (~FreezingC@135.0.41.14) has quit (Read error: Connection reset by peer)
2014-10-13 12:08:27		EvergreenTree (~quassel@unaffiliated/evergreentree) has joined ##c++
2014-10-13 12:09:11		shintah (bebble@h-140-107.a336.priv.bahnhof.se) has joined ##c++
2014-10-13 12:09:23		zpr (1000@unaffiliated/zpr) has joined ##c++
2014-10-13 12:10:02	ac_slater_	hey all. I usually avoid std::to_string... but damn, it's really nice when you need simple conversions. Anyone have anything bad to say about it?
2014-10-13 12:10:09		Kirrahe (~kirrahe@ip51cc442b.adsl-surfen.hetnet.nl) has joined ##c++
2014-10-13 12:10:10	zpr	hi, what is the difference between using `std::stringstream ss(line);` and `ss.str(""); ss << line;` shouldn't they do the same thing?
2014-10-13 12:10:12		a_le (~a_le@233.sub-70-197-4.myvzw.com) has joined ##c++
2014-10-13 12:10:45	zpr	i am getting different results with those
2014-10-13 12:10:46	ac_slater_	zpr: look at the operators here http://en.cppreference.com/w/cpp/io/basic_stringstream
2014-10-13 12:10:57		phao (~phao@187-127-43-30.user.veloxzone.com.br) has joined ##c++
2014-10-13 12:11:09	ac_slater_	zpr: and no, the first one initializes the stringstream with `line`
2014-10-13 12:11:14		io2 (~io2@unaffiliated/irrequietus) has joined ##c++
2014-10-13 12:11:20		weemsledeux (~textual@unaffiliated/weems) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-13 12:11:49	ac_slater_	the second omits the `line`
2014-10-13 12:11:53	zpr	ac_slater_, right, but if i empty it first with ss.str(std::string()), shouldn't appending line have the same effect?
2014-10-13 12:12:00	ac_slater_	seems so
2014-10-13 12:12:03		g4r37h (~g4r37h@host86-153-58-203.range86-153.btcentralplus.com) has joined ##c++
2014-10-13 12:12:06	ac_slater_	try it ;)
2014-10-13 12:12:15	ac_slater_	oh I see, different results
2014-10-13 12:12:17	zpr	i have been, to no avail
2014-10-13 12:12:32	zpr	the latter seems to store old results and keep giving me those, despite clearing the stringstream
2014-10-13 12:13:04	zpr	this is being used in a hefty loop, and only initializing with the constructor each time seems to work
2014-10-13 12:13:17	zpr	i have no problem with doing it this way, just curious why.
2014-10-13 12:13:48	ac_slater_	could you paste the broken version to ideone?
2014-10-13 12:14:00	zpr	sure, one moment.
2014-10-13 12:14:06	zpr	let me contain it.
2014-10-13 12:14:39		pyon (~user@unaffiliated/pyon) has joined ##c++
2014-10-13 12:14:52		lmat (~lmat@c-50-129-81-232.hsd1.il.comcast.net) has joined ##c++
2014-10-13 12:16:28		luc4 (~luca@93.92.241.131) has quit (Quit: luc4)
2014-10-13 12:17:53		a_le (~a_le@233.sub-70-197-4.myvzw.com) has quit (Remote host closed the connection)
2014-10-13 12:19:28		govg (~govg@unaffiliated/govg) has quit (Quit: leaving)
2014-10-13 12:19:28	ac_slater_	thanks
2014-10-13 12:20:53		anunnaki (~chris@unaffiliated/anunnaki) has joined ##c++
2014-10-13 12:22:14		RangerBob (~Brian@pool-173-72-144-130.clppva.fios.verizon.net) has joined ##c++
2014-10-13 12:22:53		forgottenone (~forgotten@176.42.246.58) has joined ##c++
2014-10-13 12:23:14		doev (~doev@p50806DE0.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2014-10-13 12:23:45		Ulrike_Rayne (~Ulrike_Ra@cpe-65-24-84-7.columbus.res.rr.com) has quit (Read error: Connection reset by peer)
2014-10-13 12:23:47		sterniste (~sterniste@213.219.142.191.adsl.dyn.edpnet.net) has quit (Ping timeout: 260 seconds)
2014-10-13 12:24:34		Artej (~artej@150-110-132-95.pool.ukrtel.net) has quit (Read error: Connection reset by peer)
2014-10-13 12:24:40		a_le (~a_le@nat/cisco/x-bhtbrjeyiedgynkf) has joined ##c++
2014-10-13 12:24:40		FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-10-13 12:24:54		Artej (~artej@235-64-133-95.pool.ukrtel.net) has joined ##c++
2014-10-13 12:25:48		Ulrike_Rayne (~Ulrike_Ra@cpe-65-24-84-7.columbus.res.rr.com) has joined ##c++
2014-10-13 12:26:51	--	goezzi is now known as lleo
2014-10-13 12:26:52		Munt (~munt@62-210-188-170.rev.poneytelecom.eu) has quit (Quit: Munt)
2014-10-13 12:28:22		vl4kn0 (~vl4kn0@bband-dyn226.178-41-73.t-com.sk) has joined ##c++
2014-10-13 12:31:00		Munt (~munt@83.170.111.148) has joined ##c++
2014-10-13 12:31:15	ac_slater_	join ##c++-general
2014-10-13 12:31:17	ac_slater_	oops
2014-10-13 12:33:33	zpr	ac_slater_: http://ideone.com/YDKfqL this code wont make much sense because it is parsing a large 200mB file with strange formatting. but should be enough to show the error. basically all is well and it works fine until the switch cases 7 or 8 get activated (line 43) and tempstr is set, then the subsequent call on line 27 will not properly update tempstr, and debugging contents of ss.str() do not show the valid line.
2014-10-13 12:33:55	zpr	but if i uncomment line 23 and comment line 24,25, it works.
2014-10-13 12:34:40		ambro718 (~ambro@gentoo/contributor/ambro718) has joined ##c++
2014-10-13 12:34:57		dseitz (~dseitz@ip70-191-237-177.pn.at.cox.net) has joined ##c++
2014-10-13 12:35:07		nacon (~nacon@unaffiliated/nacon) has joined ##c++
2014-10-13 12:35:11	AbleBacon	zpr, just a style suggestion: i suggest breaking that up into maybe a couple of different functions
2014-10-13 12:35:55		s5s (~s5s@unaffiliated/s5s) has quit (Ping timeout: 260 seconds)
2014-10-13 12:35:57	zpr	AbleBacon: heh, yeah.. just hacking away for proof of concept at the moment
2014-10-13 12:35:58		ketamin (~Thunderbi@131.178.200.64) has quit (Ping timeout: 244 seconds)
2014-10-13 12:35:59	AbleBacon	because as it is, it's hard for someone on the outside to wrap their head around what's going on
2014-10-13 12:36:00	zpr	but yes, i agree.
2014-10-13 12:36:46		g4r37h (~g4r37h@host86-153-58-203.range86-153.btcentralplus.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-10-13 12:36:49	zpr	i also wouldn't normally use variables like line, temp, and word, reusing them constantly within the same loop, but i just hacked this together to see if it'll even work
2014-10-13 12:36:56	zpr	will clean it up before posting on github :)
2014-10-13 12:37:15	AbleBacon	okay well... let's see here... i don't normally see people doing something like "ss.str("");"
2014-10-13 12:37:21	AbleBacon	is that meant to reset the string stream?
2014-10-13 12:37:24	zpr	i tried to make a more contained example of my stringstream issues, but i was unable to
2014-10-13 12:37:50	zpr	funny enough i encounter this issue frequently when using stringstream
2014-10-13 12:38:01	AbleBacon	huh okay i guess that's correct
2014-10-13 12:38:04	zpr	yes, it's supposed to empty it
2014-10-13 12:38:24	zpr	if i comment out the whole switch block, it works just finE
2014-10-13 12:39:08	zpr	but when it finally encounters a line that plunges it into case 7 or 8, it does something wonky and when it reaches back to 25-27 there are issues
2014-10-13 12:39:21	zpr	again, unless re-initializing the stringstream through constructor
2014-10-13 12:40:03		ApEk (47add304@gateway/web/freenode/ip.71.173.211.4) has joined ##c++
2014-10-13 12:40:07		g4r37h_ (~g4r37h@host86-153-58-203.range86-153.btcentralplus.com) has quit
2014-10-13 12:40:12		EvergreenTree (~quassel@unaffiliated/evergreentree) has quit (Remote host closed the connection)
2014-10-13 12:40:26	zpr	this would happen: http://ideone.com/M5eKnv
2014-10-13 12:40:48		plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-10-13 12:40:52	AbleBacon	maybe add "ss.clear()"?
2014-10-13 12:40:59	AbleBacon	supposed to do something or somesuch
2014-10-13 12:41:15		pyon (~user@unaffiliated/pyon) has quit (Quit: brb)
2014-10-13 12:41:25	zpr	lets see
2014-10-13 12:41:38		sterniste (~sterniste@213.219.142.191.adsl.dyn.edpnet.net) has joined ##c++
2014-10-13 12:41:39		plitter (~plitter@84.48.49.52) has joined ##c++
2014-10-13 12:41:40		pyon (~user@unaffiliated/pyon) has joined ##c++
2014-10-13 12:42:15	zpr	doesn't seem to have any effect
2014-10-13 12:42:32		gaganjyot (~gaganjyot@124.253.225.90) has joined ##c++
2014-10-13 12:42:56	AbleBacon	hmmm
2014-10-13 12:44:00	zpr	oh whoops tried in wrong place, one sec
2014-10-13 12:44:06		ChoiKyuSang (~AdiIRC@14.32.46.58) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2014-10-13 12:44:23	zpr	ah, it did it!
2014-10-13 12:44:40		jaafar (~quassel@208.78.237.1) has joined ##c++
2014-10-13 12:44:45	zpr	AbleBacon : thank you very much! According to the docs, ss.clear() resets the EOF and error flags and whatnot
2014-10-13 12:45:03	AbleBacon	oh cool!
2014-10-13 12:45:17	AbleBacon	 /totalguess
2014-10-13 12:45:23	zpr	more like /totalgenius
2014-10-13 12:47:24	AbleBacon	hahah awww <3
2014-10-13 12:49:29		tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has quit (Ping timeout: 264 seconds)
2014-10-13 12:51:37		jaafar (~quassel@208.78.237.1) has quit (Ping timeout: 245 seconds)
2014-10-13 12:52:24		plasmids (~evan@51B60B45.dsl.pool.telekom.hu) has joined ##c++
2014-10-13 12:53:52		Haswell (~Haswell@unaffiliated/haswell) has joined ##c++
2014-10-13 12:54:12		s5s (~s5s@nat/cisco/x-efppxshtibulklta) has joined ##c++
2014-10-13 12:57:02	Artej	can I create a template container which contains a list of links to similar containers containing links to similar containers?
2014-10-13 12:57:24	s5s	Is there a way I can declare an array for a class Class with the following constructor: Class::Class(int val); ? I can do it if I declare a pointer to an explicitly defined array e.g. Class *p = {new Class(1), new Class(2)};
2014-10-13 12:57:59	Artej	i.e. std::map<key, *std::map<key, *std::map ....
2014-10-13 12:58:02		ChoiKyuSang (~AdiIRC@14.32.46.58) has joined ##c++
2014-10-13 12:58:03		bmt (~bmt@agbf203.neoplus.adsl.tpnet.pl) has joined ##c++
2014-10-13 12:59:13		lh_mouse (~lh_mouse@101.80.27.77) has quit (Read error: Connection reset by peer)
2014-10-13 13:01:23		emg (~emg@74.217.148.5) has joined ##c++
2014-10-13 13:01:23		sterniste (~sterniste@213.219.142.191.adsl.dyn.edpnet.net) has quit (Read error: Connection reset by peer)
2014-10-13 13:01:30		sterniste (~sterniste@213.219.142.191.adsl.dyn.edpnet.net) has joined ##c++
2014-10-13 13:01:46		antu (~david@p5DDBB0EA.dip0.t-ipconnect.de) has joined ##c++
2014-10-13 13:02:40	Artej	s5s you can
2014-10-13 13:02:51		Andy-chan2 (~Andy-chan@xdsl-87-78-156-222.netcologne.de) has joined ##c++
2014-10-13 13:03:02		usrJayRay (~usrJayRay@150.200.74.127) has joined ##c++
2014-10-13 13:03:54	jj995_	Artej: can you please elaborate?  I was about to explain how a constructor can only return an instance of the class and not an array, and that you would need to use a static method to return an array
2014-10-13 13:04:07		tworkin (~Adium@97.77.193.138) has joined ##c++
2014-10-13 13:04:45		jmaurer (~jmaurer@ipservice-092-208-227-175.092.208.pools.vodafone-ip.de) has joined ##c++
2014-10-13 13:04:49	jj995_	I think I misunderstood the question, nevermind
2014-10-13 13:05:04	Artej	jj995_ you can for example use cycle to fill existing array of pointers
2014-10-13 13:05:19	Artej	or existing container of classes
2014-10-13 13:05:40	Artej	or if you don't mind classes being same
2014-10-13 13:05:52	Artej	you can do Class():Class(0){}
2014-10-13 13:06:07	Artej	and Class a[10];
2014-10-13 13:06:24	Artej	I haven't coded in a while but I think that's how it works
2014-10-13 13:06:25		Andy-chan (~Andy-chan@xdsl-87-78-145-242.netcologne.de) has quit (Ping timeout: 272 seconds)
2014-10-13 13:06:31		clau (~clau@unaffiliated/clau) has joined ##c++
2014-10-13 13:07:05	Artej	jj995_ how about my question though?
2014-10-13 13:07:31	Artej	can you make a container having link to itself
2014-10-13 13:07:36		SCHAAP137 (dorian@77-173-0-137.ip.telfort.nl) has joined ##c++
2014-10-13 13:07:37	AbleBacon	what do you mean by a "link", Artej?
2014-10-13 13:07:43	Artej	*reference
2014-10-13 13:07:46	Artej	sorry
2014-10-13 13:07:53		clau (~clau@unaffiliated/clau) has left ##c++
2014-10-13 13:07:59		pyon-yuri (~suckmy@unaffiliated/pyon) has joined ##c++
2014-10-13 13:08:06	Artej	i.e. node which has references to adjascent nodes
2014-10-13 13:08:20	AbleBacon	you can create a class with a member variable that is a reference to an object of the same class, yes
2014-10-13 13:08:21	tsimpson	that'd be std::list
2014-10-13 13:08:47		taplaptap (~lol@unaffiliated/tapout) has joined ##c++
2014-10-13 13:09:05	Artej	std::list<&std::list<&std::list .... >>
2014-10-13 13:09:07	AbleBacon	if you're talking about having a bunch of objects and each object stores who its neighbors are, that's probably not a good implementation
2014-10-13 13:09:31	AbleBacon	i'm not sure that syntax is possible, Artej--what's the logic behind using references there?
2014-10-13 13:09:50	Artej	there are loops in graph
2014-10-13 13:09:59	Artej	without references you would have endless recursion
2014-10-13 13:10:17		schleppel (~quassel@141.39.226.237) has quit (Remote host closed the connection)
2014-10-13 13:10:26		FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 255 seconds)
2014-10-13 13:10:29	Artej	and without references you get basically same thing
2014-10-13 13:10:30		rszn` (~rszn`@unafiliated/rszn-/x-38475634) has left ##c++
2014-10-13 13:10:42	AbleBacon	if you want, for example, a "2D vector" you can make something like an "std::vector<std::vector<T> >"
2014-10-13 13:10:43	Artej	I don't know how to declare template which contains itself
2014-10-13 13:11:02	tsimpson	...that's not a 2d vector
2014-10-13 13:11:05	Artej	yeap
2014-10-13 13:11:10	Artej	it's a list of nodes
2014-10-13 13:11:19	Artej	in each node
2014-10-13 13:11:19	AbleBacon	"2d vector" in quotes
2014-10-13 13:11:27	tsimpson	anyway, you do it the exact same was as with a non-template class
2014-10-13 13:11:32		zpr (1000@unaffiliated/zpr) has left ##c++
2014-10-13 13:11:36	Artej	tsimpson?
2014-10-13 13:11:42	tsimpson	that it's a template shouldn't really make a difference here
2014-10-13 13:11:45		aslant (~aslant@37.157.33.76) has joined ##c++
2014-10-13 13:11:55	Artej	class a{class *a}?
2014-10-13 13:12:25	tsimpson	class a { a* other; };
2014-10-13 13:12:36	tsimpson	that'd be the most basic form yes
2014-10-13 13:12:48	Artej	but this way I don't get all the facilities of base class
2014-10-13 13:12:50		hellangel7 (~hellangel@117.192.185.240) has joined ##c++
2014-10-13 13:12:57	Artej	which are conviniently there
2014-10-13 13:12:58	AbleBacon	i'm confused about why you wanted to use references, Artej
2014-10-13 13:12:58	tsimpson	you can do template<typename T> class Node { Node* left; Node * right; T value; }; for example
2014-10-13 13:13:25	Artej	tsimpson my node has up to 3^n adjascent nodes
2014-10-13 13:13:31	Artej	that's the problem
2014-10-13 13:13:37	Artej	I can't name them all
2014-10-13 13:13:50	Artej	even in most basic case of n=3
2014-10-13 13:13:55	Artej	it's 27 neighbours
2014-10-13 13:14:14	AbleBacon	so, in each object you can create a container of some variable number of nodes
2014-10-13 13:14:22	tsimpson	then perhaps you want to use a vector<Node*> siblings;
2014-10-13 13:14:25	AbleBacon	like an "std::vector<Node *>
2014-10-13 13:14:25	AbleBacon	yeah
2014-10-13 13:14:52		Anodl (~Anodl@p5DC5A986.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-10-13 13:15:01		weemsledeux (~textual@unaffiliated/weems) has joined ##c++
2014-10-13 13:15:25	AbleBacon	of course, when you construct each object, you have to fill out that vector with all of its neighbors... which means you have to have some way of telling what a node's neighbors are... which means you could avoid having each member store its neighbors
2014-10-13 13:15:40	Artej	again there is another problem with it don't inheriting basic std::vector facilities
2014-10-13 13:15:46	Artej	so I do need to write wrappers
2014-10-13 13:16:06		inad922 (~inad925@193.61.9.228) has quit (Quit: Leaving)
2014-10-13 13:16:08	AbleBacon	you want Node to inherit std::vector?
2014-10-13 13:16:11		MrFlibble (LunarJetma@2.221.166.187) has joined ##c++
2014-10-13 13:16:13	--	MrFlibble is now known as LunarJetman
2014-10-13 13:16:13	--	LunarJetman is now known as MrFlibble
2014-10-13 13:16:28	tsimpson	you don't need to inherit anything, it's an implementation detail
2014-10-13 13:16:38		ikrima (~ikrima@76.91.23.45) has joined ##c++
2014-10-13 13:16:55	Artej	I want to do something functionaly similar to std::map<key,&std::map<...>>
2014-10-13 13:17:14		PSG_Luna (~PSG_Luna@unaffiliated/psg-luna/x-4025268) has joined ##c++
2014-10-13 13:17:16	Artej	i.e. have access as to std::map
2014-10-13 13:17:25	AbleBacon	why the reference, Artej? why the "&"?
2014-10-13 13:17:32	Artej	assume we have 3 nodes
2014-10-13 13:17:33	AbleBacon	i've never seen that before
2014-10-13 13:17:39	Artej	each one leads to another
2014-10-13 13:17:40	Artej	then
2014-10-13 13:17:47	Artej	1->2->3->1->2->3
2014-10-13 13:17:58	Artej	and without references each one is physical copy
2014-10-13 13:18:03	Artej	which eats memory
2014-10-13 13:18:58	Artej	i.e. you can't have looped grafs because they will go until your pc has memory
2014-10-13 13:19:06	Artej	prolly & won't work and I need *
2014-10-13 13:19:09	Artej	but still
2014-10-13 13:19:16	Artej	point is the same
2014-10-13 13:19:16	tsimpson	you can't have a container of reference, you can have a container of (smart/weak)pointers
2014-10-13 13:19:20	hs_	you need pointers for that
2014-10-13 13:19:37	Artej	std::map<key,*std::map<...>>
2014-10-13 13:19:41	AbleBacon	you want to make one of these, yes? http://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Graph_theory_tree.svg/542px-Graph_theory_tree.svg.png
2014-10-13 13:19:43	Artej	yeah, something like that
2014-10-13 13:19:49	nolyc	<http://tinyurl.com/po572p2> (at upload.wikimedia.org)
2014-10-13 13:19:53		PSG_Luna_ (~PSG_Luna@unaffiliated/psg-luna/x-4025268) has quit (Ping timeout: 244 seconds)
2014-10-13 13:20:05	Artej	I am doing one much more complex)
2014-10-13 13:20:16	AbleBacon	well, yeah
2014-10-13 13:20:21	Artej	for hausdorf dimension calculation
2014-10-13 13:20:32		Stryyker (stryyker16@about/windows/staff/stryyker) has quit (Disconnected by services)
2014-10-13 13:20:37	AbleBacon	just have each node contain a vector of its neighbors
2014-10-13 13:20:47		stryyker2 (stryyker16@about/windows/staff/stryyker) has joined ##c++
2014-10-13 13:20:55	hs_	look at boost::graph (if only for inspiration)
2014-10-13 13:20:56	AbleBacon	vectors are good for containing some variable, possibly unknown, number of objects
2014-10-13 13:20:56	RlyDontKnow	just check boost's graph library for a sane interface?
2014-10-13 13:21:07	AbleBacon	well that takes all the fun out of it
2014-10-13 13:21:28	Artej	I am not sure boost has implementation I need
2014-10-13 13:21:31	AbleBacon	and when i say "vector of its neighbors" i mean pointers to those neighbors
2014-10-13 13:21:42	RlyDontKnow	Artej: boost just has some algorithms working on graph
2014-10-13 13:21:47	Artej	There will be something like ~300k nodes
2014-10-13 13:21:50		mv_ (~mv_@217-144-31-128.satronet.sk) has joined ##c++
2014-10-13 13:21:56	AbleBacon	so you'll have a lot of pointers
2014-10-13 13:21:59	Artej	and I don't have time and I don't need to access each of them
2014-10-13 13:22:04	Artej	and link each
2014-10-13 13:22:11	AbleBacon	let the computer do it for you
2014-10-13 13:22:15	hs_	~300k nodes with possible links between them?
2014-10-13 13:22:16	AbleBacon	that's the whole point, right?
2014-10-13 13:22:40	Artej	and it must dynamically grow
2014-10-13 13:22:48	AbleBacon	vectors grow dynamically
2014-10-13 13:22:52	Artej	with linking new nodes to existing ones
2014-10-13 13:22:57		aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-10-13 13:23:16		Lowl3v3l (~Lowl3v3l@95.91.248.61) has joined ##c++
2014-10-13 13:23:22		jimvideo (~jimvideo@184-12-233-44.dr01.brny.ca.frontiernet.net) has quit (Quit: Leaving)
2014-10-13 13:23:24	Artej	AbleBacon as I said earlier I can use such thing, but I want to have an interface of std containers
2014-10-13 13:23:32	Artej	i.e. operator[]
2014-10-13 13:23:33	Artej	etc
2014-10-13 13:23:38	Artej	and I am lazy :D
2014-10-13 13:24:00		FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-10-13 13:24:09	AbleBacon	let's say you have a "Node" object called "node"... if you want its list of neighbors, you could have a call something like "node.neighbors"
2014-10-13 13:24:12	AbleBacon	which could return a vector
2014-10-13 13:24:19		TomyLobo (~TomyLobo@91.65.115.103) has joined ##c++
2014-10-13 13:24:28	AbleBacon	or i guess not "return", since it would be a member variable of  the Node class
2014-10-13 13:24:41		glenfe_ (~glen@unaffiliated/glenfe) has joined ##c++
2014-10-13 13:24:42		Anodl (~Anodl@p5DC5A986.dip0.t-ipconnect.de) has joined ##c++
2014-10-13 13:24:50		Trieste (~Trieste@unaffiliated/trieste) has quit (Ping timeout: 260 seconds)
2014-10-13 13:25:00	AbleBacon	so you could even say "node.neighbors[0]" or any other index that exists in that vector
2014-10-13 13:25:29	AbleBacon	if you don't know what indexes exist in that vector, you can do "node.neighbors.size()" and it'll be anything between 0 and that size - 1
2014-10-13 13:25:43		chrelad (~chrisdale@66.234.113.42) has joined ##c++
2014-10-13 13:25:53		chrelad (~chrisdale@66.234.113.42) has left ##c++
2014-10-13 13:25:54		EhevuTov (~EhevuTov@24-148-20-58.c3-0.stn-ubr1.chi-stn.il.cable.rcn.com) has joined ##c++
2014-10-13 13:25:55		Trieste (~Trieste@unaffiliated/trieste) has joined ##c++
2014-10-13 13:26:07	hs_	I don't think the issue here is whether you can use the "interface of a std container"
2014-10-13 13:26:13	Artej	AbleBacon I am solving differential equation and checking if I moved into next box of the grid and if I moved I call current node["Addres of box"] to check if I already went there
2014-10-13 13:26:15	hs_	more like "can this be done"
2014-10-13 13:26:25	hs_	"does this require more memory than atoms in the universe" etc
2014-10-13 13:26:46	Artej	and if I did I make Current=found node
2014-10-13 13:26:48		aslant (~aslant@37.157.33.76) has joined ##c++
2014-10-13 13:26:56		newbiz (~newbiz@116.166.190.90.dyn.estpak.ee) has quit (Remote host closed the connection)
2014-10-13 13:27:01	Artej	if I haven't I do create one
2014-10-13 13:27:03	Artej	and move in it
2014-10-13 13:27:17	AbleBacon	300k nodes... each node points to 300k other nodes... each pointer takes up, what? 1 byte?
2014-10-13 13:27:17	Artej	or check if I haven't linked it
2014-10-13 13:27:18	Artej	)
2014-10-13 13:27:26	Artej	no
2014-10-13 13:27:38	Artej	each node only has 3^n neighbours at max
2014-10-13 13:27:42	Artej	and n>3
2014-10-13 13:27:50	Artej	simplest attractor is n=3
2014-10-13 13:27:53		ToApolytoXaos (~ToApolyto@46.21.62.128) has joined ##c++
2014-10-13 13:27:59	Artej	and it's very sparse
2014-10-13 13:28:08	AbleBacon	let's assume worst case scenario every node links to every other node
2014-10-13 13:28:14	Artej	meaning most nodes won't have more than one
2014-10-13 13:28:16	AbleBacon	your program will use around 84 megabytes of memory
2014-10-13 13:28:18	AbleBacon	that' fine
2014-10-13 13:28:48	AbleBacon	even if your nodes contain a ton of data, since you're using pointers, the memory usage will scale linearly to the number of nodes
2014-10-13 13:29:00	AbleBacon	errr will scale linearly to the amount of data in each node
2014-10-13 13:29:17	Artej	I mean it's a whole point of having a tree because most nodes will only have one connection
2014-10-13 13:29:36	Artej	so I can go on trajectories I already met very fast
2014-10-13 13:29:38		Eelis (~Eelis@unaffiliated/eelis) has joined ##c++
2014-10-13 13:29:45	boblehest	http://en.cppreference.com/w/cpp/utility/functional/function/function
2014-10-13 13:29:50	Artej	and have more time for places I haveen't been into
2014-10-13 13:30:03	boblehest	What's the difference between an exception specification of "noexcept" and "none"?
2014-10-13 13:30:06	AbleBacon	well, vectors with only one object are fine
2014-10-13 13:30:37	Eelis	WOOOOT!!! new proposals for unified call syntax from both bjarne and herb. i had no idea this old idea was still on people's wish list
2014-10-13 13:30:38		Nando_k (~Nando_k@dslb-178-003-077-156.178.003.pools.vodafone-ip.de) has joined ##c++
2014-10-13 13:30:49	AbleBacon	link, Eelis?
2014-10-13 13:31:02	Eelis	http://isocpp.org/blog/2014/10/n4174 and http://isocpp.org/blog/2014/10/n4165
2014-10-13 13:31:02	Artej	AbleBacon but at other points I would need to search for a node I need to go to
2014-10-13 13:31:22	AbleBacon	you can search a vector. i don't see the problem
2014-10-13 13:31:24		pstone (~dpeng@216.2.203.2) has joined ##c++
2014-10-13 13:31:27	K-ballo	boblehest: none means not noexcept, it might throw
2014-10-13 13:31:43		plasmids (~evan@51B60B45.dsl.pool.telekom.hu) has quit (Quit: Konversation terminated!)
2014-10-13 13:32:03	Artej	the whole point is I can write all that, but imagine how good it would be to be able to just make container containing references to similar containers ^_^
2014-10-13 13:32:18	Artej	it would make ~20 lines of code go into 1
2014-10-13 13:32:22	tsimpson	boblehest: the difference between "void foo() noexcept;" and "void foo();"
2014-10-13 13:32:56	boblehest	I expected the move ctor to be noexcept. :/ Oh well.
2014-10-13 13:33:01		hs366 (~hs366@c-e113e455.04-386-73746f7.cust.bredbandsbolaget.se) has joined ##c++
2014-10-13 13:33:11	AbleBacon	Eelis: sounds like soustroup is arguing against it?
2014-10-13 13:33:25	boblehest	K-ballo: Thanks, I just noticed that it states what exception might be thrown for some function. and just "none" for others.
2014-10-13 13:34:10	Eelis	AbleBacon: it does?
2014-10-13 13:34:12	Eelis	AbleBacon: not to me.
2014-10-13 13:34:42		RangerBob (~Brian@pool-173-72-144-130.clppva.fios.verizon.net) has quit (Quit: Help help I'm being repressed!)
2014-10-13 13:34:49	AbleBacon	okay nvm i'm just now learning what this thing is
2014-10-13 13:34:58	AbleBacon	oh...i see. hence the "unifed"
2014-10-13 13:35:03	AbleBacon	unified*
2014-10-13 13:35:21	ville	Eelis: more interesting is that bjarne thinks resolution rules need to be fixed regardless
2014-10-13 13:35:42	ville	fuck forgot to use irregardless
2014-10-13 13:35:42	Eelis	resolution of what? i haven't read the paper in detail yet
2014-10-13 13:36:24		LBV_User (~leonardo@177.2.128.75) has quit (Ping timeout: 250 seconds)
2014-10-13 13:36:34	ville	the 4174 just has a short one sentence in reference to that. i guess main detail is that it would take into consideration accessibility of the identifier
2014-10-13 13:36:50		hexagoxel_ (~hexagoxel@195.244.237.55) has quit (Ping timeout: 250 seconds)
2014-10-13 13:37:03	ville	inaccessible private members won't kill the search for right function to call for example
2014-10-13 13:37:16	tworkin	im not that excited about the unified syntax but feel like i should be
2014-10-13 13:37:28	AbleBacon	wait... are you saying that i can use "memberfunc(x)" instead of "x.memberfunc()" where, "memberfunc" is a member function of "x"?
2014-10-13 13:37:37	ville	tworkin: normal code. ho hum. nice in template context.
2014-10-13 13:37:43		Maxel (~Maxel@24-159-207-34.static.roch.mn.charter.com) has quit (Ping timeout: 240 seconds)
2014-10-13 13:37:48	ville	AbleBacon: yes
2014-10-13 13:37:50	tworkin	AbleBacon: this is a proposal yeah.
2014-10-13 13:37:53	Eelis	i'm sure there's loads of hairy details to get right, as always in C++. i just look forward to the day i can respond to my colleagues' complaints about nonmember functions by showing them they can call them like member functions >:)
2014-10-13 13:37:58		s5s (~s5s@nat/cisco/x-efppxshtibulklta) has quit (Ping timeout: 244 seconds)
2014-10-13 13:37:59		ikrima (~ikrima@76.91.23.45) has quit (Ping timeout: 260 seconds)
2014-10-13 13:38:01	AbleBacon	i don't see the advantage
2014-10-13 13:38:21	AbleBacon	they could mean totally different things... what if i have a non-member function with the same name?
2014-10-13 13:38:29	ville	AbleBacon: template<typename T> void f(T x) { x.f(); } you've just placed a constraint on the kinds of T you can accept.
2014-10-13 13:38:38	tworkin	Eelis: ah theres an interesting case. its sort of a backdoor incomplete-class-in-header
2014-10-13 13:39:22	MrFlibble	K-ballo: hey thanks for the follow on Twitter :)
2014-10-13 13:39:38	Eelis	tworkin: hmm, good point
2014-10-13 13:39:47		RangerBob (~Brian@pool-173-72-144-130.clppva.fios.verizon.net) has joined ##c++
2014-10-13 13:40:16	V-ille	I think Herb mentions extension-method-likes in his paper
2014-10-13 13:40:25	MrFlibble	I blogged about auto keyword here: http://leighjohnston.wordpress.com/2014/10/13/new-c-auto-keyword-condsidered-awesome-not-harmful/
2014-10-13 13:40:58	AbleBacon	well, my knowledge is limited,  but i'm opposed to anything that increases the compiler's ability to make inferences about what behavior i'm trying to use at this point
2014-10-13 13:41:36	ville	tworkin: you also would get that from open multimethods
2014-10-13 13:42:16	AbleBacon	i guess it sort of makes sense though because you can call "std::thread(myObj, myFunc);"
2014-10-13 13:42:31	AbleBacon	or something like that
2014-10-13 13:42:36	boblehest	So as long as I only store objects that can be moved without throwing inside std::function, I can treat std::function's move ctor as noexcept, even though it isn't defined as such, right?
2014-10-13 13:44:12		xenoph (~module@72.89-11-172.nextgentel.com) has quit (Quit: I can't sleep, the clowns will eat me.)
2014-10-13 13:45:33	V-ille	Eelis: curiously, Herb claims that his proposal is not a breaking change. I don't believe him.
2014-10-13 13:45:49		xenoph (~module@72.89-11-172.nextgentel.com) has joined ##c++
2014-10-13 13:46:00	V-ille	he of course says in his text "except for sfinae tricks"
2014-10-13 13:46:07		EhevuTov (~EhevuTov@24-148-20-58.c3-0.stn-ubr1.chi-stn.il.cable.rcn.com) has quit (Quit: This computer has gone to sleep)
2014-10-13 13:46:41	K-ballo	V-ille: do you think it could be a breaking change outside sfinae, for which everything would be a breaking change?
2014-10-13 13:46:49	V-ille	these boys need data before their proposals can be seriously considered
2014-10-13 13:47:12	AbleBacon	i say let code-writers decide what they want "x.f(y)" and "f(x,y)" to do... if they want both to work, let them write both functions!
2014-10-13 13:47:24	Eelis	this is why sfinae is evil. "oh, we found a leak in the language through which we can probe all kinds of unintentionally exposed properties, let's write loads of programs that depend on this!"
2014-10-13 13:47:32	V-ille	K-ballo: well, "how do I detect a member" is a frequent question, boost::tti provides facilities for it, bgl uses those facilities.. so I don't know whether it'll break real code where the sfinae is hidden
2014-10-13 13:47:39	AbleBacon	couldn't they just define "f(x,y)" as "x.f(y)"?
2014-10-13 13:48:00		mv_ (~mv_@217-144-31-128.satronet.sk) has left ##c++ ("Textual IRC Client: www.textualapp.com")
2014-10-13 13:48:05	V-ille	Eelis: the issue may be that there are libraries that use member detection techniques, and user code may end up doing funny shit if that sfinae breaks
2014-10-13 13:48:07	K-ballo	V-ille: I'm aware of that much, that's why I was asking if you suspect of non-sfinae related breakages
2014-10-13 13:48:16		deekej (~deekej@195.65.3.245) has joined ##c++
2014-10-13 13:48:28	Eelis	V-ille: i can believe that
2014-10-13 13:48:35	V-ille	I don't expect non-sfinae breakage, since afaics all such cases would be ill-formed today
2014-10-13 13:48:48	MrFlibble	AbleBacon: prefer free functions over member functions.
2014-10-13 13:49:01	V-ille	K-ballo: well, that would depend on the overload resolution rules, actually
2014-10-13 13:49:13	AbleBacon	so couldn't they just write "x.f(y)" so that it calls "f(x,y)", MrFlibble?
2014-10-13 13:49:24	MrFlibble	no
2014-10-13 13:49:28	V-ille	so, as I said, these boys need data
2014-10-13 13:49:30	K-ballo	V-ille: I'm listening...
2014-10-13 13:49:43	V-ille	K-ballo: currently x.f() will not look outside X
2014-10-13 13:50:02	V-ille	if it's made to look outside X in case it finds a better match than a member of X, you get non-sfinae breakage
2014-10-13 13:50:44	K-ballo	that would be interesting
2014-10-13 13:50:49	AbleBacon	why not, MrFlibble?
2014-10-13 13:50:57	MrFlibble	because doing so would be dumb.
2014-10-13 13:52:18	Eelis	hm, right now you can call static member functions with x->f(), too, and x is just ignored...
2014-10-13 13:52:53	Eelis	(iirc)
2014-10-13 13:52:59	tsimpson	yep
2014-10-13 13:53:01	Eelis	ah yes, i was fixing geordi
2014-10-13 13:53:24	Eelis	a few more commits and docker-geordi is done
2014-10-13 13:53:31	V-ille	"docker"?
2014-10-13 13:53:40	Eelis	https://www.docker.com/
2014-10-13 13:53:44	ville	it docks.
2014-10-13 13:54:00	Eelis	means the chroot is no longer necessary, which means the mkrt step is no longer necessary, and everything becomes way nicer and more reproducible
2014-10-13 13:54:03		RangerBob (~Brian@pool-173-72-144-130.clppva.fios.verizon.net) has quit (Quit: Help help I'm being repressed!)
2014-10-13 13:54:11	Eelis	(internally)
2014-10-13 13:54:20	V-ille	okilydokily
2014-10-13 13:54:23		madist (madist@unaffiliated/madist) has quit (Ping timeout: 246 seconds)
2014-10-13 13:54:27	V-ille	I mean okilydockily
2014-10-13 13:55:35	tworkin	Eelis:  nice
2014-10-13 13:55:50	tworkin	Eelis: maybe i'll get that twitter bot off the ground finally with that
2014-10-13 13:55:59	Eelis	maybe!
2014-10-13 13:57:09	V-ille	ha ha, biatches, my c++ implementation can do is_const_v<int> and the other variable-template-traits-shortcuts
2014-10-13 13:57:37	K-ballo	lol, "your"?
2014-10-13 13:57:38		deekej (~deekej@195.65.3.245) has quit (Ping timeout: 250 seconds)
2014-10-13 13:57:44	V-ille	mine, yes :P
2014-10-13 13:57:55	Eelis	his precious
2014-10-13 13:57:58	V-ille	see, as far as I know, it's only on this machine of mine
2014-10-13 13:58:00		snzmn (~cashscam@freemoney.cashscam.biz) has joined ##c++
2014-10-13 13:58:13	V-ille	I expect I will share it in the forthcoming days
2014-10-13 13:58:14	K-ballo	oh, cool, in that case same here :)
2014-10-13 13:58:43	V-ille	oh, I thought that stuff was planned to be done by someone else for clang
2014-10-13 13:58:55	Eelis	what can your C++ implementation do?
2014-10-13 13:59:08	MrFlibble	more impressive would be if you wrote a C++ implementation from scratch rather than patching someone elses; it would also show a degree of psychosis which is cool.
2014-10-13 13:59:09	K-ballo	yeah, eric did it, the patch is waiting for marshall but it wasn't public when I started writing my own patch
2014-10-13 13:59:13		wheals (~wheals@160.253.0.56) has joined ##c++
2014-10-13 13:59:42	K-ballo	most boring patch EVER
2014-10-13 13:59:53	V-ille	more or less, yes
2014-10-13 14:00:04	V-ille	at least I get to do a fairly minimal amount of testing
2014-10-13 14:00:13	V-ille	instead of some full-blown shit
2014-10-13 14:00:29	MrFlibble	no wonder #Shellshock happened
2014-10-13 14:00:35	MrFlibble	most open source software is shite
2014-10-13 14:01:00	V-ille	there are full-blown tests for the underlying traits
2014-10-13 14:01:44		Anodl (~Anodl@p5DC5A986.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-10-13 14:01:47	MrFlibble	but then again I don't do much testing of my hobby projects either so I can't talk.
2014-10-13 14:02:10		Anodl (~Anodl@p5DC5A986.dip0.t-ipconnect.de) has joined ##c++
2014-10-13 14:02:11		magic_ (~magic@unaffiliated/auv5) has quit (Ping timeout: 260 seconds)
2014-10-13 14:02:31	V-ille	what's with you, benign overdose of medical marijuana?
2014-10-13 14:02:36	cbreak	well... consider that most professional software is shite as well, it's probably the same everywhere
2014-10-13 14:02:36	Eelis	it's only a matter of time until we have a certified C++ compiler
2014-10-13 14:02:46	cbreak	Eelis: there is such a thing?
2014-10-13 14:02:49	cbreak	who certifies it?
2014-10-13 14:02:58	V-ille	CERTified? :P
2014-10-13 14:03:00	Eelis	cbreak: certified as in: comes with a correctness proof
2014-10-13 14:03:01	cbreak	did they kick microsoft out of the meeting?
2014-10-13 14:03:03	MrFlibble	someone he is certifiable.
2014-10-13 14:03:06	MrFlibble	who*
2014-10-13 14:03:32	Eelis	i.e. this scaled up http://compcert.inria.fr/doc/
2014-10-13 14:03:42	MrFlibble	correctness proof for a C++ compiler? impossible.
2014-10-13 14:04:05	Eelis	it's possible once you've formalized the spec. important parts of the spec have already been formalized
2014-10-13 14:05:03		pixelate (~pixelate@139.195.48.96) has quit (Ping timeout: 260 seconds)
2014-10-13 14:05:38	MrFlibble	go read about the halting problem and come back.
2014-10-13 14:05:50		ChoiKyuSang (~AdiIRC@14.32.46.58) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2014-10-13 14:06:10	Eelis	go take a course on formal methods and come back
2014-10-13 14:06:13	MrFlibble	go read about the halting problem and come back.
2014-10-13 14:06:27		Anodl (~Anodl@p5DC5A986.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2014-10-13 14:06:38	Eelis	i'm quite familiar with the halting problem. how familiar are you with formal methods?
2014-10-13 14:06:40		ChoiKyuSang (~AdiIRC@14.32.46.58) has joined ##c++
2014-10-13 14:06:43	Eelis	not very, i wager.
2014-10-13 14:07:01		hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-10-13 14:07:14		carandraug (~carandrau@octave/developer/carandraug) has quit (Quit: Leaving)
2014-10-13 14:07:44	V-ille	I've heard from trustworthy alternative sources that it's possible
2014-10-13 14:07:56	V-ille	there are multiple people working towards such goals
2014-10-13 14:08:04	MrFlibble	why do you think the halting problem is not an issue? because the compiler is fixed rather than being arbitrary?
2014-10-13 14:08:15	MrFlibble	the input is arbitrary
2014-10-13 14:08:16	Eelis	one of the people working on it was my successor at university
2014-10-13 14:08:25	hs_	MrFlibble, correctness proofs aren't impossible
2014-10-13 14:08:32	MrFlibble	halting problem.
2014-10-13 14:08:54	ville	oh dear.
2014-10-13 14:08:59	Eelis	lulz, someone heard a cool term once and thinks it can thwart any argument now
2014-10-13 14:09:13	MrFlibble	answer my question Eelis
2014-10-13 14:09:13	V-ille	someone who often likes to repeat himself
2014-10-13 14:09:24		simius (~simius@h-88-117.a230.priv.bahnhof.se) has joined ##c++
2014-10-13 14:09:26	cbreak	I've solved the halting problem in a subclass of programs
2014-10-13 14:09:58	o11c	MrFlibble: halting problem is only a problem if you try to solve *everything*
2014-10-13 14:10:00	Eelis	MrFlibble: there is nothing special about proving properties of programs that operate on data types with infinitely large domains, such as numbers or strings
2014-10-13 14:10:14	Eelis	it is literally butt-trivial
2014-10-13 14:10:18	o11c	MrFlibble: it's perfectly possible to solve the halting problem for some particular input
2014-10-13 14:10:25		deekej (~deekej@195.65.3.245) has joined ##c++
2014-10-13 14:10:34	MrFlibble	from what I can see the halting problem would be apply if one of the program-input pairs was not arbitrary
2014-10-13 14:10:35	o11c	e.g. this program will terminate:    int main() {}
2014-10-13 14:10:42	MrFlibble	s/be/not/
2014-10-13 14:10:50	cbreak	I solve the halting problem for windows: Yes. It halts. Crashes do count, right?
2014-10-13 14:11:11		antu (~david@p5DDBB0EA.dip0.t-ipconnect.de) has quit (Quit: Konversation terminated!)
2014-10-13 14:11:12	Eelis	to be a semantics-preserving implementation you don't need to solve any halting problems
2014-10-13 14:11:15	kadoban	MrFlibble: In case you're actually serious, you can just restrict the programming language such that every program terminates.
2014-10-13 14:11:15		DEElekgolo (~DEElekgol@2602:304:cd99:1e60:4843:270c:1332:6bbb) has joined ##c++
2014-10-13 14:11:28	tworkin	I"m Just Trying to Certify My Compiler, but I keep accidentally feeding it the halting problem!! There has GOT to be a better way [tv infomercial cuts to herb stutter]
2014-10-13 14:11:31	hs_	kadoban, that's not possible
2014-10-13 14:11:47	kadoban	hs_: Isn't that exactly what coq does?
2014-10-13 14:11:51	MrFlibble	kadoban: thanks for an answer that Eelis felt he was above giving
2014-10-13 14:11:56	cbreak	C++ forbids loops that don't modify state and don't terminate
2014-10-13 14:11:58		FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 260 seconds)
2014-10-13 14:12:04		thecha (~cha@unaffiliated/thecha) has joined ##c++
2014-10-13 14:12:06	hs_	kadoban, unless by "restrict the programming language" you mean "make it incomplete wrt computable functions"
2014-10-13 14:12:07	cbreak	(the actual wording is much more complicated...)
2014-10-13 14:12:10		govg (~govg@unaffiliated/govg) has joined ##c++
2014-10-13 14:12:23	kadoban	hs_: Of course.
2014-10-13 14:12:29	Eelis	you don't have to write the C++ compiler in Coq. you can write it in any language for which you have a mechanism for proving properties
2014-10-13 14:13:03	thecha	pyon
2014-10-13 14:13:10	kadoban	Eelis: That sounds...difficult. It's hard enough proving anything even in languages designed for that kind of thing.
2014-10-13 14:13:28	Eelis	kadoban: depends. there's very good tools for some functional languages, for example
2014-10-13 14:13:36		FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-10-13 14:13:46	Eelis	kadoban: and if you start from a prolog decendent, for example, you also have a head start
2014-10-13 14:14:08	kadoban	Eelis: Hmm, interesting. Which ones, out of curiosity? Any of the commonly-used-otherwise ones?
2014-10-13 14:14:58	Eelis	kadoban: http://wiki.clean.cs.ru.nl/Sparkle , for example
2014-10-13 14:15:19	kadoban	Thanks, I'll take a look
2014-10-13 14:15:29	Eelis	but personally i wouldn't bother. just Coq that shit
2014-10-13 14:15:39	Eelis	turing completeness is heavily overrated anyway
2014-10-13 14:15:49	kadoban	Haha, yeah Coq and Agda broke my brain last time I tried :-/ I should really try again.
2014-10-13 14:16:13		sterniste (~sterniste@213.219.142.191.adsl.dyn.edpnet.net) has left ##c++
2014-10-13 14:16:35		D0cN3x (~Thunderbi@dslb-178-007-216-171.178.007.pools.vodafone-ip.de) has joined ##c++
2014-10-13 14:17:16		kaffeetrauma (~Thunderbi@n58.informatik.fh-dortmund.de) has quit (Quit: kaffeetrauma)
2014-10-13 14:17:48		gaganjyot (~gaganjyot@124.253.225.90) has quit (Quit: Leaving)
2014-10-13 14:18:23		D0cN3x (~Thunderbi@dslb-178-007-216-171.178.007.pools.vodafone-ip.de) has quit (Client Quit)
2014-10-13 14:18:52	AbleBacon	why can't i define a class with "static void operator()()"?
2014-10-13 14:19:11		bone (~bone@unaffiliated/bone) has quit (Quit: ZNC - http://znc.in)
2014-10-13 14:19:19	ville	AbleBacon: and you would call it like: "();"?
2014-10-13 14:19:39	AbleBacon	like "MyClass();"
2014-10-13 14:19:51	AbleBacon	or "MyClass::operator()();"
2014-10-13 14:20:02	ville	the first looks like a ctor call
2014-10-13 14:20:08	K-ballo	AbleBacon: the later is better, the former is a constructor call
2014-10-13 14:20:10	tsimpson	for the same reason you can't make operator-> static
2014-10-13 14:20:20	tsimpson	it just doesn't make semantic sense
2014-10-13 14:20:20	AbleBacon	so it's not allowed because it would conflict with any constructors?
2014-10-13 14:20:22		bone (~bone@unaffiliated/bone) has joined ##c++
2014-10-13 14:20:22		rendar (~I@host2-179-dynamic.12-79-r.retail.telecomitalia.it) has quit (Ping timeout: 245 seconds)
2014-10-13 14:20:38	K-ballo	I'd say because it doesn't make sense
2014-10-13 14:20:50	ville	AbleBacon: if the latter is only option then just as well can call a named function
2014-10-13 14:21:13	AbleBacon	yeah--i don't intend to use this; i was just wondering
2014-10-13 14:21:32	K-ballo	op() is one of those operators that must be defined as a member anyway
2014-10-13 14:21:45		a_le (~a_le@nat/cisco/x-bhtbrjeyiedgynkf) has quit (Remote host closed the connection)
2014-10-13 14:23:05	AbleBacon	so... if that *were* allowed, then if you created a class like that, it would basically just be a function, right?
2014-10-13 14:23:09		govg (~govg@unaffiliated/govg) has quit (Quit: leaving)
2014-10-13 14:23:25		saedelaere (~quassel@unaffiliated/saedelaere) has quit (Remote host closed the connection)
2014-10-13 14:23:43	AbleBacon	if that were the case, then a function would be the same as a class where the only member is "static void operator()()"
2014-10-13 14:23:49	MrFlibble	operator()() will become less common as functors will be written less due to lambdas
2014-10-13 14:24:45	MrFlibble	although I imagine std::less and friends will hang around
2014-10-13 14:24:59		Sauvin (~Sauvin@about/linux/staff/sauvin) has quit (Remote host closed the connection)
2014-10-13 14:25:29	AbleBacon	you referring to the use of the "friend" keyword?
2014-10-13 14:25:35	MrFlibble	no
2014-10-13 14:26:01	MrFlibble	s/friends/such/
2014-10-13 14:26:21	AbleBacon	ah
2014-10-13 14:26:58		DrSkyLizard (~universe@unaffiliated/shiningthrough) has joined ##c++
2014-10-13 14:27:14		jaafar (~quassel@208.78.237.16) has joined ##c++
2014-10-13 14:27:17	AbleBacon	yeah, looking at std::less, that's weird... don't really see why you'd use that
2014-10-13 14:27:29		rendar (~I@host2-179-dynamic.12-79-r.retail.telecomitalia.it) has joined ##c++
2014-10-13 14:27:29	MrFlibble	std::map uses it be default
2014-10-13 14:27:32	MrFlibble	as does std::set
2014-10-13 14:27:54		kailoAtWork (~kailoAtWo@208.184.77.122) has joined ##c++
2014-10-13 14:28:49		deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-10-13 14:29:10	DrSkyLizard	GCC needs YOU! https://gcc.gnu.org/ml/gcc/2014-10/msg00040.html
2014-10-13 14:29:52	como	also std::less<> has a special use in C++14
2014-10-13 14:30:18	AbleBacon	yeah--i saw they changed it... now the T will default to "void"? what does that do?
2014-10-13 14:31:17	como	it has a template operator< that can deduce the types of its arguments
2014-10-13 14:31:49	AbleBacon	ah
2014-10-13 14:31:54		SibTiger[Tablet] (~Nicholas@bluesocket.cameron.edu) has joined ##c++
2014-10-13 14:32:03	AbleBacon	so "std::less<>(something);"?
2014-10-13 14:33:23		ra4king (~ra4king@unaffiliated/ra4king) has joined ##c++
2014-10-13 14:33:23		ra4king (~ra4king@unaffiliated/ra4king) has quit (Excess Flood)
2014-10-13 14:33:31	K-ballo	AbleBacon: something, something.. < is a binary operator
2014-10-13 14:33:34		ra4king (~ra4king@unaffiliated/ra4king) has joined ##c++
2014-10-13 14:33:52	K-ballo	{ cout << less<>{}(1, 2); }
2014-10-13 14:34:07	AbleBacon	geordi: { cout << less<>{}(1, 2); }
2014-10-13 14:34:12	MrFlibble	AbleBacon: http://en.cppreference.com/w/cpp/utility/functional/less_void
2014-10-13 14:34:36	AbleBacon	how come you need the {}?
2014-10-13 14:34:57	K-ballo	less<> is a type
2014-10-13 14:35:14	K-ballo	clang: { less<> cmp; cout << cmp(1, 2); }
2014-10-13 14:35:16	clang	true
2014-10-13 14:35:48		dumdedum (~dumdedum@62.101.185.71.dyn.user.ono.com) has quit (Quit: foo)
2014-10-13 14:35:54		Maxel (~Maxel@24-159-207-34.static.roch.mn.charter.com) has joined ##c++
2014-10-13 14:35:56		W0rmDr1nk (~wormdrink@unaffiliated/wormdrink) has quit (Ping timeout: 240 seconds)
2014-10-13 14:36:17		k0nichiwa (~jdoe@174.71.181.20) has joined ##c++
2014-10-13 14:38:30		o-O-o (36f0c4b9@gateway/web/freenode/ip.54.240.196.185) has joined ##c++
2014-10-13 14:39:14		DrSkyLizard (~universe@unaffiliated/shiningthrough) has quit
2014-10-13 14:39:19		asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-13 14:39:32		BadApe (~BadApe@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has quit (Ping timeout: 246 seconds)
2014-10-13 14:39:40		unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has joined ##c++
2014-10-13 14:39:58		jaafar (~quassel@208.78.237.16) has quit (Ping timeout: 244 seconds)
2014-10-13 14:40:16		hamid (~nithp@unaffiliated/hamid) has quit (Quit: Lost terminal)
2014-10-13 14:41:11		Jesin (~Jesin@r192085.res.Lehigh.EDU) has joined ##c++
2014-10-13 14:42:11		Jesin (~Jesin@r192085.res.Lehigh.EDU) has quit (Read error: Connection reset by peer)
2014-10-13 14:42:18		degva (~degva@190.234.105.30) has joined ##c++
2014-10-13 14:43:06		LFS (~John@unaffiliated/lfs) has joined ##c++
2014-10-13 14:43:21	LFS	I neet an open source project that is more than 50000 lines of code written in C++ or Java to add, reove and modify a feature .. Any suggestions for such a project?
2014-10-13 14:44:49		hexagoxel (~hexagoxel@kiel-5f76869e.pool.mediaWays.net) has joined ##c++
2014-10-13 14:45:51	AbleBacon	boost?
2014-10-13 14:46:01	AbleBacon	that would be reaaaaaally easy
2014-10-13 14:46:35	LFS	boost?
2014-10-13 14:46:40		Atapel (~Atapel@pool-74-101-108-117.nycmny.fios.verizon.net) has joined ##c++
2014-10-13 14:46:53	AbleBacon	boost
2014-10-13 14:47:10		Jesin (~Jesin@r192085.res.Lehigh.EDU) has joined ##c++
2014-10-13 14:47:15	hs_	I suspect he wants something like an application
2014-10-13 14:47:25	k0nichiwa	how about an open source browser
2014-10-13 14:48:05		asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has joined ##c++
2014-10-13 14:48:43	como	LFS: you want to add a random feature to a random project?
2014-10-13 14:48:48		hz (~username@unaffiliated/hz) has joined ##c++
2014-10-13 14:48:58		shiver32 (~shiver@198.151.130.219) has joined ##c++
2014-10-13 14:48:58		hs366 (~hs366@c-e113e455.04-386-73746f7.cust.bredbandsbolaget.se) has quit (Quit: Leaving)
2014-10-13 14:49:19		aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-10-13 14:50:44	MrFlibble	I would suggest my project... no I wouldn't as I am very protective of my code.
2014-10-13 14:51:41	LFS	como: it is a school task
2014-10-13 14:52:17		lolek (~lolek@unaffiliated/marcin) has joined ##c++
2014-10-13 14:53:07		lolek (~lolek@unaffiliated/marcin) has left ##c++
2014-10-13 14:53:41	como	LFS: Java might be a better choice
2014-10-13 14:53:54		govg (~govg@unaffiliated/govg) has joined ##c++
2014-10-13 14:53:57	como	than C++
2014-10-13 14:54:52		SirJonthe (~SirJonthe@c83-176-216-93.cust.tele2.se) has joined ##c++
2014-10-13 14:55:08	LFS	I'm already in Java channel but someone messing with me
2014-10-13 14:55:15	LFS	freenode
2014-10-13 14:55:51	Spark	LFS: www.gritengine.com
2014-10-13 14:56:05		lyindArk (~jzeiger@mail.talpidae.net) has joined ##c++
2014-10-13 14:58:53		clynamen (~clynamen_@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 260 seconds)
2014-10-13 14:59:43		shiver32 (~shiver@198.151.130.219) has quit (Ping timeout: 255 seconds)
2014-10-13 15:00:37		a_le (~a_le@nat/cisco/x-hnahdvcusyiihekr) has joined ##c++
2014-10-13 15:03:03		confusa-est (~confusaes@184.151.61.70) has joined ##c++
2014-10-13 15:03:13		SirJonthe (~SirJonthe@c83-176-216-93.cust.tele2.se) has quit (Quit: SirJonthe)
2014-10-13 15:03:40		asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-13 15:05:13		nucc1 (~fanen@pdpc/supporter/student/nucc1) has quit (Ping timeout: 258 seconds)
2014-10-13 15:06:32		forgottenone (~forgotten@176.42.246.58) has quit (Quit: Konversation terminated!)
2014-10-13 15:08:02		taplaptap (~lol@unaffiliated/tapout) has quit (Ping timeout: 272 seconds)
2014-10-13 15:08:55		EhevuTov (~EhevuTov@96.24.125.20) has joined ##c++
2014-10-13 15:10:09	--	dfletcher is now known as LotsoShibotso
2014-10-13 15:10:32	LFS	no man ... that is gaming engine
2014-10-13 15:10:46	LFS	no games
2014-10-13 15:11:26		deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit (Remote host closed the connection)
2014-10-13 15:11:50	--	LotsoShibotso is now known as dfletcher
2014-10-13 15:12:06		clynamen (~clynamen_@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-10-13 15:12:41		crewshin (~crewshin@pool-74-100-141-7.lsanca.fios.verizon.net) has quit
2014-10-13 15:13:07		crewshin (~crewshin@pool-74-100-141-7.lsanca.fios.verizon.net) has joined ##c++
2014-10-13 15:13:42	--	dfletcher is now known as LotsoShibotso`
2014-10-13 15:13:56		BadApe (~BadApe@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has joined ##c++
2014-10-13 15:14:02		EhevuTov (~EhevuTov@96.24.125.20) has quit (Ping timeout: 260 seconds)
2014-10-13 15:14:14		deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-10-13 15:14:52		Programmer_ (~khaotic@unaffiliated/khaotic) has joined ##c++
2014-10-13 15:15:01		ikrima (~ikrima@76.91.23.45) has joined ##c++
2014-10-13 15:15:02	--	LotsoShibotso` is now known as dfletcher
2014-10-13 15:15:45		Programmer_ (~khaotic@unaffiliated/khaotic) has quit (Read error: Connection reset by peer)
2014-10-13 15:16:03		Programmer_ (~khaotic@unaffiliated/khaotic) has joined ##c++
2014-10-13 15:16:39		FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 244 seconds)
2014-10-13 15:17:47		pstone (~dpeng@216.2.203.2) has quit (Ping timeout: 255 seconds)
2014-10-13 15:17:58		NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-10-13 15:20:06	ville	read the sutter's function syntax proposal. i guess it's better than nothing but rather go with stroustrup's complete revamp
2014-10-13 15:22:04		EhevuTov (~EhevuTov@12.106.130.227) has joined ##c++
2014-10-13 15:22:18	MrFlibble	LFS: why no games? serious money in games.
2014-10-13 15:24:10		evanz (~Evan@cpe-74-138-81-110.swo.res.rr.com) has joined ##c++
2014-10-13 15:24:28	K-ballo	I don't like the "tell me which flag you are using to compile and I'll tell you what your program does" factor
2014-10-13 15:25:44		hellangel7 (~hellangel@117.192.185.240) has quit (Remote host closed the connection)
2014-10-13 15:26:46	NinjaPenguin	ville: Mind sharing the link?
2014-10-13 15:26:57	ville	http://isocpp.org/files/papers/N4165.pdf that's sutter
2014-10-13 15:27:11	ville	http://isocpp.org/files/papers/N4174.pdf that's stroustrup
2014-10-13 15:27:23		cysm (Elite12325@gateway/shell/elitebnc/x-ndqpbstigpqknkmx) has quit (Quit: EliteBNC free bnc service - http://elitebnc.org - be a part of the Elite!)
2014-10-13 15:27:30	NinjaPenguin	Cheers.
2014-10-13 15:27:36		top4o (~chatzilla@93.152.162.95) has joined ##c++
2014-10-13 15:27:44		LBV_User (~leonardo@177.2.128.75) has joined ##c++
2014-10-13 15:28:04	ville	K-ballo: neither offered compiler switch? ok switching your c++ standard on the compiler would
2014-10-13 15:28:40	LFS	MrFlibble: I'll go in deep discussion about the dirty money someone can make from selling games, but in short you're not providing any value for the users
2014-10-13 15:28:43		ircnick123 (~eman@89.204.138.194) has left ##c++
2014-10-13 15:28:55		jaafar (~quassel@208.78.237.1) has joined ##c++
2014-10-13 15:29:00		Darth_Ginger (~Thunderbi@cpe-74-138-187-42.swo.res.rr.com) has joined ##c++
2014-10-13 15:29:11	LFS	vice versa, you're helping in creating more addiction within the society
2014-10-13 15:29:29	kadoban	lol
2014-10-13 15:29:34	LFS	try to give people something good instead of just giving them what they want
2014-10-13 15:29:36	ville	!focus
2014-10-13 15:29:37	nolyc	##c++ focuses on C++. Discuss offtopic things elsewhere; ##c++-general or ##c++-social
2014-10-13 15:29:54		lleo (~Lleo@5ED09ADB.cm-7-1c.dynamic.ziggo.nl) has quit (Quit: mp3&scram)
2014-10-13 15:30:08	LFS	sure nolyc .. I'll do that you're free to fuck off too
2014-10-13 15:30:19		Programmer_ (~khaotic@unaffiliated/khaotic) has quit (Ping timeout: 255 seconds)
2014-10-13 15:30:32		LFS (~John@unaffiliated/lfs) has left ##c++
2014-10-13 15:30:50		delta-nry (~delta-nry@S0106c8fb2658a55a.vc.shawcable.net) has joined ##c++
2014-10-13 15:31:21	K-ballo	ville: uh?
2014-10-13 15:31:53		FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-10-13 15:32:07	ville	i thought your: "22:25:37  K-ballo> I don't like the "tell me which flag you are" was in reference to the function syntax proposals
2014-10-13 15:32:27	K-ballo	ville: it was, but I don't get your comment
2014-10-13 15:32:37		Munt (~munt@83.170.111.148) has quit (Quit: Munt)
2014-10-13 15:32:43	o11c	so what exactly is up with these function syntax proposals? or should I just read them? what's the plan for backwards-compat?
2014-10-13 15:32:53		on4k (~none@78.90.30.16) has joined ##c++
2014-10-13 15:33:12	ville	sutter is backwards compatible. stroustrup's one idea is not.
2014-10-13 15:33:32		cysm (cysm@unaffiliated/paracyst) has joined ##c++
2014-10-13 15:33:42	ville	the break and its fix he suggest would force an improvement to c++ lookup in general though
2014-10-13 15:33:56	ville	K-ballo: i mean neither of them made any requirement of compiler switches.
2014-10-13 15:34:34	ville	K-ballo: but then i managed to perhaps understand what you meant by it. the existing practice of -std= on some compilers for example
2014-10-13 15:34:42		riksteri (~riksteri@dsl-tkubrasgw3-54f96b-216.dhcp.inet.fi) has quit (Read error: Connection reset by peer)
2014-10-13 15:34:50	K-ballo	ville: what I meant was that if I have f(x) and it means one thing with -std=X and another with -std=Y is orders of magnitude worse than having it either work or fail to compile
2014-10-13 15:34:54	o11c	... would this kill ADL with fire?
2014-10-13 15:35:06	ville	no.
2014-10-13 15:35:19		Munt (~munt@5.63.146.228) has joined ##c++
2014-10-13 15:35:24	ville	adl is great. adl saves.
2014-10-13 15:35:49		Guede (~chatzilla@HSI-KBW-095-208-211-078.hsi5.kabel-badenwuerttemberg.de) has joined ##c++
2014-10-13 15:35:50	o11c	I suppose properly killing ADL depends on Concepts
2014-10-13 15:35:53		schleppel (~quassel@141.39.226.237) has joined ##c++
2014-10-13 15:35:54		jaafar (~quassel@208.78.237.1) has quit (Ping timeout: 272 seconds)
2014-10-13 15:36:19	ville	one of the resulting fixes is that non-accessible private-protected members wouldn't fuck it up
2014-10-13 15:38:00	ville	right now the gathering of the potential overload set doesn't care whether something is accessible or not. that decission is done after the potential overload set is gathered and the process may stop short because of non-accessible one or become ambiguous
2014-10-13 15:38:21		delta-nry (~delta-nry@S0106c8fb2658a55a.vc.shawcable.net) has quit (Ping timeout: 244 seconds)
2014-10-13 15:39:05		ToApolytoXaos (~ToApolyto@46.21.62.128) has quit (Quit: Leaving)
2014-10-13 15:39:14	o11c	anyway, what are the odds for C++17 getting concepts?
2014-10-13 15:39:20	K-ballo	uhm, so the exact same code in a slightly different context does different things? isn't the reason for what you are describing that changing accessibility shouldn't change semantics?
2014-10-13 15:39:53	o11c	K-ballo: that conflicts with the principle that adding private members shouldn't affect semantics
2014-10-13 15:40:00		rendar (~I@host2-179-dynamic.12-79-r.retail.telecomitalia.it) has quit (Quit: reboot)
2014-10-13 15:40:08	ville	K-ballo: stroustrub makes a note of it that it made sense in 1984 or something. now he thinks otherwise
2014-10-13 15:40:17	ville	stroustrup
2014-10-13 15:41:48	V-ille	let's just invent new syntax for these unified calls :P
2014-10-13 15:41:56		plitter (~plitter@84.48.49.52) has quit (Read error: Connection reset by peer)
2014-10-13 15:42:08	ville	()x;
2014-10-13 15:42:15	jmaurer	o11c: concepts in C++17: I'm not sure.  There's still a bunch of wording review to do in Urbana-Champaign, and the best outcome is a Technical Specification.  This needs balloting, so we're talking mid-2015 the earliest for the TS.
2014-10-13 15:42:27	 *	V-ille waves at jmaurer
2014-10-13 15:43:00		plitter (~plitter@84.48.49.52) has joined ##c++
2014-10-13 15:43:04		Programmer_ (~khaotic@unaffiliated/khaotic) has joined ##c++
2014-10-13 15:43:25	jmaurer	o11c: For C++17, we need to be done somewhere early 2016, so there isn't  lot of time to get experience with the concepts TS prior to incorporating into the standard proper.
2014-10-13 15:44:11	V-ille	jmaurer: a DIS ballot is.. 4 months, iirc?
2014-10-13 15:44:12	o11c	jmaurer: meh. Then just another reason not to stick with C++
2014-10-13 15:44:31	ville	there are quire few brave souls here tjat will take advantage of concepts soon as an implementation hits clang or gcc trunk
2014-10-13 15:44:35		jmaurer (~jmaurer@ipservice-092-208-227-175.092.208.pools.vodafone-ip.de) has quit (Quit: ircII EPIC5-1.1.1 -- Are we there yet?)
2014-10-13 15:45:09		jmaurer (~jmaurer@ipservice-092-208-227-175.092.208.pools.vodafone-ip.de) has joined ##c++
2014-10-13 15:45:23	K-ballo	or msvc, they claim to be working on it
2014-10-13 15:45:55	V-ille	the gcc implementation is not far from being mergeable
2014-10-13 15:46:02		sixequalszero (~sixequals@unaffiliated/sixequalszero) has quit (Ping timeout: 272 seconds)
2014-10-13 15:46:09		stealth`` (~stealth@p4FDCD342.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2014-10-13 15:46:11	V-ille	I don't know what's the status of the Concepts-TS-candidate in conceptclang
2014-10-13 15:46:25		nug700 (~nug700@184-98-173-4.phnx.qwest.net) has joined ##c++
2014-10-13 15:46:29	o11c	how can msvc even be trying if they don't have two-phase template lookup yet?
2014-10-13 15:46:31		sixequalszero (~sixequals@unaffiliated/sixequalszero) has joined ##c++
2014-10-13 15:46:37		DexxeD (~DexxeD@c-67-162-134-162.hsd1.co.comcast.net) has quit (Ping timeout: 258 seconds)
2014-10-13 15:47:12	K-ballo	o11c: yet, as in they will have it some day?
2014-10-13 15:47:18		deekej (~deekej@195.65.3.245) has quit (Ping timeout: 272 seconds)
2014-10-13 15:47:24	ville	i wonder what the uptake speed on say boost will be for concepts.
2014-10-13 15:47:49		clynamen (~clynamen_@93-50-191-217.ip153.fastwebnet.it) has quit (Quit: WeeChat 1.0)
2014-10-13 15:47:50	V-ille	as an indicator, how much c++11 is in boost?
2014-10-13 15:47:51		PlasmaHH (~kvirc@speedy.projectiwear.org) has joined ##c++
2014-10-13 15:47:54	K-ballo	guessing on the C++11 adoption in Boost as of today, I'd say oh so slow
2014-10-13 15:48:04	ville	K-ballo: at least it's on the sutter slides of the features they are working. towards the bottom-right corner so meaning not soon
2014-10-13 15:48:30	K-ballo	ville: but..but.. they've implemented half constexprs just for it :P
2014-10-13 15:48:31		Hannibal_Smith (~Hannibal_@host68-159-dynamic.6-87-r.retail.telecomitalia.it) has joined ##c++
2014-10-13 15:50:08	ville	V-ille: yep. that's what i had in mind and i haven't looked at what the syntax will be like whether you can ifdef that even nicely
2014-10-13 15:51:13		kikko_fr (~kikko_fr@243.110.6.109.rev.sfr.net) has joined ##c++
2014-10-13 15:51:32	V-ille	luckily boost is not slowed down by what can be ifdeffed "nicely" :P
2014-10-13 15:52:33		pandoxer (ae43de70@gateway/web/freenode/ip.174.67.222.112) has joined ##c++
2014-10-13 15:52:42	ville	that's true too. some of it is more preprocessor than code.
2014-10-13 15:54:15		Slide-O-Mix (~slide@li95-89.members.linode.com) has joined ##c++
2014-10-13 15:54:18		nucc1 (~fanen@pdpc/supporter/student/nucc1) has joined ##c++
2014-10-13 15:55:36	pandoxer	Does anybody know why I keep getting Undefined symbols for architecture x86_64? http://pastebin.com/MGH8wiC0
2014-10-13 15:55:44	PlasmaHH	!undefined reference
2014-10-13 15:55:46	nolyc	Undefined reference is a linker error. It's not a compile error. #includes don't help. You did not define the thing in the error message, you forgot to link the file that defines it, you forgot to link to the library that defines it, or, if it's a static library, you have the wrong order on the linker command line. Check which one. (Note that some linkers call it an unresolved external)
2014-10-13 15:56:07		weemsledeux (~textual@unaffiliated/weems) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-13 15:56:25		sixequalszero (~sixequals@unaffiliated/sixequalszero) has quit (Ping timeout: 255 seconds)
2014-10-13 15:56:27		asmx (asmx@shell.uw-team.org) has joined ##c++
2014-10-13 15:57:04		sixequalszero (~sixequals@unaffiliated/sixequalszero) has joined ##c++
2014-10-13 15:57:08	pandoxer	What arguments do I pass to link whatever is missing?
2014-10-13 15:57:27	K-ballo	pandoxer: no arguments needed, just fix your code
2014-10-13 15:57:39	tworkin	pandoxer: define the undefined symbols
2014-10-13 15:58:41	pandoxer	is it happening because I don't have a constructor?
2014-10-13 15:58:56		hammond (proscan@unaffiliated/portrait) has quit (Ping timeout: 260 seconds)
2014-10-13 15:59:04	K-ballo	pandoxer: you have declared one, but you don't seem to define it.. and it's not the only undefined symbol
2014-10-13 15:59:06	PlasmaHH	it is happennig because you did not link whatever symbol it is missing
2014-10-13 15:59:27		scai (~scai@p4FF0E33D.dip0.t-ipconnect.de) has left ##c++ ("[IRSSI]")
2014-10-13 15:59:35	pandoxer	I don't know what symbol is missing nor how to link it
2014-10-13 15:59:48		deekej (~deekej@195.65.3.245) has joined ##c++
2014-10-13 15:59:51	PlasmaHH	the linker tells you what symbol it is in its error message
2014-10-13 15:59:54		arescorpio (~arescorpi@190.190.244.100) has joined ##c++
2014-10-13 16:01:53	pandoxer	thanks. Implementing the missing constructor and destructor did it. Although I have no idea how this is related to linking hehe
2014-10-13 16:02:04	PlasmaHH	!tu
2014-10-13 16:02:05	nolyc	A source file together with all included headers and included source files, less any source lines skipped by preprocessor conditionals, is called a translation unit, or TU. TUs can be separately translated and then later linked to produce an executable program.
2014-10-13 16:02:30	PlasmaHH	!toolchain
2014-10-13 16:02:32	nolyc	You #include <header.h> then you compile stuff.cpp to a stuff.o object file and then you link all your *.o files together to get the application.
2014-10-13 16:02:45		Anodl (~Anodl@p5DC5A986.dip0.t-ipconnect.de) has joined ##c++
2014-10-13 16:02:48	pandoxer	awesome
2014-10-13 16:03:03		bollullera (~ana@95.63.152.106) has joined ##c++
2014-10-13 16:05:10		Anodl (~Anodl@p5DC5A986.dip0.t-ipconnect.de) has quit (Client Quit)
2014-10-13 16:06:15		devbug (~quassel@d108-180-247-142.bchsia.telus.net) has joined ##c++
2014-10-13 16:08:06		leeN (~leeN@e180215021.adsl.alicedsl.de) has joined ##c++
2014-10-13 16:08:25		como (~como@ec2-54-172-42-111.compute-1.amazonaws.com) has quit (Quit: WeeChat 0.4.2)
2014-10-13 16:09:52		davek (~davek@unaffiliated/tracekill) has joined ##c++
2014-10-13 16:10:00		ncd|leeN (~leeN@g227212151.adsl.alicedsl.de) has quit (Ping timeout: 258 seconds)
2014-10-13 16:11:32		ketamin (~Thunderbi@131.178.200.64) has joined ##c++
2014-10-13 16:11:46		ncd|leeN (~leeN@e180219120.adsl.alicedsl.de) has joined ##c++
2014-10-13 16:11:54		Munt (~munt@5.63.146.228) has quit (Quit: Munt)
2014-10-13 16:13:14		hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-10-13 16:13:24		leen^| (~leeN@e180219120.adsl.alicedsl.de) has joined ##c++
2014-10-13 16:13:47		ncd|leeN (~leeN@e180219120.adsl.alicedsl.de) has quit (Read error: Connection reset by peer)
2014-10-13 16:14:34		mrout (cb617f65@gateway/web/freenode/ip.203.97.127.101) has joined ##c++
2014-10-13 16:14:41	mrout	WHO THE FUCK THINKS THIS IS A GOOD IDEA? http://isocpp.org/files/papers/N4174.pdf
2014-10-13 16:14:49		roxfan (dunno@87.67.230.12) has joined ##c++
2014-10-13 16:14:50	mrout	They should be shot
2014-10-13 16:14:59		leeN (~leeN@e180215021.adsl.alicedsl.de) has quit (Ping timeout: 258 seconds)
2014-10-13 16:15:49		hz (~username@unaffiliated/hz) has quit (Quit: Leaving.)
2014-10-13 16:16:00	jmaurer	mrout: I would suggest a bit of caution with your choice of words.
2014-10-13 16:16:24	mrout	and I would suggest a bit of caution about adding something to the language that obscures what code means.
2014-10-13 16:16:44		ketamin (~Thunderbi@131.178.200.64) has quit (Quit: ketamin)
2014-10-13 16:16:48	K-ballo	nothing was added to the language yet
2014-10-13 16:17:18	jmaurer	mrout: It's a suggestion by one person.  Constructive criticism, e.g. on the std-proposals list, is certainly welcome.
2014-10-13 16:17:30		vanila (~user@unaffiliated/vanila) has joined ##c++
2014-10-13 16:18:01	mrout	It's a suggestion also given by Herb Sutter, who is not 'just one person' but in fact the convener of the committee.
2014-10-13 16:18:24	mrout	the fact that anyone even considers something like this is appalling.
2014-10-13 16:18:26		BadApe (~BadApe@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has quit (Ping timeout: 258 seconds)
2014-10-13 16:18:34	PlasmaHH	its already that way for operators
2014-10-13 16:18:45	K-ballo	mrout: that paper you linked says clearly it's from Bjarne Stroustrup
2014-10-13 16:18:52	jmaurer	mrout: He's the convener. By the very meaning of the word, his job is to find poor souls to host 90+ people every 6 months.
2014-10-13 16:19:10	jmaurer	Nothing more.
2014-10-13 16:19:32	mrout	K-ballo: there are two papers. one by Sutter, and this one by Stroustrup. Two very very important people that are both suggesting something that will makes C++ a hundred times harder to understand than Koenig lookup ever did.
2014-10-13 16:19:36	K-ballo	both bjarne and herb have had rejected proposals in the past, real proposals, not just mere suggestions
2014-10-13 16:20:16		leen^| (~leeN@e180219120.adsl.alicedsl.de) has quit (Ping timeout: 255 seconds)
2014-10-13 16:20:52		thecha (~cha@unaffiliated/thecha) has quit (Ping timeout: 272 seconds)
2014-10-13 16:21:14		proycon (~proycon@092-111-142-033.static.chello.nl) has joined ##c++
2014-10-13 16:22:32	PlasmaHH	it doesnt add complexity to c++ that doesnt already exist within it elsewhere
2014-10-13 16:22:38		xulef (~phuc@hpproliant.cse.unt.edu) has joined ##c++
2014-10-13 16:23:39	jmaurer	I've just read N4174.  It's a rough set of ideas and considerations, but far from baked.
2014-10-13 16:23:48	jmaurer	Quote: "I think a proposal like this is viable (though obviously it needs more work)."
2014-10-13 16:24:11		snyp (~snyp@150.129.132.189) has joined ##c++
2014-10-13 16:24:15		Mannn (~Mannn____@cpe-66-69-232-149.austin.res.rr.com) has joined ##c++
2014-10-13 16:24:57	jmaurer	It does not have core wording, yet, so it's unlikely to get much further than EWG in Urbana.
2014-10-13 16:25:36		ikrima (~ikrima@76.91.23.45) has quit (Ping timeout: 246 seconds)
2014-10-13 16:25:58		pandoxer (ae43de70@gateway/web/freenode/ip.174.67.222.112) has quit (Ping timeout: 246 seconds)
2014-10-13 16:26:23		Atapel (~Atapel@pool-74-101-108-117.nycmny.fios.verizon.net) has quit (Ping timeout: 260 seconds)
2014-10-13 16:26:58		leeN (~leeN@e181198022.adsl.alicedsl.de) has joined ##c++
2014-10-13 16:27:01		SibTiger[Tablet] (~Nicholas@bluesocket.cameron.edu) has quit (Ping timeout: 255 seconds)
2014-10-13 16:27:34		ApEk (47add304@gateway/web/freenode/ip.71.173.211.4) has quit (Quit: Page closed)
2014-10-13 16:28:04		luc4 (~luca@host228-178-dynamic.9-87-r.retail.telecomitalia.it) has joined ##c++
2014-10-13 16:28:19		ricardocrudo (~crudo@186.203.9.88) has joined ##c++
2014-10-13 16:28:39		Sc0tty- (~Scottyyy@81.168.24.241) has joined ##c++
2014-10-13 16:32:06		leeN (~leeN@e181198022.adsl.alicedsl.de) has quit (Ping timeout: 244 seconds)
2014-10-13 16:32:18	ricardocrudo	how can I delete(free) a static global variable that was allocated with new operator in the head of cpp file, after all instances have gone, i.e. the program finish?
2014-10-13 16:32:29		luc4 (~luca@host228-178-dynamic.9-87-r.retail.telecomitalia.it) has quit (Ping timeout: 255 seconds)
2014-10-13 16:32:44	mrout	It should never exist, it's an awful suggestion. Just no.
2014-10-13 16:32:58	mrout	ricardocrudo: don't use new. use smart pointers
2014-10-13 16:33:11	mrout	and containers
2014-10-13 16:33:18		glenfe (~glen@unaffiliated/glenfe) has quit (Quit: Restart)
2014-10-13 16:33:25		luc4 (~luca@host228-178-dynamic.9-87-r.retail.telecomitalia.it) has joined ##c++
2014-10-13 16:33:27	tworkin	ricardocrudo: change it to a value type or smart pointer and it will have its destructor called
2014-10-13 16:34:18		nfk (~nfk@unaffiliated/nfk) has quit (Quit: yawn)
2014-10-13 16:34:19		SibTiger[Tablet] (~Nicholas@bluesocket.cameron.edu) has joined ##c++
2014-10-13 16:34:23		mrout (cb617f65@gateway/web/freenode/ip.203.97.127.101) has quit (Quit: Page closed)
2014-10-13 16:34:30	tworkin	there is also atexit but that isn't moving you in the right direction
2014-10-13 16:34:36	ricardocrudo	mrout and tworkin, I don't know what smart pointer is (I'm a C programmer), but I will check it. Thanks for suggestion
2014-10-13 16:35:02		glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2014-10-13 16:35:06		jaafar (~quassel@208.78.237.1) has joined ##c++
2014-10-13 16:35:31	tworkin	ricardocrudo: check out unique_ptr
2014-10-13 16:36:33	ricardocrudo	tworkin, right. I'm checking it on http://www.cplusplus.com
2014-10-13 16:36:38	hs_	ricardocrudo, what is it exactly?
2014-10-13 16:37:01	hs_	(the static variable)
2014-10-13 16:37:20		BadQuanta (~badquanta@2601:7:100:f45:79c4:9933:7636:cc41) has quit (Ping timeout: 272 seconds)
2014-10-13 16:37:33		Lowl3v3l (~Lowl3v3l@95.91.248.61) has quit (Ping timeout: 250 seconds)
2014-10-13 16:37:45		nfk (~nfk@unaffiliated/nfk) has joined ##c++
2014-10-13 16:38:22	ricardocrudo	hs_: I'm using a library (that was wrapped to c++)  it that allocates a sort of dictionary with all words that the instances can check any time
2014-10-13 16:38:40		Hannibal_Smith (~Hannibal_@host68-159-dynamic.6-87-r.retail.telecomitalia.it) has quit (Quit: Sto andando via)
2014-10-13 16:38:43		LBV_User (~leonardo@177.2.128.75) has quit (Ping timeout: 255 seconds)
2014-10-13 16:38:56		jmaurer (~jmaurer@ipservice-092-208-227-175.092.208.pools.vodafone-ip.de) has quit (Quit: ircII EPIC5-1.1.1 -- Are we there yet?)
2014-10-13 16:39:07	hs_	ricardocrudo, and why does it need to be dynamically allocated?
2014-10-13 16:40:07		PSG_Luna (~PSG_Luna@unaffiliated/psg-luna/x-4025268) has quit (Read error: Connection reset by peer)
2014-10-13 16:40:16		deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-10-13 16:40:19	ricardocrudo	hs_: I don't have control about the dynamic part, it has a function called xxx_new
2014-10-13 16:40:35		PSG_Luna (~PSG_Luna@unaffiliated/psg-luna/x-4025268) has joined ##c++
2014-10-13 16:41:00	ricardocrudo	hs_, I'm calling this function that internally does dynamic allocation
2014-10-13 16:41:10		Joyd (~make@unaffiliated/bryeware) has joined ##c++
2014-10-13 16:41:27		scampbell (~scampbell@mail.scampbell.net) has quit (Remote host closed the connection)
2014-10-13 16:41:34	hs_	ricardocrudo, ok, but keep in mind that "dynamic initialization" of statics might not occur until after main begins
2014-10-13 16:42:13	ricardocrudo	hs_: ok, thanks
2014-10-13 16:42:26		jaafar (~quassel@208.78.237.1) has quit (Ping timeout: 244 seconds)
2014-10-13 16:43:45		deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-10-13 16:45:03		g0th (~g0th@46-127-140-4.dynamic.hispeed.ch) has quit (Ping timeout: 260 seconds)
2014-10-13 16:45:35		FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has joined ##c++
2014-10-13 16:45:42		LBV_User (~leonardo@177.2.128.75) has joined ##c++
2014-10-13 16:47:58		glenfe (~glen@unaffiliated/glenfe) has quit
2014-10-13 16:48:20		glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2014-10-13 16:49:03		xace (~noname@unaffiliated/xace) has quit (Ping timeout: 246 seconds)
2014-10-13 16:50:29		arescorpio (~arescorpi@190.190.244.100) has quit (Excess Flood)
2014-10-13 16:51:03		LBV_User (~leonardo@177.2.128.75) has quit (Remote host closed the connection)
2014-10-13 16:51:11		xace (~noname@unaffiliated/xace) has joined ##c++
2014-10-13 16:51:13		litb (~litb@p4FFD3CC3.dip0.t-ipconnect.de) has joined ##c++
2014-10-13 16:51:15	litb	hello my friends
2014-10-13 16:51:29	litb	can you guys help me with the proposal of herb to make  a->b();  call b(a) ?
2014-10-13 16:51:56	MrFlibble	help you not get a stroke?
2014-10-13 16:51:57	litb	he seems to propose that the free function is used even if a->b is inaccessible
2014-10-13 16:52:34		Joyd (~make@unaffiliated/bryeware) has quit (Read error: Connection timed out)
2014-10-13 16:52:38	litb	i.e not only if the member is not found, but also if the member is merely invisible. this seems to be a bad idea
2014-10-13 16:52:52	MrFlibble	the whole idea is a bad idea
2014-10-13 16:53:04	litb	why do you think it is a bad idea
2014-10-13 16:53:10		leeter (~leeter@unaffiliated/leeter) has quit (Quit: Leaving)
2014-10-13 16:53:18	MrFlibble	there is nothing wrong with how the language currently works.
2014-10-13 16:53:26	K-ballo	{ foo x, y; cout << (x == y); } struct foo { bool operator==(foo const&) const { return true; } }; bool operator=(foo const&, foo const&){ return false; }
2014-10-13 16:53:43		Log1x (Log1x@unaffiliated/log1x) has quit (Ping timeout: 240 seconds)
2014-10-13 16:53:56	 *	K-ballo misses geordi
2014-10-13 16:54:16	hs_	clang, << "blink";
2014-10-13 16:54:19	clang	blink
2014-10-13 16:54:42	litb	MrFlibble, I think the idea is not to fix a problem, but to introduce a featurew
2014-10-13 16:55:08	litb	clang,  { foo x, y; cout << (x == y); } struct foo { bool operator==(foo const&) const { return true; } }; bool operator=(foo const&, foo const&){ return false; }
2014-10-13 16:55:11	clang	error: overloaded 'operator=' must be a non-static member function
2014-10-13 16:55:19	MrFlibble	it is a horrible feature changing what foo->bar means
2014-10-13 16:55:36		Rslc (~Rslc@hq.unifiedlogic.com) has joined ##c++
2014-10-13 16:56:10	litb	MrFlibble, IMO the syntax should be    foo=>bar()     if you want to call bar but wanna consider also free functions
2014-10-13 16:56:23	MrFlibble	that would be better
2014-10-13 16:56:43	litb	it would be unambiguous and would be visually appearing because it's a double arrow :))
2014-10-13 16:57:17		xulef (~phuc@hpproliant.cse.unt.edu) has quit (Ping timeout: 240 seconds)
2014-10-13 16:57:25	MrFlibble	but do we really need this feature? we haven't needed it for 30 years
2014-10-13 16:57:53		pyon (~user@unaffiliated/pyon) has quit (Ping timeout: 245 seconds)
2014-10-13 16:58:14	K-ballo	MrFlibble: not saying that we do, but that argument can be said about any new proposal
2014-10-13 16:58:36	MrFlibble	the proposal sucks but that is just my opinion
2014-10-13 16:59:12		LBV_User (~leonardo@177.2.128.75) has joined ##c++
2014-10-13 16:59:29		Log1x (Log1x@unaffiliated/log1x) has joined ##c++
2014-10-13 16:59:57		pyon-yuri (~suckmy@unaffiliated/pyon) has quit (Ping timeout: 255 seconds)
2014-10-13 17:00:02	MrFlibble	so if a is a pointer you can do (*a)->b(); ? rediculous
2014-10-13 17:00:08	MrFlibble	ridiculous*
2014-10-13 17:00:44		motaka2 (~Thunderbi@151.232.101.211) has joined ##c++
2014-10-13 17:02:13		pyon (~user@unaffiliated/pyon) has joined ##c++
2014-10-13 17:03:41	MrFlibble	got a URL for Sutter's proposal?
2014-10-13 17:05:35		b_jonas (~x@russell2.math.bme.hu) has quit (Ping timeout: 258 seconds)
2014-10-13 17:06:32	K-ballo	http://isocpp.org/blog/category/standardization
2014-10-13 17:07:55		NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-10-13 17:10:05		PaulOrekhov (~PaulOrekh@95-31-161-55.broadband.corbina.ru) has joined ##c++
2014-10-13 17:10:09		bmt (~bmt@agbf203.neoplus.adsl.tpnet.pl) has quit (Quit: Leaving)
2014-10-13 17:11:20		Ulrike_Rayne (~Ulrike_Ra@cpe-65-24-84-7.columbus.res.rr.com) has quit (Quit: ZNC - http://znc.in)
2014-10-13 17:11:50		sphenxes (~sphenxes@85-127-93-80.dynamic.xdsl-line.inode.at) has quit (Remote host closed the connection)
2014-10-13 17:13:20		hamid (~nithp@unaffiliated/hamid) has quit (Quit: Lost terminal)
2014-10-13 17:13:36		pstone (~dpeng@216.2.203.2) has joined ##c++
2014-10-13 17:13:58		phillips1012 (~phillips1@72.42.104.172) has joined ##c++
2014-10-13 17:14:00		wheals (~wheals@160.253.0.56) has quit (Quit: Leaving)
2014-10-13 17:14:23		phillips1012 (~phillips1@72.42.104.172) has quit (Max SendQ exceeded)
2014-10-13 17:15:24		irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has joined ##c++
2014-10-13 17:15:51		luc4 (~luca@host228-178-dynamic.9-87-r.retail.telecomitalia.it) has quit (Ping timeout: 272 seconds)
2014-10-13 17:16:47		seishun (~Kakera@78.84.133.225) has quit (Ping timeout: 260 seconds)
2014-10-13 17:17:19		bolt (~r00t@unaffiliated/bolt) has joined ##c++
2014-10-13 17:17:28	MrFlibble	hmm
2014-10-13 17:17:40		b_jonas (~x@russell2.math.bme.hu) has joined ##c++
2014-10-13 17:17:48	MrFlibble	litb: after actually reading his proposal rather than going off what is said here he does have a good case
2014-10-13 17:21:24		Pullphinger (~Pullphing@12.40.23.68) has quit
2014-10-13 17:22:04		Nando_k (~Nando_k@dslb-178-003-077-156.178.003.pools.vodafone-ip.de) has quit (Ping timeout: 276 seconds)
2014-10-13 17:23:22	MrFlibble	litb: I guess my default position is to be hostile change; must be getting old :)
2014-10-13 17:23:33	MrFlibble	to change*
2014-10-13 17:23:45		xico (~xico@cpe-76-88-16-80.san.res.rr.com) has joined ##c++
2014-10-13 17:24:16		bmf1 (~bmf1@216.252.92.155) has joined ##c++
2014-10-13 17:24:43		oriong (~oriong@athedsl-307557.home.otenet.gr) has joined ##c++
2014-10-13 17:24:57		deekej (~deekej@195.65.3.245) has quit (Ping timeout: 240 seconds)
2014-10-13 17:26:01	litb	it is backward incompatible with   foo<&Bar::operator=>    but I'm ok with breaking that code. probably very few projects will fail to compile
2014-10-13 17:26:32		Munnu (~timo@91-158-146-113.elisa-laajakaista.fi) has quit (Remote host closed the connection)
2014-10-13 17:28:35		ambro718 (~ambro@gentoo/contributor/ambro718) has quit (Quit: Konversation terminated!)
2014-10-13 17:28:55	MrFlibble	I don't think => would be a good idea litb
2014-10-13 17:29:14	davek	Anyone have any nifty tricks for wrapping random-generators/distributions? For instance, in order to adequately test the behaviour of a module when that behaviour is dependent upon a random source.
2014-10-13 17:29:58	MrFlibble	litb: what if a is a reference rather than a pointer? his proposal is for both a.f() and a->f().
2014-10-13 17:30:14		govg (~govg@unaffiliated/govg) has quit (Ping timeout: 240 seconds)
2014-10-13 17:30:48	litb	MrFlibble, thought about that too. don't have a solution yetr
2014-10-13 17:30:55		Ulrike_Rayne (~Ulrike_Ra@cpe-65-24-84-7.columbus.res.rr.com) has joined ##c++
2014-10-13 17:31:03	litb	MrFlibble, what about "(a or).f()"
2014-10-13 17:31:05		LBV_User (~leonardo@177.2.128.75) has quit (Quit: Bye all :))
2014-10-13 17:31:07	MrFlibble	I think his proposal as it stands is doable.
2014-10-13 17:31:27		motaka2 (~Thunderbi@151.232.101.211) has left ##c++
2014-10-13 17:32:44		Backinside (~Thunderbi@business-86-101-237-121.business.broadband.hu) has quit (Quit: Backinside)
2014-10-13 17:33:31		ison__ (2eba4dc0@gateway/web/freenode/ip.46.186.77.192) has quit (Ping timeout: 246 seconds)
2014-10-13 17:34:10		pixelate (~pixelate@139.0.112.114) has joined ##c++
2014-10-13 17:34:28	litb	MrFlibble, i just disagree that he wants to look for free functions if the member is inaccessible
2014-10-13 17:35:08	litb	it has always been the rule that making access private either doesn't change the program, or makes it have an access error (module SFINAE ofc)
2014-10-13 17:35:24	io2	it could be a secret plan to break sfinae
2014-10-13 17:35:27	io2	who knows
2014-10-13 17:35:57	io2	not convinced these unified syntax proposals are actually "awesome"
2014-10-13 17:36:00	MrFlibble	litb: I think you meant 'modulo' :)
2014-10-13 17:36:59		PJBoy (~PJBoy@unaffiliated/pjboy) has joined ##c++
2014-10-13 17:37:17	MrFlibble	litb: make a comment if you feel strongly then
2014-10-13 17:38:09		lmat (~lmat@c-50-129-81-232.hsd1.il.comcast.net) has quit (Ping timeout: 272 seconds)
2014-10-13 17:38:09		Artej (~artej@235-64-133-95.pool.ukrtel.net) has quit (Read error: Connection reset by peer)
2014-10-13 17:38:10		deekej (~deekej@195.65.3.245) has joined ##c++
2014-10-13 17:38:37		David (~David@unaffiliated/david) has quit (Ping timeout: 240 seconds)
2014-10-13 17:39:22	io2	i doubt he will, MrFlibble, you are not making any sense!
2014-10-13 17:39:28	io2	:)
2014-10-13 17:39:30	io2	j/k
2014-10-13 17:39:33	io2	.
2014-10-13 17:40:20		jorj (~jorj@162.220.240.216) has joined ##c++
2014-10-13 17:40:45		Haswell (~Haswell@unaffiliated/haswell) has quit (Quit: Haswell)
2014-10-13 17:42:49		plitter (~plitter@84.48.49.52) has quit (Read error: Connection reset by peer)
2014-10-13 17:43:20		plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-10-13 17:46:59		pstone1 (~dpeng@216.2.203.2) has joined ##c++
2014-10-13 17:47:06		pstone1 (~dpeng@216.2.203.2) has left ##c++
2014-10-13 17:47:44		asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has joined ##c++
2014-10-13 17:47:45		pstone (~dpeng@216.2.203.2) has quit (Ping timeout: 258 seconds)
2014-10-13 17:47:52		pstone (~dpeng@216.2.203.2) has joined ##c++
2014-10-13 17:47:58		asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has quit (Client Quit)
2014-10-13 17:48:11		Darth_Ginger (~Thunderbi@cpe-74-138-187-42.swo.res.rr.com) has quit (Quit: Darth_Ginger)
2014-10-13 17:50:30		immibis (~ChatZill1@122-59-227-101.jetstream.xtra.co.nz) has joined ##c++
2014-10-13 17:51:08		asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has joined ##c++
2014-10-13 17:51:43		lmat (~lmat@c-50-129-81-232.hsd1.il.comcast.net) has joined ##c++
2014-10-13 17:51:44		jzk1 (~jzk@ec2-54-193-206-8.us-west-1.compute.amazonaws.com) has quit (K-Lined)
2014-10-13 17:51:52		ski (~ski@remote1.student.chalmers.se) has joined ##c++
2014-10-13 17:52:02		deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit (Remote host closed the connection)
2014-10-13 17:52:21		io2 (~io2@unaffiliated/irrequietus) has quit (Quit: ...take irc away, what are you? genius, billionaire, playboy, philanthropist)
2014-10-13 17:52:38		surd (~surd@unaffiliated/surd) has joined ##c++
2014-10-13 17:53:48		ambro718 (~ambro@gentoo/contributor/ambro718) has joined ##c++
2014-10-13 17:54:04		Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Quit: https://twitter.com/AleenaMaleena)
2014-10-13 17:54:36		irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has quit (Quit: Lost terminal)
2014-10-13 17:54:41		ggherdov` (sid11402@gateway/web/irccloud.com/x-cfyvfjpchizljgzc) has quit (Read error: Connection reset by peer)
2014-10-13 17:54:54		ggherdov` (sid11402@gateway/web/irccloud.com/x-tddgjdpxucidevsx) has joined ##c++
2014-10-13 17:55:37		deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-10-13 17:55:43		chrelad (~chrisdale@66.234.113.42) has joined ##c++
2014-10-13 17:55:45	--	oleo is now known as Guest70443
2014-10-13 17:55:52		chrelad (~chrisdale@66.234.113.42) has left ##c++
2014-10-13 17:56:32		dseitz (~dseitz@ip70-191-237-177.pn.at.cox.net) has quit (Ping timeout: 260 seconds)
2014-10-13 17:57:39		K-ballo (~sonoio@181.228.139.31) has quit (Ping timeout: 272 seconds)
2014-10-13 17:57:44		oleo__ (~oleo@xdsl-78-35-134-156.netcologne.de) has joined ##c++
2014-10-13 17:58:17		Natch (~Natch@c-0ecce155.25-4-64736c10.cust.bredbandsbolaget.se) has quit (Ping timeout: 272 seconds)
2014-10-13 17:58:43		K-ballo (~sonoio@181.228.139.31) has joined ##c++
2014-10-13 17:59:16		jitsuin (~chatzilla@216.14.6.130) has quit (Quit: I EAT BABIES!!)
2014-10-13 17:59:41		Guest70443 (~oleo@xdsl-84-44-177-209.netcologne.de) has quit (Ping timeout: 272 seconds)
2014-10-13 18:02:11		plamen (user@nat/mslo/x-btvekvaeeapanngs) has quit (Quit: ERC Version 5.3 (IRC client for Emacs))
2014-10-13 18:02:33		FunkyAss (~Funky@unaffiliated/funkyass) has joined ##c++
2014-10-13 18:03:57		Programmer_ (~khaotic@unaffiliated/khaotic) has quit (Ping timeout: 246 seconds)
2014-10-13 18:04:51		PlasmaHH (~kvirc@speedy.projectiwear.org) has quit (Ping timeout: 260 seconds)
2014-10-13 18:05:36		David (~David@unaffiliated/david) has joined ##c++
2014-10-13 18:05:37		SibTiger[Tablet] (~Nicholas@bluesocket.cameron.edu) has quit (Ping timeout: 244 seconds)
2014-10-13 18:06:13		deekej (~deekej@195.65.3.245) has quit (Ping timeout: 245 seconds)
2014-10-13 18:07:43		Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has quit (Quit: ZNC - http://znc.sourceforge.net)
2014-10-13 18:09:14		kurahaupo (~kurahaupo@118.148.226.180) has quit (Ping timeout: 240 seconds)
2014-10-13 18:09:29		PSG_Luna (~PSG_Luna@unaffiliated/psg-luna/x-4025268) has quit (Read error: Connection reset by peer)
2014-10-13 18:10:56		only_the_bear_ (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has quit (Remote host closed the connection)
2014-10-13 18:11:24		Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-10-13 18:11:28		sohail (~user@unaffiliated/sohail) has quit (Ping timeout: 260 seconds)
2014-10-13 18:11:35		only_the_bear (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has joined ##c++
2014-10-13 18:12:23		NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-10-13 18:13:57		shintah (bebble@h-140-107.a336.priv.bahnhof.se) has quit (Quit: Hejdå!)
2014-10-13 18:14:43		madist (madist@unaffiliated/madist) has joined ##c++
2014-10-13 18:14:44		pstone1 (~dpeng@216.2.203.2) has joined ##c++
2014-10-13 18:14:56		Natch (~Natch@c-0ecce155.25-4-64736c10.cust.bredbandsbolaget.se) has joined ##c++
2014-10-13 18:15:18		Sc0tty- (~Scottyyy@81.168.24.241) has quit
2014-10-13 18:15:23		pstone (~dpeng@216.2.203.2) has quit (Ping timeout: 272 seconds)
2014-10-13 18:15:50		snyp (~snyp@150.129.132.189) has quit (Quit: Byeeeee)
2014-10-13 18:15:59		pstone1 (~dpeng@216.2.203.2) has left ##c++
2014-10-13 18:16:37		deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-10-13 18:17:56		BlaXpirit (~blaxpirit@90-69-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-10-13 18:18:51		BadApe (~BadApe@cpc24-cmbg15-2-0-cust120.5-4.cable.virginm.net) has joined ##c++
2014-10-13 18:19:08		deekej (~deekej@195.65.3.245) has joined ##c++
2014-10-13 18:21:24		SibTiger[Tablet] (~Nicholas@bluesocket.cameron.edu) has joined ##c++
2014-10-13 18:23:17		mentoc (~half@unaffiliated/mentoc) has joined ##c++
2014-10-13 18:23:42	mentoc	How much OOP is used in a typical C++ job?
2014-10-13 18:24:01	tworkin	too much and poorly
2014-10-13 18:24:16	mentoc	tworkin: interesting... I heard hardly at all
2014-10-13 18:24:31		ac_slater_ (~weechat@dhcp89-69-173.bbn.com) has quit (Quit: WeeChat 1.0.1)
2014-10-13 18:25:00	tworkin	totally depends on company culture/product. some places are really "c with classes" and thats sad
2014-10-13 18:25:25		Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2014-10-13 18:25:41	mentoc	tworkin: sad because of all the memory leaks they cause? ;)
2014-10-13 18:27:00	tworkin	yeah. and use after free. and pointer aliasing, and duplicate code paths
2014-10-13 18:28:39		DualDie (~dualdie@p5DC785AD.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2014-10-13 18:29:07		surd (~surd@unaffiliated/surd) has quit (Ping timeout: 260 seconds)
2014-10-13 18:29:23		schleppel (~quassel@141.39.226.237) has quit (Read error: Connection reset by peer)
2014-10-13 18:29:44	mentoc	tworkin: what does duplicate code paths mean?
2014-10-13 18:30:28	emg	given a std::vector<int> with size n, I want to set all values to 0. what's the best way? (I've come across vector<int>(n).swap(myvec); and myvec = vector<int>(n);)
2014-10-13 18:30:41		BinaryAddicted (~BinaryAdd@194.230.155.112) has joined ##c++
2014-10-13 18:30:44	emg	specifically keeping size n
2014-10-13 18:30:48		mentoc (~half@unaffiliated/mentoc) has quit (Quit: ahhhhhhhhhh)
2014-10-13 18:31:45	Eelis	emg: fill(v.begin(), v.end(), 0);
2014-10-13 18:33:26	emg	Eelis: even better. thank you
2014-10-13 18:33:29	hs_	<< vector<int>(10);
2014-10-13 18:33:34	hs_	clang, << vector<int>(10);
2014-10-13 18:33:37	clang	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
2014-10-13 18:34:44	hs_	that will do value initialization, and in the case of int, that is zero initialization
2014-10-13 18:35:10	hs_	just don't confuse it with vector<int>{10};
2014-10-13 18:35:22	Eelis	hs_: he has an existing vector.
2014-10-13 18:35:37	hs_	oh I see
2014-10-13 18:36:15		jitsuin (~chatzilla@cpe-23-243-174-121.socal.res.rr.com) has joined ##c++
2014-10-13 18:38:19		asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has quit (Read error: Connection reset by peer)
2014-10-13 18:38:31		ChaseTrains (~shiroyama@gateway/tor-sasl/shiroyamakota/x-99368086) has joined ##c++
2014-10-13 18:38:37	Eelis	hopefully in C++17 we can write fill(v, 0);
2014-10-13 18:38:46		asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has joined ##c++
2014-10-13 18:38:57	Eelis	without having to use boost
2014-10-13 18:39:09		ChaseTrains (~shiroyama@gateway/tor-sasl/shiroyamakota/x-99368086) has left ##c++
2014-10-13 18:39:10	Oxyd	Ah, still dreaming the same dreams we dreamt before C++11.
2014-10-13 18:39:22	Eelis	C++ dreams come true all the time
2014-10-13 18:39:36	Oxyd	Each version brings true one dream.
2014-10-13 18:39:41		jaafar (~quassel@208.78.237.16) has joined ##c++
2014-10-13 18:41:44		on4k (~none@78.90.30.16) has quit (Quit: Leaving)
2014-10-13 18:41:52		DexxeD (~DexxeD@67.162.134.162) has joined ##c++
2014-10-13 18:42:59		litb (~litb@p4FFD3CC3.dip0.t-ipconnect.de) has quit (Quit: Verlassend)
2014-10-13 18:43:48	emg	hs_: no worries there, using very old gcc, {} initializers don't exist :-(
2014-10-13 18:44:31		unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has quit (Ping timeout: 260 seconds)
2014-10-13 18:46:28		pi- (~Ohmu@cpc69129-oxfd25-2-0-cust987.4-3.cable.virginm.net) has joined ##c++
2014-10-13 18:47:30		RangerBob (~Brian@pool-173-72-144-130.clppva.fios.verizon.net) has joined ##c++
2014-10-13 18:50:09		hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 246 seconds)
2014-10-13 18:51:52		TomyLobo (~TomyLobo@91.65.115.103) has quit (Quit: Standby mode...)
2014-10-13 18:52:00		iFire (~fire@unaffiliated/ifire) has joined ##c++
2014-10-13 18:52:17	iFire	https://travis-ci.org/fire/tinch_pp/builds/37877967
2014-10-13 18:52:24	iFire	I have no idea what's wrong.
2014-10-13 18:52:44		jaafar (~quassel@208.78.237.16) has quit (Ping timeout: 240 seconds)
2014-10-13 18:52:56	Eelis	!javascript
2014-10-13 18:55:42		Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has quit (Read error: Connection reset by peer)
2014-10-13 18:58:17		ikrima (~ikrima@rrcs-76-79-205-82.west.biz.rr.com) has joined ##c++
2014-10-13 18:59:36		destenson (~destenson@wsip-70-167-188-130.sd.sd.cox.net) has quit (Ping timeout: 246 seconds)
2014-10-13 18:59:44		mx6523 (~will@75-106-141-12.cust.wildblue.net) has joined ##c++
2014-10-13 18:59:52		Andy-chan2 (~Andy-chan@xdsl-87-78-156-222.netcologne.de) has quit (Read error: Connection reset by peer)
2014-10-13 19:00:02		NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Quit: Leaving...)
2014-10-13 19:00:19		RangerBob (~Brian@pool-173-72-144-130.clppva.fios.verizon.net) has quit (Quit: Help help I'm being repressed!)
2014-10-13 19:00:21		Andy-chan (~Andy-chan@xdsl-87-78-156-222.netcologne.de) has joined ##c++
2014-10-13 19:00:51	mx6523	is there a lightweight static linkable gui library that works in windows? fltk won't compile with mingw
2014-10-13 19:00:54		deekej (~deekej@195.65.3.245) has quit (Remote host closed the connection)
2014-10-13 19:01:13	iFire	mx6523: I haven't looked into gwen in ages
2014-10-13 19:01:19	iFire	it might be useful
2014-10-13 19:01:43	iFire	https://github.com/garrynewman/GWEN
2014-10-13 19:01:45		King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has quit (Ping timeout: 258 seconds)
2014-10-13 19:02:07	mx6523	thanks, iFire. i'm checking it out
2014-10-13 19:02:21	iFire	note there's a opengl 3 patch in pr
2014-10-13 19:02:27		cerouno (~cerouno@unaffiliated/blocki) has quit (Ping timeout: 244 seconds)
2014-10-13 19:02:56		KnownSyntax (uid7983@gateway/web/irccloud.com/x-sroxqlmrffwfxuag) has quit (Quit: Connection closed for inactivity)
2014-10-13 19:03:12	iFire	mx6523: also including an entire web browser is kind of non lightweight.. but it's possible
2014-10-13 19:04:24	iFire	gwen https://djungxnpq2nug.cloudfront.net/image/cache/5/7/57f6d4291d52c9346c7f722ccd285e3c-1024.jpg
2014-10-13 19:06:04		Trieste (~Trieste@unaffiliated/trieste) has quit (Ping timeout: 260 seconds)
2014-10-13 19:07:37		ambro718 (~ambro@gentoo/contributor/ambro718) has quit (Ping timeout: 244 seconds)
2014-10-13 19:07:37		Oxyd (~oxyd@pdpc/supporter/student/oxyd) has quit (Ping timeout: 244 seconds)
2014-10-13 19:07:52		Trieste (~Trieste@unaffiliated/trieste) has joined ##c++
2014-10-13 19:09:18		BinaryAddicted (~BinaryAdd@194.230.155.112) has quit
2014-10-13 19:09:59		iptable (~iptable@81.149.85.42) has quit (Ping timeout: 272 seconds)
2014-10-13 19:11:45		kikko_fr (~kikko_fr@243.110.6.109.rev.sfr.net) has quit (Quit: kikko_fr)
2014-10-13 19:12:14		jaafar (~quassel@208.78.237.1) has joined ##c++
2014-10-13 19:13:22		iptable (~iptable@81.149.85.42) has joined ##c++
2014-10-13 19:14:11		snakenerd (~Thunderbi@177.43.5.106) has joined ##c++
2014-10-13 19:15:50	--	unreal_ is now known as unreal
2014-10-13 19:16:56		bollullera (~ana@95.63.152.106) has quit (Read error: Connection reset by peer)
2014-10-13 19:17:11		bollullera (~ana@95.63.152.106) has joined ##c++
2014-10-13 19:17:20		aslant (~aslant@94.197.120.110.threembb.co.uk) has joined ##c++
2014-10-13 19:17:28		ikrima (~ikrima@rrcs-76-79-205-82.west.biz.rr.com) has quit (Ping timeout: 272 seconds)
2014-10-13 19:17:43		bollullera (~ana@95.63.152.106) has quit (Max SendQ exceeded)
2014-10-13 19:18:26		bollullera (~ana@95.63.152.106) has joined ##c++
2014-10-13 19:18:33		jaafar (~quassel@208.78.237.1) has quit (Ping timeout: 255 seconds)
2014-10-13 19:18:53		bollullera (~ana@95.63.152.106) has quit (Max SendQ exceeded)
2014-10-13 19:18:54		aslant (~aslant@94.197.120.110.threembb.co.uk) has quit (Remote host closed the connection)
2014-10-13 19:19:41		nfk (~nfk@unaffiliated/nfk) has quit (Quit: yawn)
2014-10-13 19:19:53		dconroy (~dconroy@c-76-19-64-151.hsd1.ma.comcast.net) has joined ##c++
2014-10-13 19:20:41		dconroy (~dconroy@c-76-19-64-151.hsd1.ma.comcast.net) has quit (Quit: dconroy)
2014-10-13 19:21:02		JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-10-13 19:22:22		pstone (~dpeng@216.2.203.2) has joined ##c++
2014-10-13 19:23:03		tworkin (~Adium@97.77.193.138) has quit (Quit: Leaving.)
2014-10-13 19:23:12		hexagoxel_ (~hexagoxel@kiel-5f769aa2.pool.mediaWays.net) has joined ##c++
2014-10-13 19:24:17		lmat (~lmat@c-50-129-81-232.hsd1.il.comcast.net) has quit (Ping timeout: 240 seconds)
2014-10-13 19:26:08		hexagoxel (~hexagoxel@kiel-5f76869e.pool.mediaWays.net) has quit (Ping timeout: 250 seconds)
2014-10-13 19:26:34		Orbitrix (~Huevos@c-76-113-30-226.hsd1.nm.comcast.net) has quit (Remote host closed the connection)
2014-10-13 19:27:02		Maxel (~Maxel@24-159-207-34.static.roch.mn.charter.com) has quit (Read error: Connection reset by peer)
2014-10-13 19:27:11		mx6523 (~will@75-106-141-12.cust.wildblue.net) has quit (Read error: Connection reset by peer)
2014-10-13 19:27:19		BlackPhoenix (~BlackPhoe@ip-6317.proline.net.ua) has joined ##c++
2014-10-13 19:27:21		thief (~realtime@unaffiliated/realtime) has joined ##c++
2014-10-13 19:27:27		Maxel (~Maxel@24-159-207-34.static.roch.mn.charter.com) has joined ##c++
2014-10-13 19:27:29		top4o (~chatzilla@93.152.162.95) has quit (Ping timeout: 245 seconds)
2014-10-13 19:27:34		antons__ (~antons@199.48.120.2) has joined ##c++
2014-10-13 19:30:21		cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has quit (Ping timeout: 260 seconds)
2014-10-13 19:30:43		snakenerd (~Thunderbi@177.43.5.106) has quit (Quit: snakenerd)
2014-10-13 19:30:49		Natch (~Natch@c-0ecce155.25-4-64736c10.cust.bredbandsbolaget.se) has quit (Ping timeout: 260 seconds)
2014-10-13 19:30:49		realtime (~realtime@unaffiliated/realtime) has quit (Ping timeout: 260 seconds)
2014-10-13 19:30:49		BlackFox (~BlackPhoe@ip-6317.proline.net.ua) has quit (Ping timeout: 260 seconds)
2014-10-13 19:30:49		antons_ (~antons@199.48.120.2) has quit (Ping timeout: 260 seconds)
2014-10-13 19:30:49		naraku9333 (~quassel@c-68-51-98-34.hsd1.il.comcast.net) has quit (Ping timeout: 260 seconds)
2014-10-13 19:31:03		Kelsie (~Kelsie@unaffiliated/kelsie) has joined ##c++
2014-10-13 19:31:07		cvtsx (~cvtsx@cpe-76-171-90-107.socal.res.rr.com) has joined ##c++
2014-10-13 19:31:11	Bigcheese	"The performance penalty that comes with exceptions can be avoided by not making use of them."
2014-10-13 19:31:16	Bigcheese	This is not true.
2014-10-13 19:31:25		surd (~surd@unaffiliated/surd) has joined ##c++
2014-10-13 19:31:56	Bigcheese	It adds exceptional edges in the control flow graph.
2014-10-13 19:32:41		dconroy (~dconroy@c-76-19-64-151.hsd1.ma.comcast.net) has joined ##c++
2014-10-13 19:32:49	tsimpson	code that deals with exceptions will not be executed unless you actually throw
2014-10-13 19:33:03	tsimpson	at least in any sane implementation
2014-10-13 19:33:11		heiner (~heiner@p5DC4EC20.dip0.t-ipconnect.de) has joined ##c++
2014-10-13 19:33:13		jitsuin (~chatzilla@cpe-23-243-174-121.socal.res.rr.com) has quit (Ping timeout: 246 seconds)
2014-10-13 19:33:25	Bigcheese	Doesn't matter, the control flow is still there. It makes optimization harder.
2014-10-13 19:33:39	Bigcheese	And strictly prevents some optimizations.
2014-10-13 19:33:56		Kelsie|2 (~Kelsie@unaffiliated/kelsie) has quit (Ping timeout: 272 seconds)
2014-10-13 19:34:23	o11c	Bigcheese is correct
2014-10-13 19:34:26	tsimpson	it's not really going to be harder than trying to optimize arrow code
2014-10-13 19:34:54		Oxyd (~oxyd@pdpc/supporter/student/oxyd) has joined ##c++
2014-10-13 19:35:11	Bigcheese	!ggl arrow code
2014-10-13 19:35:13	nolyc	http://character-code.com/arrows-html-codes.php
2014-10-13 19:37:05		nevodka (~Nevodka@c-24-143-102-214.customer.broadstripe.net) has joined ##c++
2014-10-13 19:38:17		naraku9333 (~quassel@c-68-51-98-34.hsd1.il.comcast.net) has joined ##c++
2014-10-13 19:39:31	tsimpson	nested if-else-blocks
2014-10-13 19:40:30	Bigcheese	Every single call gets it, not just calls with error returns.
2014-10-13 19:42:32		Ademan (~dan@sfs-wifi-aruba-dhcp-130-212-127-245.sfsu.edu) has joined ##c++
2014-10-13 19:43:15		plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-10-13 19:43:17		syncrow (syncrow@unaffiliated/syncrow) has quit (Quit: Lost terminal)
2014-10-13 19:44:39		plitter (~plitter@84.48.49.52) has joined ##c++
2014-10-13 19:45:43		merijn (~merijn@inet-hqmc08-o.oracle.com) has joined ##c++
2014-10-13 19:47:21		vocodork (~vocoder@94-227-99-249.access.telenet.be) has quit (Quit: http://viennaensemblepro.com | http://viennamirpro.com)
2014-10-13 19:48:15		shintahW2 (~oer894n@c83-248-102-44.bredband.comhem.se) has joined ##c++
2014-10-13 19:48:46	merijn	I'm doing an N-ways merge sort of data from the network, for each connection I know the current lowest element. Right now I use (std::vector backed) std::priority_queue to pop connection from the queue, insert lowest element, reinsert into priority_queue sort by it's new lowest element.
2014-10-13 19:49:07	iFire	doesn't seem to be multicore
2014-10-13 19:49:37		MrFlibble (LunarJetma@2.221.166.187) has quit (Quit: MrFlibble)
2014-10-13 19:49:44	merijn	However, this is still slower than I would like, would there be a more efficient way to do this without writing my own priority_queue? (i.e. would another backing container be more efficient)
2014-10-13 19:50:03		vl4kn0 (~vl4kn0@bband-dyn226.178-41-73.t-com.sk) has quit (Ping timeout: 255 seconds)
2014-10-13 19:50:11	iFire	merijn: what platform are you on?
2014-10-13 19:50:14		QualityAddict (~Jason.Smi@ip68-102-62-117.ks.ok.cox.net) has joined ##c++
2014-10-13 19:50:30	merijn	iFire: I wouldn't really know how to parallelise it efficiently
2014-10-13 19:50:36		emg (~emg@74.217.148.5) has quit (Quit: emg)
2014-10-13 19:51:16		shintahW (~oer894n@c83-248-102-44.bredband.comhem.se) has quit (Ping timeout: 260 seconds)
2014-10-13 19:51:16	--	shintahW2 is now known as shintahW
2014-10-13 19:51:47	merijn	iFire: Scientific linux on x86, using recent g++/clang++ and c++11
2014-10-13 19:52:18	merijn	Well, I guess x86_64, technically
2014-10-13 19:53:32		Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has joined ##c++
2014-10-13 19:53:44	Ademan	so I have a templated class   template <typename T> class Foo {static const T foo;} I want to initialize this like so:   template<> const char * Foo<char *>::foo = "foo"; but g++ complains that Foo<char *>::foo is a char * const rather than a const char *. I think I understand why, but can I get it to be a const char * instead?
2014-10-13 19:55:17		Mayzie (~Mayazcher@unaffiliated/mayazcherquoi) has joined ##c++
2014-10-13 19:55:24	K-ballo	Ademan: not really
2014-10-13 19:55:41	K-ballo	unless pointers are a special case of yours
2014-10-13 19:58:53		fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-10-13 19:59:13		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-10-13 19:59:35		SlashLife (~slashlife@botters/slashlife) has joined ##c++
2014-10-13 20:01:40		arescorpio (~arescorpi@190.190.244.100) has joined ##c++
2014-10-13 20:01:48		JamesNZ (~james@fedora/JamesNZ) has quit (Remote host closed the connection)
2014-10-13 20:03:46		sohail (~user@unaffiliated/sohail) has joined ##c++
2014-10-13 20:04:27	o11c	Ademan: why *would* you expect that to work?
2014-10-13 20:04:33	o11c	just use Foo<const char *>
2014-10-13 20:04:51	o11c	or even Foo<char[n]> if that works
2014-10-13 20:06:23	hs_	Ademan, if it is const you can initialize it within the class
2014-10-13 20:06:57		hexagoxel_ (~hexagoxel@kiel-5f769aa2.pool.mediaWays.net) has quit (Quit: Ex-Chat)
2014-10-13 20:08:14		only_the_bear_ (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has joined ##c++
2014-10-13 20:09:49		davidstone (~david@174-29-88-81.hlrn.qwest.net) has joined ##c++
2014-10-13 20:10:21	hs_	oh wait, that won't help you a bit
2014-10-13 20:10:31		only_the_bear (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has quit (Ping timeout: 264 seconds)
2014-10-13 20:11:20		systemfault (~Systemfau@oftn/member/systemfault) has joined ##c++
2014-10-13 20:11:43		jitsuin (~chatzilla@cpe-23-243-174-121.socal.res.rr.com) has joined ##c++
2014-10-13 20:12:24		a_le (~a_le@nat/cisco/x-hnahdvcusyiihekr) has quit (Remote host closed the connection)
2014-10-13 20:12:42		PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Quit: ChatZilla 0.9.91 [Firefox 32.0.3/20140923175406])
2014-10-13 20:17:06		vanila (~user@unaffiliated/vanila) has quit (Quit: Leaving)
2014-10-13 20:17:40		Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-10-13 20:17:44		ac_slater (~weechat@96.237.110.242) has joined ##c++
2014-10-13 20:18:16		SCHAAP137 (dorian@77-173-0-137.ip.telfort.nl) has quit (Remote host closed the connection)
2014-10-13 20:18:47		glenfe (~glen@unaffiliated/glenfe) has quit (Ping timeout: 255 seconds)
2014-10-13 20:19:45	iFire	merijn: I would use nanomsg to handle serializing the stream
2014-10-13 20:19:56	iFire	no idea about the merging
2014-10-13 20:20:08		wheals (~wheals@129-2-129-24.wireless.umd.edu) has joined ##c++
2014-10-13 20:20:12	iFire	the word the comes up when you say that is map-reduce
2014-10-13 20:20:16	merijn	iFire: The serialisation is not an issue, it's just an array we're dumping directly into infiniband
2014-10-13 20:20:37	merijn	iFire: Well, effectively the merge *is* the reduce bit of map-reduce :)
2014-10-13 20:21:53		glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2014-10-13 20:23:10	iFire	merijn: http://craighenderson.co.uk/papers/software_scalability_mapreduce/library
2014-10-13 20:23:27	iFire	merijn: there's also ispc. but that isn't technically c++
2014-10-13 20:23:36	Ademan	hs_: yeah unfortunately not
2014-10-13 20:23:41		dseitz (~dseitz@ip70-191-237-177.pn.at.cox.net) has joined ##c++
2014-10-13 20:24:12		hyperair (~hyperair@ubuntu/member/hyperair) has quit (Ping timeout: 250 seconds)
2014-10-13 20:25:01		voidah (~voidah@207.96.245.30) has joined ##c++
2014-10-13 20:26:31		Natch (~Natch@c-0ecce155.25-4-64736c10.cust.bredbandsbolaget.se) has joined ##c++
2014-10-13 20:27:26		aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-10-13 20:27:59	ac_slater	moonchild: sorry I was afk last night
2014-10-13 20:28:36		Andy-chan (~Andy-chan@xdsl-87-78-156-222.netcologne.de) has quit (Ping timeout: 260 seconds)
2014-10-13 20:34:03		fr33domlover (~fr33domlo@fsf/member/fr33domlover) has quit (Quit: fr33domlover)
2014-10-13 20:34:28		jpcanepa (~jpcanepa@186-107-124-43.baf.movistar.cl) has joined ##c++
2014-10-13 20:40:49		Ademan (~dan@sfs-wifi-aruba-dhcp-130-212-127-245.sfsu.edu) has quit (Ping timeout: 260 seconds)
2014-10-13 20:41:38		det (~chris@unaffiliated/det) has quit (Read error: Connection reset by peer)
2014-10-13 20:42:54		dfletcher (~dfletcher@drupal.org/user/72475/view) has quit (Read error: Connection reset by peer)
2014-10-13 20:44:16		crewshin (~crewshin@pool-74-100-141-7.lsanca.fios.verizon.net) has quit
2014-10-13 20:44:25		Rslc (~Rslc@hq.unifiedlogic.com) has quit
2014-10-13 20:46:09		Kulrak (kulrak@tlug/member/kulrak) has quit (Ping timeout: 272 seconds)
2014-10-13 20:46:48		pstone (~dpeng@216.2.203.2) has left ##c++
2014-10-13 20:46:54		EhevuTov (~EhevuTov@12.106.130.227) has quit (Quit: This computer has gone to sleep)
2014-10-13 20:47:49		crewshin (~crewshin@pool-74-100-141-7.lsanca.fios.verizon.net) has joined ##c++
2014-10-13 20:48:45		fzzy (jahman@melkinpaasi.cs.helsinki.fi) has joined ##c++
2014-10-13 20:50:31		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has joined ##c++
2014-10-13 20:51:41	fzzy	is it good idea to subclass std::system_error even tough i don't do any changes in the new class? I just want to create my own IO-exception.
2014-10-13 20:52:02	fzzy	the new exception class of mine is completely empty tough.
2014-10-13 20:52:33	fzzy	or should i use typedef or something?
2014-10-13 20:52:57		TommyC (~TommyC@unaffiliated/sepulchralbloom) has joined ##c++
2014-10-13 20:53:55	K-ballo	fzzy: if your error can be construed as a system error then it'd be fair game to inherit from it just for the hierarchy
2014-10-13 20:54:00		asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-13 20:54:06	fzzy	okay makes sense
2014-10-13 20:54:09		xico (~xico@cpe-76-88-16-80.san.res.rr.com) has quit (Ping timeout: 245 seconds)
2014-10-13 20:56:00		asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has joined ##c++
2014-10-13 20:56:05		sixequal1zero (~w246@unaffiliated/sixequalszero) has joined ##c++
2014-10-13 20:57:01		kailoAtWork (~kailoAtWo@208.184.77.122) has quit (Quit: This computer has gone to sleep)
2014-10-13 20:57:21		ikrima (~ikrima@rrcs-76-79-205-82.west.biz.rr.com) has joined ##c++
2014-10-13 20:57:29		det (~chris@unaffiliated/det) has joined ##c++
2014-10-13 20:58:49		comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has quit (Quit: Bye)
2014-10-13 20:59:16	tsimpson	fzzy: you usually customize std::system_error via std::error_category
2014-10-13 20:59:28		asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has quit (Client Quit)
2014-10-13 21:03:58		top4o (~chatzilla@93.152.162.95) has joined ##c++
2014-10-13 21:04:56		notpara (~para@213.187.75.26) has quit (Ping timeout: 250 seconds)
2014-10-13 21:05:15		Taywee (~taylor@c-50-134-139-36.hsd1.co.comcast.net) has quit (Quit: WeeChat 0.4.3)
2014-10-13 21:05:52	K-ballo	fzzy: you said IO, so maybe look at how ios_base::failure and filesystem_error do it (both extend system_error for hierarchy and have a custom error_category)
2014-10-13 21:06:35		escapade (~charles@97-89-166-215.dhcp.gnvl.sc.charter.com) has joined ##c++
2014-10-13 21:06:38		wheals (~wheals@129-2-129-24.wireless.umd.edu) has quit (Quit: Leaving)
2014-10-13 21:10:51		qknight (~joachim@static.188.100.47.78.clients.your-server.de) has quit (Remote host closed the connection)
2014-10-13 21:11:00		hellangel7 (~hellangel@117.192.182.26) has joined ##c++
2014-10-13 21:11:15		ikrima (~ikrima@rrcs-76-79-205-82.west.biz.rr.com) has quit (Ping timeout: 240 seconds)
2014-10-13 21:11:21	fzzy	i ended up usin runtime_error after all because there are no error codes
2014-10-13 21:13:38		Atapel (~Atapel@pool-74-101-108-117.nycmny.fios.verizon.net) has joined ##c++
2014-10-14 18:31:47		dagnachew (~dagnachew@bas1-montreal30-2925416877.dsl.bell.ca) has joined ##c++
2014-10-14 18:31:47	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-14 18:31:47	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-14 18:31:48	--	Channel ##c++: 536 nicks (0 ops, 0 voices, 536 normals)
2014-10-14 18:31:48	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-14 18:32:03	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-14 18:32:08	io2	let's see what V-ille wrote in the EWG issue 30 now, since I haven't had time to deal with the EWG handwaving
2014-10-14 18:32:29		corto (~corto@modemcable063.215-21-96.mc.videotron.ca) has joined ##c++
2014-10-14 18:33:40		corto (~corto@modemcable063.215-21-96.mc.videotron.ca) has quit (Quit: Leaving)
2014-10-14 18:34:23		kurahaupo (~kurahaupo@118.148.135.224) has quit (Ping timeout: 255 seconds)
2014-10-14 18:34:43	fzzy	is it okay to use std::tuple to return multiple return values?
2014-10-14 18:34:54	fzzy	of different types
2014-10-14 18:35:02	io2	V-ille: excellent; man of your word.
2014-10-14 18:35:41	io2	if anybody knows how to play this game the right way, that's V-ille.
2014-10-14 18:36:36	K-ballo	"It's expensive in terms of compiler resources" maybe that particular implementation
2014-10-14 18:36:49	det	fzzy, I don't recommend using std::tuple except for generic code
2014-10-14 18:36:55	det	fzzy, better to declare a struct
2014-10-14 18:37:52	io2	l8terz
2014-10-14 18:38:14		mr_yogurt (~mr_yogurt@65-130-114-195.slkc.qwest.net) has joined ##c++
2014-10-14 18:41:03		Tachyx (~tach@tach.me) has joined ##c++
2014-10-14 18:41:06	Tachyx	geordi: class a { a() = default; a(a &&rhs) = default; a &operator=(a &&rhs) = default; }; int main() { vector<a> vec; for (int i=0;i<2;i++) vec.emplace_back();  std::cout << "brm " << vec.size(); }
2014-10-14 18:41:18	Tachyx	where is he?
2014-10-14 18:41:30	hs_	clang, << "use me!";
2014-10-14 18:41:33	clang	use me!
2014-10-14 18:42:54	Smirnov	static constexpr? redundant static?
2014-10-14 18:44:41	Tachyx	clang: class a { a() = default; a(a &&rhs) = default; a &operator=(a &&rhs) = default; }; int main() { vector<a> vec; for (int i=0;i<2;i++) vec.emplace_back();  std::cout << "brm " << vec.size(); }
2014-10-14 18:44:43	clang	error: calling a private constructor of class 'a'
2014-10-14 18:44:48	Tachyx	omg
2014-10-14 18:44:53	Tachyx	clang: struct a { a() = default; a(a &&rhs) = default; a &operator=(a &&rhs) = default; }; int main() { vector<a> vec; for (int i=0;i<2;i++) vec.emplace_back();  std::cout << "brm " << vec.size(); }
2014-10-14 18:44:55	clang	brm 2
2014-10-14 18:45:52		Chris (~chris@unaffiliated/chris) has joined ##c++
2014-10-14 18:46:01	Tachyx	clang: struct a { a() = default; a(a &&rhs) = default; a &operator=(a &&rhs) = default; }; int main() { vector<a> vec; for (int i=0;i<2;i++) vec.emplace_back(); vec.erase(vec.begin(),vec.begin()+1); std::cout << "brm " << vec.size(); }
2014-10-14 18:46:04	clang	brm 1
2014-10-14 18:46:22	Tachyx	clang: struct a : tracked::B { a() = default; a(a &&rhs) = default; a &operator=(a &&rhs) = default; }; int main() { vector<a> vec; for (int i=0;i<2;i++) vec.emplace_back(); vec.erase(vec.begin(),vec.begin()+1); std::cout << "brm " << vec.size(); }
2014-10-14 18:46:24	clang	)B0*))B1*))B0=>B2*))B0~))B1=>B2))B1~)brm 1)B2~)
2014-10-14 18:46:35	Tachyx	ok
2014-10-14 18:49:13		bmt (~bmt@dpb192.neoplus.adsl.tpnet.pl) has quit (Quit: Leaving)
2014-10-14 18:50:48	--	oleo is now known as Guest27251
2014-10-14 18:52:45		oleo__ (~oleo@xdsl-78-35-181-52.netcologne.de) has joined ##c++
2014-10-14 18:53:04		sohail (~user@unaffiliated/sohail) has quit (Ping timeout: 260 seconds)
2014-10-14 18:53:48		Guest27251 (~oleo@xdsl-78-35-173-109.netcologne.de) has quit (Ping timeout: 258 seconds)
2014-10-14 18:54:21		geordi (~geordi@vps38193.public.cloudvps.com) has joined ##c++
2014-10-14 19:00:08		Andy-chan2 (~Andy-chan@xdsl-84-44-168-215.netcologne.de) has quit (Read error: Connection reset by peer)
2014-10-14 19:00:11	K-ballo	<< "I'm back!"
2014-10-14 19:00:11	geordi	I'm back!
2014-10-14 19:00:11		Andy-chan (~Andy-chan@xdsl-84-44-168-215.netcologne.de) has joined ##c++
2014-10-14 19:00:37	V-ille	geordi: --version
2014-10-14 19:00:37	geordi	g++ (GCC) 4.8.2
2014-10-14 19:00:44	V-ille	oh.. wow.
2014-10-14 19:00:56	K-ballo	ugh
2014-10-14 19:01:32		asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-14 19:01:53		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has joined ##c++
2014-10-14 19:02:07	Smirnov	is 'auto x(stuff())' supposed to be the same as 'auto x = stuff()' ?
2014-10-14 19:03:11		destenson (~destenson@wsip-70-167-188-130.sd.sd.cox.net) has quit (Ping timeout: 255 seconds)
2014-10-14 19:03:27	hs_	it's probably parsed as a function
2014-10-14 19:03:44		io2 (~io2@unaffiliated/irrequietus) has quit (Quit: ...take irc away, what are you? genius, billionaire, playboy, philanthropist)
2014-10-14 19:05:46		tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has quit (Quit: Leaving)
2014-10-14 19:06:07	KrzaQ	depends on what stuff is
2014-10-14 19:06:36		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has quit (Ping timeout: 260 seconds)
2014-10-14 19:07:21		xjrn (~chatzilla@c-50-168-52-56.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2014-10-14 19:07:36		King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has quit (Ping timeout: 255 seconds)
2014-10-14 19:08:14	Eelis	in theory it should now be much simpler to make a geordi with whatever gcc version you want. /me tries
2014-10-14 19:11:49		systemfault (~Systemfau@oftn/member/systemfault) has joined ##c++
2014-10-14 19:13:12		Gravitron (~admin@unaffiliated/gravitron) has quit (Ping timeout: 272 seconds)
2014-10-14 19:16:27		VladolfPutler (~jasper@5ED7DF59.cm-7-8d.dynamic.ziggo.nl) has quit (Quit: Leaving)
2014-10-14 19:16:29		Stormhawk (~Stormhawk@unaffiliated/stormhawk) has quit (Quit: leaving)
2014-10-14 19:20:05	o-O-o	geordi is back in a dumbed down mode
2014-10-14 19:20:31		kadoban (~kadoban@ip68-3-86-107.ph.ph.cox.net) has quit (Quit: bye)
2014-10-14 19:20:46		kadoban (~kadoban@ip68-3-86-107.ph.ph.cox.net) has joined ##c++
2014-10-14 19:21:44		sohail (~user@unaffiliated/sohail) has joined ##c++
2014-10-14 19:22:28		davek (~davek@unaffiliated/tracekill) has quit (Quit: Leaving)
2014-10-14 19:22:35		Alcap (~Alcap@59.90.37.188.rev.vodafone.pt) has joined ##c++
2014-10-14 19:22:45	Alcap	hi guys
2014-10-14 19:23:11	Chris	Hello
2014-10-14 19:24:32		glenfe (~glen@unaffiliated/glenfe) has quit (Quit: Leaving)
2014-10-14 19:25:00		glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2014-10-14 19:25:45	Alcap	I'm trying to create a packet to send through a socket. The packet constructor takes 2 arguments, an uint8_t array with data and the size of the data. I need to fill the data array with a couple of parameters of variable size (int, double, strings, etc). I'm guessing that to fill the array I need to do a series of binary shifts on the variables larger than uint8_t. Am I going in the right direction with this?
2014-10-14 19:26:29	o-O-o	!give Alcap general
2014-10-14 19:26:30	nolyc	Alcap: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-10-14 19:26:35		Andy-chan (~Andy-chan@xdsl-84-44-168-215.netcologne.de) has quit (Ping timeout: 245 seconds)
2014-10-14 19:27:05	Alcap	o-O-o: this is c++ related, not network related
2014-10-14 19:27:09	o-O-o	ok
2014-10-14 19:27:13	o-O-o	let's focus on the PACKET
2014-10-14 19:27:22	o-O-o	you can just use a normal C++ POD
2014-10-14 19:27:22		fr33domlover (~fr33domlo@fsf/member/fr33domlover) has quit (Quit: fr33domlover)
2014-10-14 19:27:33		deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-10-14 19:27:34	o-O-o	and use reinterpret_cast :)
2014-10-14 19:27:37	o-O-o	or an union
2014-10-14 19:27:59	Alcap	I didn't quite follow that
2014-10-14 19:28:12	Alcap	by POD you mean a plain old data type?
2014-10-14 19:28:16	o-O-o	yes
2014-10-14 19:28:22		kurahaupo (~kurahaupo@118.148.226.188) has joined ##c++
2014-10-14 19:28:33		schleppel (~quassel@141.39.226.237) has quit (Read error: Connection reset by peer)
2014-10-14 19:28:40	o-O-o	you want to do serialization and I assume you need the actual bytes of your variables
2014-10-14 19:29:13		karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-10-14 19:29:17	o-O-o	ofc you will have issues if the other end interprets your bytes in a different way, but this is not my problem
2014-10-14 19:29:36	Alcap	I'm implementing the server as well...
2014-10-14 19:29:44	o-O-o	if you want to access the raw bytes of a POD, just do it by using reinterpret_cast<char *>
2014-10-14 19:29:51	o-O-o	or char const *
2014-10-14 19:30:08	Alcap	ok
2014-10-14 19:30:34	Alcap	but, for example, let's say I have an int, a string and a double
2014-10-14 19:30:55	kurahaupo	Alcap: you could look at creating a huffman-efficient encoding
2014-10-14 19:31:03	o-O-o	Alcap: string is not a POD
2014-10-14 19:31:12	o-O-o	so you will have to serialize it
2014-10-14 19:31:20	o-O-o	unless your string is a char array
2014-10-14 19:31:28	Alcap	it is
2014-10-14 19:31:33	o-O-o	ok, so a char array
2014-10-14 19:31:47	o-O-o	struct MyAss { int a; char b[10]; double c; };
2014-10-14 19:32:15	kurahaupo	Alcap: your serialization will be a lot easier to debug if it has field tagging
2014-10-14 19:32:20		wheals (~wheals@129-2-129-30.wireless.umd.edu) has joined ##c++
2014-10-14 19:32:29	o-O-o	MyAss value = ...;  sendThroughSocket(reinterpret_cast<char const *>(&value),sizeof(value));  // Alcap
2014-10-14 19:32:48	Alcap	nice
2014-10-14 19:32:51	Alcap	just one question
2014-10-14 19:33:00	o-O-o	kurahaupo: serialization things are a !general issue
2014-10-14 19:33:13	kurahaupo	o-O-o: true
2014-10-14 19:33:43	o-O-o	he can send raw bytes pretty fine if he controls the environment, like having the server and client compiled for the same OS/arch
2014-10-14 19:33:49	Alcap	the reinterpert_cast function will return an 8 bit array?
2014-10-14 19:33:56	o-O-o	!give Alcap book
2014-10-14 19:33:57	nolyc	Alcap: The Definitive C++ Book Guide and List -> http://stackoverflow.com/q/388242/1090079
2014-10-14 19:34:18	kalven	don't let your wire protocol be defined by structs
2014-10-14 19:34:28	o-O-o	I will stop here. if my simple example was not clear for you, you need to dig into language fundamentals
2014-10-14 19:34:39	o-O-o	feel free to discuss more with kalven . he loves noobs
2014-10-14 19:35:36	kurahaupo	o-O-o: a related question; should one use a constructor that takes an istream& for deserializing? or is the indeterminacy of the field & superclass ordering unresolvable?
2014-10-14 19:35:59	Alcap	o-O-o: I need to google the reinterpret_cast function to learn more about it. I've never used it before.
2014-10-14 19:36:15	Alcap	kalven: why not?
2014-10-14 19:36:28	Chris	Because you can't generally control their representation.
2014-10-14 19:36:44	kurahaupo	Alcap: it's equivalent to the old c-style cast (mostly)
2014-10-14 19:37:05	o-O-o	kurahaupo: I like istream, but I confess I don't get the last part of your question --> "or is the indeterminacy of the field & superclass ordering unresolvable?"
2014-10-14 19:37:12	kalven	Alcap: because you're at the mercy of the compiler. It may/will insert padding. It might change between versions or settings.
2014-10-14 19:37:27	o-O-o	kurahaupo: also I would use operator>>
2014-10-14 19:37:50	o-O-o	kalven: not if he does everything using the same compiler
2014-10-14 19:37:55	o-O-o	same compiler/os
2014-10-14 19:37:55		weemsledeux (~textual@unaffiliated/weems) has joined ##c++
2014-10-14 19:38:00	Alcap	kalven: you're right, that is why I asked about binary shifts first
2014-10-14 19:38:21	o-O-o	Alcap: only serialization will save you from portability issues
2014-10-14 19:38:28	Alcap	can't I just take an int, shift it 8 bits into an uint8_t variable and repeat that another 3 times?
2014-10-14 19:38:30	kurahaupo	Alcap: copying the bytes underneath a pod relies on both ends having the same source, the same compiler, the same invocation of the compiler, perhaps the same libraries & linker...
2014-10-14 19:38:33	o-O-o	Alcap: if you want to do something simpler, work in a controlled environment
2014-10-14 19:38:35	kalven	Alcap: either work out your own serialization format or use something like protobufs.
2014-10-14 19:38:46	o-O-o	or send raw data
2014-10-14 19:39:06		Proff (~Proff@188.162.43.81) has quit (Ping timeout: 256 seconds)
2014-10-14 19:39:12	o-O-o	Alcap: evaluate the trade-offs before listening to these twats
2014-10-14 19:39:42	Alcap	kurahaupo: that's actually what will happen
2014-10-14 19:40:19	o-O-o	there is nothing wrong with that
2014-10-14 19:40:20	Alcap	the application I'm developing is for use with a simulator. It compiles both the client and the server with the exact same compiler, libraries, linker, etc
2014-10-14 19:41:18	Alcap	but I still don't want to create a struct just to create my packet
2014-10-14 19:42:58	kurahaupo	Alcap: that's fine then, just as long as you revisit this aspect of the design when you revise the requirements. If I might make one suggestion: start each connnection with a protocol version negotiation, even if you *currently* only have one extant version.
2014-10-14 19:43:28	o-O-o	lol. if creating a struct is a problem, then serialization would be something unbearable for you :D :D :D
2014-10-14 19:44:05	Alcap	o-O-o: I know how to create a struct, I just don't want to mix pure C code with C++ code due to coding requirements
2014-10-14 19:44:15	o-O-o	!grab Alcap
2014-10-14 19:44:16	nolyc	By your command.
2014-10-14 19:44:16		ketamin (~Thunderbi@131.178.200.64) has joined ##c++
2014-10-14 19:44:39	pcg	kalven: Alcap: ill add JSON as highly recommended relative to protocol buffers, doubly so if you are new to network programming.
2014-10-14 19:44:40	o-O-o	Alcap: you make no sense
2014-10-14 19:44:51	o-O-o	json :(((((((((((((((((
2014-10-14 19:44:58	o-O-o	pcg: REALLLYYYYYYYYYYYYY?
2014-10-14 19:45:03	pcg	Yes absolutely.
2014-10-14 19:45:07	o-O-o	pfffffffff
2014-10-14 19:45:19	Alcap	o-O-o: why? because I choose not to mix code?
2014-10-14 19:45:24	kurahaupo	Alcap: you're in the C++ channel, and C & C++ have a very large common subset, so it's not like you have to switch languages
2014-10-14 19:45:26	o-O-o	pcg: next thing is to ask hom to make a REST service, perhaps? :D
2014-10-14 19:45:30	o-O-o	*him
2014-10-14 19:45:43	pcg	This is comming from someone who wrote a large mining ventilation cfd interface with the network serialization entirely in protocol buffers. Not an inexperienced webdev.
2014-10-14 19:45:57	o-O-o	creating a struct is FAR from doing 'C style'
2014-10-14 19:46:08	Alcap	kurahaupo: I do know that, the thing is that makes the code less understandable. I'd rather create a class than a struct
2014-10-14 19:46:12	kurahaupo	Alcap: or to put that another way, a struct *is* C++
2014-10-14 19:46:48		wakd (~wakd@124-170-208-129.dyn.iinet.net.au) has joined ##c++
2014-10-14 19:47:35		snakenerd (~Thunderbi@177.40.200.4) has joined ##c++
2014-10-14 19:47:54	kurahaupo	Alcap: the struct & class keywords differ only in the default visibility of members; in all other respects they're interchangeable. So just declare a class with all public members if you hate the struct keyword that much
2014-10-14 19:48:08	--	mentoc is now known as Guest38143
2014-10-14 19:48:38		wakd_ (~wakd@124-168-7-205.dyn.iinet.net.au) has quit (Ping timeout: 255 seconds)
2014-10-14 19:48:40	kurahaupo	Alcap: it'll still qualify as "pod"
2014-10-14 19:50:15	Alcap	kurahaupo: ok. but I still want to explore other options other than that. regarding my original question of binary shifts, is it possible to achieve what I'm looking for?
2014-10-14 19:51:01	kurahaupo	Alcap: yes certainly, bit shifts will give you a more portable format.
2014-10-14 19:51:30		jaafar (~quassel@208.78.237.16) has joined ##c++
2014-10-14 19:51:32	Alcap	ok then, I'm going with that...
2014-10-14 19:52:11	Alcap	if the reinterpret_cast option was less reliable, why would you guys mention it in the first place?
2014-10-14 19:53:39	glenfe	Alcap: What proportion of the 530 users in this channel mentioned it to you?
2014-10-14 19:54:00	kurahaupo	Alcap: because it's two lines of code, instead of six lines of code per field
2014-10-14 19:54:29	Alcap	kurahaupo: laziness makes unreliable code :p
2014-10-14 19:54:39	kurahaupo	very true.
2014-10-14 19:54:55		s5s (~s5s@unaffiliated/s5s) has quit (Ping timeout: 245 seconds)
2014-10-14 19:55:14	Alcap	and because I'm aware of the size of each variable, I can do this easily
2014-10-14 19:55:30	kalven	Alcap: because shitty programmers are going to recommend shitty solutions, unfortunately :/
2014-10-14 19:56:49	Alcap	true
2014-10-14 19:56:59	kurahaupo	Alcap: actually, you don't even need to know the size of each variable, just the size of the value in each variable; you might as well skip the unneeded zero bytes
2014-10-14 19:57:50	kurahaupo	though you'd have to add a length prefix or use continuation bits
2014-10-14 19:58:48		fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-10-14 19:59:11		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-10-14 20:00:09	Alcap	kurahaupo: I might be interest in that, but for now I'm not required to do so
2014-10-14 20:00:21		BadQuanta (~badquanta@2601:7:100:f45:7869:69f8:c3b3:2017) has quit (Ping timeout: 265 seconds)
2014-10-14 20:01:07		seishun (~Kakera@78.84.158.96) has quit (Ping timeout: 260 seconds)
2014-10-14 20:01:11		Backinside (~Thunderbi@business-86-101-237-121.business.broadband.hu) has joined ##c++
2014-10-14 20:01:15		Backinside (~Thunderbi@business-86-101-237-121.business.broadband.hu) has quit (Client Quit)
2014-10-14 20:01:49		snakenerd (~Thunderbi@177.40.200.4) has quit (Quit: snakenerd)
2014-10-14 20:01:59		cbot` (~FS@150.108.238.42) has quit (Ping timeout: 250 seconds)
2014-10-14 20:02:41		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has joined ##c++
2014-10-14 20:03:07	kurahaupo	Alcap: further discussion in ##c++-general
2014-10-14 20:03:17	Alcap	thank you
2014-10-14 20:03:33		snakenerd (~Thunderbi@177.40.200.4) has joined ##c++
2014-10-14 20:04:47		robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-10-14 20:06:22		robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Client Quit)
2014-10-14 20:06:34		thepreacher (~thepreach@211.134.200.146.dyn.plus.net) has joined ##c++
2014-10-14 20:07:03		LunarJetman (LunarJetma@2.221.166.187) has quit (Quit: LunarJetman)
2014-10-14 20:07:12		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has quit (Ping timeout: 260 seconds)
2014-10-14 20:07:44		DTSCode (~DTSCode@174.134.25.153) has quit (Read error: Connection reset by peer)
2014-10-14 20:08:41		snakenerd (~Thunderbi@177.40.200.4) has quit (Quit: snakenerd)
2014-10-14 20:09:15		Malsasa (~Malsasa@36.73.227.73) has quit (Remote host closed the connection)
2014-10-14 20:09:57		DTSCode (~DTSCode@174.134.25.153) has joined ##c++
2014-10-14 20:11:00		BadQuanta (~badquanta@c-98-246-171-233.hsd1.or.comcast.net) has joined ##c++
2014-10-14 20:11:21		weemsledeux (~textual@unaffiliated/weems) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-14 20:11:44		Munt (~munt@37.58.52.30) has quit (Quit: Munt)
2014-10-14 20:11:52		bmf1 (~bmf1@216.252.92.23) has quit (Ping timeout: 260 seconds)
2014-10-14 20:12:17		thepreacher (~thepreach@211.134.200.146.dyn.plus.net) has quit (Quit: Leaving)
2014-10-14 20:12:22		a_le (~a_le@2001:420:28f:1254:c456:44:b405:7c7a) has quit (Remote host closed the connection)
2014-10-14 20:12:37		BinaryAddicted (~BinaryAdd@194.230.155.112) has quit
2014-10-14 20:14:26		bmf1 (~bmf1@216.252.94.143) has joined ##c++
2014-10-14 20:14:28		EhevuTov (~EhevuTov@96.24.125.20) has quit (Quit: This computer has gone to sleep)
2014-10-14 20:15:31		thepreacher (~thepreach@211.134.200.146.dyn.plus.net) has joined ##c++
2014-10-14 20:15:31		s5s (~s5s@unaffiliated/s5s) has joined ##c++
2014-10-14 20:17:42		clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 260 seconds)
2014-10-14 20:17:45		d34df00d (~d34df00d@host31-50-230-179.range31-50.btcentralplus.com) has joined ##c++
2014-10-14 20:17:53		jaafar (~quassel@208.78.237.16) has quit (Ping timeout: 240 seconds)
2014-10-14 20:17:56	d34df00d	Hi there!
2014-10-14 20:18:01	d34df00d	Right to the code: http://melpon.org/wandbox/permlink/Gr5RruPM0fXWIkGr
2014-10-14 20:18:05		BadQuanta (~badquanta@c-98-246-171-233.hsd1.or.comcast.net) has quit (Quit: Leaving.)
2014-10-14 20:18:11	d34df00d	clang builds this, gcc 4.8 and 4.9 fail.
2014-10-14 20:18:12	d34df00d	Who's right?
2014-10-14 20:18:20		mr_yogurt (~mr_yogurt@65-130-114-195.slkc.qwest.net) has quit (Ping timeout: 255 seconds)
2014-10-14 20:18:53		thepreacher (~thepreach@211.134.200.146.dyn.plus.net) has quit (Client Quit)
2014-10-14 20:19:07		ac_slater_ (~weechat@dhcp89-69-173.bbn.com) has quit (Read error: Connection reset by peer)
2014-10-15 20:29:05		dagnachew (~dagnachew@bas1-montreal30-2925416877.dsl.bell.ca) has joined ##c++
2014-10-15 20:29:05	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-15 20:29:05	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-15 20:29:05	--	Channel ##c++: 489 nicks (0 ops, 0 voices, 489 normals)
2014-10-15 20:29:05	--	Notice(holmes.freenode.net): [freenode-info] if you're at a conference and other people are having trouble connecting, please mention it to staff: http://freenode.net/faq.shtml#gettinghelp
2014-10-15 20:29:05	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-15 20:29:22	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-15 20:30:16		Nickeeh (~quassel@foo.kassala.de) has quit (Ping timeout: 260 seconds)
2014-10-15 20:30:24		schleppel (~quassel@141.39.226.237) has quit (Ping timeout: 255 seconds)
2014-10-15 20:31:46		Siberian_Tiger (~Nicholas@199-96-202-110.fidnet.com) has joined ##c++
2014-10-15 20:33:23		chatmasta (~Adium@c-50-187-239-97.hsd1.ct.comcast.net) has joined ##c++
2014-10-15 20:34:09		Nickeeh (~quassel@foo.kassala.de) has joined ##c++
2014-10-15 20:34:13		weemsledeux (~textual@unaffiliated/weems) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-15 20:35:09		xico (~xico@cpe-76-88-16-80.san.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-10-15 20:42:24		Sjors (~sgielen@foo.kassala.de) has quit (Ping timeout: 260 seconds)
2014-10-15 20:43:42		Sjors (~sgielen@foo.kassala.de) has joined ##c++
2014-10-15 20:44:53		FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-10-15 20:45:52		thejohnfreeman (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has joined ##c++
2014-10-15 20:46:13		hyperair (~hyperair@ubuntu/member/hyperair) has quit (Ping timeout: 255 seconds)
2014-10-15 20:47:27		Backinside (~Thunderbi@business-86-101-237-121.business.broadband.hu) has joined ##c++
2014-10-15 20:47:53		Mayzie (~Mayazcher@unaffiliated/mayazcherquoi) has joined ##c++
2014-10-15 20:47:58		fluter (~fluter@fedora/fluter) has joined ##c++
2014-10-15 20:48:01		chatmasta (~Adium@c-50-187-239-97.hsd1.ct.comcast.net) has quit (Quit: Leaving.)
2014-10-15 20:51:44		Sjors (~sgielen@foo.kassala.de) has quit (Ping timeout: 260 seconds)
2014-10-15 20:52:51		Sjors (~sgielen@foo.kassala.de) has joined ##c++
2014-10-15 20:53:18		totimkopf (~james@unaffiliated/totimkopf) has joined ##c++
2014-10-15 20:59:40		wakd (~wakd@124-170-205-42.dyn.iinet.net.au) has quit (Ping timeout: 260 seconds)
2014-10-15 21:03:01		zima (~zima@c75.152.27-202.clta.globetrotter.net) has quit (Quit: zima)
2014-10-15 21:04:36		weemsledeux (~textual@unaffiliated/weems) has joined ##c++
2014-10-15 21:07:22		sixequalszero (~sixequals@unaffiliated/sixequalszero) has quit (Quit: Gone forever until I return)
2014-10-15 21:08:55		delta-nry (~delta-nry@S0106c8fb2658a55a.vc.shawcable.net) has left ##c++
2014-10-15 21:09:34		Zifre_ (~Zifre@unaffiliated/zifre) has joined ##c++
2014-10-15 21:10:02		NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-10-15 21:11:36		hellangel7 (~hellangel@117.192.171.204) has quit (Remote host closed the connection)
2014-10-15 21:12:45		Andy-chan (~Andy-chan@xdsl-87-78-150-25.netcologne.de) has quit (Quit: Leaving)
2014-10-15 21:13:21		TomWij (~TomWij@gentoo/developer/tomwij) has quit (Quit: ZNC - http://znc.in)
2014-10-15 21:13:39		Zifre (~Zifre@unaffiliated/zifre) has quit (Ping timeout: 265 seconds)
2014-10-15 21:13:48		N8Fear_ (~n8fear@dslb-188-103-175-033.188.103.pools.vodafone-ip.de) has joined ##c++
2014-10-15 21:13:56		unreal (~unreal@unaffiliated/unreal) has joined ##c++
2014-10-15 21:14:35		wakd (~wakd@124-168-184-209.dyn.iinet.net.au) has joined ##c++
2014-10-15 21:14:40		k0nichiwa (~jdoe@174.71.181.20) has quit (Ping timeout: 258 seconds)
2014-10-15 21:15:34		pingupingu (~pinguping@unaffiliated/pingupingu) has joined ##c++
2014-10-15 21:16:00		Sjors (~sgielen@foo.kassala.de) has quit (Ping timeout: 260 seconds)
2014-10-15 21:16:11		thwest (~Adium@99-51-187-8.lightspeed.austtx.sbcglobal.net) has quit (Quit: Leaving.)
2014-10-15 21:16:23		unreal_ (~unreal@unaffiliated/unreal) has quit (Ping timeout: 260 seconds)
2014-10-15 21:16:50		N8Fear (~n8fear@dslb-094-222-012-005.094.222.pools.vodafone-ip.de) has quit (Ping timeout: 255 seconds)
2014-10-15 21:17:36		oxy (nd@nullify.ca) has joined ##c++
2014-10-15 21:17:50		Sjors (~sgielen@foo.kassala.de) has joined ##c++
2014-10-15 21:18:28		TomWij (~TomWij@gentoo/developer/tomwij) has joined ##c++
2014-10-15 21:18:45		thwest (~Adium@99-51-187-8.lightspeed.austtx.sbcglobal.net) has joined ##c++
2014-10-15 21:19:07		aicasn (~aicasn@unaffiliated/aicasn) has left ##c++
2014-10-15 21:19:35		l0pher (~Loser@unaffiliated/l0pher) has joined ##c++
2014-10-15 21:20:44		wakd (~wakd@124-168-184-209.dyn.iinet.net.au) has quit (Ping timeout: 246 seconds)
2014-10-15 21:20:44		filcab (~quassel@sceapdsd43-89.989studios.com) has quit (Read error: Connection reset by peer)
2014-10-15 21:22:14		Sculptor (~Sculptor@trivialand/master/sculptor) has quit (Read error: Connection reset by peer)
2014-10-15 21:22:23		SiGe (~SiGe@usc-secure-wireless-088-125.usc.edu) has joined ##c++
2014-10-15 21:22:39		escapade (~charles@97-89-166-215.dhcp.gnvl.sc.charter.com) has joined ##c++
2014-10-15 21:22:45		filcab (~quassel@sceapdsd43-89.989studios.com) has joined ##c++
2014-10-15 21:22:55		Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-10-15 21:23:07		ultrixx (~ultrixx@p5DC77F30.dip0.t-ipconnect.de) has joined ##c++
2014-10-15 21:24:57		Aichan (~Aichan@109.89.137.74) has quit (Read error: Connection reset by peer)
2014-10-15 21:26:50		muteki (~muteki@unaffiliated/muteki) has joined ##c++
2014-10-15 21:26:57		SiGe (~SiGe@usc-secure-wireless-088-125.usc.edu) has quit (Ping timeout: 244 seconds)
2014-10-15 21:27:31		FreezingCold (~FreezingC@135.0.41.14) has quit (Read error: Connection reset by peer)
2014-10-15 21:28:01		FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-10-15 21:31:55		comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has quit (Quit: Bye)
2014-10-15 21:33:49		filcab (~quassel@sceapdsd43-89.989studios.com) has quit (Read error: Connection reset by peer)
2014-10-15 21:35:28		filcab (~quassel@sceapdsd43-89.989studios.com) has joined ##c++
2014-10-15 21:38:48		jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has quit (Ping timeout: 260 seconds)
2014-10-15 21:40:02		muteki (~muteki@unaffiliated/muteki) has quit (Quit: Changing server)
2014-10-15 21:43:04		Sjors (~sgielen@foo.kassala.de) has quit (Ping timeout: 260 seconds)
2014-10-15 21:44:06		pfo__ (~pfo@chello084114049188.14.vie.surfer.at) has joined ##c++
2014-10-15 21:44:26		robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-10-15 21:45:33		ultrixx (~ultrixx@p5DC77F30.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2014-10-15 21:45:54	--	RazielZ is now known as Raziel
2014-10-15 21:47:48		lh_mouse (~lh_mouse@101.80.30.12) has joined ##c++
2014-10-15 21:47:49		Sjors (~sgielen@foo.kassala.de) has joined ##c++
2014-10-15 21:47:55		hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-10-15 21:47:57		BinaryAddicted (~BinaryAdd@194.230.155.112) has quit
2014-10-15 21:50:07		muteki (~muteki@unaffiliated/muteki) has joined ##c++
2014-10-15 21:51:14		arescorpio (~arescorpi@190.190.244.100) has joined ##c++
2014-10-15 21:52:09		condy (~condy@2001:da8:4004:251:3e97:eff:fe2d:1e82) has joined ##c++
2014-10-15 21:52:18		muteki (~muteki@unaffiliated/muteki) has quit (Remote host closed the connection)
2014-10-15 21:52:23		thwest (~Adium@99-51-187-8.lightspeed.austtx.sbcglobal.net) has quit (Quit: Leaving.)
2014-10-15 21:52:40		muteki (~muteki@unaffiliated/muteki) has joined ##c++
2014-10-15 21:53:04		muteki (~muteki@unaffiliated/muteki) has quit (Client Quit)
2014-10-15 21:53:12		thwest (~Adium@99-51-187-8.lightspeed.austtx.sbcglobal.net) has joined ##c++
2014-10-15 21:53:17		muteki (~muteki@unaffiliated/muteki) has joined ##c++
2014-10-15 21:53:25		inspiron (~black@adsl-75-37-30-65.dsl.pltn13.sbcglobal.net) has joined ##c++
2014-10-15 21:55:59		bmf1 (~bmf1@216.252.94.143) has quit (Ping timeout: 255 seconds)
2014-10-15 21:56:48		hoyong (~hoyong@210.94.41.89) has quit (Remote host closed the connection)
2014-10-15 21:58:38		bmf1 (~bmf1@216.252.65.252) has joined ##c++
2014-10-15 21:59:23		JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-10-15 22:01:56		Orion] (~nname@unaffiliated/orion/x-3970838) has quit
2014-10-15 22:02:31		viet_power (~viet_powe@222.255.192.202) has joined ##c++
2014-10-15 22:02:57		hyperair (~hyperair@ubuntu/member/hyperair) has joined ##c++
2014-10-15 22:05:38	viet_power	hi, fruit->Apple = *anotherFruit->Apple; this should just copy fine yes? even if anotherFruit goes out of scope, fruit->Apple will retain whatever value was assigned to it before ?
2014-10-15 22:06:10	escapade	viet_power: What is Apple?
2014-10-15 22:06:49	viet_power	apple is a struct
2014-10-15 22:07:30	escapade	Should be fine then.
2014-10-15 22:08:34	viet_power	ok, thanks
2014-10-15 22:08:48	hs_	viet_power, you probably don't want fruit->Apple = *anotherFruit->Apple;
2014-10-15 22:08:59	hs_	probably just fruit->Apple = anotherFruit->Apple;
2014-10-15 22:09:03		JamesNZ (~james@fedora/JamesNZ) has quit (Remote host closed the connection)
2014-10-15 22:09:32	hs_	assuming fruit and anotherFruit are pointers
2014-10-15 22:09:46		JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-10-15 22:10:34		plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-10-15 22:10:35		NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-10-15 22:11:21	viet_power	hs_, but if done fruit->Apple = anotherFruit->Apple;, if anotherFruit is null, then fruit->Apple points to null too?
2014-10-15 22:11:27		FreezingCold (~FreezingC@135.0.41.14) has quit (Read error: Connection reset by peer)
2014-10-15 22:11:30		Andy_ (~Atapel@pool-74-101-108-117.nycmny.fios.verizon.net) has joined ##c++
2014-10-15 22:11:53	--	Andy_ is now known as Guest67439
2014-10-15 22:11:56		plitter (~plitter@84.48.49.52) has joined ##c++
2014-10-15 22:12:01		Carbonflux (~BOB@174-21-102-9.tukw.qwest.net) has joined ##c++
2014-10-15 22:12:19	hs_	what?
2014-10-15 22:12:54	hs_	doing "p->q" already presupposes that p is not nullptr
2014-10-15 22:13:08	hs_	assuming -> is the dereferencing member operator
2014-10-15 22:13:39	viet_power	hs_, i mean after
2014-10-15 22:15:00	hs_	*p->q will dereference q
2014-10-15 22:15:11	hs_	is Apple a pointer?
2014-10-15 22:15:15		Atapel (~Atapel@pool-74-101-108-117.nycmny.fios.verizon.net) has quit (Ping timeout: 272 seconds)
2014-10-15 22:15:19	viet_power	no
2014-10-15 22:15:30	hs_	ok, so you don't need to type *blah->Apple
2014-10-15 22:15:47		NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Ping timeout: 255 seconds)
2014-10-15 22:17:16		weemsledeux (~textual@unaffiliated/weems) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-15 22:22:39		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has joined ##c++
2014-10-15 22:25:56		KAHR-Alpha (~Alpha@ARennes-357-1-42-154.w90-1.abo.wanadoo.fr) has quit (Ping timeout: 260 seconds)
2014-10-15 22:27:08		justinmburrous (~justinmbu@c-73-37-6-91.hsd1.or.comcast.net) has quit (Ping timeout: 258 seconds)
2014-10-15 22:27:57		davidstone (~david@174-29-88-81.hlrn.qwest.net) has joined ##c++
2014-10-15 22:28:13		FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-10-15 22:31:30		Backinside (~Thunderbi@business-86-101-237-121.business.broadband.hu) has quit (Quit: Backinside)
2014-10-15 22:32:46		oxy (nd@nullify.ca) has quit (Quit: gone.)
2014-10-15 22:34:15		weemsledeux (~textual@unaffiliated/weems) has joined ##c++
2014-10-15 22:35:24		chatmasta (~Adium@c-50-187-239-97.hsd1.ct.comcast.net) has joined ##c++
2014-10-15 22:39:33		immibis (~ChatZill1@122-59-227-101.jetstream.xtra.co.nz) has joined ##c++
2014-10-15 22:39:35		gr33n-ion (~gr33n@c220-239-72-242.kelvn3.qld.optusnet.com.au) has joined ##c++
2014-10-15 22:39:37	gr33n-ion	hey guys
2014-10-15 22:39:58		ac_slater_ (~weechat@dhcp89-69-173.bbn.com) has quit (Quit: WeeChat 1.0.1)
2014-10-15 22:40:15	gr33n-ion	whats a good book to read when wanting to learn about game development with c++?
2014-10-15 22:42:12		moonchild (~loon@73.13.118.191) has joined ##c++
2014-10-15 22:42:57		LilleCarl (~LilleCarl@198.98.51.120) has joined ##c++
2014-10-15 22:45:13		chatmasta (~Adium@c-50-187-239-97.hsd1.ct.comcast.net) has left ##c++
2014-10-15 22:45:38		nurupo (~nurupo.ga@unaffiliated/nurupo) has joined ##c++
2014-10-15 22:48:21		Xark (~K@unaffiliated/xark) has joined ##c++
2014-10-15 22:48:23		weemsledeux (~textual@unaffiliated/weems) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-15 22:52:21		nitrix (~nitrix@unaffiliated/nitrix) has joined ##c++
2014-10-15 22:53:03		SibTiger|Laptop (~Nicholas@199-96-202-110.fidnet.com) has joined ##c++
2014-10-15 22:58:07		kailo (~kailo@cpe-23-243-152-183.socal.res.rr.com) has joined ##c++
2014-10-15 22:58:34		kailoAtWork (~kailoAtWo@cpe-23-243-152-183.socal.res.rr.com) has joined ##c++
2014-10-15 22:58:43		kailo (~kailo@cpe-23-243-152-183.socal.res.rr.com) has quit (Read error: Connection reset by peer)
2014-10-15 23:01:00		condy (~condy@2001:da8:4004:251:3e97:eff:fe2d:1e82) has quit (Ping timeout: 260 seconds)
2014-10-15 23:01:17		KiNgMaR (ingmar@2001:41d0:2:ba51::1) has joined ##c++
2014-10-15 23:01:55		kailo (~kailo@cpe-23-243-152-183.socal.res.rr.com) has joined ##c++
2014-10-15 23:02:33	TommyC	ugh...
2014-10-15 23:02:45	moonchild	?
2014-10-15 23:03:05		kailo (~kailo@cpe-23-243-152-183.socal.res.rr.com) has quit (Read error: No route to host)
2014-10-15 23:03:33		thejohnfreeman (~Thunderbi@pool-74-101-133-31.nycmny.fios.verizon.net) has quit (Ping timeout: 258 seconds)
2014-10-15 23:03:58		kailo (~kailo@cpe-23-243-152-183.socal.res.rr.com) has joined ##c++
2014-10-15 23:05:58		inspiron (~black@adsl-75-37-30-65.dsl.pltn13.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-10-15 23:06:06		lamefun (~lamefun2@94.181.189.84) has joined ##c++
2014-10-15 23:07:29		delta-nry (~delta-nry@S0106c8fb2658a55a.vc.shawcable.net) has joined ##c++
2014-10-15 23:10:15		Mayzie (~Mayazcher@unaffiliated/mayazcherquoi) has quit (Ping timeout: 260 seconds)
2014-10-15 23:11:07		Dreadnaught (~Dreadnaug@tlug/member/kulrak) has joined ##c++
2014-10-15 23:12:01		kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has joined ##c++
2014-10-15 23:14:07		bb010g (uid21050@gateway/web/irccloud.com/x-liqbmxqwrbkszeht) has joined ##c++
2014-10-15 23:15:11		koderok (~koderok@103.249.205.20) has joined ##c++
2014-10-15 23:15:12		koderok (~koderok@103.249.205.20) has quit (Client Quit)
2014-10-15 23:19:35		Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 244 seconds)
2014-10-15 23:20:29		glenfe (~glen@unaffiliated/glenfe) has quit (Quit: Restart)
2014-10-15 23:21:04		Nickeeh (~quassel@foo.kassala.de) has quit (Ping timeout: 260 seconds)
2014-10-15 23:22:50		Mayzie (~Mayazcher@unaffiliated/mayazcherquoi) has joined ##c++
2014-10-15 23:24:37		Nickeeh (~quassel@foo.kassala.de) has joined ##c++
2014-10-15 23:25:34		forgottenone (~forgotten@92.45.168.40) has joined ##c++
2014-10-15 23:29:47		basic6 (~basic6@p4FCB6772.dip0.t-ipconnect.de) has joined ##c++
2014-10-15 23:30:14		jsoft (~jsoft@unaffiliated/jsoft) has joined ##c++
2014-10-15 23:30:44		glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2014-10-15 23:30:44		kailoAtWork (~kailoAtWo@cpe-23-243-152-183.socal.res.rr.com) has quit (Read error: Connection reset by peer)
2014-10-15 23:30:44		kailo (~kailo@cpe-23-243-152-183.socal.res.rr.com) has quit (Read error: Connection reset by peer)
2014-10-15 23:31:19		kailo (~kailo@cpe-23-243-152-183.socal.res.rr.com) has joined ##c++
2014-10-15 23:31:32		kailoAtWork (~kailoAtWo@cpe-23-243-152-183.socal.res.rr.com) has joined ##c++
2014-10-15 23:31:55		tiqs (d1c34a91@gateway/web/freenode/ip.209.195.74.145) has joined ##c++
2014-10-15 23:32:40	tiqs	hey I was watching scott meyer's cppcon presentation and he kept saying 'brace initializers have no type' and that they will be deduced to initializer_list using auto as a special case...
2014-10-15 23:33:10	moonchild	more or less correct
2014-10-15 23:33:11	tiqs	But I actually tried calling a function using an initializer list without auto and it works perfectly fine...
2014-10-15 23:33:18	tiqs	http://ideone.com/PBgb4c
2014-10-15 23:34:05	moonchild	{ auto x = { 1, 2, 3 }; }
2014-10-15 23:34:06	geordi	warning: unused variable 'x'
2014-10-15 23:34:23		basic6_ (~basic6@p3E9EE3FD.dip0.t-ipconnect.de) has quit (Ping timeout: 272 seconds)
2014-10-15 23:34:26	moonchild	{ auto x = { 1, 2, 3 }; cout << TYPE(x); }
2014-10-15 23:34:26	geordi	lvalue initializer_list<int>
2014-10-15 23:35:11	tiqs	he actually says that if you pass a raw initializer list to a function as a parameter you will get an error in his presentation
2014-10-15 23:35:18	tiqs	which seems to be false
2014-10-15 23:35:19		c0le (~c0le@59.99.251.45) has joined ##c++
2014-10-15 23:35:42	moonchild	yeah, well, meyers...
2014-10-15 23:36:52	K-ballo	{ try { throw "foo"; } catch (char const [0]) { BARK; } }
2014-10-15 23:36:52	geordi	error: ISO C++ forbids zero-size array
2014-10-15 23:37:36	K-ballo	geordi: replace [0] with [100]
2014-10-15 23:37:37	geordi	main(int, char**)
2014-10-15 23:37:40	moonchild	tiqs: don't pay too much attention to meyer's presentation
2014-10-15 23:37:58	tiqs	moonchild: why not? is he not to be trusted lol?
2014-10-15 23:38:29	moonchild	i tend to think he oversimplifies
2014-10-15 23:38:46	tiqs	oh
2014-10-18 17:13:29		dagnachew (~dagnachew@bas1-montreal30-2925416877.dsl.bell.ca) has joined ##c++
2014-10-18 17:13:29	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-18 17:13:29	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-18 17:13:29	--	Channel ##c++: 548 nicks (0 ops, 0 voices, 548 normals)
2014-10-18 17:13:29	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-18 17:13:46	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-18 17:14:31		destenson (~destenson@wsip-70-167-188-130.sd.sd.cox.net) has quit (Ping timeout: 260 seconds)
2014-10-18 17:15:38		aslant (~aslant@5751a00f.skybroadband.com) has quit (Ping timeout: 272 seconds)
2014-10-18 17:15:47	DTSCode	you know what should be a book? the llvm kaliedascope tutorial
2014-10-18 17:15:59	DTSCode	that thing is the best intro into real compiler development ive seen
2014-10-18 17:16:14	--	irc: disconnected from server
2014-10-18 17:16:41		dagnachew (~dagnachew@bas1-montreal30-2925416877.dsl.bell.ca) has joined ##c++
2014-10-18 17:16:41	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-18 17:16:41	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-18 17:16:41	--	Channel ##c++: 546 nicks (0 ops, 0 voices, 546 normals)
2014-10-18 17:16:41	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-18 17:16:55	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-18 17:20:35		grieg (~grieg@unaffiliated/mescal) has quit (Ping timeout: 250 seconds)
2014-10-18 17:21:33		D0cN3x (~Thunderbi@dslb-178-007-223-052.178.007.pools.vodafone-ip.de) has quit (Quit: D0cN3x)
2014-10-18 17:22:32		hz (~username@unaffiliated/hz) has quit (Ping timeout: 272 seconds)
2014-10-18 17:27:17		Sceorem (~Sceorem@psp44-1-78-229-244-120.fbx.proxad.net) has quit (Quit: Quitte)
2014-10-18 17:27:28		hz (~username@unaffiliated/hz) has joined ##c++
2014-10-18 17:33:56		FunkyAss (~Funky@unaffiliated/funkyass) has quit (Read error: Connection reset by peer)
2014-10-18 17:36:32		FunkyAss (~Funky@unaffiliated/funkyass) has joined ##c++
2014-10-18 17:39:42		Goplat (~goplat@reactos/developer/Goplat) has quit (Ping timeout: 272 seconds)
2014-10-18 17:40:03		FreezingAlt (~FreezingC@135.0.41.14) has joined ##c++
2014-10-18 17:40:18		PJBoy (~PJBoy@unaffiliated/pjboy) has joined ##c++
2014-10-18 17:40:45		FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 255 seconds)
2014-10-18 17:40:51		BinaryAddicted (~BinaryAdd@194.230.155.162) has joined ##c++
2014-10-18 17:42:02		Lokomotiv (~ASAP@unaffiliated/lokomotiv) has quit (Quit: Ïîëåòåëè!)
2014-10-18 17:42:42		deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-10-18 17:43:07		Nando_k (~Nando_k@dslb-088-070-121-000.088.070.pools.vodafone-ip.de) has quit (Ping timeout: 250 seconds)
2014-10-18 17:43:56		aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-10-18 17:46:48		The_Coolest (~Arthur_Li@109.64.66.251) has joined ##c++
2014-10-18 17:47:53		jhao (~user@207-237-52-187.c3-0.elm-ubr1.qens-elm.ny.cable.rcn.com) has quit (Ping timeout: 255 seconds)
2014-10-18 17:50:49		Jesin (~Jesin@r192085.res.Lehigh.EDU) has quit (Quit: Leaving)
2014-10-18 17:51:23		andenixa (~chatzilla@79-172-91-123.dyn.broadband.iskratelecom.ru) has joined ##c++
2014-10-18 17:52:15	andenixa	Is there a way to make an unified comparison for string/wstring like if(myStr==" ") that works for either types?
2014-10-18 17:53:21		King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has quit (Ping timeout: 244 seconds)
2014-10-18 17:53:54		arescorpio (~arescorpi@190.190.244.100) has quit (Excess Flood)
2014-10-18 17:54:13		Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-10-18 17:54:16		Jesin (~Jesin@r192085.res.Lehigh.EDU) has joined ##c++
2014-10-18 17:56:02	pr01c3r3	andenixa: why not first identify type then do comparison ?
2014-10-18 17:56:24	andenixa	I want a template that works for either types
2014-10-18 17:56:39	andenixa	otherwise it will be a lots of duplicated code
2014-10-18 17:58:46	pr01c3r3	andenixa: I would just have function/method that i can reuse
2014-10-18 17:58:46		Zupoman (~mistrzmag@unaffiliated/zupoman) has quit (Quit: Plan B failed, time for Plan 9!)
2014-10-18 17:59:11	andenixa	its impossible
2014-10-18 17:59:20	pr01c3r3	why ?
2014-10-18 17:59:42	andenixa	I have string manipulation functions that I can't reuse
2014-10-18 17:59:51		Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-10-18 18:00:47	pr01c3r3	that does not make sense to me
2014-10-18 18:03:01		BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has joined ##c++
2014-10-18 18:03:01		m0shbear (~011899988@servbox.moshbear.net) has joined ##c++
2014-10-18 18:08:30		noLimitz (~adam@97.75.240.100) has joined ##c++
2014-10-18 18:08:56		Beetny (~Beetny@14-202-48-200.tpgi.com.au) has joined ##c++
2014-10-18 18:10:05		cry0g3n (~cry0g3n@unaffiliated/bl00dy5p1d0r) has quit (Ping timeout: 240 seconds)
2014-10-18 18:11:22		jitta (~crud@95.91.241.23) has quit (Quit: Stay stressed, then give up.)
2014-10-18 18:11:29		glenfe (~glen@unaffiliated/glenfe) has quit (Quit: Restart)
2014-10-18 18:11:35		bmf1 (~bmf1@216.252.92.108) has quit (Ping timeout: 240 seconds)
2014-10-18 18:11:56		glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2014-10-18 18:12:56		immibis (~ChatZill1@203-97-111-43.cable.telstraclear.net) has joined ##c++
2014-10-18 18:14:03		irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has quit (Quit: Lost terminal)
2014-10-18 18:14:19		Andy-chan (~Andy-chan@xdsl-87-78-149-96.netcologne.de) has quit (Ping timeout: 250 seconds)
2014-10-18 18:17:03		seishun (~Kakera@46.109.249.246) has quit (Ping timeout: 260 seconds)
2014-10-18 18:17:56		jhao (~user@207-237-52-187.c3-0.elm-ubr1.qens-elm.ny.cable.rcn.com) has joined ##c++
2014-10-18 18:20:05		PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Killed (card.freenode.net (Nickname regained by services)))
2014-10-18 18:20:56		lamefun (~lamefun2@94.181.189.84) has joined ##c++
2014-10-18 18:21:43		bmf1 (~bmf1@216.252.87.35) has joined ##c++
2014-10-18 18:24:19		Erlkoenig (~erlkoenig@ip-109-90-150-61.hsi11.unitymediagroup.de) has quit (Quit: Leaving.)
2014-10-18 18:25:50		Stryyker (stryyker16@about/windows/staff/stryyker) has quit (Disconnected by services)
2014-10-18 18:25:51		stryyker2 (stryyker16@about/windows/staff/stryyker) has joined ##c++
2014-10-18 18:26:04		BinaryAddicted (~BinaryAdd@194.230.155.162) has quit
2014-10-18 18:26:23		BinaryAddicted (~BinaryAdd@194.230.155.162) has joined ##c++
2014-10-18 18:30:02		Tviernion_Err (~TViernion@38.107.244.132) has joined ##c++
2014-10-18 18:32:42		lamefun (~lamefun2@94.181.189.84) has quit (Quit: Leaving)
2014-10-18 18:33:04		Vinnie_win (thevinn@pdpc/supporter/gold/thevinn) has quit
2014-10-18 18:33:22		Tviernion_Err (~TViernion@38.107.244.132) has quit (Client Quit)
2014-10-18 18:35:32		Tviernion_Err (~TViernion@38.107.244.132) has joined ##c++
2014-10-18 18:35:35		skeuomorf (~skeuomorf@unaffiliated/skeuomorf) has quit (Ping timeout: 255 seconds)
2014-10-18 18:36:09	--	Tviernion_Err is now known as TViernion
2014-10-18 18:37:41	o11c	andenixa: what I do is do all comparisons on a string_view class and rely o nthe ctors
2014-10-18 18:38:01	o11c	andenixa: but it's illegal to define new operator == that works on only classes in std
2014-10-18 18:38:47	andenixa	I sm just trying to figure out how to minimize code duplication with functions that basically apply for both types
2014-10-18 18:39:07		thwest (~Adium@99-51-187-8.lightspeed.austtx.sbcglobal.net) has joined ##c++
2014-10-18 18:40:55		BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has quit
2014-10-18 18:42:43		linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:5183:fea9:29ba:720c) has quit (Read error: Connection reset by peer)
2014-10-18 18:46:04		tiqs (d1c34a91@gateway/web/freenode/ip.209.195.74.145) has joined ##c++
2014-10-18 18:46:13		linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:5183:fea9:29ba:720c) has joined ##c++
2014-10-18 18:46:25	tiqs	what are the best c++ static code analysis/linting tools available?
2014-10-18 18:48:34	roxfan	there's no clear winner
2014-10-18 18:48:51	roxfan	oh wait you asked for plural
2014-10-18 18:49:14	tiqs	yeah, and anything that goes great with vim and unix please
2014-10-18 18:51:14		biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has quit (Remote host closed the connection)
2014-10-18 18:51:34		basix (~dj@unaffiliated/basix) has joined ##c++
2014-10-18 18:51:42		Nizumzen (~Nizumzen@81.106.27.252) has joined ##c++
2014-10-18 18:53:44		ayee (4e2a5cfd@gateway/web/freenode/ip.78.42.92.253) has quit (Quit: Page closed)
2014-10-18 18:55:52		pwcjr (~phillip@96.231.187.34) has quit (Quit: WeeChat 1.0.1)
2014-10-18 18:59:04		hz (~username@unaffiliated/hz) has quit (Ping timeout: 255 seconds)
2014-10-18 18:59:24		Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-10-18 18:59:31		QualityAddict (~QualityAd@ip68-102-62-117.ks.ok.cox.net) has quit (Ping timeout: 255 seconds)
2014-10-18 18:59:35		jhao (~user@207-237-52-187.c3-0.elm-ubr1.qens-elm.ny.cable.rcn.com) has quit (Remote host closed the connection)
2014-10-18 19:02:25		SiGe (~SiGe@usc-secure-wireless-206-250.usc.edu) has joined ##c++
2014-10-18 19:03:39		Sjors (~sgielen@foo.kassala.de) has quit (Read error: Connection reset by peer)
2014-10-18 19:03:48		Nickeeh (~quassel@foo.kassala.de) has quit (Remote host closed the connection)
2014-10-18 19:03:53		SiGe (~SiGe@usc-secure-wireless-206-250.usc.edu) has quit (Remote host closed the connection)
2014-10-18 19:03:54		batmoz (~quassel@foo.kassala.de) has quit (Read error: Connection reset by peer)
2014-10-18 19:05:11		prinsherbert (~prinsherb@5249E3BF.cm-4-2d.dynamic.ziggo.nl) has quit (Remote host closed the connection)
2014-10-18 19:05:32		TomyLobo (~TomyLobo@91.65.115.103) has quit (Quit: Standby mode...)
2014-10-18 19:08:14	cbreak	tiqs: clang is great.
2014-10-18 19:08:24	cbreak	in particular clang analyzer, and the clang sanitizers
2014-10-18 19:08:45	tiqs	cbreak: can clang check style too?
2014-10-18 19:09:06	cbreak	maybe. I've only seen it check for bugs
2014-10-18 19:09:14	tiqs	okay, ill check it out, thanks
2014-10-18 19:09:18	cbreak	some "style" things it complains about
2014-10-18 19:09:19		QualityAddict (~QualityAd@ip68-102-62-117.ks.ok.cox.net) has joined ##c++
2014-10-18 19:09:26	cbreak	like if (i = 5) giving a warning
2014-10-18 19:09:32		arescorpio (~arescorpi@190.190.244.100) has joined ##c++
2014-10-18 19:09:43	cbreak	or while (a & b == c)
2014-10-18 19:10:18		Barrin6 (~Barrin6@user-0c8gm3t.cable.mindspring.com) has joined ##c++
2014-10-18 19:13:16		ncd|leeN (~leeN@e180213135.adsl.alicedsl.de) has quit (Ping timeout: 265 seconds)
2014-10-18 19:14:55		jhao (~user@207-237-52-187.c3-0.elm-ubr1.qens-elm.ny.cable.rcn.com) has joined ##c++
2014-10-18 19:17:34		hexagoxel_ (~hexagoxel@kiel-5f769108.pool.mediaWays.net) has joined ##c++
2014-10-18 19:19:39		PaulOrekhov (~PaulOrekh@95-31-174-193.broadband.corbina.ru) has joined ##c++
2014-10-18 19:20:13	PaulOrekhov	what is and in C++ regex? &?
2014-10-18 19:20:37		hexagoxel (~hexagoxel@kiel-4d067369.pool.mediaWays.net) has quit (Ping timeout: 250 seconds)
2014-10-18 19:21:31		unK_ (~drunK@dynamic-78-8-134-242.ssp.dialog.net.pl) has quit (Quit: KVIrc 4.3.1 Aria http://www.kvirc.net/)
2014-10-18 19:23:33	cbreak	PaulOrekhov: what?
2014-10-18 19:24:33		lamefun (~lamefun2@94.181.189.84) has joined ##c++
2014-10-18 19:24:33	PaulOrekhov	if i have 2 groups of characters for example {R"([[:alpha:]]&^(d))"} if & correct in this case?
2014-10-18 19:24:38		Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has quit (Quit: ZNC - http://znc.sourceforge.net)
2014-10-18 19:25:12		PSG_Luna (~PSG_Luna@unaffiliated/psg-luna/x-4025268) has joined ##c++
2014-10-18 19:25:17		Gluesticky (~nobody@unaffiliated/gluesticky) has joined ##c++
2014-10-18 19:25:29		sixequalszero (~sixequals@unaffiliated/sixequalszero) has quit (Ping timeout: 240 seconds)
2014-10-18 19:25:33	cbreak	what for?
2014-10-18 19:26:01	PaulOrekhov	if i want any character but not "d"
2014-10-18 19:26:34		govg (~govg@unaffiliated/govg) has joined ##c++
2014-10-18 19:26:55	V-ille	[^d]
2014-10-18 19:27:07		hz (~username@unaffiliated/hz) has joined ##c++
2014-10-18 19:27:19		NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-10-18 19:27:43	PaulOrekhov	and how do i specify and?
2014-10-18 19:27:46		PSG_Luna_ (~PSG_Luna@unaffiliated/psg-luna/x-4025268) has quit (Ping timeout: 265 seconds)
2014-10-18 19:27:51	cbreak	PaulOrekhov: what for?
2014-10-18 19:27:52	PaulOrekhov	i know that | is or
2014-10-18 19:28:00	PaulOrekhov	cbreak what do you mean what for?
2014-10-18 19:28:11	cbreak	PaulOrekhov: what would and be good for?
2014-10-18 19:28:21	PaulOrekhov	i want an alphabetic character but not d
2014-10-18 19:28:36	PaulOrekhov	cbreak i am parsing something checking the syntax for correctness
2014-10-18 19:29:35		deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-10-18 19:30:25	PaulOrekhov	i am giving you a trivial example obviously my regular expression is more complicated
2014-10-18 19:30:27	cbreak	PaulOrekhov: so...
2014-10-18 19:30:37	cbreak	just write that
2014-10-18 19:31:14	PaulOrekhov	ok
2014-10-18 19:32:12	V-ille	it seems that the awk dialect should support &&
2014-10-18 19:32:52	PaulOrekhov	i have bjarne stroustrup's book and he only mentioned OR
2014-10-18 19:33:27	cbreak	[a-ce-z] for example
2014-10-18 19:34:06	PaulOrekhov	i can just do regex_match(s, the_pattern_i_want) && regex_match(s, the_pattern_i_dont_want) i guess
2014-10-18 19:35:30		jhao (~user@207-237-52-187.c3-0.elm-ubr1.qens-elm.ny.cable.rcn.com) has quit (Ping timeout: 265 seconds)
2014-10-18 19:36:33		jhao (~user@207-237-52-187.c3-0.elm-ubr1.qens-elm.ny.cable.rcn.com) has joined ##c++
2014-10-18 19:36:34		luny` (~luny@unaffiliated/luny) has joined ##c++
2014-10-18 19:37:24		Carbantum (~quassel@203.219.229.83) has joined ##c++
2014-10-18 19:37:41		ikrima (~ikrima@rrcs-24-43-162-198.west.biz.rr.com) has joined ##c++
2014-10-18 19:39:51		hs_ (~hs@c-98-247-172-150.hsd1.wa.comcast.net) has quit (Read error: Connection reset by peer)
2014-10-18 19:40:29		luny (~luny@unaffiliated/luny) has quit (Ping timeout: 258 seconds)
2014-10-18 19:41:28		PSG_Luna_ (~PSG_Luna@unaffiliated/psg-luna/x-4025268) has joined ##c++
2014-10-18 19:42:03		hs_ (~hs@c-98-247-172-150.hsd1.wa.comcast.net) has joined ##c++
2014-10-18 19:42:31		Sadale (~Sadale@unaffiliated/sadale) has quit (Remote host closed the connection)
2014-10-18 19:44:43		shintah (bebble@h-140-107.a336.priv.bahnhof.se) has quit (Quit: Hejdå!)
2014-10-18 19:44:59		rainforest (~see@gateway/tor-sasl/alexandrite) has quit (Quit: Leaving)
2014-10-18 19:45:25		PSG_Luna (~PSG_Luna@unaffiliated/psg-luna/x-4025268) has quit (Ping timeout: 255 seconds)
2014-10-18 19:46:42		lamefun (~lamefun2@94.181.189.84) has quit (Quit: Leaving)
2014-10-18 19:47:54	plash	{ f<S>(); } template<class, int> struct S {}; template<template<class...> class> void f() {}
2014-10-18 19:47:55	geordi	error: no matching function for call to 'f()'
2014-10-18 19:48:03		da2ce7 (~da2ce7@opentransactions/dev/da2ce7) has joined ##c++
2014-10-18 19:48:04	plash	is it possible to make f() match ANY class template?
2014-10-18 19:48:27	tsimpson	nope
2014-10-18 19:48:31	plash	ughhhhhhhhhhhh
2014-10-18 19:48:40		Mayzie (~Mayazcher@unaffiliated/mayazcherquoi) has joined ##c++
2014-10-18 19:49:07	plash	I'd also need to be able to take "class/T ..." and substitute it into the class template to match...
2014-10-18 19:49:18	plash	stuuupid
2014-10-18 19:49:36	tsimpson	yeah, it's just not possible right now
2014-10-18 19:49:49		overdamped (~overdampe@unaffiliated/overdamped) has joined ##c++
2014-10-18 19:49:52	plash	C++ always gets in the way!
2014-10-18 19:50:04		overdamped (~overdampe@unaffiliated/overdamped) has quit (Remote host closed the connection)
2014-10-18 19:50:45	tsimpson	other than variadics, templates really haven't changed since C++98
2014-10-18 19:52:09	 *	plash grumbles and brings out the macros
2014-10-18 19:52:19	plash	this is all your fault, C++!
2014-10-18 19:53:06		bitcycle (~sochoa@66.194.68.132) has quit (Quit: WeeChat 0.4.3)
2014-10-18 19:53:24	glenfe	C++: Blamed for everything.
2014-10-18 19:56:10	V-ille	blah, no, awk dialect doesn't do && in a regex
2014-10-18 19:57:16		bmf1 (~bmf1@216.252.87.35) has quit (Ping timeout: 265 seconds)
2014-10-18 19:57:23		Aequo (alpha@unaffiliated/iuris) has joined ##c++
2014-10-18 19:57:26		bmf1 (~bmf1@216.252.87.97) has joined ##c++
2014-10-18 19:57:37		Nizumzen (~Nizumzen@81.106.27.252) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-10-18 19:58:15		Haswell (~Haswell@unaffiliated/haswell) has quit (Quit: Haswell)
2014-10-18 19:58:45		fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-10-18 19:59:07		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-10-18 19:59:41		tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has quit (Quit: Leaving)
2014-10-18 19:59:54		garner (uid38417@gateway/web/irccloud.com/x-yzwylmsfeobedjfm) has quit (Quit: Connection closed for inactivity)
2014-10-18 20:00:01		tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has joined ##c++
2014-10-18 20:03:26		weemsledeux (~textual@unaffiliated/weems) has joined ##c++
2014-10-18 20:04:22		weemsledeux (~textual@unaffiliated/weems) has quit (Remote host closed the connection)
2014-10-18 20:11:23		puchu (~cryptoner@unaffiliated/puchu) has joined ##c++
2014-10-18 20:11:26	puchu	hi
2014-10-18 20:11:32		night-ow_ (~nightowl-@cpe-96-29-7-68.swo.res.rr.com) has joined ##c++
2014-10-18 20:13:36		night-owl (~nightowl-@cpe-96-29-7-68.swo.res.rr.com) has quit (Ping timeout: 245 seconds)
2014-10-18 20:13:46	puchu	how do i set the default initializer for a method?  struct f1{ int a ; int b}; void foo(int a=1, f1={0}); doesnt seem to work for f1
2014-10-18 20:14:07	puchu	how do i set the default initializer for a method?  struct f1{ int a ; int b}; void foo(int a=1, f1 test={0}); doesnt seem to work for f1
2014-10-18 20:14:37		vl4kn0 (~vl4kn0@adsl-dyn3.78-98-25.t-com.sk) has joined ##c++
2014-10-18 20:14:37		teward (LordOfTime@ubuntu/member/teward) has joined ##c++
2014-10-18 20:14:45		devbug (~quassel@d108-180-247-142.bchsia.telus.net) has joined ##c++
2014-10-18 20:14:53		teward (LordOfTime@ubuntu/member/teward) has left ##c++ ("Leaving")
2014-10-18 20:15:42	plash	that should work
2014-10-18 20:15:48	plash	you'll have to pastebin the error
2014-10-18 20:15:52	plash	{} struct S { int x; int y; }; void f(S s = {0}) {}
2014-10-18 20:15:53	geordi	<no output>
2014-10-18 20:16:13		Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2014-10-18 20:16:37	puchu	seems it works with {} instead of {0}
2014-10-18 20:16:58	plash	initialize all members
2014-10-18 20:17:42		jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has joined ##c++
2014-10-18 20:19:17	puchu	will the default values be assigned if the struct looks like: struct S{ int a=1 ; int b=2};
2014-10-18 20:20:01	puchu	void foo(S s={});
2014-10-18 20:20:48	puchu	in c++0x
2014-10-18 20:21:11		wheals_ (~wheals@pool-96-241-216-117.washdc.fios.verizon.net) has joined ##c++
2014-10-18 20:21:23	--	wheals_ is now known as wheals
2014-10-18 20:21:34		Textmode (~boneidle@adsl-1-au-2-174.ozonline.com.au) has joined ##c++
2014-10-18 20:21:42		wheals (~wheals@pool-96-241-216-117.washdc.fios.verizon.net) has left ##c++
2014-10-18 20:23:58		chatsiri_ (~chatsiri_@119-46-191-20.static.asianet.co.th) has joined ##c++
2014-10-18 20:24:01		da2ce7 (~da2ce7@opentransactions/dev/da2ce7) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-19 18:34:35		dagnachew (~dagnachew@bas1-montreal30-2925416877.dsl.bell.ca) has joined ##c++
2014-10-19 18:34:35	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-19 18:34:35	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-19 18:34:35	--	Channel ##c++: 533 nicks (0 ops, 0 voices, 533 normals)
2014-10-19 18:34:35	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-19 18:34:50	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-19 18:36:04		SCHAAP137 (dorian@77-173-0-137.ip.telfort.nl) has joined ##c++
2014-10-19 18:37:56		robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-10-19 18:39:44		basix (~dj@unaffiliated/basix) has quit (Quit: basix)
2014-10-19 18:40:58		Textmode (~boneidle@adsl-1-au-2-174.ozonline.com.au) has joined ##c++
2014-10-19 18:41:42		immibis_ (~ChatZill1@122-59-227-101.jetstream.xtra.co.nz) has joined ##c++
2014-10-19 18:42:02		basix (~dj@unaffiliated/basix) has joined ##c++
2014-10-19 18:42:24		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-10-19 18:43:07		EvergreenTree (~quassel@unaffiliated/evergreentree) has quit (Remote host closed the connection)
2014-10-19 18:43:10		stdvector (~stdvector@gateway/tor-sasl/stdvector) has quit (Remote host closed the connection)
2014-10-19 18:43:11		immibis (~ChatZill1@122-59-227-101.jetstream.xtra.co.nz) has quit (Ping timeout: 272 seconds)
2014-10-19 18:43:18	--	immibis_ is now known as immibis
2014-10-19 18:44:29		TomyLobo (~TomyLobo@91.65.115.103) has quit (Quit: Standby mode...)
2014-10-19 18:45:33	szt	can I use copy to copy one char buffer into another one?
2014-10-19 18:46:09		kurahaupo (~kurahaupo@118.148.213.215) has quit (Ping timeout: 260 seconds)
2014-10-19 18:47:10		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Ping timeout: 240 seconds)
2014-10-19 18:54:11		Stealthy (~stealthy@pdpc/supporter/active/stealthy) has joined ##c++
2014-10-19 18:55:03		skeuomorf (~skeuomorf@unaffiliated/skeuomorf) has quit (Ping timeout: 258 seconds)
2014-10-19 18:58:34	Oxyd	Sure.
2014-10-19 18:58:59		weemsledeux (~textual@unaffiliated/weems) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-10-19 18:59:28		Andy-chan (~Andy-chan@xdsl-87-78-148-85.netcologne.de) has quit (Read error: Connection reset by peer)
2014-10-19 18:59:46		Andy-chan (~Andy-chan@xdsl-87-78-148-85.netcologne.de) has joined ##c++
2014-10-19 19:01:32		PlasmaHH (~kvirc@speedy.projectiwear.org) has quit (Ping timeout: 265 seconds)
2014-10-19 19:01:51		talin (~dhf@unaffiliated/talin) has quit (Remote host closed the connection)
2014-10-19 19:01:53		robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Excess Flood)
2014-10-19 19:02:15		robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-10-19 19:06:17		Errorical (~Errorical@83.243.255.36) has quit (Remote host closed the connection)
2014-10-19 19:07:35		bollullera (~ana@95.63.152.106) has quit (Quit: Leaving.)
2014-10-19 19:08:45		torei (~manjaro-k@c-71-226-6-189.hsd1.ga.comcast.net) has quit (Ping timeout: 244 seconds)
2014-10-19 19:13:14		revil (~janis@95.91.207.228) has quit (Ping timeout: 250 seconds)
2014-10-19 19:15:15		bitlord (~bitlord@unaffiliated/bitlord) has quit (Quit: bitlord)
2014-10-19 19:15:55		torei (~manjaro-k@c-71-226-6-189.hsd1.ga.comcast.net) has joined ##c++
2014-10-19 19:19:54		bb010g (uid21050@gateway/web/irccloud.com/x-rrdndznnqnwlexjz) has quit (Quit: Connection closed for inactivity)
2014-10-19 19:20:02		matt90 (~matt90@149-169-129-167.nat.asu.edu) has joined ##c++
2014-10-19 19:21:17	matt90	how acceptable is it to define const getters in the class declaration?
2014-10-19 19:22:36	o-0-o	no problem for me
2014-10-19 19:22:48	matt90	well that settles it
2014-10-19 19:22:51	o-0-o	unsigned size() const { return blah.size(); }
2014-10-19 19:23:24	matt90	that's the trick
2014-10-19 19:23:42		treeprogram (1857536a@gateway/web/freenode/ip.24.87.83.106) has joined ##c++
2014-10-19 19:23:46		titanium17 (~titanium1@2604:6000:6440:2200:9108:f7e7:bcff:5bb9) has quit (Ping timeout: 265 seconds)
2014-10-19 19:24:15	treeprogram	Hi, what's an easy way to declare an object and store the name of the object in a stringle member of that object?
2014-10-19 19:24:45		hz (~username@unaffiliated/hz) has quit (Ping timeout: 265 seconds)
2014-10-19 19:25:09	treeprogram	Is there a way to do it programmatically?
2014-10-19 19:25:21	treeprogram	so that I only need to write the object's name once?
2014-10-19 19:25:35	treeprogram	*string member
2014-10-19 19:25:58	o-0-o	!give treeprogram book
2014-10-19 19:25:59	nolyc	treeprogram: The Definitive C++ Book Guide and List -> http://stackoverflow.com/q/388242/1090079
2014-10-19 19:26:21	o-0-o	treeprogram: also macros
2014-10-19 19:26:26	matt90	http://stackoverflow.com/questions/4466088/how-to-get-class-name
2014-10-19 19:26:32	o-0-o	he wants object name
2014-10-19 19:26:33	matt90	three implmentations, not including typeid
2014-10-19 19:26:42	o-0-o	Class obj("obj");
2014-10-19 19:27:09	matt90	I've never actually tried viewing typeid(x).name
2014-10-19 19:27:12	o-0-o	#define NAMED_OBJ(name) Class name{#name}
2014-10-19 19:27:22	o-0-o	or just name{#name}
2014-10-19 19:27:25	matt90	I imagine you get something disgusting with lots of underscores and random capitalization
2014-10-19 19:27:33	o-0-o	Class NAMED_OBJ(myAss);
2014-10-19 19:27:52		roxfan (dunno@109.134.1.51) has quit (Ping timeout: 244 seconds)
2014-10-19 19:28:09	matt90	he's gonna keep customizing the class declaration with macros until he has a whole DSL for writing c++ headers
2014-10-19 19:28:30	treeprogram	o-0-o: Class obj("obj") requires me to type "obj" twice. I'd like a way to store the object name by only typing it once
2014-10-19 19:28:43	o-0-o	treeprogram: Class NAMED_OBJ(myAss);
2014-10-19 19:28:46		r0bby_ (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-10-19 19:28:59	matt90	treeprogram: the macro solution o-0-o mentioned is demonstrated in the link I gave
2014-10-19 19:29:09	o-0-o	if you can't understand that macro, you should start reading C++ books
2014-10-19 19:29:20		robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 246 seconds)
2014-10-19 19:30:41	ObjectiveMatt	template <typename T> const T& list<T>::last( ) const
2014-10-19 19:30:50	ObjectiveMatt	if the return type is const T&, a reference to T
2014-10-19 19:31:00		jhao (~user@207-237-52-187.c3-0.elm-ubr1.qens-elm.ny.cable.rcn.com) has quit (Ping timeout: 250 seconds)
2014-10-19 19:31:01	ObjectiveMatt	then what does the return statement look like?
2014-10-19 19:31:10	o-0-o	return elem;
2014-10-19 19:31:19	ObjectiveMatt	and elem would be T* elem?
2014-10-19 19:31:21	o-0-o	return container[some index]
2014-10-19 19:31:28		dardevelin (~dardeveli@a95-95-29-159.cpe.netcabo.pt) has joined ##c++
2014-10-19 19:31:30	o-0-o	ObjectiveMatt: no
2014-10-19 19:31:38	ObjectiveMatt	it would be T& elem?
2014-10-19 19:31:39	o-0-o	elem would be T
2014-10-19 19:31:45	ObjectiveMatt	ok
2014-10-19 19:31:56	o-0-o	it could be T& as well. does not matter
2014-10-19 19:32:02	o-0-o	please, read books :(
2014-10-19 19:32:12	matt90	:p
2014-10-19 19:32:35	matt90	I just got the effective modern c++ preview
2014-10-19 19:32:43	o-0-o	ohh seems great
2014-10-19 19:32:45	ObjectiveMatt	how can I return the last element of a list in a single statement?
2014-10-19 19:32:48	matt90	looks to still be effective
2014-10-19 19:32:59	o-0-o	ObjectiveMatt: it depends. how is your list?
2014-10-19 19:33:10	ObjectiveMatt	linked-list I suppose
2014-10-19 19:33:17	o-0-o	"a list" <== there are gazzilion ways to implement 'lists'
2014-10-19 19:33:21	ObjectiveMatt	I know right
2014-10-19 19:33:30	ObjectiveMatt	http://aquarius.ucdenver.edu/2421/exams/midterm2review2421fa14.pdf
2014-10-19 19:33:31	matt90	I think the std::list is O(N) to find the end
2014-10-19 19:33:34	ObjectiveMatt	well there's always ambiguity in this
2014-10-19 19:33:38	o-0-o	matt90: no
2014-10-19 19:33:41	matt90	no?
2014-10-19 19:33:45	o-0-o	slist is O(N)
2014-10-19 19:33:48	matt90	ah
2014-10-19 19:33:53	o-0-o	normal list has pointers to both ends
2014-10-19 19:33:59	matt90	k
2014-10-19 19:34:12	ObjectiveMatt	it's #2
2014-10-19 19:34:14	o-0-o	in java, lists are vectors (arraylist)
2014-10-19 19:34:18	ObjectiveMatt	so it's like, what list
2014-10-19 19:34:29	o-0-o	ObjectiveMatt: nothing will make me to click that link :)
2014-10-19 19:34:42	ObjectiveMatt	not even a donut?
2014-10-19 19:34:48	matt90	arraylist is an array, jutil.linkedlist isn't ;)
2014-10-19 19:34:49	o-0-o	a donut would be fine
2014-10-19 19:35:02	o-0-o	matt90: see? java adds more context to the lists
2014-10-19 19:35:10	o-0-o	Array.asList is what?
2014-10-19 19:35:34	matt90	that's a fair complaint about the collections
2014-10-19 19:35:43	matt90	you can get a List and have no idea what it's characteristics are
2014-10-19 19:35:48	matt90	its*
2014-10-19 19:35:50	o-0-o	matt90: this shit is all confusing indeed
2014-10-19 19:35:55	o-0-o	it should be named container. not list
2014-10-19 19:36:26	o-0-o	even LIST VIEWS fall under java List interface
2014-10-19 19:36:48	o-0-o	(generated by Array.asList or List.subList)
2014-10-19 19:37:11	matt90	and then you have immutable views that derive from List
2014-10-19 19:37:18	matt90	which declares insert and remove
2014-10-19 19:37:30	 *	matt90 sighs
2014-10-19 19:37:39	o-0-o	:DDDDDDDDDDDDDD
2014-10-19 19:38:05	matt90	martin odersky had the right idea with the Scala collections library before he actually started writing it
2014-10-19 19:38:58	matt90	the types make sense; you can't call size() on a collection with undefined size
2014-10-19 19:39:08		kadoban (~kadoban@ip68-3-81-129.ph.ph.cox.net) has quit (Ping timeout: 258 seconds)
2014-10-19 19:40:13		Tynach (~Tynach@ip68-109-167-198.ph.ph.cox.net) has joined ##c++
2014-10-19 19:40:28	ObjectiveMatt	o-0-o https://www.google.com/search?q=donut what kind of donut would you like
2014-10-19 19:40:41	matt90	ObjectiveMatt: I'm guessing you don't have class notes telling you what the structure of the list is?
2014-10-19 19:40:41		Joyd (~make@unaffiliated/bryeware) has quit (Quit: Ta)
2014-10-19 19:40:50	o-0-o	chocolate glazed and boston cream filled
2014-10-19 19:41:06	ObjectiveMatt	well we've done sorted lists, unsorted lists, and both of those with both array implementations and linked-list implementations
2014-10-19 19:41:08	ObjectiveMatt	so it's like, which list
2014-10-19 19:41:16	o-0-o	ObjectiveMatt: you really need stop asking questions that you have no idea of. better start reading basic books
2014-10-19 19:41:34	matt90	o-0-o: it's his midterm, he's already screwed
2014-10-19 19:41:41	o-0-o	sorry
2014-10-19 19:41:47	o-0-o	can't help :(
2014-10-19 19:41:57	o-0-o	read books and do it again
2014-10-19 19:42:04	ObjectiveMatt	I'd get 100% if the teacher made sense...
2014-10-19 19:42:13	o-0-o	!ot school woes
2014-10-19 19:42:13	ObjectiveMatt	I mean you can't be ambiguous in your question about what list
2014-10-19 19:42:14	nolyc	Standard C++ has no notion of `school woes', so you must be talking about some specific OS- or library API (or tool), which is beyond the scope of this channel (which focuses on standard C++).
2014-10-19 19:42:19	matt90	ObjectiveMatt: presumably you have a 'list<T>* next' and 'return next ? next->last() : this->t;'
2014-10-19 19:42:41		kadoban (~kadoban@ip68-3-81-129.ph.ph.cox.net) has joined ##c++
2014-10-19 19:42:46		r0bby_ (~wakawaka@guifications/user/r0bby) has quit (Excess Flood)
2014-10-19 19:42:53	doug64k	isn't this odd http://coliru.stacked-crooked.com/a/4d5b3ae203b53c7d   -- cppreference's definition of std::reverse_iterator::base() must be wrong
2014-10-19 19:43:03	ObjectiveMatt	oh that's clever
2014-10-19 19:43:14		r0bby_ (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-10-19 19:43:15	LunarJetman	bot abuse
2014-10-19 19:43:43	matt90	add a comment about blowing out your stack if the list is very long
2014-10-19 19:44:00		hyperair (~hyperair@ubuntu/member/hyperair) has quit (Ping timeout: 250 seconds)
2014-10-19 19:44:10	o-0-o	!give LunarJetman focus
2014-10-19 19:44:12	nolyc	LunarJetman: ##c++ focuses on C++. Discuss offtopic things elsewhere; ##c++-general or ##c++-social
2014-10-19 19:44:15	LunarJetman	!rq zogatribe
2014-10-19 19:44:16	nolyc	[13390]<Zogatribe> actually I am talking crap; ignore me
2014-10-19 19:44:26		jhao (~user@207-237-52-187.c3-0.elm-ubr1.qens-elm.ny.cable.rcn.com) has joined ##c++
2014-10-19 19:45:04	ObjectiveMatt	what is the const after the function declaration
2014-10-19 19:45:09	ObjectiveMatt	after the paramter list
2014-10-19 19:45:09	matt90	oh my
2014-10-19 19:45:15	o-0-o	books...
2014-10-19 19:45:20	matt90	you're desperate
2014-10-19 19:45:31	ObjectiveMatt	it promises the function will not change any parameters
2014-10-19 19:45:32	ObjectiveMatt	or what
2014-10-19 19:45:41	matt90	yes
2014-10-19 19:45:43	o-0-o	you really want to get trolled
2014-10-19 19:45:48	o-0-o	you are begging for it
2014-10-19 19:45:52	ObjectiveMatt	well I mean there are no parameters
2014-10-19 19:45:53	ObjectiveMatt	anyways
2014-10-19 19:45:55	ObjectiveMatt	so what is the purpose
2014-10-19 19:46:07	o-0-o	the purpose is to force the read to get proper C++ books
2014-10-19 19:46:15	o-0-o	!give ObjectiveMatt books
2014-10-19 19:46:16	nolyc	ObjectiveMatt: The Definitive C++ Book Guide and List -> http://stackoverflow.com/q/388242/1090079
2014-10-19 19:46:28	matt90	you should write your solution using __asm__( )
2014-10-19 19:46:39	doug64k	cppreference doesn't mention it special-casing the empty case http://coliru.stacked-crooked.com/a/6965c7558c83d85e
2014-10-19 19:46:41	matt90	your prof will like that
2014-10-19 19:47:01	ObjectiveMatt	also, that is a clever one line return thing, but I have 2 functions, ResetList(), and GetNextItem()
2014-10-19 19:47:27	matt90	where did those come from?
2014-10-19 19:47:33	ObjectiveMatt	well unless I assumed it was an array implementation
2014-10-19 19:47:50	ObjectiveMatt	then I could just say something like, return array[size]; or something like that
2014-10-19 19:47:58	matt90	I hope not
2014-10-19 19:48:10	o-0-o	doug64k: really? base is usually one off
2014-10-19 19:48:32	o-0-o	doug64k: also for the empty case, all things are == end()
2014-10-19 19:48:34	matt90	unless you want to return a chunk of your web browser's heap
2014-10-19 19:48:37	ObjectiveMatt	http://aquarius.ucdenver.edu/2421/lectures/lecture11_2421fa14.pdf
2014-10-19 19:48:45	doug64k	yes, a reverse_iterator technically points to the one after the "current" one, under the covers
2014-10-19 19:48:48	ObjectiveMatt	actually, just doesn't make sense.
2014-10-19 19:49:01	ObjectiveMatt	that's the most recent list of the lecture notes
2014-10-19 19:50:03	o-0-o	!give ObjectiveMatt news
2014-10-19 19:50:04	nolyc	ObjectiveMatt: I'm sure we are all fascinated, so please write it down in a monthly newsletter and mail it to us.
2014-10-19 19:50:22		Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2014-10-19 19:50:46	LunarJetman	I vote sausage.
2014-10-19 19:50:47	ObjectiveMatt	!give o-0-o news
2014-10-19 19:50:49	nolyc	o-0-o: I'm sure we are all fascinated, so please write it down in a monthly newsletter and mail it to us.
2014-10-19 19:51:14		irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has quit (Quit: Lost terminal)
2014-10-19 19:51:17	matt90	ObjectiveMatt, did you go to class at all?
2014-10-19 19:51:22	o-0-o	lol
2014-10-19 19:51:23	ObjectiveMatt	every class yes
2014-10-19 19:51:32	o-0-o	were you awake?
2014-10-19 19:51:36	ObjectiveMatt	yes
2014-10-19 19:51:45	ObjectiveMatt	I had a 3.5 in my undergraduate aerospace engineering program
2014-10-19 19:51:55	o-0-o	erm... !news
2014-10-19 19:52:01	ObjectiveMatt	better school, better professor
2014-10-19 19:52:11	LunarJetman	bot abuse denied.
2014-10-19 19:52:19	o-0-o	too bad you never have got a C++ book
2014-10-19 19:52:22	matt90	you should have used matlab enough to know how to iterate a list
2014-10-19 19:52:32	o-0-o	perhaps aerospace engineers are afraid of C++ books
2014-10-19 19:52:36	o-0-o	and data structures :D
2014-10-19 19:52:42	ObjectiveMatt	I definitely used matlab a ton
2014-10-19 19:52:48	matt90	the ones at my school are pretty bright
2014-10-19 19:52:55	ObjectiveMatt	dude I'm a programmer really
2014-10-19 19:52:55	matt90	they do a lot of math
2014-10-19 19:53:00		Tynach (~Tynach@ip68-109-167-198.ph.ph.cox.net) has quit (Quit: Leaving the network. I'm not online anymore.)
2014-10-19 19:53:09	ObjectiveMatt	took a microavionics class, which taught me assembly
2014-10-19 19:53:14	ObjectiveMatt	did 3 years of Objective C, 2 years of Java
2014-10-19 19:53:16	doug64k	o-0-o: na, too busy calculating the friction of a ladder against the floor with a given angle and coefficients of friction :P
2014-10-19 19:53:16	LunarJetman	our physicists use matlab; us programmers don't.
2014-10-19 19:53:19	ObjectiveMatt	3 years of C
2014-10-19 19:53:23	o-0-o	ObjectiveMatt: if you are really a programmer, just get a fucking reference guide in C++ and fix your things
2014-10-19 19:53:31		Tynach (~Tynach@ip68-109-167-198.ph.ph.cox.net) has joined ##c++
2014-10-19 19:53:33	matt90	lol what
2014-10-19 19:53:34	matt90	no
2014-10-19 19:53:37	ObjectiveMatt	a reference guide will not help me interpret these questions
2014-10-19 19:53:40	o-0-o	lol
2014-10-19 19:53:51	o-0-o	you know. it is very hard to belive you
2014-10-19 19:54:00	ObjectiveMatt	haha doug64k that is kind of accurate
2014-10-19 19:54:05	o-0-o	why are you trying to fool us?
2014-10-19 19:54:37		Gluesticky (~nobody@unaffiliated/gluesticky) has joined ##c++
2014-10-19 19:54:44	ObjectiveMatt	look how ambiguous #8 is
2014-10-19 19:54:45	ObjectiveMatt	http://aquarius.ucdenver.edu/2421/exams/midterm2review2421fa14.pdf
2014-10-19 19:54:52	ObjectiveMatt	what do you mean contents
2014-10-19 19:55:02	ObjectiveMatt	and if it is of type T, what if it is a stack of ints or floats
2014-10-19 19:55:09	ObjectiveMatt	or strings I mean
2014-10-19 19:55:18	o-0-o	I have to admit
2014-10-19 19:55:21	o-0-o	this guy is a master troll
2014-10-19 19:55:22	o-0-o	:)
2014-10-19 19:55:57	ObjectiveMatt	how is that trolling
2014-10-19 19:56:10	matt90	I mean
2014-10-19 19:56:18	ObjectiveMatt	does he just assume there is some function like T::DisplayContents();
2014-10-19 19:56:20	ObjectiveMatt	or what
2014-10-19 19:56:21	LunarJetman	Internet trolling is being made illegal in the UK
2014-10-19 19:56:21	doug64k	I can get an aeronautics job with assembly? here now I thought it was only good for writing boot loaders :P
2014-10-19 19:56:33	matt90	you know what a stack is? what's the only retrieval function it needs to implement to be a stack?
2014-10-19 19:56:38	ObjectiveMatt	pop
2014-10-19 19:56:41	matt90	so
2014-10-19 19:56:47	ObjectiveMatt	right so while stack is not empty
2014-10-19 19:56:49	ObjectiveMatt	pop pop pop
2014-10-19 19:56:54	ObjectiveMatt	but then display contents?
2014-10-19 19:56:54	o-0-o	no wonder why there are so many planes crashing today
2014-10-19 19:56:55	matt90	bam
2014-10-19 19:56:59	matt90	how was that ambiguous?
2014-10-19 19:57:06	ObjectiveMatt	the "display contents" part
2014-10-19 19:57:09	doug64k	ya let's use a mind-blowingly bug-prone language... for the plane :D
2014-10-19 19:57:09	matt90	cout
2014-10-19 19:57:21	ObjectiveMatt	well I mean it's of type T ambiguous type
2014-10-19 19:57:30	ObjectiveMatt	I can just std::cout << t;
2014-10-19 19:57:32	LunarJetman	C++ is perfect for a plane; most C++ programmers are not.
2014-10-19 19:57:32	Taywee	matt90: Depends what T is.  How do you "display" T if T is a structure.  Though you're probably safe assuming that the type can simply be inserted into an output stream.
2014-10-19 19:57:33	ObjectiveMatt	if it's T t;
2014-10-19 19:57:42	doug64k	LunarJetman: meant assembly
2014-10-19 19:57:52	o-0-o	!factr
2014-10-19 19:57:54	o-0-o	!fact
2014-10-19 19:57:56	nolyc	The extern specifier can be applied only to the names of variables and functions.
2014-10-19 19:58:08	matt90	doug64k: remember the Toyota crashes caused by their scheduler deadlocking?
2014-10-19 19:58:29	matt90	Taywee: it doesn't say he has to prettyprint it; cout << static_cast<void*>
2014-10-19 19:58:46		fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-10-19 19:58:49	doug64k	who writes a new scheduler for a life-threatening device? if they had any sense they would have licensed fully debugged code
2014-10-19 19:58:59	matt90	they didn't even debug the code they wrote
2014-10-19 19:59:08		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-10-19 19:59:29	Taywee	matt90: True.  ObjectiveMatt, I'm feeling the point isn't to be pedantic.  They just want to know that you understand the specifics of a stack, and nothing more.
2014-10-19 20:00:08	Taywee	I could almost guarantee you'd be safe enough assuming the type is std::cout-able.
2014-10-19 20:00:27	ObjectiveMatt	By the way doug64k, the friction of a ladder against the floor does not depend on the given angle =P
2014-10-19 20:00:32	matt90	doug64k: pdf warning: life-and-death code analysis http://www.safetyresearch.net/Library/BarrSlides_FINAL_SCRUBBED.pdf
2014-10-19 20:00:41	ObjectiveMatt	so just std::cout << t;
2014-10-19 20:00:46		titanium17 (~titanium1@2604:6000:6440:2200:fce4:df71:959f:39f7) has joined ##c++
2014-10-19 20:01:42	matt90	T* t = 0; while (t = stack.pop()) cout << t << endl;
2014-10-19 20:02:27	doug64k	ObjectiveMatt: the friction's opposing force vector in the floor plane would depend on angle. it would be zero if the ladder were perfectly vertical
2014-10-19 20:02:29		da2ce7 (~da2ce7@opentransactions/dev/da2ce7) has joined ##c++
2014-10-19 20:03:00	matt90	the friction is a function of the downward force which is a function of the angle
2014-10-19 20:03:06	ObjectiveMatt	oh that is true
2014-10-19 20:03:13	ObjectiveMatt	assuming that a wall is supporting a fraction of the weight?
2014-10-19 20:03:14	LunarJetman	you are going to fail mate.
2014-10-19 20:03:20	matt90	lul
2014-10-19 20:03:21	LunarJetman	become a rent boy instead.
2014-10-19 20:03:23	doug64k	ObjectiveMatt: yes
2014-10-19 20:04:00	Taywee	ObjectiveMatt: Even without that assumption.  Remember torque and rotational inertia.
2014-10-19 20:04:11	matt90	my question is why did she give you such little spaces to write your answers in that midterm
2014-10-19 20:04:22	matt90	I hope she gave you a tiny pencil too
2014-10-19 20:04:33	ObjectiveMatt	well Taywee a ladder without a wall would not really stand
2014-10-19 20:04:37		r0bby_ (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 240 seconds)
2014-10-19 20:04:46	ObjectiveMatt	I was just thinking that Force from friction = coefficient of friction * weight
2014-10-19 20:04:56	ObjectiveMatt	without thinking that the weight depended on the angle
2014-10-19 20:05:13	Taywee	No, but it would still slide as it rotates as it falls flat, depending on friction.
2014-10-19 20:05:52		LunarJetman (LunarJetma@2.221.166.187) has quit (Quit: LunarJetman)
2014-10-19 20:06:03	ObjectiveMatt	now that's a very, very, very difficult physical situation to quantify
2014-10-19 20:06:09	Taywee	It's a more complex system that way.
2014-10-19 20:06:13	hs_	I was thinking this isn't relevant to the channel topic
2014-10-19 20:06:14	matt90	std::unique_ptr<typename BufferPool<T, BlockSize>::state_t, ...>
2014-10-19 20:06:25	matt90	what's the preferred way to clean up these signatures?
2014-10-19 20:06:31		basix (~dj@unaffiliated/basix) has quit (Quit: basix)
2014-10-19 20:06:32	matt90	the deleter is even longer
2014-10-19 20:07:36	matt90	state_t is a typedef inner to the class; should I be scoping it differently so I don't need qualified access?
2014-10-19 20:08:52		r0bby_ (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-10-19 20:09:53		Gluesticky (~nobody@unaffiliated/gluesticky) has quit (Read error: Connection reset by peer)
2014-10-19 20:10:59		ZuzzleBuzzer (~ZuzzleBuz@cpe-98-148-106-33.socal.res.rr.com) has joined ##c++
2014-10-19 20:11:28		night-ow_ (~nightowl-@cpe-96-29-7-68.swo.res.rr.com) has joined ##c++
2014-10-19 20:11:36	matt90	alternatively is there a way to scope 'typedef .. size_t' to the class template such that I don't need to parameterize to see it?
2014-10-19 20:11:49	matt90	er, state_t
2014-10-19 20:12:58	glenfe	matt90: No. But is state_t dependant on 'T' or 'BlockSize' in any way?
2014-10-19 20:13:21	ObjectiveMatt	How do I "Show an iterator range for an array that represents elements 2 through 7"
2014-10-19 20:13:22	matt90	it's not, but it is unique to the class
2014-10-19 20:13:26	matt90	so it doesn't make sense to move it out
2014-10-19 20:13:41	ObjectiveMatt	I mean iterator_range is a class in boost right? which contains 2 iterators?
2014-10-19 20:13:50	ObjectiveMatt	how do I "show" an iterator range
2014-10-19 20:13:52		s00pcan (~chris@108-208-64-149.lightspeed.livnmi.sbcglobal.net) has joined ##c++
2014-10-19 20:14:02		night-owl (~nightowl-@cpe-96-29-7-68.swo.res.rr.com) has quit (Ping timeout: 265 seconds)
2014-10-19 20:14:29	matt90	"show a range that could be used to iterate an array from 2 to 7 inclusively"
2014-10-19 20:14:38	hs_	why are you asking people in here to explain your homework questions to you?
2014-10-19 20:14:47	ObjectiveMatt	because they know c++
2014-10-19 20:14:51	ObjectiveMatt	and it's a review by the way
2014-10-19 20:14:52	hs_	don't you have parents?
2014-10-19 20:14:58	matt90	lol
2014-10-19 20:15:01	ZuzzleBuzzer	what would the constructor for a singly linked list class look like?
2014-10-19 20:15:08	hs_	can't they help with your homework?
2014-10-19 20:15:15	TommyC	Query: Underneath the hood, conceptually speaking would std::vector just be a dynamically allocated array created in the constructor that is deleted in the destructor?
2014-10-19 20:15:26	glenfe	matt90: Well, BufferPool<T, U>::state_t isn't so bad  - anyone who is bothered by it could always create an alias for the type.
2014-10-19 20:15:44	hs_	TommyC, more or less
2014-10-19 20:15:54	TommyC	hs_: Danke
2014-10-19 20:16:00	matt90	glenfe: fair enough; it's only me who's bothered and only for the one method signature
2014-10-19 20:16:56	matt90	TommyC: https://gcc.gnu.org/onlinedocs/gcc-4.6.3/libstdc++/api/a01115_source.html
2014-10-19 20:17:04	TommyC	Ah nice.
2014-10-19 20:17:13	TommyC	Did not know that existed.
2014-10-19 20:17:46		sparetire_ (~sparetire@unaffiliated/sparetire) has joined ##c++
2014-10-19 20:18:00	matt90	TommyC: http://llvm.org/svn/llvm-project/libcxx/trunk/
2014-10-19 20:18:14	matt90	good luck reading it though
2014-10-19 20:18:29	matt90	I can barely find the beginnings and ends of things in there
2014-10-19 20:18:41	matt90	I really don't believe a human wrote that
2014-10-19 20:19:38		torei (~manjaro-k@c-71-226-6-189.hsd1.ga.comcast.net) has quit (Quit: Manjaro-KDE user leaving!)
2014-10-19 20:19:44		magic (jack@unaffiliated/auv5) has quit (Quit: ZNC - http://znc.in)
2014-10-19 20:19:55		torei (~manjaro-k@c-71-226-6-189.hsd1.ga.comcast.net) has joined ##c++
2014-10-19 20:20:14		magic (jack@unaffiliated/auv5) has joined ##c++
2014-10-19 20:20:50		jfcaron (~jfcaron@S01063c075411407f.vc.shawcable.net) has quit (Ping timeout: 250 seconds)
2014-10-19 20:21:21		Andy-chan (~Andy-chan@xdsl-87-78-148-85.netcologne.de) has quit (Ping timeout: 260 seconds)
2014-10-19 20:21:40		cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-10-19 20:22:57	doug64k	matt90: if you want to have a chance understanding it, you should know this stuff http://web.stanford.edu/class/archive/cs/cs143/cs143.1128/ particularly all the stuff from semantic analysis forward
2014-10-19 20:23:20	matt90	oh lord
2014-10-19 20:23:29	matt90	I switch to EE before I got into compiler theory, thanks ;)
2014-10-19 20:23:32	ObjectiveMatt	Crap, for a master's program, I need B or higher in everything
2014-10-19 20:23:40	ObjectiveMatt	which wasn't a problem before, but I've been soooo tired =-\
2014-10-19 20:23:52	hs_	who is this clown?
2014-10-19 20:23:57	matt90	ObjectiveMatt:  is this your first programming class?
2014-10-19 20:24:06	ObjectiveMatt	well 3 simultaneous first classes yes
2014-10-19 20:24:10	hs_	o-0-o, you did a bad job chasing this fool away
2014-10-19 20:24:12	ObjectiveMatt	well unless you count others
2014-10-19 20:24:20	ObjectiveMatt	like general computing where I learned VBA and stuff
2014-10-19 20:24:34	ObjectiveMatt	like I said a 4 year in aerospace engineering, did a lot of matlab, microavionics did assembly and C
2014-10-19 20:24:40	matt90	can you explain why your teacher would ask you to demonstrate iterating an array between two indices?
2014-10-19 20:24:54	ObjectiveMatt	he never even mentioned the word "iterator" as far as I recall
2014-10-19 20:25:00	matt90	iterate, not iterator
2014-10-19 20:25:07	matt90	it's a vebr
2014-10-19 20:25:08	matt90	verb
2014-10-19 20:25:16	ObjectiveMatt	or if he did, he most definitely did not explain "iterator_range"
2014-10-19 20:25:34	matt90	so you don't know what a range is nor what it means to iterate an array
2014-10-19 20:25:42	ObjectiveMatt	well I know what it means to iterate an array
2014-10-19 20:25:49	ObjectiveMatt	loop through the elements to access them of course
2014-10-19 20:26:29	matt90	do you have to loop through all of them always or can you start after the first and stop before the last?
2014-10-19 20:26:49	ObjectiveMatt	depends on the container and its implementation right
2014-10-19 20:26:56	matt90	it's an array
2014-10-19 20:26:57	ObjectiveMatt	like if it's just a plain array and I have the length
2014-10-19 20:27:04	matt90	an array is an abstract data type
2014-10-19 20:27:05	ObjectiveMatt	I can just say array[1] or array[length-2]
2014-10-19 20:27:11	matt90	so you know what a range is
2014-10-19 20:27:28		treeprogram (1857536a@gateway/web/freenode/ip.24.87.83.106) has quit (Ping timeout: 246 seconds)
2014-10-19 20:27:34	ObjectiveMatt	well depends, like just two indices representing a bounds of a pertinent set of elements?
2014-10-19 20:28:02	ObjectiveMatt	I mean I just look at the class "iterator_range" of boost, if that is what my teacher is referring to
2014-10-19 20:28:07	ObjectiveMatt	and it's just this whole... gunk of stuff
2014-10-19 20:28:17	matt90	he said an iterator range, not an iterator_range
2014-10-19 20:28:19	matt90	they're just words
2014-10-19 20:28:37		ikrima (~ikrima@rrcs-76-79-205-82.west.biz.rr.com) has joined ##c++
2014-10-19 20:28:48	ObjectiveMatt	k well in c++ and java, I have the feeling that iterator is like some object
2014-10-19 20:28:57	ObjectiveMatt	that you sort of call functions on to iterate through the array
2014-10-19 20:28:58		titanium17 (~titanium1@2604:6000:6440:2200:fce4:df71:959f:39f7) has quit (Ping timeout: 272 seconds)
2014-10-19 20:29:07	matt90	lol
2014-10-19 20:29:09	matt90	man
2014-10-19 20:29:09	matt90	wow
2014-10-19 20:29:14	ObjectiveMatt	so when he says "iterator range"
2014-10-19 20:29:20	matt90	an iterator is an abstraction
2014-10-19 20:29:26	ObjectiveMatt	ok fair enough
2014-10-19 20:29:28	matt90	"a thing that iterates"
2014-10-19 20:29:30	ObjectiveMatt	k.
2014-10-19 20:29:42	matt90	so given a thing that iterates over a range, give it a range
2014-10-19 20:29:44	ObjectiveMatt	ok well show an abstraction.
2014-10-19 20:29:53	matt90	such that it sees elements 2 through 7
2014-10-19 20:30:08	ObjectiveMatt	right well now it's not abstract now is it
2014-10-19 20:30:16	matt90	he just wants you to demonstrate that you understand zero-based array indexing and off-by-one errors
2014-10-19 20:30:24	matt90	but I'm pretty sure you don't, so you should write that
2014-10-19 20:30:45	ObjectiveMatt	I do understand both of those things
2014-10-19 20:30:55	ObjectiveMatt	but what the hell is "show an iterator range"
2014-10-19 20:31:08	ObjectiveMatt	do I write code...
2014-10-19 20:31:13	ObjectiveMatt	do I write, "2 , 7"
2014-10-19 20:31:22	ObjectiveMatt	"1, 6"
2014-10-19 20:31:40	ObjectiveMatt	"[1, 6]"
2014-10-19 20:31:43	matt90	probably in interval form
2014-10-19 20:32:01	ObjectiveMatt	so that ? ^
2014-10-19 20:32:26		ikrima (~ikrima@rrcs-76-79-205-82.west.biz.rr.com) has quit (Read error: Connection reset by peer)
2014-10-19 20:32:33		ikrima_ (~ikrima@rrcs-76-79-205-82.west.biz.rr.com) has joined ##c++
2014-10-19 20:32:57	matt90	since it's a c++ class you could even write the iterator expression
2014-10-19 20:33:34	ObjectiveMatt	involving this? http://www.cplusplus.com/reference/iterator/
2014-10-19 20:33:48	matt90	again, an iterator is just an abstraction
2014-10-19 20:34:02	matt90	you can implement it however you want
2014-10-19 20:34:21	tiqs	are there variable length arrays in c++?
2014-10-19 20:34:37	hs_	tiqs, nope
2014-10-19 20:34:38	ObjectiveMatt	there are dynamically allocated arrays and that is about all am I write?
2014-10-19 20:34:41	hs_	but gcc might support them?
2014-10-19 20:34:42	ObjectiveMatt	right*
2014-10-19 20:34:45	hs_	i seem to recall that being the case..
2014-10-19 20:34:49	tiqs	that sucks
2014-10-19 20:35:03	hs_	tiqs, that's what vector is for
2014-10-19 20:35:05		kadoban_ (~mud@ip68-3-81-129.ph.ph.cox.net) has joined ##c++
2014-10-19 20:35:31	tiqs	hs_: vector is harder to use in some cases
2014-10-19 20:35:34	matt90	he should definitely use malloc
2014-10-19 20:35:35	tiqs	not as convenient
2014-10-19 20:40:37		VladolfPutler (~jasper@5ED7DF59.cm-7-8d.dynamic.ziggo.nl) has joined ##c++
2014-10-19 20:42:09		treeprogram (1857536a@gateway/web/freenode/ip.24.87.83.106) has joined ##c++
2014-10-19 20:42:13	treeprogram	Can someone suggest how I can fix this: http://ideone.com/1X3rg5 ?
2014-10-19 20:42:41	K-ballo	treeprogram: replace rect2 with rectb, or viceversa?
2014-10-19 20:44:01	treeprogram	K-ballo: thanks
2014-10-19 20:44:05	treeprogram	K-ballo: I never would have seen that
2014-10-19 20:44:17		FreeFull (~freefull@defocus/sausage-lover) has quit (Ping timeout: 260 seconds)
2014-10-19 20:45:11		r0bby_ (~wakawaka@guifications/user/r0bby) has quit (Excess Flood)
2014-10-19 20:45:38		r0bby_ (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-10-19 20:45:54	K-ballo	really?
2014-10-19 20:46:29	treeprogram	K-ballo: there was a #define in my mind, equating rectb with rect2
2014-10-19 20:47:08	K-ballo	treeprogram: well, keep in mind the error messages, those are useful! in your test case, the error message tells rectb was not declared in this scope
2014-10-19 20:47:58		jfcaron (~jfcaron@S01063c075411407f.vc.shawcable.net) has joined ##c++
2014-10-19 20:48:04	treeprogram	K-ballo: I thought it was due to some property of the macro definition. But thanks for the suggestion
2014-10-19 20:48:55	treeprogram	anyway, until next time
2014-10-19 20:48:56		treeprogram (1857536a@gateway/web/freenode/ip.24.87.83.106) has quit (Quit: Page closed)
2014-10-19 20:49:44	ObjectiveMatt	return next ? next->last() : this->t;
2014-10-19 20:49:54	ObjectiveMatt	so matt90
2014-10-19 20:49:55		garner (uid38417@gateway/web/irccloud.com/x-bbrslvhwunzsaqkk) has quit (Quit: Connection closed for inactivity)
2014-10-19 20:49:57	ObjectiveMatt	when you gave me that line
2014-10-19 20:50:18	ObjectiveMatt	if next is null, then the ternay will be false?
2014-10-19 20:50:22	ObjectiveMatt	ternary*
2014-10-19 20:50:31	matt90	assuming next has been initialized to 0
2014-10-19 20:50:39	ObjectiveMatt	ah
2014-10-19 20:50:41	ObjectiveMatt	well what if it is null
2014-10-19 20:50:50	matt90	null is a synonym for 0
2014-10-19 20:50:56	ObjectiveMatt	k
2014-10-19 20:50:59		BinaryAddicted (~BinaryAdd@194.230.155.162) has quit
2014-10-19 20:51:03		cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has quit (Quit: Leaving)
2014-10-19 20:51:04		Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has quit (Read error: Connection reset by peer)
2014-10-19 20:51:06	matt90	but, importantly, an "empty" pointer is not null; it's undefined
2014-10-19 20:51:14	ObjectiveMatt	so if (null) evaluates to false
2014-10-19 20:52:02		nda_ (~nda_@68.216.16.62.customer.cdi.no) has quit (Ping timeout: 255 seconds)
2014-10-19 20:53:03	matt90	anyway, it's essentially a recursive function that increments the 'this' pointer at each call
2014-10-19 20:53:26	matt90	when it reaches the end it unwinds with the last value in the return
2014-10-19 20:53:37		r0bby_ (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 260 seconds)
2014-10-19 20:53:51		emul16 (~bf3@109.201.152.238) has quit (Quit: leaving)
2014-10-19 20:53:56	matt90	probably the worst way you could implement such a thing beside just picking a random index until you found the last one
2014-10-19 20:54:07	ObjectiveMatt	lol
2014-10-19 20:54:12	ObjectiveMatt	but was necessary to do it in a single statement?
2014-10-19 20:54:20	ObjectiveMatt	what list was the teacher even talking about, that's ridiculous
2014-10-19 20:54:51	matt90	you could just assume you have a pointer to the tail
2014-10-19 20:54:57	matt90	return tail->value;
2014-10-19 20:55:01		torei (~manjaro-k@c-71-226-6-189.hsd1.ga.comcast.net) has quit (Ping timeout: 260 seconds)
2014-10-19 20:56:00		Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-10-19 20:56:07	ObjectiveMatt	haha
2014-10-19 20:56:09	matt90	you should make the fewest assumptions you need to, though, and the minimal linked list has next* and value
2014-10-19 20:57:03	--	night-ow_ is now known as night-owl
2014-10-19 20:57:10		torei (~manjaro-k@c-71-226-6-189.hsd1.ga.comcast.net) has joined ##c++
2014-10-19 20:57:18	ObjectiveMatt	https://www.scribd.com/doc/243598478/Midterm-2-Review-2421-Fa-14
2014-10-19 20:57:20	ObjectiveMatt	how does that look
2014-10-19 20:57:21		r0bby_ (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-10-19 20:58:00	matt90	I think you didn't save
2014-10-19 20:58:18	matt90	return listData->next ? ; isn't valid
2014-10-19 20:58:19	ObjectiveMatt	oh well I didn't do number 2
2014-10-19 20:58:22	matt90	k
2014-10-19 20:59:17		pzp (uid11754@gateway/web/irccloud.com/x-icppupgujqoiwoqv) has joined ##c++
2014-10-19 20:59:33	matt90	"of a global
2014-10-19 20:59:33	matt90	 function template
2014-10-19 20:59:33	matt90	"
2014-10-19 20:59:48	matt90	meaning it's not a member of any list class
2014-10-19 21:00:01	ObjectiveMatt	oh so take out the List<Item>::
2014-10-19 21:00:23	matt90	also you should give it a list to append to
2014-10-19 21:00:48	ObjectiveMatt	oh
2014-10-19 21:01:29		dmatysiak (~daniel@a-chinaman.com) has quit (Quit: leaving)
2014-10-19 21:02:04	ObjectiveMatt	So like that? template <class Item> AddItem(Item item, List& list);
2014-10-19 21:02:46	matt90	you parameterized List before, why not now?
2014-10-19 21:03:04		Joyd (~make@unaffiliated/bryeware) has joined ##c++
2014-10-19 21:04:36	ObjectiveMatt	I parameterized it before?
2014-10-19 21:05:01	ObjectiveMatt	Do you mean I should have template <class Item> AddItem(Item item, List list); without the reference?
2014-10-19 21:05:20	matt90	http://en.cppreference.com/w/cpp/language/template_parameters
2014-10-19 21:06:26		doug64k (~doug@ERMLON6511W-LP130-03-1177937426.dsl.bell.ca) has quit (Ping timeout: 255 seconds)
2014-10-19 21:06:33	ObjectiveMatt	template <class Item. class List> AddItem(Item item, List& list);
2014-10-19 21:06:36	ObjectiveMatt	so like that?
2014-10-19 21:06:45	ObjectiveMatt	I just put the reference in because I thought it'd be a good idea...
2014-10-19 21:06:56		schleppel (~quassel@141.39.226.237) has quit (Remote host closed the connection)
2014-10-19 21:06:59		phao (~phao@189-105-160-243.user.veloxzone.com.br) has joined ##c++
2014-10-19 21:07:00	K-ballo	can we move this to !basic now?
2014-10-19 21:07:06	matt90	yes
2014-10-19 21:07:18	matt90	or #homeworkhelp or something
2014-10-19 21:07:41	matt90	ObjectiveMatt: you should speak to your teacher
2014-10-19 21:07:53	matt90	you aren't really prepared for the midterm
2014-10-19 21:08:46	ObjectiveMatt	I'm still probably 80% percentile out of my clas
2014-10-19 21:08:50	ObjectiveMatt	at leat
2014-10-19 21:08:51	ObjectiveMatt	least
2014-10-19 21:08:52	ObjectiveMatt	so..
2014-10-19 21:08:58	ObjectiveMatt	not too worried.
2014-10-19 21:08:59	matt90	then you should buy your teacher a beer
2014-10-19 21:09:09	matt90	he's apparently having a rough semester
2014-10-19 21:09:20	ObjectiveMatt	what do you mean by that
2014-10-19 21:09:23		N8Fear (~n8fear@dslb-094-222-019-013.094.222.pools.vodafone-ip.de) has joined ##c++
2014-10-19 21:09:31	K-ballo	is this the same teacher that confuses return type and return value?
2014-10-19 21:09:46	o-0-o	haha! I've left to watch Twin Peaks and he is still trolling you guys :)
2014-10-19 21:09:48	ObjectiveMatt	yes
2014-10-19 21:09:57	ObjectiveMatt	and typos in like 80% of the lectures
2014-10-19 21:10:07		fluter (~fluter@fedora/fluter) has joined ##c++
2014-10-19 21:10:08	matt90	what school is that?
2014-10-19 21:10:16		zima (zima@c75.152.27-202.clta.globetrotter.net) has quit (Quit: zima)
2014-10-19 21:10:17	hs_	does it matter?
2014-10-19 21:10:22	o-0-o	hs_ :DDDDDDDDD
2014-10-19 21:10:24	matt90	no
2014-10-19 21:10:24		Aleeious (~chatzilla@cpe-24-193-187-73.nj.res.rr.com) has joined ##c++
2014-10-19 21:10:24	hs_	does any of this horse shit matter?
2014-10-19 21:10:28	matt90	nothing
2014-10-19 21:10:41		jfcaron (~jfcaron@S01063c075411407f.vc.shawcable.net) has quit (Ping timeout: 244 seconds)
2014-10-19 21:10:44	matt90	I mean, what is matter *really*
2014-10-19 21:10:50	Aleeious	um vs 2013 is complaining no operant <<
2014-10-19 21:11:05	Aleeious		std::cout << "Error: " << message "\n";
2014-10-19 21:11:11		CEnnis91 (uid3543@gateway/web/irccloud.com/x-rjjyqdqaczapyxtg) has quit (Quit: Connection closed for inactivity)
2014-10-19 21:11:16		fluter (~fluter@fedora/fluter) has quit (Max SendQ exceeded)
2014-10-19 21:11:23	Aleeious	can't see an error, please help
2014-10-19 21:11:36	K-ballo	Aleeious: mmh, is that really the error? what's message and why there's a string literal right next to it?
2014-10-19 21:11:41	 *	o-0-o laughs evilly
2014-10-19 21:11:49	matt90	there's literally no operator <<
2014-10-19 21:11:59	matt90	that's the most honest I've seen VS be
2014-10-19 21:12:18		fluter (~fluter@fedora/fluter) has joined ##c++
2014-10-19 21:12:22	Aleeious	so why is there cout << "Error :"; then?
2014-10-19 21:12:25	Hello71	> operant
2014-10-19 21:12:38	hs_	Aleeious, what?
2014-10-19 21:12:46		N8Fear_ (~n8fear@dslb-188-103-207-046.188.103.pools.vodafone-ip.de) has quit (Ping timeout: 272 seconds)
2014-10-19 21:12:58	o-0-o	!give Aleeious testcase
2014-10-19 21:13:00	nolyc	Aleeious: A testcase is the _least_ amount of code that explains your problem, paste it to http://ideone.com and give us the link. Do _not_ paste to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2014-10-19 21:13:00	K-ballo	Aleeious: have you looked very very hard at that line? did you make an error while transcribing it here?
2014-10-19 21:13:01	Hello71	you seem to be confusing the CODE with COMPILER OUTPUT
2014-10-19 21:13:34	Aleeious	1>c:\users\user\documents\visual studio 2013\projects\wizllyi compiler\wizllyi compiler\parser.cpp(13): error C2679: binary '<<' : no operator found which takes a right-hand operand of type 'std::string' (or there is no acceptable conversion)
2014-10-19 21:14:11	hs_	Aleeious, paste your code to ideone.com
2014-10-19 21:14:21	o-0-o	people don't like to read
2014-10-19 21:14:31		fluter (~fluter@fedora/fluter) has quit (Max SendQ exceeded)
2014-10-19 21:14:33	o-0-o	reading is tiresome
2014-10-19 21:14:35		torei (~manjaro-k@c-71-226-6-189.hsd1.ga.comcast.net) has quit (Quit: Manjaro-KDE user leaving!)
2014-10-19 21:14:36	o-0-o	it hurts
2014-10-19 21:14:43	o-0-o	kills weaker brain cells
2014-10-19 21:15:39		fluter (~fluter@fedora/fluter) has joined ##c++
2014-10-19 21:16:36	Taywee	Aleeious: Two things, you should change `message "\n"` into `message << "\n"`, and you also probably aren't including iostream.  Also, just to reiterate, give a test case.
2014-10-19 21:16:38	Taywee	http://www.sscce.org/
2014-10-19 21:17:18		phao (~phao@189-105-160-243.user.veloxzone.com.br) has quit (Quit: Leaving)
2014-10-19 21:17:24	Aleeious	https://gist.github.com/Aleeious/c63550e43ca5d0a3244a
2014-10-19 21:18:00	K-ballo	Aleeious: you did include <iostream> after all, but you missed the obvious one: <string>
2014-10-19 21:18:14	matt90	what do you guys use to enforce professional style guidelines on your code? format at checkin or IDE formatters or something else?
2014-10-19 21:18:50	Aleeious	wow that worked, thanks
2014-10-19 21:19:08	Aleeious	what did it need in string?
2014-10-19 21:19:30	Taywee	The functions for std::string.
2014-10-19 21:19:34	K-ballo	Aleeious: std::string for starters, and op<< between basic_ostream and basic_stream as well
2014-10-19 21:19:42	K-ballo	*basic_string
2014-10-19 21:20:21	kadoban_	matt90: A pre-commit hook in git. Mostly for other languages that have better automatic style checkers though.
2014-10-19 21:21:01		glenfe (~glen@unaffiliated/glenfe) has quit (Quit: Restasrt)
2014-10-19 21:21:30		glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2014-10-19 21:21:32		hyperair (hyperair@ubuntu/member/hyperair) has joined ##c++
2014-10-19 21:21:48		Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-10-19 21:23:47		jfcaron (~jfcaron@S01063c075411407f.vc.shawcable.net) has joined ##c++
2014-10-19 21:25:54		glenfe (~glen@unaffiliated/glenfe) has quit (Ping timeout: 246 seconds)
2014-10-19 21:26:29		glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2014-10-19 21:26:43		torei (~manjaro-k@c-71-226-6-189.hsd1.ga.comcast.net) has joined ##c++
2014-10-19 21:30:21	alza	kadoban_: pre-commit hooks in git are client-side, and as such you can totally ignore them, but post-receive hooks are server-size and more reliable
2014-10-19 21:33:15		ObjectiveMatt (~Objective@66.87.151.248) has quit (Ping timeout: 246 seconds)
2014-10-19 21:34:03	kadoban_	alza: pre-commit gives immediate feedback, instead of hours to weeks later. If I am working with other people I coordinate hooks, and usually trust them unless they show that they are ignoring the style and testing checkers.
2014-10-19 21:34:55	kadoban_	alza: pre-commit is nice because you can override it when you need to as well, which I'm not sure if that's possible with server-side hooks, I'd suspect not.
2014-10-19 21:35:22		torei (~manjaro-k@c-71-226-6-189.hsd1.ga.comcast.net) has quit (Quit: Manjaro-KDE user leaving!)
2014-10-19 21:38:14		saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has joined ##c++
2014-10-19 21:38:47		da2ce7 (~da2ce7@opentransactions/dev/da2ce7) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-19 21:39:13		da2ce7 (~da2ce7@opentransactions/dev/da2ce7) has joined ##c++
2014-10-19 21:45:59		kadoban_ (~mud@ip68-3-81-129.ph.ph.cox.net) has quit (Quit: bye)
2014-10-19 21:46:41		BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has joined ##c++
2014-10-19 21:48:05		titanium17 (~titanium1@2604:6000:6440:2200:89a8:14b:4477:1c5) has joined ##c++
2014-10-19 21:49:07		jfcaron (~jfcaron@S01063c075411407f.vc.shawcable.net) has quit (Ping timeout: 255 seconds)
2014-10-19 21:49:18		Carbonflux (~BOB@174-21-102-9.tukw.qwest.net) has joined ##c++
2014-10-19 21:49:21		kurahaupo (~Kurahaupo@179.252.252.27.dyn.cust.vf.net.nz) has joined ##c++
2014-10-19 21:49:28		fluter (~fluter@fedora/fluter) has quit (Read error: Connection reset by peer)
2014-10-19 21:50:06		CEnnis91 (uid3543@gateway/web/irccloud.com/x-uygrxmwcjeauethe) has joined ##c++
2014-10-19 21:53:04	--	szt is now known as Guest51983
2014-10-19 21:53:15		szt (~pi.znc@unaffiliated/szt) has joined ##c++
2014-10-19 21:56:05		vl4kn0 (~vl4kn0@adsl-dyn3.78-98-25.t-com.sk) has quit (Ping timeout: 260 seconds)
2014-10-19 21:56:11		Guest51983 (~pi.znc@unaffiliated/szt) has quit (Ping timeout: 250 seconds)
2014-10-19 21:57:28		da2ce7 (~da2ce7@opentransactions/dev/da2ce7) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-19 21:57:49		Orion] (~nname@unaffiliated/orion/x-3970838) has quit
2014-10-19 22:00:48		mentoc (~lmn@unaffiliated/mentoc) has joined ##c++
2014-10-19 22:03:55		mentoc (~lmn@unaffiliated/mentoc) has left ##c++
2014-10-19 22:04:14		m3thod_mann (~quassel@c-98-199-98-229.hsd1.tx.comcast.net) has joined ##c++
2014-10-19 22:04:34		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-10-19 22:06:21		fluter (~fluter@fedora/fluter) has joined ##c++
2014-10-19 22:09:05		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2014-10-19 22:10:30		Tynach (~Tynach@ip68-109-167-198.ph.ph.cox.net) has quit (Quit: Leaving the network. I'm not online anymore.)
2014-10-19 22:11:02		Tynach (~Tynach@ip68-109-167-198.ph.ph.cox.net) has joined ##c++
2014-10-19 22:13:48		noLimitz (~adam@97.75.240.100) has joined ##c++
2014-10-19 22:13:50		da2ce7 (~da2ce7@opentransactions/dev/da2ce7) has joined ##c++
2014-10-19 22:14:17		Tynach (~Tynach@ip68-109-167-198.ph.ph.cox.net) has quit (Client Quit)
2014-10-19 22:14:33		da2ce7 (~da2ce7@opentransactions/dev/da2ce7) has quit (Client Quit)
2014-10-19 22:16:07		SlashLife (~slashlife@botters/slashlife) has quit (Ping timeout: 272 seconds)
2014-10-19 22:17:55		noLimitz (~adam@97.75.240.100) has quit (Client Quit)
2014-10-19 22:19:22		PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Quit: ChatZilla 0.9.91 [Firefox 32.0.3/20140923175406])
2014-10-19 22:21:16	o11c	server-side hook can only accept/reject
2014-10-19 22:27:34		phillips1012 (~phillips1@72.42.104.172) has joined ##c++
2014-10-19 22:29:31	flebron	Wouldn't the fact that sometimes the compiler can elide copy ctors be part of an argument against doing useful work on copy ctors for very large codebases with many developers? (Knowing that many such developers won't know exactly when such elisions _will_ happen, since that even depends on compiler versions)
2014-10-19 22:29:59		NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-10-19 22:30:04		maroloccio (~marolocci@219.Red-79-146-76.dynamicIP.rima-tde.net) has quit (Ping timeout: 255 seconds)
2014-10-19 22:30:22	Aleeious	1>c:\users\user\documents\visual studio 2013\projects\wizllyi compiler\wizllyi compiler\parser.cpp(33): error C2664: 'int strcmp(const char *,const char *)' : cannot convert argument 1 from 'char' to 'const char *'
2014-10-19 22:30:26		lh_mouse (~lh_mouse@116.230.226.223) has joined ##c++
2014-10-19 22:30:40	Aleeious	what does it mean ^^^?
2014-10-19 22:31:15	K-ballo	Aleeious: means you are passing strcmp a char
2014-10-19 22:31:19	flebron	Aleeious: You gave strcmp a char as a first argument, it needs a const char*.
2014-10-19 22:31:36	flebron	i.e. you typed strcmp('a', something).
2014-10-19 22:31:39	Aleeious	but i'm comparing 2 chars to see if it matches
2014-10-19 22:32:00	flebron	Then just use ==.
2014-10-19 22:32:04	K-ballo	Aleeious: a char is not a string, compare two chars with ==... then use std::string, and compare two strings with == as well
2014-10-19 22:32:05		linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:5d95:7f25:4e34:d74c) has joined ##c++
2014-10-19 22:32:36	flebron	If you just have two chars c and d, and want to see if they are equal, no need for strcmp, const char*, or strings - just test if c == d.
2014-10-19 22:33:00	Aleeious	ok ty
2014-10-19 22:33:08		maroloccio (~marolocci@219.Red-79-146-76.dynamicIP.rima-tde.net) has joined ##c++
2014-10-19 22:35:14	TommyC	Does anybody here use ddd, or do you guys mainly just use gdb by itself?
2014-10-19 22:35:45		c0le (~c0le@59.99.251.45) has joined ##c++
2014-10-19 22:36:05	Aleeious	how do i typecast from char to string?
2014-10-19 22:36:32	Aleeious	nevermind
2014-10-19 22:39:34	Chris	Aleeious: can you give an example of what you think "a char" is?
2014-10-19 22:40:31	Aleeious	a
2014-10-19 22:40:48		sixequalszero (~sixequals@unaffiliated/sixequalszero) has quit (Ping timeout: 246 seconds)
2014-10-19 22:43:07		m3thod_mann (~quassel@c-98-199-98-229.hsd1.tx.comcast.net) has quit (Remote host closed the connection)
2014-10-19 22:46:11		yeticry (~yeticry@114.96.139.102) has quit (Ping timeout: 240 seconds)
2014-10-19 22:46:15	Aleeious	anyone wanna please tell me what: 1>c:\users\user\documents\visual studio 2013\projects\wizllyi compiler\wizllyi compiler\parser.cpp(46): warning C4800: 'int' : forcing value to bool 'true' or 'false' (performance warning) means
2014-10-19 22:46:40	Aleeious	this is the code producing the error: return isalpha(character);
2014-10-19 22:47:10		VladolfPutler (~jasper@5ED7DF59.cm-7-8d.dynamic.ziggo.nl) has quit (Ping timeout: 255 seconds)
2014-10-19 22:47:35		yeticry (~yeticry@114.96.139.102) has joined ##c++
2014-10-19 22:49:05		ric_chopin (~Linkrules@183.17.253.16) has joined ##c++
2014-10-19 22:49:14		Amaranth (~travis@ubuntu/member/Amaranth) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-19 22:51:16	o11c	flebron: I plan to bad all copy ctors in my project, and require that all move ctors are trivial
2014-10-19 22:51:46	flebron	o11c: By ban do you mean = default, or = delete?
2014-10-19 22:51:47	o11c	TommyC: I used ddd briefly, but gdb is so much more usable
2014-10-19 22:52:03	o11c	Foo(const Foo&) = delete; Foo(Foo&&) = default;
2014-10-19 22:52:12	flebron	That's pretty drastic.
2014-10-19 22:52:15	o11c	TommyC: also ddd has bitrotted
2014-10-19 22:52:22	flebron	Why do you do that?
2014-10-19 22:52:31	o11c	flebron: I keep getting hit by bugs and performance problems so I think it will be worth changing
2014-10-19 22:52:36	o11c	and requiring explicit .clone() calls
2014-10-19 22:53:20	o11c	(I'm not even kidding when I saw that the mere presence of a copy ctor can cause bugs)
2014-10-19 22:54:27	flebron	What do you think about nontrivial work (in particular, that can fail) in ctors in general?
2014-10-19 22:54:58	flebron	(Trying to see the rationale behind that requirement in the google style guide, whereby they require work that can fail to be moved to an Init method, outside the ctor.)
2014-10-19 22:56:04	--	r0bby_ is now known as robbyoconnor
2014-10-19 22:56:07		ikrima_ (~ikrima@rrcs-76-79-205-82.west.biz.rr.com) has quit (Ping timeout: 245 seconds)
2014-10-19 22:56:20		robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Quit: Konversation terminated!)
2014-10-19 22:56:41		forgottenone (~forgotten@82.222.126.217) has joined ##c++
2014-10-19 23:01:03		Amaranth (~travis@ubuntu/member/Amaranth) has joined ##c++
2014-10-19 23:03:40		snyp (~snyp@150.129.132.202) has joined ##c++
2014-10-19 23:03:48		NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Remote host closed the connection)
2014-10-19 23:04:12		NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-10-19 23:04:51		JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-10-19 23:05:00	o11c	flebron: I'm starting to move toward named ctor idiom for nontrivial work, but C++ makes that difficult
2014-10-19 23:05:15	Aleeious	any pascal people here?
2014-10-19 23:05:29	o11c	unlike a typical 'init' method, I mean to do the nontrivial work *before* the ctor is called, not after
2014-10-19 23:06:13	hs_	flebron, I'm guessing that's because they avoid exceptions
2014-10-19 23:06:29		Longlius (~longlius@c-69-247-183-18.hsd1.tn.comcast.net) has joined ##c++
2014-10-19 23:06:46		maroloccio (~marolocci@219.Red-79-146-76.dynamicIP.rima-tde.net) has quit (Quit: WeeChat 0.4.3)
2014-10-19 23:06:54		ac_slater (~weechat@96.237.110.242) has joined ##c++
2014-10-19 23:06:58		ac_slater (~weechat@96.237.110.242) has quit (Client Quit)
2014-10-19 23:07:25		hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 272 seconds)
2014-10-19 23:08:44		arescorpio (~arescorpi@190.190.244.100) has joined ##c++
2014-10-19 23:09:22		KrzaQ (~krzaq@krzaq.cc) has quit (Read error: Connection reset by peer)
2014-10-19 23:09:41		KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-10-19 23:09:55	flebron	hs_: How does avoiding exceptions relate to this?
2014-10-19 23:10:36	flebron	(I know exceptions like dtors via RAII, but how do ctors relate?)
2014-10-19 23:10:46		ric_chopin (~Linkrules@183.17.253.16) has quit (Ping timeout: 260 seconds)
2014-10-19 23:11:56	o11c	flebron: ah, I see what it is
2014-10-19 23:12:07	o11c	you need to check for failure at the time, not after
2014-10-19 23:12:29	hs_	flebron, there's no neat way to return a "failure" result from a ctor
2014-10-19 23:12:32	o11c	in other words something like: std::ifstream f("/does not exist"); if (f) { } is not okay
2014-10-19 23:12:38	flebron	hs_: OK, fair enough.
2014-10-19 23:12:46		K-ballo (~sonoio@181.228.139.31) has quit (Quit: Bye)
2014-10-19 23:13:16	flebron	o11c: But ifstream f; if (f.Init("/does not exist")) would be?
2014-10-19 23:13:54	o11c	yes
2014-10-19 23:14:11	o11c	I mena, I don't like it, so I would prefer the named ctor idiom
2014-10-19 23:14:28	o11c	std::optional<std::ifstream f>> = std::ifstream::open("/does not exist");
2014-10-19 23:15:06	kalven	how do you get error information?
2014-10-19 23:15:18	flebron	Right, so you're with the monadish crowd, where you'd have your code lifted to work with an optional<T>.
2014-10-19 23:15:43	o11c	kalven: they haven't standardized std::result<std::ifstream, std::string> yet
2014-10-19 23:16:01	 *	o11c has been working with a Result class lately, it's actually a lot nicer than Option is
2014-10-19 23:16:08	kalven	o11c: why do you need it standardized?
2014-10-19 23:16:11	o11c	I've hard-coded the error-info type to be a string for now
2014-10-19 23:16:29	o11c	kalven: because otherwise there's no compatible way to propogate it
2014-10-19 23:16:34	kalven	btw, neither is optional (yet)
2014-10-19 23:16:36	o11c	the TRY() macro is sweet
2014-10-19 23:17:36	o11c	the worst part is that I felt obligated to write this new class heirarch using a base class and dynamic_cast, because C++ makes variants too ugly
2014-10-19 23:17:53		saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has quit (Quit: Leaving)
2014-10-19 23:17:57	flebron	If my function f takes a pointer to a T, but I want to say "I will now own this pointer", is it reasonable to make the signature S f(std::unique_ptr<T>)?
2014-10-19 23:18:06		sixequalszero (~sixequals@unaffiliated/sixequalszero) has joined ##c++
2014-10-19 23:18:11	o11c	flebron: yes
2014-10-19 23:18:34	o11c	or better S f(NonNullableUniquePtr<T>)
2014-10-19 23:18:36	flebron	And, in general, is this true for any resource?
2014-10-19 23:18:40	o11c	yes
2014-10-19 23:18:54	o11c	now that C++ has moves, a lot more things should be passed by value
2014-10-19 23:19:05	o11c	but that goes back to the 'copy ctors should not exist' thing
2014-10-19 23:19:50	flebron	And am I correct in thinking that, since the T*-taking ctor for std::unique_ptr<T> is explicit, I can't just call f(x) where x is a T*?
2014-10-19 23:20:10	flebron	i.e. someone has to actually make_unique, or move an existing unique_ptr to call f
2014-10-19 23:20:51	flebron	(Well not make_unique necessarily, but to give me an rvalue which will then make clear "I own this", so any f(g()) would work)
2014-10-19 23:24:33		thwest (~Adium@99-51-187-8.lightspeed.austtx.sbcglobal.net) has joined ##c++
2014-10-19 23:25:27		basix (~dj@unaffiliated/basix) has joined ##c++
2014-10-19 23:26:43		doug64k (~doug@ERMLON6511W-LP130-03-1177937426.dsl.bell.ca) has joined ##c++
2014-10-19 23:30:53	o11c	flebron: right, it would fail on a T*
2014-10-19 23:34:21		vl4kn0 (~vl4kn0@78.98.25.3) has joined ##c++
2014-10-19 23:36:45		jfcaron (~jfcaron@S01063c075411407f.vc.shawcable.net) has joined ##c++
2014-10-19 23:36:56		jsoft (~jsoft@unaffiliated/jsoft) has joined ##c++
2014-10-19 23:39:15		Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 246 seconds)
2014-10-19 23:40:01		vl4kn0 (~vl4kn0@78.98.25.3) has quit (Ping timeout: 244 seconds)
2014-10-19 23:41:10		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-10-19 23:41:37		jsoft_ (~jsoft@unaffiliated/jsoft) has joined ##c++
2014-10-19 23:42:29		basic6_ (~basic6@p4FCB7A95.dip0.t-ipconnect.de) has joined ##c++
2014-10-19 23:42:41		MarriedToGas (~MarriedTo@60-242-153-150.static.tpgi.com.au) has joined ##c++
2014-10-19 23:42:42		robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-10-19 23:44:08		jfcaron (~jfcaron@S01063c075411407f.vc.shawcable.net) has quit (Ping timeout: 240 seconds)
2014-10-19 23:44:47		jsoft (~jsoft@unaffiliated/jsoft) has quit (Ping timeout: 272 seconds)
2014-10-19 23:45:51		Aleeious (~chatzilla@cpe-24-193-187-73.nj.res.rr.com) has quit (Quit: ChatZilla 0.9.91 [Firefox 32.0.3/20140923175406])
2014-10-19 23:45:54		dseitz (~dseitz@ip70-191-237-177.pn.at.cox.net) has joined ##c++
2014-10-19 23:46:18		basic6 (~basic6@p4FCB65D3.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2014-10-19 23:46:35		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Ping timeout: 272 seconds)
2014-10-19 23:49:48		jsoft_ (~jsoft@unaffiliated/jsoft) has quit (Ping timeout: 255 seconds)
2014-10-19 23:50:00		KrzaQ (~krzaq@krzaq.cc) has quit (Disconnected by services)
2014-10-19 23:50:14	lh_mouse	flebron, foo(unique_ptr<T>(new T)) is known to be wrong. Either write unique_ptr p(new T); foo(move(p)); or use make_unique<T>() instead.
2014-10-19 23:50:16		KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-10-19 23:56:07		rainforest (~see@gateway/tor-sasl/alexandrite) has joined ##c++
2014-10-19 23:56:56		treeprogram (ae066a93@gateway/web/freenode/ip.174.6.106.147) has joined ##c++
2014-10-19 23:57:42		halvors (~Halvor@cm-84.212.204.173.getinternet.no) has joined ##c++
2014-10-19 23:57:53		TzilTzal (~yh@203.126.56.18) has joined ##c++
2014-10-20 00:01:10	flebron	lh_mouse: Right, so moving an existing unique_ptr, or make_unique :p
2014-10-20 00:05:02		forgottenone (~forgotten@82.222.126.217) has quit (Quit: Konversation terminated!)
2014-10-20 00:05:15		Gluesticky (~nobody@unaffiliated/gluesticky) has joined ##c++
2014-10-20 00:05:28		jfcaron (~jfcaron@S01063c075411407f.vc.shawcable.net) has joined ##c++
2014-10-20 00:07:48		jsoft (~jsoft@unaffiliated/jsoft) has joined ##c++
2014-10-20 20:12:53		dagnachew (~dagnachew@bas1-montreal30-2925416877.dsl.bell.ca) has joined ##c++
2014-10-20 20:12:53	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-20 20:12:53	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-20 20:12:53	--	Channel ##c++: 550 nicks (0 ops, 0 voices, 550 normals)
2014-10-20 20:12:54	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-20 20:13:01	tiqs	the styles are presets of the options
2014-10-20 20:13:11	o11c	tiqs: I was planning on writing my own here: https://github.com/o11c/chintzy
2014-10-20 20:13:12	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-20 20:13:18	--	irc: disconnected from server
2014-10-20 20:13:38		dagnachew (~dagnachew@bas1-montreal30-2925416877.dsl.bell.ca) has joined ##c++
2014-10-20 20:13:38	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-20 20:13:38	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-20 20:13:38	--	Channel ##c++: 551 nicks (0 ops, 0 voices, 551 normals)
2014-10-20 20:13:39	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-20 20:13:39	o11c	and I'm not sure what the best way to deal with ambiguity is
2014-10-20 20:13:48	tiqs	o11c: you can use clang to get the AST
2014-10-20 20:13:53	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-20 20:14:00	tiqs	it has a tool that lets to write checkers and stuff as plugins
2014-10-20 20:14:11		mmhun (~anonymous@NYUFWA-WLESSAUTHCLIENTS-03.NATPOOL.NYU.EDU) has joined ##c++
2014-10-20 20:14:23	o11c	I probably should look into that, but I have had a lot of bad experiences with llvm
2014-10-20 20:14:34	o11c	the project i mean, not the tools
2014-10-20 20:14:43	tiqs	ah
2014-10-20 20:14:45	o11c	but the tools somewhat
2014-10-20 20:15:04	o11c	lldb was literally unusable last time I tried it - it exited without doing anything
2014-10-20 20:15:48	o11c	I test my code with clang 3.1, 3.2, 3.3, 3.4, and 3.5, but *only* clang 3.4 manages to compile it (and that after disabling warnings)
2014-10-20 20:16:21		askatasuna (~askatasun@181.47.105.14) has quit (Ping timeout: 260 seconds)
2014-10-20 20:16:53	o11c	there are known violations of the C++ standard in llvm's codebase, and they don't care
2014-10-20 20:17:14	o11c	and gcc is working on some optimizations that will very likely cause llvm to fail spectacularly soon
2014-10-20 20:17:25		aslant (~aslant@5751a00f.skybroadband.com) has quit (Remote host closed the connection)
2014-10-20 20:17:30	o11c	(vtable + lto)
2014-10-20 20:17:32	kailoAtWork	not surprised
2014-10-20 20:17:40	tiqs	you mean gcc will be better than llvm?
2014-10-20 20:17:48	o11c	will be? It always has been
2014-10-20 20:18:00	kailoAtWork	llvm is amazing, as a concept
2014-10-20 20:18:03	o11c	there has never been a moment when they were even comparable
2014-10-20 20:18:11	kailoAtWork	but the c++ module is maintained by far too few people
2014-10-20 20:18:19	tiqs	im not an expert by llvm + clang seems to be more liked nowadays from reading the web
2014-10-20 20:18:22	o11c	if you want to win peoples hearts, get gccjit working
2014-10-20 20:18:30	o11c	tiqs: look at whose marketing they are using
2014-10-20 20:18:32	o11c	Apple
2014-10-20 20:18:43	tiqs	oh true
2014-10-20 20:18:44	o11c	Apple can convince people to buy a $1000 piece of crap every year
2014-10-20 20:19:16		chatsiri_ (~chatsiri_@119-46-191-20.static.asianet.co.th) has joined ##c++
2014-10-20 20:19:18	kailoAtWork	the only thing redeeming about llvm is the idea of optimization algorithms that are language-independent
2014-10-20 20:19:20	o11c	(and don't believe for a minute that LLVM is not an Apple project. When they say they are not, they only mean that they also have a lot of contributions from Google)
2014-10-20 20:19:42	kailoAtWork	which is the future of compilers, hopefully
2014-10-20 20:19:44	tiqs	hmm okay
2014-10-20 20:19:44	o11c	kailoAtWork: gcc has that, it's just that you have to build gcc statically right now, unless you use gccjit
2014-10-20 20:19:59	o11c	and gccjit is very experimental and has some limitations
2014-10-20 20:20:09	kailoAtWork	o11c, gotcha
2014-10-20 20:20:16	tiqs	i think the future is open source hardware and formal verification and optimization methods
2014-10-20 20:20:29	o11c	the fundamental limitation is one compilation per process, there is a patch for that bug again, very experimental
2014-10-20 20:20:54	o11c	but otoh when it actually *works* gcc's "Context" class is much better than LLVM's
2014-10-20 20:21:10	o11c	with gcc, you can create shared types in the "root context" and then use them in "slave context"s
2014-10-20 20:21:35	o11c	no more GetInt8TypeForContext(), there's only one i8
2014-10-20 20:21:59	o11c	(this does have implications limiting where you can get a context *back*)
2014-10-20 20:22:25	tiqs	does gcc currently support c++14?
2014-10-20 20:22:26	o11c	anyway, I would love to have the time to make gccjit win
2014-10-20 20:22:42	o11c	https://gcc.gnu.org/projects/cxx1y.html
2014-10-20 20:22:59	o11c	couple of big Nos there
2014-10-20 20:23:16	tiqs	tbh I dont see jit being big in c or c++
2014-10-20 20:23:34	kailoAtWork	you're silly then
2014-10-20 20:23:44	tiqs	maybe
2014-10-20 20:23:54	kailoAtWork	would you rather have inline asm per platform?
2014-10-20 20:24:04	tiqs	no
2014-10-20 20:24:10	tiqs	how is that relevant?
2014-10-20 20:24:16	o11c	don't be confused by the name
2014-10-20 20:24:28	o11c	'gccjit' is just as much of a jit as llvm's jit is, namely not at all
2014-10-20 20:24:53	o11c	it just means "code generation in a library", you still have to dlopen() it
2014-10-20 20:25:28	tiqs	my point is I think projects that will want jit will probably not use c or c++
2014-10-20 20:26:35	tiqs	you're not going to want jit for something low level or something like a rendering engine
2014-10-20 20:27:02	tiqs	but for distributed systems, cloud, and mobile apps
2014-10-20 20:27:09	tiqs	people don't really use c++ and c
2014-10-20 20:27:36	kailoAtWork	wrong
2014-10-20 20:27:50	tiqs	which part?
2014-10-20 20:27:58	kailoAtWork	emulators and vms use jit extensively
2014-10-20 20:28:31	tiqs	?
2014-10-20 20:28:58	tiqs	what emulators use jit extensively?
2014-10-20 20:29:14	kailoAtWork	dolphin
2014-10-20 20:29:30	kailoAtWork	I'm pretty sure that the latest incarnation of bsnes does too
2014-10-20 20:29:51		garner (uid38417@gateway/web/irccloud.com/x-rpxvylmlcteengdo) has quit (Quit: Connection closed for inactivity)
2014-10-20 20:29:59	tiqs	I dont know anything about dolphin so I cant comment
2014-10-20 20:30:07	kailoAtWork	gcn/wii/wii u emulator
2014-10-20 20:30:17	kailoAtWork	it's pretty much necessary for reasonable perf
2014-10-20 20:30:24	tiqs	why?
2014-10-20 20:30:33		immibis (~ChatZill1@122-59-227-101.jetstream.xtra.co.nz) has quit (Ping timeout: 240 seconds)
2014-10-20 20:31:31	kalven	because generating native code for a block once can be more efficient than interpreting it over and over again
2014-10-20 20:31:46	tiqs	so why do you need a jit?
2014-10-20 20:31:53	tiqs	generate it right away?
2014-10-20 20:32:48	kalven	what do you mean with "generate it right away" ?
2014-10-20 20:32:53		Brolan (~chatzilla@75-169-16-65.slkc.qwest.net) has joined ##c++
2014-10-20 20:33:25		pyon (~user@unaffiliated/pyon) has joined ##c++
2014-10-20 20:33:41	tiqs	im not sure how this emulator works, but compile the game fully one time?
2014-10-20 20:33:51		BadQuanta (~badquanta@2601:7:100:f45:7d61:ab95:9d12:bf6c) has joined ##c++
2014-10-20 20:34:18	peteros	Who was asking earlier about why anyone would need an array of function pointers?
2014-10-20 20:34:28	tiqs	jit is basically deferring the generation of code to a later time
2014-10-20 20:34:48	kailoAtWork	yes
2014-10-20 20:35:01	kailoAtWork	with the potential to be more optimized for the platform it's running on
2014-10-20 20:35:03		chatsiri_ (~chatsiri_@119-46-191-20.static.asianet.co.th) has quit (Ping timeout: 240 seconds)
2014-10-20 20:35:13	kailoAtWork	as opposed to compiling for the lowest-common-denominator
2014-10-20 20:35:14		QualityAddict (~QualityAd@ip68-102-62-117.ks.ok.cox.net) has joined ##c++
2014-10-20 20:35:23	o11c	tiqs: jit means all sorts of different things, don't get it confused
2014-10-20 20:35:39	o11c	though honestly, a bit of java-style jit would be good for C++ to save compile-time
2014-10-20 20:35:44		snakenerd (~Thunderbi@177.17.42.232) has joined ##c++
2014-10-20 20:35:44		snakenerd (~Thunderbi@177.17.42.232) has quit (Client Quit)
2014-10-20 20:36:00	tiqs	ah okay I see what you're talking about
2014-10-20 20:37:23		Longlius (~longlius@68.170.238.146) has quit (Remote host closed the connection)
2014-10-20 20:37:25	peteros	I guess those dudes left. Let's start over.
2014-10-20 20:37:32	peteros	Does anyone know how to make an array of function pointers ? :)
2014-10-20 20:37:58	Chris	peteros: sure.
2014-10-20 20:38:14	peteros	Chris  check this
2014-10-20 20:38:23	peteros	http://pastebin.com/6EzmyCC9
2014-10-20 20:38:25		dapz (~textual@216.239.45.80) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-10-20 20:38:30		rpag (~rg4@unaffiliated/rg4) has quit (Ping timeout: 250 seconds)
2014-10-20 20:39:04		lamefun (~lamefun2@37.113.49.73) has joined ##c++
2014-10-20 20:39:06		sparetire_ (~sparetire@unaffiliated/sparetire) has joined ##c++
2014-10-20 20:39:09	Chris	Hmm, a disturbing confluence of C and C++
2014-10-20 20:39:12		pzp (uid11754@gateway/web/irccloud.com/x-fbjkpugsftsyuoix) has joined ##c++
2014-10-20 20:39:14	o11c	peteros: just use typedefs
2014-10-20 20:39:49		PaulOrekhov (~PaulOrekh@95-31-174-193.broadband.corbina.ru) has quit (Ping timeout: 258 seconds)
2014-10-20 20:40:19		linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:c53a:ce17:8da9:f3ab) has joined ##c++
2014-10-20 20:40:44	tiqs	o11c: managed to find that option for clang format :D 'AlwaysBreakAfterDefinitionReturnType'
2014-10-20 20:40:55		Nemus (~Nemus@unaffiliated/nemus) has left ##c++
2014-10-20 20:41:16	peteros	o11c  hmm... does that actually work?
2014-10-20 20:41:19	 *	peteros tests
2014-10-20 20:41:53		Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has joined ##c++
2014-10-20 20:41:57	tiqs	peteros if you use  >= c++11 you can also try std::function type
2014-10-20 20:42:39	o11c	peteros: yes, and if you use C++11 'using' typedefs they are even readable
2014-10-20 20:42:48	peteros	lol
2014-10-20 20:43:05		phao (~phao@189-12-169-7.user.veloxzone.com.br) has joined ##c++
2014-10-20 20:43:05	tiqs	I don't know if you can make a array of function pointers of different types though
2014-10-20 20:43:09		Longlius (~longlius@68.170.238.146) has joined ##c++
2014-10-20 20:43:48	o11c	no, only a std::tuple
2014-10-20 20:43:54	o11c	or a virtual base class if you can defer to runtime
2014-10-20 20:44:30		dapz (~textual@216.239.45.80) has joined ##c++
2014-10-20 20:46:05	peteros	http://stackoverflow.com/questions/11037393/c-function-pointer-to-functions-with-variable-number-of-arguments
2014-10-20 20:46:15	nolyc	<http://tinyurl.com/p886nwk> (at stackoverflow.com)
2014-10-20 20:46:17		eddyb (~eddyb@unaffiliated/eddyb) has quit (Ping timeout: 244 seconds)
2014-10-20 20:46:32		Streusel (~Anonymous@unaffiliated/streusel) has quit (Quit: Leaving...)
2014-10-20 20:47:29	sssilver_	Guys, suppose I want to call a private function from outside the class. I understand. But how could it be done, in theory?
2014-10-20 20:47:39		robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-10-20 20:47:43	sssilver_	without calling it through a public proxy member, that is
2014-10-20 20:48:52		dapz (~textual@216.239.45.80) has quit (Ping timeout: 244 seconds)
2014-10-20 20:48:54		PSG_Luna (~PSG_Luna@unaffiliated/psg-luna/x-4025268) has quit (Read error: Connection reset by peer)
2014-10-20 20:51:29		Mayzie (~Mayazcher@unaffiliated/mayazcherquoi) has joined ##c++
2014-10-20 20:54:59	o11c	sssilver_: pointer to member function?
2014-10-20 20:55:19	sssilver_	o11c: well you have an instance of a class
2014-10-20 20:55:47		Natch (~Natch@c-0ecce155.25-4-64736c10.cust.bredbandsbolaget.se) has joined ##c++
2014-10-20 20:55:59	sssilver_	how would that work?
2014-10-20 20:56:05	kurahaupo1	sssilver_: you're going to need something inside the class to give you the pointer-to-member-function anyway
2014-10-20 20:56:22	kurahaupo1	but you'd only need to call it once
2014-10-20 20:56:33	o-O-o	y u c k
2014-10-20 20:56:42		lh_mouse (~lh_mouse@101.86.89.115) has joined ##c++
2014-10-20 20:56:47	sssilver_	kurahaupo1: can't I somehow peek inside the class completely from the outside?
2014-10-20 20:56:49	 *	kurahaupo1 concurs, it's horrible
2014-10-20 20:56:54	sssilver_	by just having a pointer to its instance
2014-10-20 20:57:08	kurahaupo1	sssilver_: not without invoking UB
2014-10-20 20:57:14	sssilver_	"UB"?
2014-10-20 20:57:27	o11c	sssilver_: sounds like you need a friend
2014-10-20 20:57:27	kurahaupo1	Undefined Behaviour.
2014-10-20 20:57:34		Extreme (extreme7@unaffiliated/extreme7) has quit (Ping timeout: 250 seconds)
2014-10-20 20:58:25	sssilver_	yeah that sucks
2014-10-20 20:58:47	kurahaupo1	I mean, you can reinterpret-cast the address of the object to a vanilla pod address, use that to get at the class dispatch table, use that to get the class offset and member function address, then use some compiler magic to invoke that on a pointer-to-object
2014-10-20 20:59:09	kurahaupo1	but you'd have to read the source code for your compiler to figure out how to do that
2014-10-20 20:59:10	sssilver_	yeah, that's what I was thinking
2014-10-20 20:59:15		night-owl (~nightowl-@cpe-96-29-7-68.swo.res.rr.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-20 20:59:31	kurahaupo1	and you've just jumped *WAY* outside the standard
2014-10-20 20:59:45	sssilver_	why though? say I now have a pointer to some region of memory
2014-10-20 20:59:59	sssilver_	can't I make certain safe assumptions on how to find the function entry points?
2014-10-20 21:00:16	kurahaupo1	sssilver_: if you know how your objects are laid out in memory, and you rely on that information, then you're almost certainly into UB territory
2014-10-20 21:00:32	kurahaupo1	because if you're wrong about the layout, anything can happen
2014-10-20 21:01:03	M-ou-se	Eelis: Thanks for fixing those raw string literals in geordi!
2014-10-20 21:01:23	Eelis	np
2014-10-20 21:02:10		rpag (~rg4@unaffiliated/rg4) has joined ##c++
2014-10-20 21:02:37		SiGe (~SiGe@usc-secure-wireless-088-089.usc.edu) has quit (Ping timeout: 246 seconds)
2014-10-20 21:03:23	Eelis	i only added them to the lexer-like thing geordi uses to find the basic structure of the snippet in order to do shorthand syntax rearrangement and such
2014-10-20 21:03:31	Eelis	geordi's "real" C++ parser still doesn't know about them
2014-10-20 21:03:33		Extreme (extreme7@unaffiliated/extreme7) has joined ##c++
2014-10-20 21:03:34	Eelis	<< R"x(")x"
2014-10-20 21:03:34	geordi	"
2014-10-20 21:03:36	Eelis	geordi, parse
2014-10-20 21:03:37	geordi	error: Unexpected `"` after `<< R`. Expected "(", braced-init-list, "::", template-arguments, postfix operator, binary operator, ternary operator, semicolon, or end of request.
2014-10-20 21:04:01	sssilver_	so doesn't the standard provide a way to basically "acquire the entire memory blob used by an object"?
2014-10-20 21:05:45		notpara (~para@213.187.75.26) has quit (Ping timeout: 260 seconds)
2014-10-20 21:05:55		weemsledeux (~textual@unaffiliated/weems) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-20 21:08:10		N8Fear_ (~n8fear@dslb-188-103-183-052.188.103.pools.vodafone-ip.de) has joined ##c++
2014-10-20 21:08:43		ArchZombie (~ArchZombi@2602:306:c455:df80:fdeb:888b:3d19:75af) has joined ##c++
2014-10-20 21:10:11		Giora (~giora@176.228.144.67) has joined ##c++
2014-10-20 21:11:00		N8Fear (~n8fear@dslb-094-222-019-013.094.222.pools.vodafone-ip.de) has quit (Ping timeout: 250 seconds)
2014-10-20 21:11:03	Giora	Is that code valid? (http://ideone.com/bTW9F9)
2014-10-20 21:11:10		emg (~emg@74.217.148.5) has quit (Quit: emg)
2014-10-20 21:11:17		zima (zima@c75.152.27-202.clta.globetrotter.net) has quit (Quit: zima)
2014-10-20 21:11:42		QualityAddict (~QualityAd@ip68-102-62-117.ks.ok.cox.net) has quit (Quit: Leaving)
2014-10-20 21:14:43	K-ballo	Giora: why not?
2014-10-20 21:15:19	det	Giora, I pretty much always prefer lambdas to bind
2014-10-20 21:15:19	Giora	Because std::bind is for runtime while templates are compile time
2014-10-20 21:15:33	Giora	det: Why is that?
2014-10-20 21:15:34	o-O-o	we need compile time binding!!!
2014-10-20 21:15:36	K-ballo	what about functions, what are functions for?
2014-10-20 21:15:39	o-O-o	Giora: make a proposal
2014-10-20 21:15:42		The_Coolest (~Arthur_Li@109.64.66.251) has quit (Quit: FOLD For The Cause!!!)
2014-10-20 21:15:51	det	Giora, easier to read, less  hacky
2014-10-20 21:16:04	K-ballo	because Func<int> is not a template anymore, it's a function
2014-10-20 21:16:36		scharan (~scharan@caps04.cs.ucr.edu) has quit (Ping timeout: 272 seconds)
2014-10-20 21:16:59	o-O-o	io2 / irriquetus has achieved compile time binding :-)
2014-10-20 21:17:28	Giora	Hmm
2014-10-20 21:17:38	Giora	How do I get this to compile? http://ideone.com/YVg6dR
2014-10-20 21:17:38		The_Coolest (~Arthur_Li@bzq-109-64-66-251.red.bezeqint.net) has joined ##c++
2014-10-20 21:19:31	o11c	std::bind is *so* painful
2014-10-20 21:19:42	o11c	I've had to debug code through it far too often
2014-10-20 21:20:11	Giora	Good thing I barely ever use it ;)
2014-10-20 21:20:23	det	Giora, http://coliru.stacked-crooked.com/a/9e36686f7406f515
2014-10-20 21:20:25	ArchZombie	you know what's painful?
2014-10-20 21:20:54		MarchHare (~Starwulf@mo-76-0-8-188.dhcp.embarqhsd.net) has joined ##c++
2014-10-20 21:21:07	K-ballo	bind is not bad, bind is AWESOME when you need bind, you don't usually need bind
2014-10-20 21:21:17	det	K-ballo, when do you need bind? :p
2014-10-20 21:21:50	ArchZombie	thinking you have a bug in your code, then figuring out the complexity is the issue for a simple word parser, because if you allow elision of unstressed vowels, there are 512 different ways to pronounce ANTIDISESTABLISHMENTARIANISM, and each of these has a vert large number of ways to be stenified because the word is so long.
2014-10-20 21:22:02		vocodork_ (~vocoder@94-227-99-249.access.telenet.be) has quit (Quit: http://viennaensemblepro.com | http://viennamirpro.com)
2014-10-20 21:22:39		Andy-chan (~Andy-chan@xdsl-84-44-168-146.netcologne.de) has quit (Ping timeout: 245 seconds)
2014-10-20 21:22:59	K-ballo	det: when you are doing complex stuff, lazy evaluation, nested placeholders, etc
2014-10-20 21:23:03	Giora	det: I still would like to know how to get my code with std::bind to compile (I don't really need it but I still want to know how to get it done)
2014-10-20 21:24:11	o11c	dammit C++
2014-10-20 21:24:16	o11c	I keep on making mistakes
2014-10-20 21:24:22	K-ballo	Giora: whenever you want a function pointer out of an overloaded function, you have to cast it into the type of the overload you want
2014-10-20 21:24:28	o11c	I'm used to languages where "string" is actually a meaningful class type
2014-10-20 21:24:49	K-ballo	Giora: so you need something along the lines of static_cast<void(*)(int, int)>(Func<int>) or so
2014-10-20 21:25:00	Giora	K-ballo: I'm aware of that but I wasn't sure how to really cast it since its a templated function
2014-10-20 21:25:24	K-ballo	Giora: Func may be a templated function, Func<int> is not
2014-10-20 21:25:38		fluter (~fluter@fedora/fluter) has joined ##c++
2014-10-20 21:26:03	K-ballo	Giora: Func<int> is a plain old regular function, that just happen to have been instantiated from a template, but at that point you can no longer distinguish it from void foo(int, int)
2014-10-20 21:26:49		fluter (~fluter@fedora/fluter) has quit (Max SendQ exceeded)
2014-10-20 21:26:50	Giora	Well I can't really do this
2014-10-20 21:26:50	Giora	auto Fn = std::bind(Func<int>(int, int), std::placeholders::_1, std::placeholders::_2);
2014-10-20 21:27:26		KAHR-Alpha (~Alpha@ARennes-357-1-42-154.w90-1.abo.wanadoo.fr) has quit (Ping timeout: 255 seconds)
2014-10-20 21:27:34	K-ballo	Giora: uh, you said you knew this stuff... re-read what I've said and try again
2014-10-20 21:27:55		fluter (~fluter@fedora/fluter) has joined ##c++
2014-10-20 21:27:57		aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-10-20 21:28:06		on3pk (817b07e0@gateway/web/freenode/ip.129.123.7.224) has quit (Quit: Page closed)
2014-10-20 21:28:37		thwest (~Adium@99-51-187-8.lightspeed.austtx.sbcglobal.net) has joined ##c++
2014-10-20 21:28:38	det	Giora, You must cast like K-ballo told you, its ugly
2014-10-20 21:28:48	Giora	with static_cast?
2014-10-20 21:28:59	Giora	I've tried that already and my compiler complained
2014-10-20 21:29:05	K-ballo	Giora: you did it wrong then
2014-10-20 21:29:18	Giora	Or maybe msvc isn't so great compiler
2014-10-20 21:29:44	K-ballo	msvc isn't so great a compiler, but this particular problem is yours
2014-10-20 21:30:36		noLimitz (~adam@97.75.240.100) has joined ##c++
2014-10-20 21:30:45	K-ballo	Giora: I even gave you the exact form of cast you needed to do, you would just replace that in your code and it would have worked
2014-10-20 21:30:54		Betal (~Beta@unaffiliated/betal) has quit (Remote host closed the connection)
2014-10-20 21:31:34	K-ballo	the thing to get away from this, Giora, is that a function instantiated from a template is not different than a function that you spell out
2014-10-20 21:33:12		Mayzie (~Mayazcher@unaffiliated/mayazcherquoi) has quit (Ping timeout: 272 seconds)
2014-10-20 21:33:39	Giora	I just got it to work, thanks.
2014-10-20 21:34:27		bb010g (uid21050@gateway/web/irccloud.com/x-fqtqvjbupvufwfpe) has joined ##c++
2014-10-20 21:37:13		Carbonflux (~BOB@174-21-102-9.tukw.qwest.net) has joined ##c++
2014-10-20 21:37:42		night-owl (~nightowl-@cpe-96-29-7-68.swo.res.rr.com) has joined ##c++
2014-10-20 21:38:11		mmhun (~anonymous@NYUFWA-WLESSAUTHCLIENTS-03.NATPOOL.NYU.EDU) has quit (Quit: mmhun)
2014-10-20 21:39:02		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has joined ##c++
2014-10-20 21:39:02		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has quit (Max SendQ exceeded)
2014-10-20 21:39:46		mmhun (~anonymous@NYUFWA-WLESSAUTHCLIENTS-03.NATPOOL.NYU.EDU) has joined ##c++
2014-10-20 21:40:11		noLimitz (~adam@97.75.240.100) has quit (Quit: Leaving)
2014-10-20 21:40:49		Brolan (~chatzilla@75-169-16-65.slkc.qwest.net) has quit (Ping timeout: 265 seconds)
2014-10-20 21:42:38		on3pk (~on3pk@unaffiliated/on3pk) has joined ##c++
2014-10-20 21:43:36		Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-10-20 21:44:46		Mayzie (~Mayazcher@unaffiliated/mayazcherquoi) has joined ##c++
2014-10-20 21:46:44		jhao (~user@207-237-52-187.c3-0.elm-ubr1.qens-elm.ny.cable.rcn.com) has quit (Ping timeout: 244 seconds)
2014-10-20 21:47:41		bmf1 (~bmf1@181-91-252-216.dsl.colba.net) has quit (Ping timeout: 255 seconds)
2014-10-20 21:48:10		j0hnlam (~j0hnlam@76-10-168-88.dsl.teksavvy.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-10-20 21:49:10		jhao (~user@207-237-52-187.c3-0.elm-ubr1.qens-elm.ny.cable.rcn.com) has joined ##c++
2014-10-20 21:49:14		Giora (~giora@176.228.144.67) has left ##c++
2014-10-20 21:51:33		usrJayRay (~usrJayRay@150.200.74.127) has quit (Quit: usrJayRay)
2014-10-20 21:52:39		rainforest (~see@gateway/tor-sasl/alexandrite) has joined ##c++
2014-10-20 21:53:21		hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 260 seconds)
2014-10-20 21:53:35		lamefun (~lamefun2@37.113.49.73) has quit (Quit: Leaving)
2014-10-20 21:53:54		SZT (~pi.znc@unaffiliated/szt) has quit (Ping timeout: 250 seconds)
2014-10-20 21:54:07	rainforest	is the example here broken for anyone else? http://en.cppreference.com/w/cpp/thread/future
2014-10-20 21:54:14	rainforest	i get the following error
2014-10-20 21:54:15	rainforest	http://pastebin.com/bvWgUMvD
2014-10-20 21:55:06	K-ballo	rainforest: which standard library implementation are you using?
2014-10-20 21:55:21	rainforest	c++11 (?)
2014-10-20 21:55:38	K-ballo	lol, I hope so! I meant who implemented it
2014-10-20 21:55:49	K-ballo	what compiler are you using? gcc ?
2014-10-20 21:55:54	rainforest	yes
2014-10-20 21:55:54	rainforest	gcc version 4.8.2
2014-10-20 21:56:25	K-ballo	it seems libstdc++ (the standard library implementation shipping with gcc) does not have the _at_thread_exit functionality yet, not even in recent trunk
2014-10-20 21:56:37	rainforest	oh no :(
2014-10-20 21:56:39		SZT (~pi.znc@unaffiliated/szt) has joined ##c++
2014-10-20 21:57:00		kurahaupo1 (~Kurahaupo@247.200.252.27.dyn.cust.vf.net.nz) has quit (Quit: Leaving.)
2014-10-20 21:57:35		Mayzie (~Mayazcher@unaffiliated/mayazcherquoi) has quit (Remote host closed the connection)
2014-10-20 21:57:45	K-ballo	and the one shipping with msvc seems to still be getting wrong the INVOKE involved
2014-10-20 21:57:56	K-ballo	libc++ works perfectly as expected though
2014-10-20 21:58:05		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has joined ##c++
2014-10-20 21:58:06		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has quit (Max SendQ exceeded)
2014-10-20 21:58:48		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has joined ##c++
2014-10-20 21:58:49		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has quit (Max SendQ exceeded)
2014-10-20 21:59:03		yokel (~yokel@unaffiliated/contempt) has quit (Ping timeout: 240 seconds)
2014-10-20 21:59:31		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has joined ##c++
2014-10-20 21:59:32		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has quit (Max SendQ exceeded)
2014-10-20 21:59:44		yokel (~yokel@unaffiliated/contempt) has joined ##c++
2014-10-20 21:59:52		saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has joined ##c++
2014-10-20 22:00:16		kailoAtWork (~kailoAtWo@208.184.77.122) has quit (Quit: This computer has gone to sleep)
2014-10-20 22:00:27		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has joined ##c++
2014-10-20 22:00:28		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has quit (Max SendQ exceeded)
2014-10-20 22:00:39	--	SZT is now known as szt
2014-10-20 22:00:39		ababywipe (~ababywipe@mobile-166-176-122-195.mycingular.net) has joined ##c++
2014-10-20 22:01:07		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has joined ##c++
2014-10-20 22:01:08		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has quit (Max SendQ exceeded)
2014-10-20 22:01:50		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has joined ##c++
2014-10-20 22:01:50		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has quit (Max SendQ exceeded)
2014-10-20 22:02:32		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has joined ##c++
2014-10-20 22:02:33		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has quit (Max SendQ exceeded)
2014-10-20 22:03:15		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has joined ##c++
2014-10-20 22:03:37		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has quit (Max SendQ exceeded)
2014-10-20 22:04:14		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has joined ##c++
2014-10-20 22:04:31		aslant (~aslant@5751a00f.skybroadband.com) has quit (Remote host closed the connection)
2014-10-20 22:04:36		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has quit (Max SendQ exceeded)
2014-10-20 22:05:06		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has joined ##c++
2014-10-20 22:05:07		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has quit (Max SendQ exceeded)
2014-10-20 22:05:28		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has joined ##c++
2014-10-20 22:05:48		SlashLife_ (~slashlife@botters/slashlife) has joined ##c++
2014-10-20 22:05:58		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has quit (Max SendQ exceeded)
2014-10-20 22:06:34		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has joined ##c++
2014-10-20 22:06:58		fourmyle (~fourmyle@cpe-68-174-68-82.nyc.res.rr.com) has quit (Max SendQ exceeded)
2014-10-20 22:07:57		SlashLife__ (~slashlife@botters/slashlife) has joined ##c++
2014-10-20 22:08:33		SlashLife (~slashlife@botters/slashlife) has quit (Ping timeout: 240 seconds)
2014-10-20 22:08:38		phao (~phao@189-12-169-7.user.veloxzone.com.br) has quit (Quit: Leaving)
2014-10-20 22:10:26		NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-10-20 22:10:37		SlashLife_ (~slashlife@botters/slashlife) has quit (Ping timeout: 260 seconds)
2014-10-20 22:12:58		SlashLife__ (~slashlife@botters/slashlife) has quit (Ping timeout: 250 seconds)
2014-10-20 22:13:44		robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 272 seconds)
2014-10-20 22:18:18		on3pk (~on3pk@unaffiliated/on3pk) has quit (Ping timeout: 255 seconds)
2014-10-20 22:19:07	rainforest	K-ballo: ok im using clang++ now and the example compiled perfectly
2014-10-20 22:19:13	rainforest	thanks
2014-10-20 22:20:34	rainforest	i'm trying to use clang++ to compile my project now and i'm experiencing some errors
2014-10-20 22:20:37	rainforest	error: implicit instantiation of undefined template 'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >'
2014-10-20 22:20:52	rainforest	it's pointing to this line: std::string Crypto::GenerateKey() {
2014-10-20 22:20:58	rainforest	i don't understand
2014-10-20 22:21:09	K-ballo	missing #include <string> ?
2014-10-20 22:21:21		doug64k (~doug@ERMLON6511W-LP130-03-1177937426.dsl.bell.ca) has quit (Ping timeout: 260 seconds)
2014-10-20 22:21:33	rainforest	oops
2014-10-20 22:21:34	rainforest	yes
2014-10-20 22:21:37	rainforest	that was it
2014-10-20 22:21:44		negerns (negerns@49.144.180.165) has joined ##c++
2014-10-20 22:21:46	rainforest	hehe
2014-10-20 22:24:45		joephelius (~joe@46.165.208.194) has quit (Ping timeout: 245 seconds)
2014-10-20 22:24:58		joephelius (~joe@55d416b3.access.ecotel.net) has joined ##c++
2014-10-20 22:30:56		bmf1 (~bmf1@216.252.64.181) has joined ##c++
2014-10-20 22:31:42		Stealthy (~stealthy@pdpc/supporter/active/stealthy) has quit (Quit: bye)
2014-10-20 22:33:03		GinoMan (~quassel@pool-98-114-49-65.phlapa.fios.verizon.net) has joined ##c++
2014-10-20 22:35:39		ketamin (~Thunderbi@131.178.200.64) has quit (Remote host closed the connection)
2014-10-20 22:35:40		hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-10-20 22:40:58		ineb (~ineb@i5DB518AE.pool.tripleplugandplay.com) has quit (Ping timeout: 258 seconds)
2014-10-20 22:41:27		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-10-20 22:42:11		JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-10-20 22:43:06	--	szt is now known as SZT
2014-10-20 22:45:03		pyon (~user@unaffiliated/pyon) has quit (Ping timeout: 240 seconds)
2014-10-20 22:47:23		ineb (~ineb@i5DB518AE.pool.tripleplugandplay.com) has joined ##c++
2014-10-20 22:48:09		rainforest (~see@gateway/tor-sasl/alexandrite) has quit (Quit: Leaving)
2014-10-20 22:49:57		tz (~tz@zero.tzarc.ninja) has quit (Ping timeout: 265 seconds)
2014-10-20 22:50:16		pyon (~user@unaffiliated/pyon) has joined ##c++
2014-10-20 22:50:32		aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-10-20 22:51:50		night-owl (~nightowl-@cpe-96-29-7-68.swo.res.rr.com) has quit (Read error: Connection reset by peer)
2014-10-20 22:52:21		night-owl (~nightowl-@cpe-96-29-7-68.swo.res.rr.com) has joined ##c++
2014-10-20 22:52:57		hyperair (~hyperair@ubuntu/member/hyperair) has quit (Ping timeout: 255 seconds)
2014-10-20 22:58:42		Sauvin (~Sauvin@about/linux/staff/sauvin) has joined ##c++
2014-10-20 22:58:58		vl4kn0 (~vl4kn0@adsl-dyn3.78-98-25.t-com.sk) has quit (Ping timeout: 245 seconds)
2014-10-20 22:59:50		tz (~tz@zero.tzarc.ninja) has joined ##c++
2014-10-20 23:01:22		Maxel (~Maxel@24-159-207-34.static.roch.mn.charter.com) has quit (Read error: Connection reset by peer)
2014-10-20 23:03:04		NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Quit: Leaving...)
2014-10-20 23:03:07		inf101 (~inf101@adsl-74-233-128-53.mia.bellsouth.net) has joined ##c++
2014-10-20 23:03:47		fluter (~fluter@fedora/fluter) has quit (Read error: Connection reset by peer)
2014-10-20 23:04:38		QualityAddict (~QualityAd@ip68-102-62-117.ks.ok.cox.net) has joined ##c++
2014-10-20 23:05:18		surd (~surd@unaffiliated/surd) has joined ##c++
2014-10-20 23:08:07		rmk_ (~lucas@2a02:1810:3d2e:a000:e206:e6ff:fedd:cd67) has joined ##c++
2014-10-20 23:08:39		kurahaupo (~kurahaupo@118.148.189.228) has quit (Quit: Bye)
2014-10-20 23:08:43		Kitt3n_ (~Kitt3n@unaffiliated/kitt3n) has joined ##c++
2014-10-20 23:10:24		o-O-o (36f0c4b9@gateway/web/freenode/ip.54.240.196.185) has quit (Ping timeout: 246 seconds)
2014-10-20 23:10:54		Sauvin (~Sauvin@about/linux/staff/sauvin) has quit (Ping timeout: 260 seconds)
2014-10-20 23:11:20		mattallmill (~mattallmi@129.130.175.155) has quit (Quit: Konversation terminated!)
2014-10-20 23:11:50		Kitt3n (~Kitt3n@unaffiliated/kitt3n) has quit (Ping timeout: 260 seconds)
2014-10-20 23:11:51		ormaaj (~ormaaj@75-168-147-181.mpls.qwest.net) has quit (Ping timeout: 255 seconds)
2014-10-20 23:12:09		forrestv (~forrestv@unaffiliated/forrestv) has quit (Quit: ZNC - http://znc.sourceforge.net)
2014-10-20 23:12:15		night-owl (~nightowl-@cpe-96-29-7-68.swo.res.rr.com) has quit (Ping timeout: 245 seconds)
2014-10-20 23:12:42		night-owl (~nightowl-@cpe-96-29-7-68.swo.res.rr.com) has joined ##c++
2014-10-20 23:13:06		forrestv (~forrestv@unaffiliated/forrestv) has joined ##c++
2014-10-20 23:13:55		Carbonflux (~BOB@174-21-102-9.tukw.qwest.net) has quit (Ping timeout: 272 seconds)
2014-10-20 23:14:12		night-owl (~nightowl-@cpe-96-29-7-68.swo.res.rr.com) has quit (Read error: Connection reset by peer)
2014-10-20 23:14:14		nda_ (~nda_@68.216.16.62.customer.cdi.no) has quit (Ping timeout: 246 seconds)
2014-10-20 23:14:48		ormaaj (~ormaaj@75-168-147-181.mpls.qwest.net) has joined ##c++
2014-10-20 23:14:56		night-owl (~nightowl-@cpe-96-29-7-68.swo.res.rr.com) has joined ##c++
2014-10-20 23:16:22		Sauvin (~Sauvin@about/linux/staff/sauvin) has joined ##c++
2014-10-20 23:16:35		askatasuna (~askatasun@181.47.105.14) has joined ##c++
2014-10-20 23:16:38		fluter (~fluter@fedora/fluter) has joined ##c++
2014-10-20 23:17:40		Carbonflux (~BOB@174-21-102-9.tukw.qwest.net) has joined ##c++
2014-10-20 23:19:10		rmk_ (~lucas@2a02:1810:3d2e:a000:e206:e6ff:fedd:cd67) has left ##c++
2014-10-20 23:19:15		rmk_ (~lucas@2a02:1810:3d2e:a000:e206:e6ff:fedd:cd67) has joined ##c++
2014-10-20 23:19:25		jsoft (~jsoft@unaffiliated/jsoft) has joined ##c++
2014-10-20 23:23:06		aslant (~aslant@5751a00f.skybroadband.com) has quit (Remote host closed the connection)
2014-10-20 23:24:37		linuxuz3r_ (~linuxuz3r@2602:306:bd2a:a160:c53a:ce17:8da9:f3ab) has joined ##c++
2014-10-20 23:26:31		mmhun (~anonymous@NYUFWA-WLESSAUTHCLIENTS-03.NATPOOL.NYU.EDU) has quit (Quit: mmhun)
2014-10-20 23:26:50		ineb (~ineb@i5DB518AE.pool.tripleplugandplay.com) has quit (Ping timeout: 246 seconds)
2014-10-20 23:27:45		aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-10-20 23:27:46		ineb (~ineb@i5DB518AE.pool.tripleplugandplay.com) has joined ##c++
2014-10-20 23:28:08		linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:c53a:ce17:8da9:f3ab) has quit (Ping timeout: 265 seconds)
2014-10-20 23:29:30		on3pk (~on3pk@unaffiliated/on3pk) has joined ##c++
2014-10-20 23:30:34		saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has quit (Quit: Leaving)
2014-10-20 23:32:07		dardevelin (~dardeveli@a95-95-29-159.cpe.netcabo.pt) has joined ##c++
2014-10-20 23:32:18		dirtydawg (dirtydawg@gateway/shell/blinkenshell.org/x-drdqolndznnuksvn) has quit (Ping timeout: 245 seconds)
2014-10-20 23:33:55		smecin-0x71 (~nlabw@180.241.155.168) has joined ##c++
2014-10-20 23:33:58		sohail (~user@unaffiliated/sohail) has joined ##c++
2014-10-20 23:34:30		eddyb (~eddyb@unaffiliated/eddyb) has joined ##c++
2014-10-20 23:34:43		sohail (~user@unaffiliated/sohail) has quit (Remote host closed the connection)
2014-10-20 23:35:05		sohail (~user@unaffiliated/sohail) has joined ##c++
2014-10-20 23:35:17	smecin-0x71	wuhu
2014-10-20 23:35:23	smecin-0x71	leet is here
2014-10-20 23:35:24	smecin-0x71	http://nlabw.wordpress.com/2014/10/20/so-script-kiddies-nsa-or-what-ever-you-call-your-self-let-me-smecin-0x71-explain-to-you-why-pointer-is-bad/
2014-10-20 23:35:27	smecin-0x71	read this
2014-10-20 23:35:28	nolyc	<http://tinyurl.com/o2kxa2x> (at nlabw.wordpress.com)
2014-10-20 23:35:39	Stryyker	go away skraito
2014-10-20 23:35:40	smecin-0x71	come to #nlabw.org
2014-10-20 23:35:40		Kostenko_ (~Kostenko@bl11-51-169.dsl.telepac.pt) has joined ##c++
2014-10-20 23:35:44	smecin-0x71	forfree op
2014-10-20 23:35:47	smecin-0x71	come to #nlabw.org
2014-10-20 23:35:51	smecin-0x71	for free op
2014-10-20 23:36:02	smecin-0x71	and request you'r research there
2014-10-20 23:36:06		Smirnov (~Smirnov@about/csharp/ms/clrjit/smirnov) has quit (Ping timeout: 260 seconds)
2014-10-20 23:36:27	smecin-0x71	my true nick is smecin-0x71
2014-10-20 23:36:33	smecin-0x71	not skraito-0x71
2014-10-20 23:36:39		aslant (~aslant@5751a00f.skybroadband.com) has quit (Remote host closed the connection)
2014-10-20 23:36:40	smecin-0x71	that's prince in heaven
2014-10-20 23:36:50	smecin-0x71	which is angel micahel heaven
2014-10-20 23:36:55	K-ballo	!give smecin-0x71 ops
2014-10-20 23:36:56	nolyc	smecin-0x71: Adrinael V-ille ville wcstok LIM orbitz woggle PlasmaHH Eelis are ops in this channel
2014-10-20 23:37:15		McMAGIC--Copy (~McMAGIC--@gateway/tor-sasl/mcmagic--copy) has quit (Remote host closed the connection)
2014-10-20 23:37:19	smecin-0x71	so you admit you'r kiddies now
2014-10-20 23:37:26	fluter	National Laboratory Of The World :D
2014-10-20 23:37:29	smecin-0x71	UNIVERSITY WASHINGTON BIG FUCK EH
2014-10-20 23:37:36		McMAGIC--Copy (~McMAGIC--@gateway/tor-sasl/mcmagic--copy) has joined ##c++
2014-10-20 23:37:39	smecin-0x71	CHALLENGING TEAM LEAD?
2014-10-20 23:37:53	fluter	a massive troll
2014-10-20 23:37:54		dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-10-20 23:37:57	smecin-0x71	NOT EVEN MY STUDENT MASTER IN CRYPTO YOU CAN CHALLENGE
2014-10-20 23:38:10	smecin-0x71	and you want to challenge Us
2014-10-20 23:38:15	smecin-0x71	see Our research
2014-10-20 23:38:26	smecin-0x71	http://nlabw.wordpress.com
2014-10-20 23:38:28		K-ballo (~sonoio@181.228.139.31) has quit (Quit: Bye)
2014-10-20 23:38:30	smecin-0x71	from medic
2014-10-20 23:38:33		Kostenko (~Kostenko@bl9-92-8.dsl.telepac.pt) has quit (Ping timeout: 245 seconds)
2014-10-20 23:38:34	smecin-0x71	to alchemy
2014-10-20 23:38:42	smecin-0x71	to computer
2014-10-20 23:38:47	smecin-0x71	electric
2014-10-20 23:38:55	smecin-0x71	screw Us than
2014-10-20 23:38:58		eddyb (~eddyb@unaffiliated/eddyb) has quit (Ping timeout: 245 seconds)
2014-10-20 23:39:06	smecin-0x71	you just make you'r self like frog
2014-10-20 23:39:40		hyperair (~hyperair@ubuntu/member/hyperair) has joined ##c++
2014-10-20 23:39:46	Stryyker	smecin-0x71: http://www.wikihow.com/Use-You're-and-Your
2014-10-20 23:40:13		ineb (~ineb@i5DB518AE.pool.tripleplugandplay.com) has quit (Ping timeout: 265 seconds)
2014-10-20 23:41:35		basic6 (~basic6@p4FCB7666.dip0.t-ipconnect.de) has joined ##c++
2014-10-20 23:43:04		Burgundy (~burgundy@86.127.135.64) has quit (Ping timeout: 240 seconds)
2014-10-20 23:43:34		FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 260 seconds)
2014-10-20 23:45:06	smecin-0x71	so if you want research or talk to Us just come to #nwlab.org
2014-10-20 23:45:13	smecin-0x71	know you'r stand kiddies
2014-10-20 23:45:16		smecin-0x71 (~nlabw@180.241.155.168) has left ##c++ ("Leaving")
2014-10-20 23:45:24	Stryyker	Has issues reading.
2014-10-20 23:45:35		basic6_ (~basic6@p4FCB7A95.dip0.t-ipconnect.de) has quit (Ping timeout: 272 seconds)
2014-10-20 23:45:55		arescorpio (~arescorpi@190.190.244.100) has quit (Excess Flood)
2014-10-20 23:46:13		askatasuna (~askatasun@181.47.105.14) has quit (Ping timeout: 272 seconds)
2014-10-20 23:46:25		FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-10-20 23:56:07		JamesNZ (~james@fedora/JamesNZ) has quit (Remote host closed the connection)
2014-10-20 23:56:53		linuxuz3r_ (~linuxuz3r@2602:306:bd2a:a160:c53a:ce17:8da9:f3ab) has quit (Quit: Leaving)
2014-10-20 23:56:59		JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-10-20 23:57:07		alza (~alza@167.88.36.237) has quit (Ping timeout: 240 seconds)
2014-10-20 23:58:08		voidah (~voidah@207.96.245.30) has quit (Ping timeout: 245 seconds)
2014-10-20 23:58:19		inf101 (~inf101@adsl-74-233-128-53.mia.bellsouth.net) has left ##c++
2014-10-20 23:58:47		jhao (~user@207-237-52-187.c3-0.elm-ubr1.qens-elm.ny.cable.rcn.com) has quit (Ping timeout: 240 seconds)
2014-10-20 23:59:48		PotatoGim (~PotatoGim@220.90.135.162) has quit (Quit: WeeChat 1.0.1)
2014-10-21 00:00:46		madist (madist@unaffiliated/madist) has joined ##c++
2014-10-21 00:00:58		PotatoGim (~PotatoGim@220.90.135.162) has joined ##c++
2014-10-21 00:01:09		night-owl (~nightowl-@cpe-96-29-7-68.swo.res.rr.com) has quit (Read error: No route to host)
2014-10-21 00:04:31		yates (~user@nc-67-232-24-49.dhcp.embarqhsd.net) has joined ##c++
2014-10-21 00:05:33		PotatoGim (~PotatoGim@220.90.135.162) has quit (Quit: WeeChat 1.0.1)
2014-10-21 00:06:02	yates	is a way to grep or search for a string in an fstream input stream without using a special library?
2014-10-21 00:06:15		yokel (~yokel@unaffiliated/contempt) has quit (Ping timeout: 244 seconds)
2014-10-21 00:07:23		zavage (~mathew@c-67-164-191-4.hsd1.co.comcast.net) has joined ##c++
2014-10-21 00:07:44		schleppel (~quassel@141.39.226.237) has quit (Read error: Connection reset by peer)
2014-10-21 00:08:20		King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has joined ##c++
2014-10-21 00:08:41	moonchild	yates, there's nothing special that does it, but there's <regex>
2014-10-21 00:09:00	moonchild	if using clang or gcc +4.9
2014-10-21 00:09:36	yates	moonchild: thanks. i just found a simple example on-line - all i need is string.find()
2014-10-21 00:09:46	yates	http://www.cplusplus.com/forum/beginner/33615/
2014-10-21 00:10:22		escapade (~charles@97-89-166-215.dhcp.gnvl.sc.charter.com) has joined ##c++
2014-10-21 00:10:55		yokel (~yokel@unaffiliated/contempt) has joined ##c++
2014-10-21 00:10:55	moonchild	problem with that is that when your target spans multiple input buffers, it gets tricky, but if you're just doing line-oriented stuff w/ std::getline, that's good enough
2014-10-21 00:11:32	--	bedouin is now known as hellschreiber
2014-10-21 00:11:33		aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-10-21 00:11:44	moonchild	you *won't* beat grep on speed with that strategy though
2014-10-21 00:11:53	yates	i don't need speed
2014-10-21 00:12:07	yates	it's just about 8 lines of text i'm searching through..
2014-10-21 00:12:09		ARCADIVS (~RMM@75-138-6-205.dhcp.mntv.al.charter.com) has joined ##c++
2014-10-21 00:12:30	yates	and it's once at program startup, so a few milliseconds won't matter
2014-10-21 00:12:47	moonchild	yeah, for that, string::find after concatenating input is probably the best
2014-10-21 00:12:55		rmk_ (~lucas@2a02:1810:3d2e:a000:e206:e6ff:fedd:cd67) has left ##c++
2014-10-21 00:12:58	yates	easiest, at least :)
2014-10-21 00:13:28	moonchild	well, its simple and straightforward
2014-10-21 00:13:47		xico (~xico@cpe-76-88-16-80.san.res.rr.com) has left ##c++
2014-10-21 00:13:59	moonchild	string::find in any respectable impl does a boyer-moore on long input
2014-10-21 00:14:10		robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-10-21 00:15:33		ababywipe (~ababywipe@mobile-166-176-122-195.mycingular.net) has quit (Quit: Lingo: www.lingoirc.com)
2014-10-21 00:16:25		NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-10-21 00:17:13		ac_slater (~weechat@96.237.110.242) has joined ##c++
2014-10-23 10:21:34		dagnachew (~dagnachew@bas1-montreal30-2925416228.dsl.bell.ca) has joined ##c++
2014-10-23 10:21:34	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-23 10:21:34	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-23 10:21:34	--	Channel ##c++: 533 nicks (0 ops, 0 voices, 533 normals)
2014-10-23 10:21:35	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-23 10:21:49	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-23 10:22:44		kexmex (~kexmex@ool-18b8c568.dyn.optonline.net) has joined ##c++
2014-10-23 10:23:26	b_jonas	kexmex: and?
2014-10-23 10:23:27	b_jonas	um
2014-10-23 10:23:31	b_jonas	sorry
2014-10-23 10:23:39	b_jonas	K-ballo: and? does that break anything?
2014-10-23 10:23:59	b_jonas	K-ballo: I mean, if you use it in the condition part of an if or while statement, that converts to bool
2014-10-23 10:24:28	b_jonas	ville: well, that's not the only possible fix of course
2014-10-23 10:24:30	K-ballo	b_jonas: something can be convertible to bool and overload and/or delete operators && and ||
2014-10-23 10:24:46	K-ballo	it can delete operator! just as well
2014-10-23 10:24:50	b_jonas	K-ballo: true
2014-10-23 10:25:00	b_jonas	I didn't think of !
2014-10-23 10:26:20		pappa (~pappa@178.115.133.90.wireless.dyn.drei.com) has quit (Quit: Leaving.)
2014-10-23 10:27:16		Gvidon (~gvidon@unaffiliated/gvidon) has quit (Quit: Leaving.)
2014-10-23 10:27:16		BinaryAddicted (~BinaryAdd@194.230.155.162) has quit
2014-10-24 15:59:46		dagnachew (~dagnachew@bas1-montreal30-2925416228.dsl.bell.ca) has joined ##c++
2014-10-24 15:59:46	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-24 15:59:46	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-24 15:59:46	--	Channel ##c++: 550 nicks (0 ops, 0 voices, 550 normals)
2014-10-24 15:59:47	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-24 16:00:03	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-24 16:00:05	ison__	yes
2014-10-24 16:01:01	ison__	currently I use a magic macro, which I put in all constructors and destructors. It uses func name to detect if it's a constructor or destructor, and tracks constructor_count - destructor_count
2014-10-24 16:01:07	hs_	ison__, this kind of thing (perhaps not that example) will be easy to disable later on
2014-10-24 16:02:04	K-ballo	I'm missing something, adding, implementing and decorating constructors and destructors for every class is fine, but having those classes extend a tracker doesn't?
2014-10-24 16:02:35	ison__	macro can be easily defined as nothing, vtable always remains
2014-10-24 16:03:11	K-ballo	why would you make the tracker virtual?!?!?
2014-10-24 16:03:26	ison__	"struct A : loggr<A>"
2014-10-24 16:03:39	ison__	but, hmm, it could be easily changed to struct A : MACRO
2014-10-24 16:03:51	K-ballo	uh??
2014-10-24 16:04:13	ison__	tracker virtual, to define virtual destructor, am I missing something?
2014-10-24 16:04:14	hs_	{ A a,b,c; } template <typename T> struct loggr { static int count; loggr() { ++count; } ~loggr() { --count; }}; template <typename T> int loggr<T>::count = 0;  struct A : loggr<A> { A() { cout << loggr<A>::count;} }; // counter trick for unique class types
2014-10-24 16:04:14	geordi	123
2014-10-24 16:04:16	K-ballo	{ cout << sizeof(A), sizeof(int); } template <typename T> struct logger {}; struct A : logger<A> {};
2014-10-24 16:04:16	geordi	1, 4
2014-10-24 16:04:39	K-ballo	geordi: add int x; after last {
2014-10-24 16:04:40	geordi	4, 4
2014-10-24 16:04:52		Siberian_Tiger (~Nicholas@199-96-202-110.fidnet.com) has joined ##c++
2014-10-24 16:05:02		deekej (~deekej@195.65.3.245) has joined ##c++
2014-10-24 16:05:10		deekej (~deekej@195.65.3.245) has quit (Remote host closed the connection)
2014-10-24 16:05:24		deekej (~deekej@195.65.3.245) has joined ##c++
2014-10-24 16:05:34		woodgiraffe (~woodgiraf@109.201.152.248) has joined ##c++
2014-10-24 16:05:44	ison__	hs_ hmm, that's a really nice solution
2014-10-24 16:06:23	ison__	K-ballo isn't it UB?
2014-10-24 16:06:28		deekej (~deekej@195.65.3.245) has quit (Remote host closed the connection)
2014-10-24 16:06:40		Garner (uid38417@gateway/web/irccloud.com/x-huwfctstcipnlkxf) has joined ##c++
2014-10-24 16:07:34		Suchorski (regex@unaffiliated/suchorski) has quit (Ping timeout: 244 seconds)
2014-10-24 16:07:46	K-ballo	ison__: why would it be UB??
2014-10-24 16:07:55	ison__	K-ballo there's no virtual destructor
2014-10-24 16:08:12	K-ballo	who cares? is not intended to be destroyed virtually via holder
2014-10-24 16:08:28	Smirnov	i sure wish IDEs were better at seeing call hierarchies through templates
2014-10-24 16:08:38	ison__	what if someone casts A to logger <A> and calls delete on it?
2014-10-24 16:08:50	K-ballo	geordi: add private before logger<A>
2014-10-24 16:08:50	geordi	error: expected template-name before '<' token
2014-10-24 16:09:03		KrzaQ (~krzaq@krzaq.cc) has quit (Disconnected by services)
2014-10-24 16:09:20		KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-10-24 16:09:21	K-ballo	ison__: well, you get the idea.. private inheritance will protect you from those dumb users that you shouldn't be protecting from
2014-10-24 16:09:33	K-ballo	those would just as well do A x; delete &x;
2014-10-24 16:09:47	ison__	hmm, right
2014-10-24 16:10:08		plitter (~plitter@84.48.49.52) has quit (Read error: Connection reset by peer)
2014-10-24 16:10:18	K-ballo	what if someone tries to use A after it has been deleted?
2014-10-24 16:10:24		bOSKE (~bOSKE@unaffiliated/boske) has joined ##c++
2014-10-24 16:10:37		zq (~zq@tombartelt.com) has joined ##c++
2014-10-24 16:11:01		plitter (~plitter@84.48.49.52) has joined ##c++
2014-10-24 16:11:12	ison__	It's an user's error though. As I user, I'd assume that destroying base object is still valid.
2014-10-24 16:11:20	ison__	As a user8
2014-10-24 16:11:20	ison__	*
2014-10-24 16:11:21		cv0x (~cv0x@104-152-228-150.static-ip.telepacific.net) has joined ##c++
2014-10-24 16:11:36	K-ballo	indeed that would be an user error
2014-10-24 16:13:01	ison__	hs approach is nice, but it will require a lot of refactoring to use this method, I wish c++ could offer some way to use default copy constructor behavior
2014-10-24 16:13:25	ison__	like Foo(const Foo &) { printf("abc"); [DEFAULT] }
2014-10-24 16:13:46	ison__	or even Foo(const Foo &) = default { printf("abc"); }
2014-10-24 16:13:56		schleppel (~quassel@141.39.226.237) has joined ##c++
2014-10-24 16:14:25	K-ballo	suggest the idea, make a proposal
2014-10-24 16:15:15	ison__	not familiar with these things though
2014-10-24 16:15:22	ison__	is there any official standard c++ page or something btw?
2014-10-24 16:15:27	K-ballo	isocpp.org
2014-10-24 16:15:32	ison__	ok, thanks
2014-10-24 16:16:03		Defaultti (defaultti@lakka.kapsi.fi) has quit (Quit: Quitting.)
2014-10-24 16:16:31		cv0x (~cv0x@104-152-228-150.static-ip.telepacific.net) has quit (Quit: leaving)
2014-10-24 16:16:32	hs_	ison__, you could always just insert a loggr<A> blah; member
2014-10-24 16:16:44	K-ballo	I don't hate X(X const&) = default {...}, but it breaks for assignment operators
2014-10-24 16:16:55		tdc (~tdc@215.Red-95-126-227.staticIP.rima-tde.net) has quit (Ping timeout: 260 seconds)
2014-10-24 16:16:58	ison__	hs_ hmm, that's interesting too
2014-10-24 16:17:08		NoNMaDDe_ (~NoNMaDDeN@128.199.250.122) has quit (Remote host closed the connection)
2014-10-24 16:17:13	ison__	K-ballo why?
2014-10-24 16:17:43		schleppel (~quassel@141.39.226.237) has quit (Remote host closed the connection)
2014-10-24 16:17:48	K-ballo	X& operator=(X const&) = default { ... do I return something here, or do I return nothing despite having a X& return type?
2014-10-24 16:18:04	ison__	return *this; always
2014-10-24 16:18:20		Defaultti (defaultti@lakka.kapsi.fi) has joined ##c++
2014-10-24 16:19:12		txomon|home (~txomon@unaffiliated/txomon) has quit (Remote host closed the connection)
2014-10-24 16:19:12	K-ballo	why? that's redundant
2014-10-24 16:19:52	ison__	if you decide to define custom behavior even if using = default, then you have to return X&
2014-10-24 16:20:00		soman (~ibram@188.235.35.71) has joined ##c++
2014-10-24 16:20:20	K-ballo	what about noexcept and constexpr? =default might give you those but your code could do differently
2014-10-24 16:21:19	soman	If I want batch obj creating->processing->destroying by order can I use placement new and will it give some advantages?
2014-10-24 16:21:30	ison__	hmm, ye, it would require some thinking
2014-10-24 16:22:31	hs_	soman, if you are dynamically allocating one at a time, maybe
2014-10-24 16:22:35	K-ballo	anyways, it would be somewhat sensible.. I'd still don't think I'd ever use it, but I don't hate it
2014-10-24 16:22:50	hs_	soman, but why would you dynamically allocate in that situation?
2014-10-24 16:23:22	ison__	I don't think that it would be THAT uncommon to use it, I mean, logging objects creation is that very rare?
2014-10-24 16:23:44	ison__	sure there are workarounds like inheriting object which would log it, but still
2014-10-24 16:23:56	pyon	How do I use std::unique_ptr with free(), rather than std::default_delete?
2014-10-24 16:24:08	soman	hs_: no problems, I just thinking if placement new gives some perfomance by allocating memory only once... I think with modern PCs there won't be any perfomance advantages
2014-10-24 16:24:14	K-ballo	ison__: logging object creation that way is incredibly intrusive, not something people would do manually
2014-10-24 16:24:38	hs_	soman, I guess you could placement new on automatic storage as well
2014-10-24 16:24:55		jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has joined ##c++
2014-10-24 16:25:01	ison__	is it possible to do non-intrusive object creationg logging without using classes like FooManager which is the only way to create Foo instances?
2014-10-24 16:25:03	K-ballo	extending or composing tracker<T> is much easier, simple to turn on and off, doesn't have any drawback that the manual approach would have
2014-10-24 16:25:04		D0cN3x (~Thunderbi@dslb-178-007-214-189.178.007.pools.vodafone-ip.de) has quit (Quit: D0cN3x)
2014-10-24 16:25:15	hs_	soman, but that probably won't help you as much
2014-10-24 16:25:16	K-ballo	*wouldn't have
2014-10-24 16:25:41	hs_	ison__, exactly how many classes would you want to "log" with this logger?
2014-10-24 16:25:56	Oxyd	pyon: Just create your own deleter that calls free?
2014-10-24 16:26:01		Supicioso (~Supicioso@2607:5300:100:200::5e4) has quit (Ping timeout: 272 seconds)
2014-10-24 16:26:01	ison__	hs_ ~40 currently
2014-10-24 16:26:03	Hannibal_Smith	soman, allocating things on the free store remains an expansive operation
2014-10-24 16:26:36	K-ballo	ison__: I don't think "helps me use more macros" is a proper motivation for introducing a new feature :)
2014-10-24 16:26:44	hs_	ison__, and you want to log their construction/destruction or something else like dynamic allocation of those?
2014-10-24 16:26:52	Oxyd	pyon: That is, struct free_deleter { void operator () (T* ptr) { free(ptr); } }; ... unique_ptr<T, free_deleter> ptr = ...;
2014-10-24 16:26:52		deekej (~deekej@195.65.3.245) has joined ##c++
2014-10-24 16:27:24	ison__	K-ballo unless C++ adds way to get stacktrace with line, source file name, and class name information, it's the only way
2014-10-24 16:27:31	ison__	I use __LINE__ etc. a lot
2014-10-24 16:27:40	ison__	so it has to be macro unfortunately
2014-10-24 16:27:51	pyon	Oxyd: Ah, thanks!
2014-10-24 16:29:12		btcbuy314 (80766510@gateway/web/freenode/ip.128.118.101.16) has quit (Quit: Page closed)
2014-10-24 16:29:41	pyon	Oxyd: Is it okay if I make only the operator() overload a template, or do I need to make the whole free_deleter class a template?
2014-10-24 16:29:44		btcbuy314 (80766510@gateway/web/freenode/ip.128.118.101.16) has joined ##c++
2014-10-24 16:30:17	soman	Hannibal_Smith, what is free store? Place in memory which is ready for allocating 'next' object?
2014-10-24 16:30:19		Supicioso (~Supicioso@2607:5300:100:200::5e4) has joined ##c++
2014-10-24 16:30:27	Oxyd	pyon: Either should be fine.
2014-10-24 16:30:32		lolek (~lolek@unaffiliated/marcin) has joined ##c++
2014-10-24 16:30:37		lolek (~lolek@unaffiliated/marcin) has left ##c++
2014-10-24 16:30:39	Hannibal_Smith	soman, the heap
2014-10-24 16:30:52	pyon	Oxyd: Thanks!
2014-10-24 16:31:09	K-ballo	ison__: there is some proposal on the way
2014-10-24 16:31:25	soman	Hannibal_Smith, ok
2014-10-24 16:31:27	ison__	K-ballo with custom behavior added to default funcs?
2014-10-24 16:31:29	K-ballo	ison__: [N3972]
2014-10-24 16:31:29	npaperbot	N3972: [Reflection] Source-Code Information Capture <http://bit.ly/ZMx1Dj> (by Robert Douglas)
2014-10-24 16:32:19	ison__	interesting, but I have a strange feeling that it's never gonna be accepted
2014-10-24 16:32:40		skeuomorf (~skeuomorf@unaffiliated/skeuomorf) has quit (Ping timeout: 244 seconds)
2014-10-24 16:32:46	K-ballo	that is a strange feeling indeed :P
2014-10-24 16:32:52		tdc (~tdc@215.Red-95-126-227.staticIP.rima-tde.net) has joined ##c++
2014-10-24 16:32:56	ison__	it's just too good to be true
2014-10-24 16:33:09		hamid (~nithp@unaffiliated/hamid) has quit (Quit: Lost terminal)
2014-10-24 16:33:35	K-ballo	lol, that is not a strange feeling then, it is a dumb feeling
2014-10-24 16:33:47	K-ballo	good and bad things both make it into the standard
2014-10-24 16:34:34		liberal (~rocketeer@gateway/tor-sasl/rocketeer) has quit (Remote host closed the connection)
2014-10-24 16:34:58	ison__	oh, it's just a one-call-site info? not a stack trace actually, I thought it's a info about all func calls hierarchy
2014-10-24 16:34:58		liberal (~rocketeer@gateway/tor-sasl/rocketeer) has joined ##c++
2014-10-24 16:35:25	K-ballo	nod, stack traces are mentioned as future directions
2014-10-24 16:36:07	ison__	I just think that it would be too expensive to have stack trace with all info available everywhere
2014-10-24 16:36:30	pyon	Say I have two POD structs, foo and bar.
2014-10-24 16:36:39	pyon	Where bar is derived from foo.
2014-10-24 16:36:56	K-ballo	ison__: that's like saying __func__ is to expensive because we have function names everywhere
2014-10-24 16:36:59	pyon	Is it okay to do "std::unique_ptr<foo> p(new bar);" ?
2014-10-24 16:37:29		srnty (~srnty@24.130.15.87) has joined ##c++
2014-10-24 16:37:47		srnty (~srnty@24.130.15.87) has quit (Client Quit)
2014-10-24 16:37:48	pyon	The issue at hand is: (1) does the inability to call bar's destructor matter, if both destructors are trivial anyway?
2014-10-24 16:37:57	ison__	K-ballo stack trace contents can vary, __func__ is just a static variable defined at compile time
2014-10-24 16:38:07	K-ballo	{ unique_ptr<foo> p = make_unique<bar>(); } struct foo {}; struct bar : foo {}; // pyon
2014-10-24 16:38:08	geordi	<no output>
2014-10-24 16:39:16	Smirnov	does anyone use "new T" instead of "new T();" specifically to get or not get the default initialization rules?
2014-10-24 16:39:39	pyon	K-ballo: That doesn't tell me whether it's always okay, or it just happens to be okay with gcc.
2014-10-24 16:39:41	ison__	std::shared_ptr doesn't even require destructors to be virtual
2014-10-24 16:39:45	ison__	it will call all of them anyway
2014-10-24 16:40:01		skeuomorf (~skeuomorf@unaffiliated/skeuomorf) has joined ##c++
2014-10-24 16:40:08		echelon (~echelon@gateway/tor-sasl/harel) has quit (Remote host closed the connection)
2014-10-24 16:40:24	K-ballo	pyon: fair enough, let me give you some docs
2014-10-24 16:40:30	K-ballo	!give pyon unique_ptr::unique_ptr
2014-10-24 16:40:39	K-ballo	!give pyon stdref unique_ptr::unique_ptr
2014-10-24 16:40:40	nolyc	pyon: http://en.cppreference.com/w/cpp/memory/unique_ptr/unique_ptr
2014-10-24 16:41:08		psii (~psi@gateway/tor-sasl/foopsi) has quit (Remote host closed the connection)
2014-10-24 16:41:28		echelon (~echelon@gateway/tor-sasl/harel) has joined ##c++
2014-10-24 16:41:41		psii (~psi@gateway/tor-sasl/foopsi) has joined ##c++
2014-10-24 16:41:59		ObjectiveMatt (~Objective@66.87.151.39) has joined ##c++
2014-10-24 16:45:20		BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has joined ##c++
2014-10-24 16:45:29		grok0 (~o~o@unaffiliated/o-/x-1234567) has joined ##c++
2014-10-24 16:46:36	V-ille	Smirnov: certainly, especially when T is an array
2014-10-24 16:48:05		FunkybAss (~Funky@unaffiliated/funkyass) has quit (Quit: Make my Funk the P-Funk)
2014-10-24 16:48:29		FunkyAss (~Funky@unaffiliated/funkyass) has joined ##c++
2014-10-24 16:48:32		usrJayRay (~usrJayRay@150.200.74.127) has quit (Remote host closed the connection)
2014-10-24 16:49:11	ObjectiveMatt	what is :  system(“clear”)
2014-10-24 16:49:57		kexmex (~kexmex@ool-18b8c568.dyn.optonline.net) has joined ##c++
2014-10-24 16:50:04	hs_	it calls clear from the command system
2014-10-24 16:50:11	hs_	like typing "clear" at a prompt
2014-10-24 16:50:23	hs_	well, assuming it is the silly windows system()
2014-10-24 16:50:44	ObjectiveMatt	Write a recursive function that converts a decimal number to any base in the range [2, 16]
2014-10-24 16:50:53	ObjectiveMatt	the input is Two non-negative decimal integers, d and b. The first represents the number to convert, and the
2014-10-24 16:50:54	ObjectiveMatt	second represents the base to convert to.
2014-10-24 16:50:55		bitlord (~bitlord@unaffiliated/bitlord) has quit (Quit: bitlord)
2014-10-24 16:51:07	ObjectiveMatt	what types should I make the inputs/output
2014-10-24 16:51:14	ObjectiveMatt	int?
2014-10-24 16:51:14	ObjectiveMatt	string?
2014-10-24 16:51:15	hs_	the best types you can
2014-10-24 16:51:44	ObjectiveMatt	I feel like string makes sense
2014-10-24 16:51:45	ObjectiveMatt	since int is base 10
2014-10-24 16:51:56		ambro718 (~ambro@gentoo/contributor/ambro718) has quit (Ping timeout: 246 seconds)
2014-10-24 16:51:58	ObjectiveMatt	and I'd probably have to append digits
2014-10-24 16:52:04	Smirnov	V-ille: oh but only for arrays?
2014-10-24 16:52:15	V-ille	for other things too
2014-10-24 16:52:17	Smirnov	besides, if you use things like std::vector it always zeroes it right?
2014-10-24 16:52:24	V-ille	like classes that contain arrays
2014-10-24 16:52:35	V-ille	yes, vector always zero-initializes
2014-10-24 16:53:08	Smirnov	personally I'm not a fan of any raw data type
2014-10-24 16:53:26	Smirnov	I wonder though, if zero-initializing a vector is as cheap as a memset 0 ?
2014-10-24 16:54:15		SlashLife (~slashlife@botters/slashlife) has joined ##c++
2014-10-24 16:55:37	TinoDidriksen	Of course it is.
2014-10-24 16:56:08		SlashLife_ (~slashlife@botters/slashlife) has quit (Ping timeout: 255 seconds)
2014-10-24 16:58:48		tdc (~tdc@215.Red-95-126-227.staticIP.rima-tde.net) has quit (Quit: Leaving)
2014-10-24 16:59:55		EhevuTov (~EhevuTov@96.24.125.20) has joined ##c++
2014-10-24 17:02:44		jerv (~jerv@d54c4f5b5.access.telenet.be) has joined ##c++
2014-10-24 17:03:34	jerv	references are not reseatable. Does this mean Obj& ref1 = obj1; ref1 = obj2; is not legal? My compiler (clang) seems to have no problem with it
2014-10-24 17:04:06	Smirnov	thats because it calls Obj::operator=
2014-10-24 17:04:10	matt90	ObjectiveMatt: how'd your midterm go?
2014-10-24 17:04:10	Smirnov	it doesn't rebind the reference to another target
2014-10-24 17:05:33		ObjectiveMatt (~Objective@66.87.151.39) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-24 17:05:57		scwizard (b84b2552@gateway/web/freenode/ip.184.75.37.82) has quit (Ping timeout: 246 seconds)
2014-10-24 17:06:05	Oxyd	jerv: Referenes are basically aliases -- once you've done Obj& ref1 = obj1;, then saying ref1 is the same as saying obj1, and so ref1 = obj2; is the same as obj1 = obj2;.
2014-10-24 17:06:39		naraku9333 (~quassel@73.9.90.158) has joined ##c++
2014-10-24 17:07:17	jerv	so my code makes a copy instead of doing a rebind?
2014-10-24 17:07:29	Oxyd	It does an assignment, yes.
2014-10-24 17:07:34	Oxyd	You can't rebind references.
2014-10-24 17:07:34		SlashLife_ (~slashlife@botters/slashlife) has joined ##c++
2014-10-24 17:07:41		Imk0tter (Imk0tter@ool-2f12ec63.dyn.optonline.net) has quit (Ping timeout: 246 seconds)
2014-10-24 17:08:11	jerv	Oxyd: so the address will be the same
2014-10-24 17:08:32	Oxyd	Calling op = on an object doesn't change its address, of course.
2014-10-24 17:09:02		zzxx (4a03b864@gateway/web/freenode/ip.74.3.184.100) has joined ##c++
2014-10-24 17:09:16	o-O-o	that is why I insist coders should know CS fundamentals
2014-10-24 17:09:42	zzxx	could someone explain the difference between std::vector<std::vector<int>> v{10, std::vector<int>(10)}; and std::vector<std::vector<int>> v(10, std::vector<int>(10)); to me?
2014-10-24 17:09:53	o-O-o	zzxx: no
2014-10-24 17:09:53		MrMac (MrMac@x1-6-e0-91-f5-27-d2-d8.cpe.webspeed.dk) has quit
2014-10-24 17:09:54	zzxx	(note the initialization braces)
2014-10-24 17:09:55		trismarck (~trismarck@87-207-143-221.dynamic.chello.pl) has joined ##c++
2014-10-24 17:10:13	zzxx	o-O-o: why not?
2014-10-24 17:10:26	o-O-o	zzxx: can you see a difference?
2014-10-24 17:10:33		SlashLife (~slashlife@botters/slashlife) has quit (Ping timeout: 265 seconds)
2014-10-24 17:10:34	o-O-o	are the side effects the same?
2014-10-24 17:10:49	o-O-o	!give zzxx tias
2014-10-24 17:10:50	Oxyd	zzxx: They're the same, and if you do the former, you deserve to be shot.
2014-10-24 17:10:50	nolyc	zzxx: Try it and see yourself. 1) Stops wasting our time and 2) You learn the answer. If you have a specific compiler error prepare a test case at http://ideone.com/
2014-10-24 17:10:50	zzxx	the curly braces vs the round braces
2014-10-24 17:11:01	o-O-o	!give zzxx stdref vector
2014-10-24 17:11:03	nolyc	zzxx: http://en.cppreference.com/w/cpp/container/vector
2014-10-24 17:11:15	o-O-o	!give zzxx stdref uniform initialization
2014-10-24 17:11:16	nolyc	zzxx: http://en.cppreference.com/w/cpp/utility/initializer_list
2014-10-24 17:11:45	zzxx	nolyc: I did try it for myself, and I did see that it appears to have the same effect, but I came here to clarify. Its good to see you guys are all so friendly
2014-10-24 17:12:21		tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has joined ##c++
2014-10-24 17:12:30	o-O-o	!next
2014-10-24 17:12:31	nolyc	Another satisfied customer, next!
2014-10-24 17:12:33	jerv	Oxyd: are references implemented as pointers?
2014-10-24 17:12:39	o-O-o	jerv: PERHAPS
2014-10-24 17:12:46	jerv	ah right dumb
2014-10-24 17:12:48	jerv	question
2014-10-24 17:12:49	Oxyd	jerv: No. How references are implemented is unspecified.
2014-10-24 17:13:04		trismarck (~trismarck@87-207-143-221.dynamic.chello.pl) has quit (Client Quit)
2014-10-24 17:13:06	jerv	And asking are they in clang is off-topic
2014-10-24 17:13:24	Oxyd	It is. And the answer is going to be "Maybe."
2014-10-24 17:13:26	o-O-o	jerv: perhaps is the best answer. if the compiler can't optimize them out, a pointer under the scenes will likely to be used
2014-10-24 17:13:31	jerv	I'm asking to see if I could look at them in that way
2014-10-24 17:13:38	o-O-o	jerv: never
2014-10-24 17:13:45	o-O-o	references aren't pointers
2014-10-24 17:13:49	Oxyd	Better look at them as object aliases: They give a pre-existing object another name.
2014-10-24 17:14:14	Oxyd	If you do T x;, you've created an object and gave it a name x. If you then do T& y = x;, you gave the same object a second name, y.
2014-10-24 17:14:24	o-O-o	as a mindfuck. references can DANGLE too :( :( :(
2014-10-24 17:15:07	Oxyd	x and y are then two names for the same object, and doing stuff with x is the same as doing stuff with y, because x is y.
2014-10-24 17:16:42		zzxx (4a03b864@gateway/web/freenode/ip.74.3.184.100) has quit (Quit: Page closed)
2014-10-24 17:17:39		NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has joined ##c++
2014-10-24 17:18:32	jerv	I was a little bit confused because I looked at it as "kinda of" being a reference. But then T a,b,&ref=a; ref=b confused me as in first it points to a and then to b but you can't rebind, but still a=b=ref...
2014-10-24 17:18:37	jerv	But I get it now, thanks!
2014-10-24 17:19:07	jerv	I'll probably be a regular hear for the next couple of days. I started reading A tour of C++ to learn the language.
2014-10-24 17:19:11	jerv	here* lol
2014-10-24 17:19:18	Oxyd	*years
2014-10-24 17:19:21		glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2014-10-24 17:20:18		KrzaQ (~krzaq@krzaq.cc) has quit (Disconnected by services)
2014-10-24 17:20:33		KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-10-24 17:22:55		hachidorii (~hachidori@96.247.57.41) has quit (Remote host closed the connection)
2014-10-24 17:23:03		NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Ping timeout: 265 seconds)
2014-10-24 17:23:13		Cata|Work (~Patrick@50.58.76.2) has joined ##c++
2014-10-24 17:23:22	Cata|Work	anybody know if the setbuf(char* buf, streamsize count) function for iostreams will give a buffer smaller than count if the memory at buf includes nulls?
2014-10-24 17:23:26		hachidorii (~hachidori@96.247.57.41) has joined ##c++
2014-10-24 17:23:35		Trieste (~Trieste@unaffiliated/trieste) has joined ##c++
2014-10-24 17:23:41		hachidorii (~hachidori@96.247.57.41) has quit (Remote host closed the connection)
2014-10-24 17:23:47		Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-10-24 17:24:17	hs_	hrm.. is there a std::copy-like thing that will accept a "stride" or "pad" value?
2014-10-24 17:24:37	Oxyd	Cata|Work: It won't.
2014-10-24 17:24:43	Cata|Work	okay
2014-10-24 17:24:45	K-ballo	hs_: isn't that a job for iterator adapters instead of algorithms?
2014-10-24 17:25:09	Cata|Work	I'm struggling with a custom stream class that doesn't seem to be reading what I want it to read.
2014-10-24 17:25:09	hs_	yes it is
2014-10-24 17:25:16	V-ille	Cata|Work: the effects of setbuf are implementation-defined
2014-10-24 17:25:20	hs_	excellent point
2014-10-24 17:25:39		ObjectiveMatt (~Objective@66-87-151-39.pools.spcsdns.net) has joined ##c++
2014-10-24 17:25:48	ObjectiveMatt	pretty well I'd say matt90
2014-10-24 17:26:28		Nando_k (~Nando_k@dslb-092-077-076-153.092.077.pools.vodafone-ip.de) has quit (Ping timeout: 256 seconds)
2014-10-24 17:31:04		hz (~username@unaffiliated/hz) has joined ##c++
2014-10-24 17:32:21		wi2rd (~Unhek@5468F7BA.cm-12-1d.dynamic.ziggo.nl) has quit (Quit: Leaving)
2014-10-24 17:32:35		K3|Chris (~ChrisK3@unaffiliated/krill3) has quit (Remote host closed the connection)
2014-10-24 17:37:04		contempt (contempt@unaffiliated/contempt) has quit (Remote host closed the connection)
2014-10-24 17:38:51		Anodl (~Anodl@p5DC5AD58.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-10-24 17:38:56		lmat (~lmat@156-56-179-193.dhcp-bl.indiana.edu) has quit (Quit: leaving)
2014-10-24 17:39:18		Anodl (~Anodl@p5DC5AD58.dip0.t-ipconnect.de) has joined ##c++
2014-10-24 17:40:32		rendar (~I@host49-140-dynamic.59-82-r.retail.telecomitalia.it) has quit
2014-10-24 17:41:56		schleppel (~quassel@141.39.226.237) has joined ##c++
2014-10-24 17:42:21		coolcusty (~coolcusty@unaffiliated/coolcusty) has joined ##c++
2014-10-24 17:42:30		kkh (~duracrisi@unaffiliated/duracrisis) has quit (Read error: Connection reset by peer)
2014-10-24 17:42:51		ToApolytoXaos (~ToApolyto@46.21.62.128) has quit (Quit: Leaving)
2014-10-24 17:43:13		Longlius (~longlius@68.170.238.146) has joined ##c++
2014-10-24 17:43:21		alex_rmezei (~rmezei@204.84.232.251) has quit (Ping timeout: 265 seconds)
2014-10-24 17:43:24		Loggan (4dda1147@gateway/web/freenode/ip.77.218.17.71) has quit (Ping timeout: 246 seconds)
2014-10-24 17:43:31		Anodl (~Anodl@p5DC5AD58.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2014-10-24 17:43:36		BlaXpirit (~blaxpirit@52-85-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-10-24 17:44:08		kkh (~duracrisi@unaffiliated/duracrisis) has joined ##c++
2014-10-24 17:44:35		karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-10-24 17:44:47		deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-10-24 17:45:18		contempt (contempt@unaffiliated/contempt) has joined ##c++
2014-10-24 17:45:28	ObjectiveMatt	http://ideone.com/gOXThJ
2014-10-24 17:45:31	ObjectiveMatt	what's wrong with that
2014-10-24 17:45:40	ObjectiveMatt	I get an invalid operands to binary expression deal
2014-10-24 17:46:28	K-ballo	{ std::string s; s << 1; } // ObjectiveMatt
2014-10-24 17:46:28	geordi	error: no match for 'operator<<' (operand types are 'string {aka string}' and 'int')
2014-10-24 17:46:52		nfk (~nfk@unaffiliated/nfk) has quit (Quit: yawn)
2014-10-24 17:47:01	ObjectiveMatt	http://en.cppreference.com/w/cpp/io/manip/hex
2014-10-24 17:47:06	ObjectiveMatt	what about that then
2014-10-24 17:47:17	K-ballo	what about it?
2014-10-24 17:47:56	ObjectiveMatt	    std::cout << "The number 42 in hex:     " << std::hex << 42 << '\n';
2014-10-24 17:47:57	ObjectiveMatt	that works
2014-10-24 17:48:03	ObjectiveMatt	    return convertDecimal(floor(d/b), b) << std::hex << (d % b);
2014-10-24 17:48:04	ObjectiveMatt	that doesn't
2014-10-24 17:48:12	o11c	and since when is std::string like a std::ostream?
2014-10-24 17:48:14	o11c	since never.
2014-10-24 17:48:19	K-ballo	ObjectiveMatt: I told you what the error is, you are trying to use << on std::string
2014-10-24 17:48:25	K-ballo	do you see std::string used as a stream in that link?
2014-10-24 17:48:32	ObjectiveMatt	ah ok
2014-10-24 17:48:37	K-ballo	because a string is not a stream, that's why we have stringstream
2014-10-24 17:48:50		puish (~jon@unaffiliated/jonbryan) has joined ##c++
2014-10-24 17:49:12	ObjectiveMatt	how do I fix my function then
2014-10-24 17:49:22	ObjectiveMatt	make my return value a stringstream?
2014-10-24 17:49:45	K-ballo	your function has several other issues, but if you want a stringstream then using stringstream instead of string is a proper fix
2014-10-24 17:50:18	ObjectiveMatt	how do I convert a stringstream into a string
2014-10-24 17:50:30		kensai (~kensai@HSI-KBW-37-49-24-126.hsi14.kabel-badenwuerttemberg.de) has joined ##c++
2014-10-24 17:50:30	K-ballo	!give ObjectiveMatt stdref stringstream
2014-10-24 17:50:32	nolyc	ObjectiveMatt: http://en.cppreference.com/w/cpp/io/basic_stringstream
2014-10-24 17:50:45		btcbuy314 (80766510@gateway/web/freenode/ip.128.118.101.16) has quit (Ping timeout: 246 seconds)
2014-10-24 17:50:55	ObjectiveMatt	that's too much random crap for me
2014-10-24 17:51:06		PlasmaHH (~kvirc@speedy.projectiwear.org) has quit (Ping timeout: 265 seconds)
2014-10-24 17:51:18	K-ballo	lol, then hit the books I guess
2014-10-24 17:51:19	ObjectiveMatt	this was better
2014-10-24 17:51:19	ObjectiveMatt	http://stackoverflow.com/questions/662976/how-do-i-convert-from-stringstream-to-string-in-c
2014-10-24 17:51:38		deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has joined ##c++
2014-10-24 17:52:17	o11c	ObjectiveMatt: you're hopeless, stop wasting our time
2014-10-24 17:52:19	hs_	ObjectiveMatt, spend a little time learning to read those docs and you'll be happier for it
2014-10-24 17:53:52		cleamoon (~cleamoon@c213-89-99-78.bredband.comhem.se) has joined ##c++
2014-10-24 17:53:55	K-ballo	also, if you are going to keep asking questions on IRC as your default reaction to everything you do, at least please move the questions to !basic
2014-10-24 17:54:14		emg (~emg@74.217.148.5) has quit (Quit: emg)
2014-10-24 17:54:34		PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Quit: ChatZilla 0.9.91 [Firefox 32.0.3/20140923175406])
2014-10-24 17:54:52		kensai (~kensai@HSI-KBW-37-49-24-126.hsi14.kabel-badenwuerttemberg.de) has quit (Client Quit)
2014-10-24 17:55:18		ison__ (2eba4dc0@gateway/web/freenode/ip.46.186.77.192) has quit (Ping timeout: 246 seconds)
2014-10-24 17:56:01		hz (~username@unaffiliated/hz) has quit (Ping timeout: 240 seconds)
2014-10-24 17:57:55		hz (~username@unaffiliated/hz) has joined ##c++
2014-10-24 17:58:25	--	irc: disconnected from server
2014-10-24 17:59:15		dagnachew (~dagnachew@bas1-montreal30-2925416228.dsl.bell.ca) has joined ##c++
2014-10-24 17:59:15	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-24 17:59:15	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-24 17:59:15	--	Channel ##c++: 545 nicks (0 ops, 0 voices, 545 normals)
2014-10-24 17:59:15	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-24 17:59:30	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-24 18:00:08		jfcaron (~jfcaron@dhcp-128-189-205-101.ubcsecure.wireless.ubc.ca) has joined ##c++
2014-10-24 18:00:48	ObjectiveMatt	https://ideone.com/hCilx
2014-10-24 18:00:57	ObjectiveMatt	how do I do that with a single input variable for triangle
2014-10-24 18:01:14	ObjectiveMatt	a single input variable being the max row
2014-10-24 18:02:12	Oxyd	You can overload triangle. But why would you?
2014-10-24 18:03:24		grok0 (~o~o@unaffiliated/o-/x-1234567) has quit (Quit: Leaving)
2014-10-24 18:03:54	ObjectiveMatt	it's my assignment
2014-10-24 18:03:58	ObjectiveMatt	has to be one input variable
2014-10-24 18:04:14	Oxyd	https://ideone.com/AXHvnP -- welp, *shrug*
2014-10-24 18:04:17	hs_	!homework
2014-10-24 18:04:19	nolyc	We don't do homework (let alone yours)
2014-10-24 18:05:08	ObjectiveMatt	??
2014-10-24 18:05:17	ObjectiveMatt	oh overloaded
2014-10-24 18:05:22	ObjectiveMatt	is that the only way
2014-10-24 18:06:20		INSANU (~INSANU@187.113.253.3) has joined ##c++
2014-10-24 18:06:54	INSANU	what does it mean when i write class A(); and class A{}; ?
2014-10-24 18:07:10		biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has quit (Remote host closed the connection)
2014-10-24 18:07:11	INSANU	the doubt remains on {}
2014-10-24 18:07:56	hs_	where are you writing the first one?
2014-10-24 18:08:06	hs_	the second one is a definition of A
2014-10-24 18:08:14	K-ballo	or a construction of a temporary A ?
2014-10-24 18:08:38	K-ballo	nice ambiguity
2014-10-24 18:08:40		plamen (user@nat/mslo/x-wmfpkuesrkvknqkr) has quit (Quit: ERC Version 5.3 (IRC client for Emacs))
2014-10-24 18:09:09	Oxyd	I don't think class A{}; will parse as a construction of an object.
2014-10-24 18:09:32		confusa-est (~confusaes@184.151.61.179) has quit (Ping timeout: 256 seconds)
2014-10-24 18:09:36		cleamoon_ (~cleamoon@c213-89-99-78.bredband.comhem.se) has joined ##c++
2014-10-24 18:10:32		oleo (~oleo@xdsl-87-79-251-33.netcologne.de) has quit (Ping timeout: 244 seconds)
2014-10-24 18:10:41		oleo__ (~oleo@xdsl-78-35-129-31.netcologne.de) has joined ##c++
2014-10-24 18:11:08	--	oleo__ is now known as oleo
2014-10-24 18:11:19	jfcaron	Anyone care to comment on my implementation of a method for calculating the mode of unbinned data? http://ideone.com/BTtcJg  Only the calling convention (int, double *) is fixed by the framework I am working with.
2014-10-24 18:11:34	matt90	should I put std::function in a unique_ptr or just move it aruond?
2014-10-24 18:11:36	matt90	around*
2014-10-24 18:12:20	K-ballo	matt90: well.. what do you want to do with it? std::function is copyable so there isn't an inherent need to "put it in" a unique_ptr
2014-10-24 18:13:33	matt90	I'm storing it to be called later. I've been reading contradictory stuff about how much it stores/how expensive copy is
2014-10-24 18:13:56	matt90	I don't see anything in the definition to suggest it's more than dumb though
2014-10-24 18:14:18	K-ballo	it is as expensive to copy as the target is, so potentially incredibly costly... moving should be incredibly cheap
2014-10-24 18:14:25	matt90	gotcha
2014-10-24 18:14:57	ObjectiveMatt	anyway I can make this triangle function work the same with just a single argument maxrow
2014-10-24 18:14:58	ObjectiveMatt	https://ideone.com/hCilx
2014-10-24 18:15:03	ObjectiveMatt	without overloading it
2014-10-24 18:15:19		soman (~ibram@188.235.35.71) has quit (Quit: Leaving.)
2014-10-24 18:15:53	matt90	conceptually, is a function holding a lambda that closes on a copied A holding an object that's holding a copy of A?
2014-10-24 18:16:09		alex_rmezei (~rmezei@96-36-242-246.static.gnvl.sc.charter.com) has joined ##c++
2014-10-24 18:17:29		Fogger (~Fogger@host109-147-20-35.range109-147.btcentralplus.com) has quit (Read error: Connection reset by peer)
2014-10-24 18:17:32	K-ballo	conceptually, it is a void* target where target points to allocated memory where the actual target is stored, and whenever you copy it you allocate a new storage and copy the target over
2014-10-24 18:17:49	matt90	thanks
2014-10-24 18:18:03	jfcaron	Is std::sort cheap to call if the thing is already sorted, or should I do if(!std::is_sorted...){std::sort...}?
2014-10-24 18:18:05	ville	V-ille: http://www.youtube.com/watch?v=6OSqD-ac15U
2014-10-24 18:18:13		BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has quit
2014-10-24 18:19:16		dseitz (~dseitz@ip70-191-237-177.pn.at.cox.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-10-24 18:19:37	--	luny` is now known as luny
2014-10-24 18:20:46	ObjectiveMatt	    if (d == 0) return (std::stringstream << "");
2014-10-24 18:20:49	ObjectiveMatt	how can I do something like that
2014-10-24 18:20:59	ObjectiveMatt	return a  stringstream holding an empty string
2014-10-24 18:24:23	matt90	return std::stringstream{}; ?
2014-10-24 18:25:11	matt90	the default constructor "contains an empty sequence"
2014-10-24 18:25:26		Hannibal_Smith (~Hannibal_@95.239.72.248) has quit (Quit: Sto andando via)
2014-10-24 18:26:21		vol4ko (null@unaffiliated/vol4ko) has quit (Read error: Connection reset by peer)
2014-10-24 18:26:57		vol4ko (null@unaffiliated/vol4ko) has joined ##c++
2014-10-24 18:26:58		vocodork_ (~vocoder@94-227-99-249.access.telenet.be) has joined ##c++
2014-10-24 18:27:54	ObjectiveMatt	thank you sir!
2014-10-24 18:28:03		vocodork (~vocoder@94-227-99-249.access.telenet.be) has quit (Ping timeout: 245 seconds)
2014-10-24 18:28:10	matt90	:)
2014-10-24 18:28:13	ObjectiveMatt	one last question
2014-10-24 18:28:13	ObjectiveMatt	https://ideone.com/hCilx
2014-10-24 18:28:24	ObjectiveMatt	how do I do triangle with a single argument (int maxrow)
2014-10-24 18:28:53		Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has quit (Quit: ZNC - http://znc.sourceforge.net)
2014-10-24 18:28:55	matt90	I don't understand
2014-10-24 18:29:01		woodgiraffe (~woodgiraf@109.201.152.248) has quit (Ping timeout: 240 seconds)
2014-10-24 18:29:08	matt90	lol the "goes to zero" operator
2014-10-24 18:29:25	matt90	http://stackoverflow.com/questions/1642028/what-is-the-name-of-the-operator
2014-10-24 18:29:25	K-ballo	it's a typical recursion based homework, but...
2014-10-24 18:29:27	K-ballo	!homework
2014-10-24 18:29:28	nolyc	We don't do homework (let alone yours)
2014-10-24 18:29:43	matt90	oh, implement it with one parameter
2014-10-24 18:29:47	matt90	I thought you meant call it with one argument
2014-10-24 18:30:03	ObjectiveMatt	yes
2014-10-24 18:30:08	ObjectiveMatt	implement it with a single parameter
2014-10-24 18:30:22	--	SZT is now known as szt
2014-10-24 18:31:02	matt90	it's recursively counting from row to maxrow
2014-10-24 18:31:14	matt90	that should be enough to solve it
2014-10-24 18:31:23	ObjectiveMatt	right but I need it to have one parameter
2014-10-24 18:31:23		drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-10-24 18:31:28	matt90	yeah
2014-10-24 18:31:37	matt90	so you need to make it count from row to maxrow
2014-10-24 18:31:52	ObjectiveMatt	how do you mean
2014-10-24 18:31:55	ObjectiveMatt	is it not doing that already
2014-10-24 18:32:29	matt90	it's a range (n, m]
2014-10-24 18:32:33		Jeeb_ (~Jeeb_@u193-11-162-37.studentnatet.se) has quit (Read error: Connection reset by peer)
2014-10-24 18:32:47	ObjectiveMatt	ok
2014-10-24 18:33:04	matt90	you can shift it without changing the meaning
2014-10-24 18:33:13	matt90	count (n-p, m-p]
2014-10-24 18:33:45	matt90	that's backwards but whatever
2014-10-24 18:33:56	matt90	I think there's a homework channel
2014-10-24 18:33:57	ObjectiveMatt	I can't really understand
2014-10-24 18:34:26	hs_	ObjectiveMatt, there must be smart kids in your class that you can pilfer answers from?
2014-10-24 18:34:28	K-ballo	yes, please, take it to an appropriate channel
2014-10-24 18:34:46	hs_	and I'm sure they would be thrilled to help you
2014-10-24 18:35:00		jitta (~jitta@95.91.241.88) has quit (Quit: Stay stressed, then give up.)
2014-10-24 18:35:18		woodgiraffe (~woodgiraf@109.201.154.198) has joined ##c++
2014-10-24 18:36:45		hachidorii (~hachidori@96.247.57.41) has joined ##c++
2014-10-24 18:42:01		r0ver (~rover@177-19-17-190.fibertel.com.ar) has quit (*.net *.split)
2014-10-24 18:42:01		riotz (riotz@unaffiliated/riotz) has quit (*.net *.split)
2014-10-24 18:42:01		pakcjo (~ircuser@186.188.238.47) has quit (*.net *.split)
2014-10-24 18:42:01		K-ballo (~sonoio@181.228.139.31) has quit (*.net *.split)
2014-10-24 18:42:01		Cata|Work (~Patrick@50.58.76.2) has quit (*.net *.split)
2014-10-24 18:42:01		dTSCode (~DTSCode@unaffiliated/dtscode) has quit (*.net *.split)
2014-10-24 18:42:01		Adam01 (~Adam01@198.91.87.3) has quit (*.net *.split)
2014-10-24 18:42:01		Twey (~twey@unaffiliated/twey) has quit (*.net *.split)
2014-10-24 18:42:01		yrter (~yrter@unaffiliated/yrter) has quit (*.net *.split)
2014-10-24 18:42:01		yeticry (~yeticry@124.113.172.116) has quit (*.net *.split)
2014-10-24 18:42:01		blo (~blo@unaffiliated/blo) has quit (*.net *.split)
2014-10-24 18:42:01		MKCoin (mk@unaffiliated/mk/x-7191235) has quit (*.net *.split)
2014-10-24 18:42:01		Kostenko (~Kostenko@bl10-198-205.dsl.telepac.pt) has quit (*.net *.split)
2014-10-24 18:42:02		forrestv (~forrestv@unaffiliated/forrestv) has quit (*.net *.split)
2014-10-24 18:42:02		muteki (~muteki@unaffiliated/muteki) has quit (*.net *.split)
2014-10-24 18:42:02		Entroacceptor (~mad@unserver.de) has quit (*.net *.split)
2014-10-24 18:42:02		guardian (~guardian@planet-d.net) has quit (*.net *.split)
2014-10-24 18:42:02		Zoinks (~shiranpur@unaffiliated/shiranpuri) has quit (*.net *.split)
2014-10-24 18:42:06		ZDisorder (~shiranpur@unaffiliated/shiranpuri) has joined ##c++
2014-10-24 18:42:17		Entroacceptor (~mad@unserver.de) has joined ##c++
2014-10-24 18:42:19		muteki (~muteki@unaffiliated/muteki) has joined ##c++
2014-10-24 18:42:28		K-ballo (~sonoio@181.228.139.31) has joined ##c++
2014-10-24 18:42:30		dseitz (~dseitz@ip70-191-237-177.pn.at.cox.net) has joined ##c++
2014-10-24 18:42:33		blo (~blo@unaffiliated/blo) has joined ##c++
2014-10-24 18:42:33		Twey (~twey@unaffiliated/twey) has joined ##c++
2014-10-24 18:42:33		Kostenko (~Kostenko@bl10-198-205.dsl.telepac.pt) has joined ##c++
2014-10-24 18:42:46		yeticry (~yeticry@124.113.172.116) has joined ##c++
2014-10-24 18:42:48		dTSCode (~DTSCode@unaffiliated/dtscode) has joined ##c++
2014-10-24 18:43:14		MKCoin (~MK@unaffiliated/mk/x-7191235) has joined ##c++
2014-10-24 18:43:35		JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-10-24 18:45:11		ValicekB (~tbox@dot.snat.baz.cz) has quit (Ping timeout: 245 seconds)
2014-10-24 18:45:26		riotz (riotz@unaffiliated/riotz) has joined ##c++
2014-10-24 18:46:13		ValicekB (~tbox@dot.snat.baz.cz) has joined ##c++
2014-10-24 18:46:21		Adam01 (~Adam01@198.91.87.3) has joined ##c++
2014-10-24 18:46:30		forrestv (~forrestv@unaffiliated/forrestv) has joined ##c++
2014-10-24 18:48:33	ObjectiveMatt	I just don't know if this function is even possible
2014-10-24 18:48:43	ObjectiveMatt	I mean you'd have to be able to count down
2014-10-24 18:48:48	matt90	lol
2014-10-24 18:48:51	ObjectiveMatt	and the highest number of elements is in the middle
2014-10-24 18:49:05	ObjectiveMatt	what matt90
2014-10-24 18:49:09	matt90	counting down
2014-10-24 18:49:11	matt90	radical
2014-10-24 18:49:17		joephelius (~joe@55d448d5.access.ecotel.net) has joined ##c++
2014-10-24 18:49:17	ObjectiveMatt	radical? is that sarcastic
2014-10-24 18:49:22		naraku9333 (~quassel@73.9.90.158) has quit (Ping timeout: 258 seconds)
2014-10-24 18:49:23	matt90	that's what your goes-to operator is doing anyway
2014-10-24 18:49:44		ironhoof (~ironhoof@75-121-66-225.dyn.centurytel.net) has joined ##c++
2014-10-24 18:49:59	ObjectiveMatt	it's not the counting down
2014-10-24 18:50:09	ObjectiveMatt	it's the counting down and simultaneously printing from the middle
2014-10-24 18:50:15	ObjectiveMatt	put together that I just don't see how
2014-10-24 18:50:56	Oxyd	Yep, if only you could count down.
2014-10-24 18:51:02	ObjectiveMatt	I mean I figure I can make an hourglass
2014-10-24 18:51:04	ObjectiveMatt	but not a diamond??
2014-10-24 18:51:12		blipped (~quassel@119.130.113.27) has joined ##c++
2014-10-24 18:51:31	hs_	how dooo
2014-10-24 18:51:35	ironhoof	Okay, I think I got this finally figured out, after much research the only thing I couldnt find is the reverse iterator implementation, I know the forward iterator starts at 0 begin and ends after last element, so the reverse is the same only flipped around right? http://ideone.com/rXG5yG
2014-10-24 18:51:35	Oxyd	{ for (int i = 5; i > 0; --i) cout << i << ' '; }  // Having something like this would be rad.
2014-10-24 18:51:35	geordi	5 4 3 2 1
2014-10-24 18:51:37		K-ballo (~sonoio@181.228.139.31) has quit (Read error: Connection reset by peer)
2014-10-24 18:51:44	matt90	geordi: NO
2014-10-24 18:51:44	geordi	error: 'NO' does not name a type
2014-10-24 18:51:54	matt90	no counting down
2014-10-24 18:51:54	ObjectiveMatt	Oxyd
2014-10-24 18:51:56	ObjectiveMatt	https://ideone.com/hCilx
2014-10-24 18:52:01		glenfe (~glen@unaffiliated/glenfe) has quit (Quit: Nap.)
2014-10-24 18:52:02	ObjectiveMatt	print diamond, using single argument maxrow
2014-10-24 18:52:11	Oxyd	I won't.
2014-10-24 18:52:13		joephelius_ (~joe@55d40055.access.ecotel.net) has quit (Ping timeout: 245 seconds)
2014-10-24 18:53:56		immibis (~ChatZill1@122-59-227-101.jetstream.xtra.co.nz) has joined ##c++
2014-10-24 18:56:31		rcxdude_ (~rcxdude@cpc14-cmbg15-2-0-cust644.5-4.cable.virginm.net) has quit (Ping timeout: 240 seconds)
2014-10-24 18:56:38		micom (~micom@unaffiliated/micom) has quit (Remote host closed the connection)
2014-10-24 18:59:34		winnoob (5c1ae9fb@gateway/web/cgi-irc/kiwiirc.com/ip.92.26.233.251) has joined ##c++
2014-10-24 18:59:47		drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Ping timeout: 260 seconds)
2014-10-24 19:00:11		destenson (~destenson@wsip-70-167-188-130.sd.sd.cox.net) has quit (Ping timeout: 245 seconds)
2014-10-24 19:01:53	winnoob	Question about Visual Studio. I know how to add a dependency to my project but how do I do it in a way that someone on github (for example) would be able to clone and build? In other words, I only know how to add a dependency using my location e.g. C:\dev\lib\libxxx-2.4.3\include but not everybody will have this location.
2014-10-24 19:01:58	winnoob	I'm new to windows programming
2014-10-24 19:01:59		iFire (~fire@unaffiliated/ifire) has quit (Remote host closed the connection)
2014-10-24 19:02:23	matt90	use a relative path
2014-10-24 19:02:34	ObjectiveMatt	matt90
2014-10-24 19:02:37	ObjectiveMatt	halp!
2014-10-24 19:02:48		seishun (~Kakera@81.198.96.38) has quit (Ping timeout: 256 seconds)
2014-10-24 19:03:12	matt90	ObjectiveMatt: pay attention in class, collaborate with your classmates, go to office hours, use the TAs, use the study center
2014-10-24 19:03:17	matt90	I helped!
2014-10-24 19:03:20	ObjectiveMatt	lol
2014-10-24 19:03:21	matt90	:D
2014-10-24 19:03:28	ObjectiveMatt	well at least you acknowledged your sarcasm
2014-10-24 19:03:56		puish (~jon@unaffiliated/jonbryan) has quit (Quit: WeeChat 0.4.2)
2014-10-24 19:04:17		Errorical (~Errorical@83.243.255.36) has quit (Remote host closed the connection)
2014-10-24 19:05:35		jerv (~jerv@d54c4f5b5.access.telenet.be) has quit (Remote host closed the connection)
2014-10-24 19:05:47	--	dTSCode is now known as DTSCode
2014-10-24 19:05:56		K-ballo (~sonoio@181.228.59.173) has joined ##c++
2014-10-24 19:07:01	ironhoof	I have a lot to implement yet...  *digs through the standerd*
2014-10-24 19:07:16		QualityAddict (~QualityAd@ip68-102-62-117.ks.ok.cox.net) has quit (Ping timeout: 245 seconds)
2014-10-24 19:08:19	o11c	winnoob: there is no good way to develop software on windows
2014-10-24 19:08:34	DTSCode	sure there are
2014-10-24 19:08:44	DTSCode	i used to do it
2014-10-24 19:09:00		BinaryAddicted (~BinaryAdd@194.230.155.162) has joined ##c++
2014-10-24 19:09:07	o11c	winnoob: but pkg-config was designed to solve this problem, and it is usable on windows for at least *some* projects
2014-10-24 19:09:52	winnoob	thanks for the advice
2014-10-24 19:09:53		jfcaron (~jfcaron@dhcp-128-189-205-101.ubcsecure.wireless.ubc.ca) has quit (Ping timeout: 265 seconds)
2014-10-24 19:09:54		pixelate (~pixelate@139.0.124.229) has quit (Quit: WeeChat 1.0.1)
2014-10-24 19:10:07		hexagoxel_ (~hexagoxel@kiel-4d066a9e.pool.mediaWays.net) has joined ##c++
2014-10-24 19:10:22		winnoob (5c1ae9fb@gateway/web/cgi-irc/kiwiirc.com/ip.92.26.233.251) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2014-10-24 19:11:02		jfcaron (~jfcaron@dhcp-128-189-205-101.ubcsecure.wireless.ubc.ca) has joined ##c++
2014-10-24 19:11:42		tarruda (~tarruda@177.98.23.227) has joined ##c++
2014-10-24 19:12:36		drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-10-24 19:12:59		hexagoxel (~hexagoxel@kiel-4d066442.pool.mediaWays.net) has quit (Ping timeout: 250 seconds)
2014-10-24 19:15:07		deekej (~deekej@195.65.3.245) has quit (Ping timeout: 255 seconds)
2014-10-24 19:17:45		Splatt9990 (~androirc@208.102.18.166) has joined ##c++
2014-10-24 19:18:01		sphenxes (~sphenxes@91-119-96-149.dynamic.xdsl-line.inode.at) has quit (Ping timeout: 240 seconds)
2014-10-24 19:19:51		sphenxes (~sphenxes@91-119-96-149.dynamic.xdsl-line.inode.at) has joined ##c++
2014-10-24 19:19:57		KrzaQ (~krzaq@krzaq.cc) has quit (Disconnected by services)
2014-10-24 19:20:01		Andy-chan (~Andy-chan@xdsl-84-44-168-162.netcologne.de) has joined ##c++
2014-10-24 19:20:13		KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-10-24 19:20:17		sphenxes (~sphenxes@91-119-96-149.dynamic.xdsl-line.inode.at) has quit (Max SendQ exceeded)
2014-10-24 19:20:36		basic6 (~basic6@p4FCB7763.dip0.t-ipconnect.de) has quit (Ping timeout: 245 seconds)
2014-10-24 19:21:11		QualityAddict (~QualityAd@ip68-102-62-117.ks.ok.cox.net) has joined ##c++
2014-10-24 19:21:53		INSANU (~INSANU@187.113.253.3) has quit (Quit:  HydraIRC -> http://www.hydrairc.com <- In tests, 0x09 out of 0x0A l33t h4x0rz prefer it :))
2014-10-24 19:22:26		naraku9333 (~quassel@73.9.90.158) has joined ##c++
2014-10-24 19:23:14		alex_rmezei (~rmezei@96-36-242-246.static.gnvl.sc.charter.com) has quit (Quit:  HydraIRC -> http://www.hydrairc.com <- Go on, try it!)
2014-10-24 19:27:59		EhevuTov (~EhevuTov@96.24.125.20) has quit (Quit: This computer has gone to sleep)
2014-10-24 19:28:30		Burga (~andrewm@124-150-118-121.dyn.iinet.net.au) has joined ##c++
2014-10-24 19:29:01		captainralf (~captainra@94.242.243.162) has quit (Ping timeout: 250 seconds)
2014-10-24 19:29:05		Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 244 seconds)
2014-10-24 19:29:32		Splatt9990 (~androirc@208.102.18.166) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2014-10-24 19:29:33		ObjectiveMatt (~Objective@66-87-151-39.pools.spcsdns.net) has quit (Read error: Connection reset by peer)
2014-10-24 19:30:37		leeN (~leeN@e181200114.adsl.alicedsl.de) has quit (Read error: Connection reset by peer)
2014-10-24 19:33:05		King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has quit (Ping timeout: 265 seconds)
2014-10-24 19:33:50		negerns (negerns@49.144.144.88) has joined ##c++
2014-10-24 19:41:24		drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Read error: Connection reset by peer)
2014-10-24 19:41:41		drale2k_ (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-10-24 19:43:59	o11c	yay, my remaining unit test failures were testsuite bugs, not main code bugs
2014-10-24 19:44:35	hs_	that feel
2014-10-24 19:47:11	--	DTSCode is now known as dTSCode
2014-10-24 19:49:58	pEYEd	I am getting this error while trying to deserialize json -> error: no match for 'operator+=' in 'data->myData::str += std::basic_string<char>(((const char*)ptr), numBytes, (*(const std::allocator<char>*)(& std::allocator<char>())))'    http://paste.ee/p/qF457
2014-10-24 19:50:18	stefandxm	o11c: we just spent 2 hours debugging a new  ejabberd feature when there was a typo in my test program :o "Newline" instead of "NewLine"
2014-10-24 19:50:55	kalven	what the f
2014-10-24 19:51:31	o11c	die, stringly-typed systems!
2014-10-24 19:51:44	kalven	pEYEd: you need to dereference the string you append to
2014-10-24 19:52:20		newguise1234 (443d9910@gateway/web/freenode/ip.68.61.153.16) has joined ##c++
2014-10-24 19:52:44		plamen (~user@2604:2000:6a2a:900:3285:a9ff:fe8e:a9cb) has joined ##c++
2014-10-24 19:52:44	newguise1234	if I make a templated singleton class, will there be a singleton for each type then?
2014-10-24 19:53:02	newguise1234	or would the static pointer persist across template types
2014-10-24 19:53:51	Oxyd	Each instance of a template is a completely separate class.
2014-10-24 19:54:07	Oxyd	So each of these completely separate classes will have its own set of completely separate static members.
2014-10-24 19:54:09	newguise1234	thank you
2014-10-24 19:54:19	newguise1234	Thats what I thought, but I wasn't sure.
2014-10-24 19:54:39	newguise1234	I think thats pretty cool btw though haha
2014-10-24 19:54:46	pEYEd	kalven I am not following you. I apologize.
2014-10-24 19:56:35		QualityAddict (~QualityAd@ip68-102-62-117.ks.ok.cox.net) has quit (Ping timeout: 255 seconds)
2014-10-24 19:56:43	kalven	pEYEd: str is a pointer, you're doing ptr += blah;
2014-10-24 19:57:01	kalven	pEYEd: but, really. there's no need for str to be a pointer
2014-10-24 19:58:40		fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-10-24 19:59:15	pEYEd	kalven you mean   data->str += std::string((file, numBytes);   ?
2014-10-24 20:00:13		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-10-24 20:00:36		QualityAddict (~QualityAd@ip68-102-62-117.ks.ok.cox.net) has joined ##c++
2014-10-24 20:03:16	kalven	pEYEd: in myData, you have defined str to be a pointer to string. Thus, when you do data->str += something, it is not going to do what you want
2014-10-24 20:03:27	kalven	either change str to not be a pointer, or do *data->str +=
2014-10-24 20:03:59		Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-10-24 20:08:01		hexagoxel_ (~hexagoxel@kiel-4d066a9e.pool.mediaWays.net) has quit (Ping timeout: 250 seconds)
2014-10-24 20:08:23	pEYEd	kalven thank you. *data got rid of the error. still trying to find out what library ios_base belongs to  ->  error: 'ios_base' has not been declared
2014-10-24 20:11:35		phantomcircuit (~phantomci@blockchain.ceo) has joined ##c++
2014-10-24 20:12:56		MrFlibble (LunarJetma@2.221.166.187) has left ##c++
2014-10-24 20:15:21	--	irc: disconnected from server
2014-10-24 20:23:03		dagnachew (~dagnachew@bas1-montreal30-2925416228.dsl.bell.ca) has joined ##c++
2014-10-24 20:23:03	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-24 20:23:03	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-24 20:23:03	--	Channel ##c++: 526 nicks (0 ops, 0 voices, 526 normals)
2014-10-24 20:23:03	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-24 20:23:19	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-24 20:24:03		zima (zima@c75.152.27-202.clta.globetrotter.net) has quit (Ping timeout: 250 seconds)
2014-10-24 20:24:10		jhao (~user@207-237-52-187.c3-0.elm-ubr1.qens-elm.ny.cable.rcn.com) has joined ##c++
2014-10-24 20:24:15	ironhoof	Seems to be slowly comming along: http://ideone.com/rXG5yG
2014-10-24 20:25:43		deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-10-24 20:26:40		NoNMaDDeN (~NoNMaDDeN@wf-171-99-180-238.revip9.asianet.co.th) has quit (Ping timeout: 255 seconds)
2014-10-24 20:27:12		Kirrahe (~kirrahe@ip51cc442b.adsl-surfen.hetnet.nl) has quit (Ping timeout: 255 seconds)
2014-10-24 20:28:05		Jesin (~Jesin@r192085.res.Lehigh.EDU) has quit (Quit: Leaving)
2014-10-24 20:29:37		BinaryAddicted (~BinaryAdd@194.230.155.162) has quit
2014-10-24 20:29:56		BinaryAddicted (~BinaryAdd@194.230.155.162) has joined ##c++
2014-10-24 20:30:13		King_Lui (~King@dslc-082-082-147-106.pools.arcor-ip.net) has quit
2014-10-24 20:30:32		byte0x00 (~byte0x00@ool-4573b5ea.dyn.optonline.net) has quit (Remote host closed the connection)
2014-10-24 20:30:58		Jesin (~Jesin@r192085.res.Lehigh.EDU) has joined ##c++
2014-10-24 20:31:52		vocodork_ (~vocoder@94-227-99-249.access.telenet.be) has quit (Quit: http://viennaensemblepro.com | http://viennamirpro.com)
2014-10-24 20:35:53		robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-10-24 20:36:51		ZackTheHuman1 (~zack@50.131.91.35) has joined ##c++
2014-10-24 20:39:18		robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Read error: Connection reset by peer)
2014-10-24 20:41:23		BinaryAddicted (~BinaryAdd@194.230.155.162) has quit
2014-10-24 20:41:52		jfcaron (~jfcaron@dhcp-128-189-205-101.ubcsecure.wireless.ubc.ca) has quit (Quit: Leaving)
2014-10-24 20:41:56		BinaryAddicted (~BinaryAdd@194.230.155.162) has joined ##c++
2014-10-24 20:44:17		miodi (~oodi@dsl-hvkbrasgw1-54f89b-158.dhcp.inet.fi) has quit
2014-10-24 20:44:54		robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-10-24 20:44:58		iFire (~fire@unaffiliated/ifire) has joined ##c++
2014-10-24 20:45:33		skeuomorf (~skeuomorf@unaffiliated/skeuomorf) has quit (Ping timeout: 244 seconds)
2014-10-24 20:46:12		srjek (~srjek@46dhcp64.ece.uic.edu) has joined ##c++
2014-10-24 20:48:41		arescorpio (~arescorpi@190.190.244.100) has joined ##c++
2014-10-24 20:48:43		staylor (~staylor@mail.au-zone.com) has quit (Ping timeout: 255 seconds)
2014-10-24 20:50:00		blackwind_123 (~IceChat9@117.192.139.61) has quit (Ping timeout: 265 seconds)
2014-10-24 20:50:08		blackwind_123 (~IceChat9@117.192.130.165) has joined ##c++
2014-10-24 20:51:02		xico (~xico@cpe-76-88-16-80.san.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-10-24 20:51:02		qbann0p (~qbann0p@unaffiliated/qbann0p) has joined ##c++
2014-10-24 20:51:03		rainforest (~see@gateway/tor-sasl/alexandrite) has joined ##c++
2014-10-24 20:53:19		dunpeal (~dunpeal@unaffiliated/dunpeal) has quit (Ping timeout: 265 seconds)
2014-10-24 20:53:20		BinaryAddicted (~BinaryAdd@194.230.155.162) has quit
2014-10-24 20:53:43		BinaryAddicted (~BinaryAdd@194.230.155.162) has joined ##c++
2014-10-24 20:54:53		ironhoof (~ironhoof@75-121-66-225.dyn.centurytel.net) has quit (Quit: Lost terminal)
2014-10-24 20:58:40		roflin (~dennis@alexstrasza.kassala.de) has quit (Remote host closed the connection)
2014-10-24 20:59:21		roflin (~dennis@alexstrasza.kassala.de) has joined ##c++
2014-10-24 20:59:24		skeuomorf (~skeuomorf@unaffiliated/skeuomorf) has joined ##c++
2014-10-24 21:01:07		CEnnis91 (uid3543@gateway/web/irccloud.com/x-elelmfqjeztilvwi) has quit (Quit: Connection closed for inactivity)
2014-10-24 21:01:17		kailoAtWork (~kailoAtWo@208.184.77.122) has quit (Quit: This computer has gone to sleep)
2014-10-24 21:01:59		BinaryAddicted (~BinaryAdd@194.230.155.162) has quit
2014-10-24 21:02:27		BinaryAddicted (~BinaryAdd@194.230.155.162) has joined ##c++
2014-10-24 21:04:24		hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-10-24 21:05:01	--	szt is now known as SZT
2014-10-24 21:06:12		comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has quit (Quit: Bye)
2014-10-24 21:07:54		jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has quit (Quit: leaving)
2014-10-24 21:08:48		skeuomorf (~skeuomorf@unaffiliated/skeuomorf) has quit (Ping timeout: 244 seconds)
2014-10-24 21:08:57		jsoft (~jsoft@unaffiliated/jsoft) has joined ##c++
2014-10-24 21:10:08		Entroacceptor (~mad@unserver.de) has quit (Ping timeout: 244 seconds)
2014-10-24 21:10:13		BinaryAddicted (~BinaryAdd@194.230.155.162) has quit
2014-10-24 21:10:51		BinaryAddicted (~BinaryAdd@194.230.155.162) has joined ##c++
2014-10-24 21:11:26	--	Irrelium is now known as Irrel
2014-10-24 21:12:38		qbann0p (~qbann0p@unaffiliated/qbann0p) has quit (Quit: Leaving)
2014-10-24 21:15:58	pEYEd	How do I access a JSON subclass? such as "lasttradeprice" for http://pubapi.cryptsy.com/api.php?method=singlemarketdata&marketid=155 ?   error I get  ->   <rapidjson::UTF8<> >]: Assertion `false' failed.   code  ->  https://bpaste.net/show/0be205c9baaf
2014-10-24 21:16:31		robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 265 seconds)
2014-10-24 21:16:49	o-O-o	!general
2014-10-24 21:16:50		freebird2 (~freebird_@191.180.37.15) has joined ##c++
2014-10-24 21:16:51	nolyc	##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-10-24 21:17:00	freebird2	hi, please, what does the |= means ??  hints.ai_flags |= AI_CANONNAME;  tks a lot
2014-10-24 21:17:24	Oxyd	x |= y is the same as x = x | y.
2014-10-24 21:17:38	o-O-o	!give freebird2 book
2014-10-24 21:17:39	nolyc	freebird2: The Definitive C++ Book Guide and List -> http://stackoverflow.com/q/388242/1090079
2014-10-24 21:17:41	o-O-o	!give freebird2 basic
2014-10-24 21:17:42	nolyc	freebird2: Please ask your question in ##C++-basic, as it involves the fundamental basics of the language.
2014-10-24 21:18:21		deekej (~deekej@195.65.3.245) has quit (Remote host closed the connection)
2014-10-24 21:19:47		blackwind_123 (~IceChat9@117.192.130.165) has quit (Ping timeout: 245 seconds)
2014-10-24 21:20:29		Cirus (~Cirus@2601:9:80:101c:b085:f74d:5934:cb61) has joined ##c++
2014-10-24 21:21:10		tarruda (~tarruda@177.98.23.227) has quit (Quit: WeeChat 0.4.2)
2014-10-24 21:21:55		blackwind_123 (~IceChat9@117.192.133.246) has joined ##c++
2014-10-24 21:21:58		speeder (~speeder@152.250.14.185) has joined ##c++
2014-10-24 21:22:07		fluter (~fluter@fedora/fluter) has joined ##c++
2014-10-24 21:22:21	--	irc: disconnected from server
2014-10-25 18:05:03		dagnachew (~dagnachew@bas1-montreal30-2925416228.dsl.bell.ca) has joined ##c++
2014-10-25 18:05:03	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-25 18:05:03	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-25 18:05:03	--	Channel ##c++: 531 nicks (0 ops, 0 voices, 531 normals)
2014-10-25 18:05:03	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-25 18:05:17	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-25 18:05:20	cbreak	moonchild: even the standard support for unicode is pretty lacking :)
2014-10-25 18:05:23		viran (4fb58a57@gateway/web/freenode/ip.79.181.138.87) has joined ##c++
2014-10-25 18:05:38	viran	Hey, is this the get some help with a make script?
2014-10-25 18:05:44	viran	the place**
2014-10-25 18:05:46	cbreak	probably not.
2014-10-25 18:05:49	LunarJetman	viran: ##workingset
2014-10-25 18:05:51		jophish (~jophish@hermi.gotadsl.co.uk) has joined ##c++
2014-10-25 18:06:07	viran	thanks
2014-10-25 18:06:13		pyon (~user@unaffiliated/pyon) has quit (Quit: brb)
2014-10-25 18:06:16	moonchild	LunarJetman: according to you, proposed things for the c++ standard are also offtopic, beginning programmers should write allocator aware containers and well, generally everyone but you is wrong
2014-10-25 18:06:23	moonchild	that's just today
2014-10-25 18:06:45	moonchild	so go do something productive and leave us be
2014-10-25 18:06:54	LunarJetman	moonchild: again the guy said he was given task to "reimplement std::vector" which is impossible to do without reference to std allocators.
2014-10-25 18:07:03		pyon (~user@unaffiliated/pyon) has joined ##c++
2014-10-25 18:07:41	LunarJetman	moonchild: and the mistakes he was making was down to not knowing how std containers use std allocators
2014-10-25 18:07:47	LunarJetman	moonchild: so again please FOAD.
2014-10-25 18:07:57	cbreak	std::allocator can easily be reimplemented as well
2014-10-25 18:08:21	cbreak	I think new is part of the core language
2014-10-25 18:08:38	cbreak	so you can use placement new and the raw new for allocation for that
2014-10-25 18:08:48	moonchild	ask LunarJetman, he's the expert
2014-10-25 18:09:11		rcxdude_ (~rcxdude@cpc14-cmbg15-2-0-cust644.5-4.cable.virginm.net) has quit (Ping timeout: 250 seconds)
2014-10-25 18:09:15	LunarJetman	moonchild: I read his requirements; you shat all over them.
2014-10-25 18:09:24	Supicioso	What happens when you attempt to create multiple threads with a cpu that only has 1 core?
2014-10-25 18:09:38	Supicioso	Will it auto join created threads, or throw an exception?
2014-10-25 18:09:45	moonchild	they run interspersed
2014-10-25 18:09:57	Supicioso	Ah. So it doesn't error out. Good to know.
2014-10-25 18:10:00	moonchild	(well, depends on the os & thread library)
2014-10-25 18:10:07	Supicioso	using <thread>
2014-10-25 18:10:14	moonchild	(well, depends on the os & thread library)
2014-10-25 18:10:16	cbreak	Supicioso: scheduling is the job of the OS
2014-10-25 18:10:32	LunarJetman	Supicioso: often it makes sense to only create 1 or 2 threads per core but it depends on what you are doing really
2014-10-25 18:10:35	Supicioso	true enough
2014-10-25 18:10:50	moonchild	also, thread may be a thin wrapper around some facility that does something unintended
2014-10-25 18:11:23	cbreak	Supicioso: http://en.cppreference.com/w/cpp/thread/thread/thread
2014-10-25 18:11:28	LunarJetman	Supicioso: basically only create as many threads as there are cores for the SAME TASK; you can have multiple tasks though with more threads.
2014-10-25 18:11:29	moonchild	like if for some reason you're running modern gcc on ancient linux
2014-10-25 18:11:30	cbreak	Supicioso: read the exception section
2014-10-25 18:11:34		psii (~psi@gateway/tor-sasl/foopsi) has quit (Quit: WeeChat 1.0.1)
2014-10-25 18:11:52		captainralf (~captainra@light.quadrifun.com) has joined ##c++
2014-10-25 18:12:01	moonchild	LunarJetman: huh?
2014-10-25 18:12:12		nicolastarzia (~nicolasta@189.54.225.189) has joined ##c++
2014-10-25 18:12:16	Supicioso	Thanks.
2014-10-25 18:12:28	LunarJetman	for example my chess engine has one thread per core for calculating a move (the task) but there are also other threads for GUI and such
2014-10-25 18:12:37	moonchild	# of threads should be tuned to the workload
2014-10-25 18:12:41	o-0-o	like anyone cared about your engines
2014-10-25 18:12:54	Supicioso	Rude.
2014-10-25 18:13:09	moonchild	o-0-o: aparently its more on-topic that gcc bugs
2014-10-25 18:13:26	o-0-o	heh :)
2014-10-25 18:13:27	cbreak	moonchild: maybe it's C++17
2014-10-25 18:13:35	LunarJetman	I was giving Supicioso an example and answering moonchild's fucktarded question "huh?"
2014-10-25 18:13:39		aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-10-25 18:13:39	LunarJetman	o-0-o is a known troll also
2014-10-25 18:13:52	o-0-o	...
2014-10-25 18:13:53	cbreak	exhibit 1: trolls know each other.
2014-10-25 18:13:59	moonchild	hehe
2014-10-25 18:14:23		jophish (~jophish@hermi.gotadsl.co.uk) has quit (Ping timeout: 255 seconds)
2014-10-25 18:14:59	LunarJetman	how can it be trolls versus cute boi if trolls fight with each other?
2014-10-25 18:15:12	o-0-o	!give LunarJetman focus
2014-10-25 18:15:13	nolyc	LunarJetman: ##c++ focuses on C++. Discuss offtopic things elsewhere; ##c++-general or ##c++-social
2014-10-25 18:16:18	moonchild	but, but other channels don't have a bot with witty quips like that that you can invoke when losing an argument!
2014-10-25 18:16:42		Timmy (~quassel@unaffiliated/timmyt) has quit (Read error: Connection reset by peer)
2014-10-25 18:16:45		nicolastarzia (~nicolasta@189.54.225.189) has quit (Ping timeout: 256 seconds)
2014-10-25 18:16:46	LunarJetman	remember, abstract all the things.
2014-10-25 18:16:59	o-0-o	!focus
2014-10-25 18:17:00	nolyc	##c++ focuses on C++. Discuss offtopic things elsewhere; ##c++-general or ##c++-social
2014-10-25 18:17:04	o-0-o	please
2014-10-25 18:17:37	LunarJetman	we should have a wrongness counter.
2014-10-25 18:18:03	moonchild	it would overflow too quickly for some
2014-10-25 18:18:40		Timmy (~quassel@unaffiliated/timmyt) has joined ##c++
2014-10-25 18:21:40		skeuomorf (~skeuomorf@unaffiliated/skeuomorf) has joined ##c++
2014-10-25 18:23:41		Betal (~Beta@unaffiliated/betal) has quit (Disconnected by services)
2014-10-25 18:25:03		aslant (~aslant@5751a00f.skybroadband.com) has quit (Remote host closed the connection)
2014-10-25 18:25:26		ZackTheHuman1 (~zack@50.131.91.35) has joined ##c++
2014-10-25 18:25:48		seishun (~Kakera@78.84.148.73) has quit (Ping timeout: 260 seconds)
2014-10-25 18:27:29	--	irc: disconnected from server
2014-10-26 13:25:22		dagnachew (~dagnachew@bas1-montreal30-2925416228.dsl.bell.ca) has joined ##c++
2014-10-26 13:25:22	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-26 13:25:22	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-26 13:25:22	--	Channel ##c++: 526 nicks (0 ops, 0 voices, 526 normals)
2014-10-26 13:25:23	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-26 13:25:37	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-26 13:25:50	hs_	pepper_chico, I think people who need something more interesting will already know about it, and people who don't are better not being able to configure too much
2014-10-26 13:27:03	pepper_chico	hs_ hah, indeed... that way of thinking is just sad for the ones that need something more interesting and never heard of coliru before
2014-10-26 13:27:23	hs_	coliru pastes show up here all the time
2014-10-26 13:28:41		kexmex (~kexmex@ool-18b8c568.dyn.optonline.net) has joined ##c++
2014-10-26 13:28:48	pepper_chico	I don't see it much, b/c I'm not a frequent user anymore, I come infrequently, I guess lots of users are like that
2014-10-26 13:30:39		kexmex (~kexmex@ool-18b8c568.dyn.optonline.net) has quit (Client Quit)
2014-10-26 13:31:01		CEnnis91 (uid3543@gateway/web/irccloud.com/x-rnndyvglpqlkidnx) has quit (Quit: Connection closed for inactivity)
2014-10-26 13:31:31		pepper_chico (~textual@187.57.130.98) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-10-26 13:33:39		BoredHam1 (~root@gateway/tor-sasl/boredhamster) has joined ##c++
2014-10-26 13:35:39		madist (madist@unaffiliated/madist) has joined ##c++
2014-10-26 13:37:21		BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has joined ##c++
2014-10-26 13:38:20		wallbroken (wallbroken@unaffiliated/wallbroken) has joined ##c++
2014-10-26 13:41:21		jophish (~jophish@hermi.gotadsl.co.uk) has quit (Read error: Connection reset by peer)
2014-10-26 13:41:53		robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Quit: Konversation terminated!)
2014-10-26 13:43:40		jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has joined ##c++
2014-10-26 13:43:49		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 255 seconds)
2014-10-26 13:44:43		BrandonB (~bd@pool-108-0-69-144.lsanca.fios.verizon.net) has joined ##c++
2014-10-26 13:45:46		D0cN3x (~Thunderbi@dslb-178-007-223-226.178.007.pools.vodafone-ip.de) has joined ##c++
2014-10-26 13:46:36		deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-10-26 13:47:32		xavery (~daniel@unaffiliated/xavery) has joined ##c++
2014-10-26 13:48:14		ifire_ (~fire@unaffiliated/ifire) has quit (Remote host closed the connection)
2014-10-26 13:48:28		snyp (~Snyp@150.129.132.188) has quit (Quit: WeeChat 1.0.1)
2014-10-26 13:48:59	xavery	say I'm writing a parser for binary data that can have a number of "optional" fields. how can I model this in C++? do I have to make the "optional" fields members of the class anyway?
2014-10-26 13:50:04		Timmy (~quassel@unaffiliated/timmyt) has quit (Ping timeout: 265 seconds)
2014-10-26 13:50:18		Timmy (~quassel@unaffiliated/timmyt) has joined ##c++
2014-10-26 13:50:45		McSquibs_ (64049ad1@gateway/web/freenode/ip.100.4.154.209) has quit (Quit: Page closed)
2014-10-26 13:50:50	M-ou-se	xavery: check boost::optional
2014-10-26 13:50:52	V-ille	you could use std::experimental::optional
2014-10-26 13:51:05	V-ille	damn you M-ou-se, you used the shorter variant of it :)
2014-10-26 13:51:06	xavery	M-ou-se, V-ille - any options besides those? :)
2014-10-26 13:51:32	M-ou-se	std::optional, if you wait a few years.
2014-10-26 13:51:44		PigFlu (~herp@unaffiliated/pigflu) has joined ##c++
2014-10-26 13:51:47	V-ille	you can always use pointers, if you want to shoot yourself in the foot
2014-10-26 13:51:56	xavery	or : can I achieve that without std::scoped_ptr (or equivalent) in C++11? or making the "optional" object a member anyway, and making a zombie constructor?
2014-10-26 13:52:04	xavery	V-ille, yeah, I was hoping to avoid that.
2014-10-26 13:52:08	M-ou-se	xavery: unique_ptr could be an option too.
2014-10-26 13:52:39	--	irc: disconnected from server
2014-10-26 13:53:16		dagnachew (~dagnachew@bas1-montreal30-2925416228.dsl.bell.ca) has joined ##c++
2014-10-26 13:53:16	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-26 13:53:16	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-26 13:53:16	--	Channel ##c++: 525 nicks (0 ops, 0 voices, 525 normals)
2014-10-26 13:53:16	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-26 13:53:31	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-26 13:53:33	xavery	M-ou-se, I was just hoping there was something else to use - I didn't want to pull in Boost to my tiny project.
2014-10-26 13:53:49	xavery	V-ille, M-ou-se - thanks for the help.
2014-10-26 13:53:57	M-ou-se	xavery: make your own clone of optonal<T> then. it's not that hard.
2014-10-26 13:54:38	V-ille	yeah, it's just 826 lines of code :P
2014-10-26 13:55:38	V-ille	perhaps that explains why such things should be standardized
2014-10-26 13:55:59		MrFlibble (LunarJetma@2.221.166.187) has joined ##c++
2014-10-26 13:56:02	--	MrFlibble is now known as LunarJetman
2014-10-26 13:56:44		Hannibal_Smith (~Hannibal_@95.239.72.248) has joined ##c++
2014-10-26 13:57:06		Timmy (~quassel@unaffiliated/timmyt) has quit (Ping timeout: 260 seconds)
2014-10-26 13:57:11	M-ou-se	nah, a simple version can be a lot shorter. not saying that it's a good idea to write it yourself when boost has a good one
2014-10-26 13:57:13		FunkyAss (~Funky@unaffiliated/funkyass) has joined ##c++
2014-10-26 13:57:59	xavery	so I'll just go with Boost, then. :)
2014-10-26 13:58:00	xavery	thanks.
2014-10-26 14:02:18	--	irc: disconnected from server
2014-10-27 20:26:56		dagnachew (~dagnachew@bas1-montreal30-2925416228.dsl.bell.ca) has joined ##c++
2014-10-27 20:26:56	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-27 20:26:56	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-27 20:26:56	--	Channel ##c++: 532 nicks (0 ops, 0 voices, 532 normals)
2014-10-27 20:26:57	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-27 20:26:57	sigtrm	I should at that it really isnt just x and why, its more like condition ? x-y : y-x;
2014-10-27 20:26:59		BadQuanta (~badquanta@2601:7:80:c67:f5ea:4fe0:528e:9f3f) has joined ##c++
2014-10-27 20:27:11	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-27 20:27:14	sigtrm	can I still just do it without saving it in a var because I get an error message when I try
2014-10-27 20:28:09		hexagoxel (~hexagoxel@kiel-5f77c737.pool.mediaWays.net) has quit (Ping timeout: 250 seconds)
2014-10-27 20:28:48	sigtrm	I just tried again and it compiled without issue...
2014-10-27 20:29:04	sigtrm	that was a waste of 40 min trying to debug why it didn't work
2014-10-27 20:29:07	sigtrm	thanks guys
2014-10-27 20:30:19		dobby156 (~dobson@cpc17-stkp9-2-0-cust149.10-2.cable.virginm.net) has quit (Quit: Lost terminal)
2014-10-27 20:30:59	sigtrm	but is doing something like this considered bad because of readability?
2014-10-27 20:31:01		Mayzie (~Mayazcher@unaffiliated/mayazcherquoi) has joined ##c++
2014-10-27 20:31:27	Oxyd	Well, can you read it?
2014-10-27 20:31:32		BadQuanta (~badquanta@2601:7:80:c67:f5ea:4fe0:528e:9f3f) has quit (Ping timeout: 265 seconds)
2014-10-27 20:31:59	sigtrm	I can without a problem
2014-10-27 20:32:07	Oxyd	Then it's fine.
2014-10-27 20:32:20	sigtrm	but I don't know anybody else that reads it
2014-10-27 20:32:26	sigtrm	okay, I'll go with this solution then
2014-10-27 20:32:28	Oxyd	Ask everybody else that reads it.
2014-10-27 20:32:42		hexagoxel (~hexagoxel@kiel-5f769e3a.pool.mediaWays.net) has joined ##c++
2014-10-27 20:32:56		da2ce7 (~da2ce7@opentransactions/dev/da2ce7) has joined ##c++
2014-10-27 20:32:56	Oxyd	But, frankly, if someone had problem reading that, I'd advise them to learn C++ first.
2014-10-27 20:33:10	Supicioso	Woot. Fixed it.
2014-10-27 20:33:24	Supicioso	Circular dependcies was causing the errors. :/
2014-10-27 20:35:26	sigtrm	I am still perplexed why 40 min ago the same code was giving the compilator headache, while now everything seems to be fine and dandy
2014-10-27 20:35:56	Oxyd	It wasn't the same code.
2014-10-27 20:36:21	Oxyd	You might have forgot to save the file before compiling.
2014-10-27 20:36:41	sigtrm	I have been working on less then optimal sleep and coffee, you might be right
2014-10-27 20:36:43	Supicioso	What compiler doesn't auto save on compile?
2014-10-27 20:36:46	Supicioso	Living in the 90s?
2014-10-27 20:37:09	sigtrm	mine does, but I might have forgoten something in the code or something
2014-10-27 20:37:13		ObjectiveMatt (~Objective@66.87.150.176) has joined ##c++
2014-10-27 20:37:28	Oxyd	It isn't a compiler's job to save files. That's your editor's job.
2014-10-27 20:37:35	ObjectiveMatt	http://ideone.com/FkaRUS
2014-10-27 20:37:41	ObjectiveMatt	how should I keep track of heapsize
2014-10-27 20:38:24	o11c	Supicioso is a great example of why IDEs are an unforgivable evil
2014-10-27 20:38:34		a_le (~a_le@9.sub-70-197-5.myvzw.com) has joined ##c++
2014-10-27 20:38:37	Supicioso	Thank you good sir.
2014-10-27 20:38:43	o11c	ObjectiveMatt: coming in day after day to ask the same question is only going to annoy us
2014-10-27 20:39:02	ObjectiveMatt	well I never got an answer
2014-10-27 20:39:08	ObjectiveMatt	and a day is a long amount of time
2014-10-27 20:41:35		fluter (~fluter@fedora/fluter) has joined ##c++
2014-10-27 20:43:19		delta-nry (~delta-nry@S0106c8fb2658a55a.vc.shawcable.net) has joined ##c++
2014-10-27 20:43:34		delta-nry (~delta-nry@S0106c8fb2658a55a.vc.shawcable.net) has left ##c++
2014-10-27 20:45:11		BadQuanta (~badquanta@2601:7:80:c67:f5ea:4fe0:528e:9f3f) has joined ##c++
2014-10-27 20:45:24		plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-10-27 20:46:41		plitter (~plitter@84.48.49.52) has joined ##c++
2014-10-27 20:49:23		Garner (uid38417@gateway/web/irccloud.com/x-fiyfpfbivclgizdy) has quit (Quit: Connection closed for inactivity)
2014-10-27 20:51:18		hans_henrik (~hanshenri@ti0016a400-7162.bb.online.no) has joined ##c++
2014-10-27 20:51:19	hans_henrik	uhhh
2014-10-27 20:51:42		lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-10-27 20:52:08		joephelius (~joe@178.162.205.5) has quit (Quit: Konversation terminated!)
2014-10-27 20:53:11		zima (zima@c75.152.27-202.clta.globetrotter.net) has quit (Quit: zima)
2014-10-27 20:53:50		xico (~xico@cpe-76-88-16-80.san.res.rr.com) has quit (Ping timeout: 244 seconds)
2014-10-27 20:54:02	hans_henrik	void f(){} int main(){std::thread t(f); return 0;}      << crash.     void f(){} int main(){std::thread t(f);  t.join(); return 0;}     << not crash.  is it the programmer's job to make sure all threads have finished before returning from main?
2014-10-27 20:54:14		esas (~esas@unaffiliated/esas) has quit (Read error: Connection reset by peer)
2014-10-27 20:55:00		pixelate (~pixelate@139.0.124.229) has quit (Quit: WeeChat 1.0.1)
2014-10-27 20:55:53		tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has quit (Quit: bye!)
2014-10-27 20:56:11	davidstone	In general, you probably shouldn't use std::thread directly
2014-10-27 20:56:24	davidstone	They are building blocks for something safer
2014-10-27 20:56:28	davidstone	See std::async and std::future
2014-10-27 20:56:37		pixelate (~pixelate@139.0.124.229) has joined ##c++
2014-10-27 20:56:56	hans_henrik	uhh
2014-10-27 20:57:52		delta-nry (~delta-nry@S0106c8fb2658a55a.vc.shawcable.net) has joined ##c++
2014-10-27 20:57:55		pcreighton (~phil@173-26-129-193.client.mchsi.com) has quit (Remote host closed the connection)
2014-10-27 20:58:32		fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-10-27 20:59:19		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-10-27 21:00:13		hexagoxel (~hexagoxel@kiel-5f769e3a.pool.mediaWays.net) has quit (Ping timeout: 250 seconds)
2014-10-27 21:00:31	refp	http://coliru.stacked-crooked.com/a/59d74997bfccf6d0 <- hackish concepts (almost good looking)
2014-10-27 21:00:34	K-ballo	hans_henrik: that doesn't really crash, it terminates due to a contract violation.. yes, you are supposed to make sure all threads have finished
2014-10-27 21:01:00	refp	the RefpConcept macro is just so that you can be able to have multiple templates that look the same, but without getting into the compiler screaming "redefinition" in your face
2014-10-27 21:01:54	hans_henrik	K-ballo, well then, i guess, shame on microsoft for calling it Problem Event Name:	APPCRASH
2014-10-27 21:02:02	hans_henrik	if its not a crash :o
2014-10-27 21:03:20		medgno (~medgno@67-3-30-215.dlth.qwest.net) has joined ##c++
2014-10-27 21:03:26	K-ballo	hans_henrik: mmh really? msvc did ship a knowingly non-conformant std::async because they think they could do better, but I'm not aware of ~thread not terminating as it should
2014-10-27 21:03:42		comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has quit (Quit: Bye)
2014-10-27 21:03:42		MrSavage (~SteveTheC@162.223.44.49) has joined ##c++
2014-10-27 21:03:45	MrSavage	!enum
2014-10-27 21:03:59	MrSavage	Alright how do I cast an int to an enum without -fpermissive?
2014-10-27 21:04:55	MrSavage	Also should I use static_cast over c style casting?
2014-10-27 21:04:56	davidstone	static_cast<Enum>(0)
2014-10-27 21:05:33	K-ballo	hans_henrik: which version are you using? I'm looking at 2012 and 2013 and they do terminate
2014-10-27 21:05:41		BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has joined ##c++
2014-10-27 21:06:07	delta-nry	MrSavage: preferably whenever possible
2014-10-27 21:06:18	MrSavage	delta-nry: use which one?
2014-10-27 21:06:25		MrFlibble (LunarJetma@2.221.166.187) has quit (Quit: MrFlibble)
2014-10-27 21:06:39	delta-nry	MrSavage non-c style casts
2014-10-27 21:06:43		arescorpio (~arescorpi@227-206-17-190.fibertel.com.ar) has joined ##c++
2014-10-27 21:06:44		PotatoGim (~PotatoGim@220.90.135.162) has quit (Quit: WeeChat 1.0.1)
2014-10-27 21:06:55	MrSavage	delta-nry: why?
2014-10-27 21:07:03	MrSavage	just because it's newer?
2014-10-27 21:07:07	hans_henrik	K-ballo, hmm, not using MSVC, using some MinGW-g++ 4.8-something
2014-10-27 21:07:27	medgno	MrSavage: for one, static_cast won't let you cast away const
2014-10-27 21:07:51	davidstone	A c-style cast can perform a const_cast, ignore access specifiers of inheritance, reinterpret_cast
2014-10-27 21:07:55	delta-nry	MrSavage http://stackoverflow.com/questions/28002/regular-cast-vs-static-cast-vs-dynamic-cast
2014-10-27 21:08:12	K-ballo	hans_henrik: those mingw don't even have std::thread implemented as far as I know, and how did microsoft enter the picture then?
2014-10-27 21:08:13	MrSavage	thanks
2014-10-27 21:09:06		JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-10-27 21:09:37	K-ballo	hans_henrik: sorry, seems I'm wrong, just looked at mingw 4.7, 4.8 and 4.9 and they all do terminate
2014-10-27 21:09:55	K-ballo	hans_henrik: you might strongly wanna check your code for undefined behavior
2014-10-27 21:10:08		dseitz (~dseitz@ip70-191-237-177.pn.at.cox.net) has quit (Quit: My iMac has gone to sleep. ZZZzzz…)
2014-10-27 21:10:21	hans_henrik	somehow like this but https://cdn.mediacru.sh/gQgU8Ox0w6AQ.png
2014-10-27 21:12:05		PotatoGim (~PotatoGim@220.90.135.162) has joined ##c++
2014-10-27 21:15:20		kailoAtWork (~kailoAtWo@208.184.77.122) has quit (Quit: This computer has gone to sleep)
2014-10-27 21:16:54		degva (~degva@181.177.248.176) has joined ##c++
2014-10-27 21:16:55		Barrin6 (~Barrin6@159.115.194.66) has joined ##c++
2014-10-27 21:17:13	Barrin6	!general
2014-10-27 21:17:14	nolyc	##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-10-27 21:22:40		Carbonflux (~BOB@75-172-120-225.tukw.qwest.net) has joined ##c++
2014-10-27 21:25:23		Imk0tter (Imk0tter@ool-2f12ec63.dyn.optonline.net) has joined ##c++
2014-10-27 21:26:37		Rudolf (~rodolfo@unaffiliated/rudolf) has quit (Quit: [IRSSI])
2014-10-27 21:27:17		BinaryAddicted (~BinaryAdd@194.230.155.182) has quit
2014-10-27 21:29:59		unomystEz (~uno@unaffiliated/unomystez) has joined ##c++
2014-10-27 21:31:02	unomystEz	I have a fairly large class (cpp file is ~1000 lines) and I need to template at least part of it, I assume less code is produced if I push anytthing not needing templating to a base class?
2014-10-27 21:32:09	unomystEz	i.e, struct Base { // all non-template parameter dependent code ... }; template<class T> MyClass : Base { // anything dependent on T goes here... };
2014-10-27 21:33:59		BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has quit
2014-10-27 21:34:38	ObjectiveMatt	is there a way I can make like a container for an array
2014-10-27 21:34:46	ObjectiveMatt	that also has the fields "length" and "heap-size"
2014-10-27 21:34:51		delta-nry (~delta-nry@S0106c8fb2658a55a.vc.shawcable.net) has left ##c++
2014-10-27 21:35:09		surd (~surd@unaffiliated/surd) has quit (Read error: Connection reset by peer)
2014-10-27 21:35:58		a_le (~a_le@9.sub-70-197-5.myvzw.com) has quit (Remote host closed the connection)
2014-10-27 21:37:11		a_le (~a_le@9.sub-70-197-5.myvzw.com) has joined ##c++
2014-10-27 21:37:19	ObjectiveMatt	anyone??
2014-10-27 21:37:22		tz (~tz@zero.tzarc.ninja) has quit (Quit: Someone hacked the Gibson :()
2014-10-27 21:39:15		puish (~puish@unaffiliated/jonbryan) has quit
2014-10-27 21:39:47	K-ballo	ObjectiveMatt: what do you mean by length and heap-size?
2014-10-27 21:39:48	davidstone	Are you willing to spell them a little differently?
2014-10-27 21:39:55	davidstone	std::vector::size and std::vector::capacity
2014-10-27 21:39:56	ObjectiveMatt	length of the array
2014-10-27 21:40:09	ObjectiveMatt	and heapsize as a variable to represent the size of the heap
2014-10-27 21:40:12	ObjectiveMatt	virtually
2014-10-27 21:40:19	ObjectiveMatt	since there is no actual "heap"
2014-10-27 21:41:37		Kelsie|2 (~Kelsie@unaffiliated/kelsie) has joined ##c++
2014-10-27 21:42:03		tz (~tz@zero.tzarc.ninja) has joined ##c++
2014-10-27 21:42:14		Alcap (~Alcap@59.90.37.188.rev.vodafone.pt) has quit (Quit: Alcap)
2014-10-27 21:42:43	MrSavage	I'm rusty, can you not do this.foo() inside a member function of a class?
2014-10-27 21:42:54	davidstone	this is a pointer, not a reference
2014-10-27 21:42:57	davidstone	The syntax would be this->foo()
2014-10-27 21:43:17	MrSavage	thanks, i wasn't sure if it was supposed to be ->
2014-10-27 21:43:27		robink (~quassel@unaffilated/robink) has quit (Ping timeout: 258 seconds)
2014-10-27 21:44:13		Kelsie (~Kelsie@unaffiliated/kelsie) has quit (Ping timeout: 258 seconds)
2014-10-27 21:44:51		Mayzie (~Mayazcher@unaffiliated/mayazcherquoi) has quit (Quit: Leaving)
2014-10-27 21:44:54		pepper_chico (~textual@177.188.212.55) has joined ##c++
2014-10-27 21:45:14	ObjectiveMatt	K-ballo?
2014-10-27 21:45:49		robink (~quassel@unaffilated/robink) has joined ##c++
2014-10-27 21:46:08		usrJayRay (~usrJayRay@150.200.74.127) has quit (Quit: usrJayRay)
2014-10-27 21:46:41		tiglionabbit (~nickretal@23-126-178-3.lightspeed.sntcca.sbcglobal.net) has quit (Quit: tiglionabbit)
2014-10-27 21:49:06		hyperair (hyperair@ubuntu/member/hyperair) has joined ##c++
2014-10-27 21:49:35		a_le (~a_le@9.sub-70-197-5.myvzw.com) has quit (Remote host closed the connection)
2014-10-27 21:49:40		tiglionabbit (~nickretal@23-126-178-3.lightspeed.sntcca.sbcglobal.net) has joined ##c++
2014-10-27 21:51:50		mitch0 (~mitch@2E8B5F8F.catv.pool.telekom.hu) has quit (Ping timeout: 256 seconds)
2014-10-27 21:52:49		unomystEz (~uno@unaffiliated/unomystez) has quit (Quit: Leaving)
2014-10-27 21:54:02		kailoAtWork (~kailoAtWo@cpe-23-243-152-183.socal.res.rr.com) has joined ##c++
2014-10-27 21:54:43		delta-nry (~delta-nry@S0106c8fb2658a55a.vc.shawcable.net) has joined ##c++
2014-10-27 21:55:21		delta-nry (~delta-nry@S0106c8fb2658a55a.vc.shawcable.net) has left ##c++
2014-10-27 21:56:17		ObjectiveMatt (~Objective@66.87.150.176) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-27 21:56:54		jfcaron (~jfcaron@S01063c075411407f.vc.shawcable.net) has joined ##c++
2014-10-27 21:58:44		QualityAddict (~QualityAd@ip68-102-62-117.ks.ok.cox.net) has quit (Quit: Leaving)
2014-10-27 21:58:53		ObjectiveMatt (~Objective@66.87.150.176) has joined ##c++
2014-10-27 21:59:38		rocketeer (~rocketeer@gateway/tor-sasl/rocketeer) has joined ##c++
2014-10-27 22:00:22	hans_henrik	how can i check the "least significant bit" of a short int?
2014-10-27 22:00:47	jfcaron	%2
2014-10-27 22:01:09	jfcaron	That's platform dependent though, if it's little or big endian, I think.
2014-10-27 22:01:54		liberal (~rocketeer@gateway/tor-sasl/rocketeer) has quit (Ping timeout: 246 seconds)
2014-10-27 22:02:18	o11c	um, what?
2014-10-27 22:02:39	ObjectiveMatt	what are files called .h and .cpp when there is no class
2014-10-27 22:02:40	o11c	nothing platform dependent about LSB of an integer
2014-10-27 22:02:42	ObjectiveMatt	only function declarations?
2014-10-27 22:03:21	Oxyd	% 2 should always give you the value of the least significant bit, no matter whether that bit is at the start or the end of the binary representation.
2014-10-27 22:03:58	o11c	hans_henrik: for the nth least significant bit,   (val >> n) & 1
2014-10-27 22:04:15	o11c	or bool(val & (1 << n))
2014-10-27 22:04:28	Oxyd	<< (-1 % 2)  // Well, almost.
2014-10-27 22:04:28	geordi	-1
2014-10-27 22:04:46	o11c	IMO bitwise ops should error out on signed types
2014-10-27 22:04:52	hans_henrik	uhh
2014-10-27 22:07:13		ranu (~RAFAEL@177-190-224-67.mconline.com.br) has joined ##c++
2014-10-27 22:07:52		vocodork (~vocoder@94-227-99-249.access.telenet.be) has quit (Quit: http://viennaensemblepro.com | http://viennamirpro.com)
2014-10-27 22:07:52		da2ce7 (~da2ce7@opentransactions/dev/da2ce7) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-27 22:08:59	davidstone	% isn't a bitwise operation
2014-10-27 22:09:08	davidstone	It just always returns the sign of the left-hand side
2014-10-27 22:13:06		Jesin (~Jesin@r192085.res.Lehigh.EDU) has quit (Quit: Leaving)
2014-10-27 22:14:41		Jesin (~Jesin@r192085.res.Lehigh.EDU) has joined ##c++
2014-10-27 22:16:19		Shirty (~skr@109.128.142.222) has joined ##c++
2014-10-27 22:18:14	ObjectiveMatt	why in my .cpp file can I not std::cout
2014-10-27 22:18:33	ObjectiveMatt	use of undeclared identifier std
2014-10-27 22:18:33		Shirty (~skr@109.128.142.222) has quit (Quit: leaving)
2014-10-27 22:18:44	Oxyd	You did not #include <iostream>
2014-10-27 22:19:31	ObjectiveMatt	k thx
2014-10-27 22:20:09		FailBit_ (~holoirc@unaffiliated/liamw) has joined ##c++
2014-10-27 22:21:36		FailBit_ (~holoirc@unaffiliated/liamw) has quit (Quit: FailBit_)
2014-10-27 22:23:54		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 240 seconds)
2014-10-27 22:25:06		drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-10-27 22:25:16		tinti (~tinti@pdpc/supporter/student/tinti) has joined ##c++
2014-10-27 22:26:00		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-10-27 22:32:35		puish (~jon@unaffiliated/jonbryan) has joined ##c++
2014-10-27 22:33:11		Shirty (~skr@109.128.142.222) has joined ##c++
2014-10-27 22:33:59		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-10-27 22:34:50		tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has joined ##c++
2014-10-27 22:34:50		tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has quit (Client Quit)
2014-10-27 22:35:24		DTSCode (~DTSCode@unaffiliated/dtscode) has quit (Ping timeout: 240 seconds)
2014-10-27 22:36:01		juliohm (~julio@unaffiliated/juliohm) has joined ##c++
2014-10-27 22:36:06		surd (~surd@unaffiliated/surd) has joined ##c++
2014-10-27 22:36:14		medgno (~medgno@67-3-30-215.dlth.qwest.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-10-27 22:36:23		sunfun (marco@unaffiliated/sunfun) has quit (Ping timeout: 272 seconds)
2014-10-27 22:37:35	juliohm	Do you guys remember the name of the boost utility that automates the overload of arithmetic operators to a given class?
2014-10-27 22:37:44		tmh1999 (~tmh1999@gateway/tor-sasl/tmh1999) has joined ##c++
2014-10-27 22:38:05	juliohm	It's like a wrapper class that does all the +, -, *, definitions for us
2014-10-27 22:38:09		KAHR-Alpha (~Alpha@AReims-652-1-74-163.w86-192.abo.wanadoo.fr) has quit (Ping timeout: 250 seconds)
2014-10-27 22:38:17	--	irc: disconnected from server
2014-10-28 20:47:29		dagnachew (~dagnachew@bas1-montreal30-2925416228.dsl.bell.ca) has joined ##c++
2014-10-28 20:47:30	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-28 20:47:30	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-28 20:47:30	--	Channel ##c++: 540 nicks (0 ops, 0 voices, 540 normals)
2014-10-28 20:47:30	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-28 20:47:30		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-10-28 20:47:46	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-28 20:50:40		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-10-28 20:53:22		VladolfPutler (~jasper@5ED7DF59.cm-7-8d.dynamic.ziggo.nl) has quit (Quit: Leaving)
2014-10-28 20:54:34		plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-10-28 20:55:21		SlashLife (~slashlife@botters/slashlife) has joined ##c++
2014-10-28 20:55:43		lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-10-28 20:55:53		plitter (~plitter@84.48.49.52) has joined ##c++
2014-10-28 20:57:04		aslant (~aslant@188.29.165.108.threembb.co.uk) has joined ##c++
2014-10-28 20:58:31		fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-10-28 20:58:48		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-10-28 20:59:09		surd (~surd@unaffiliated/surd) has quit (Ping timeout: 245 seconds)
2014-10-28 21:00:52		aslant (~aslant@188.29.165.108.threembb.co.uk) has quit (Remote host closed the connection)
2014-10-28 21:02:30		goldfenrir (beded354@gateway/web/freenode/ip.190.222.211.84) has joined ##c++
2014-10-28 21:03:18	goldfenrir	Hi everyone
2014-10-28 21:03:34		aslant (~aslant@188.29.165.108.threembb.co.uk) has joined ##c++
2014-10-28 21:04:00	goldfenrir	someone could help me with files question??
2014-10-28 21:04:05	goldfenrir	this is my code http://paste.debian.net/129169/
2014-10-28 21:04:33	goldfenrir	i dont know why, in line 31, the seekg(0) doesnt work
2014-10-28 21:05:28	goldfenrir	i mean, the instruction dont change my input pointer
2014-10-28 21:07:33		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-10-28 21:09:34		screwjack (~screwjack@89.212.85.120) has joined ##c++
2014-10-28 21:10:14		aslant (~aslant@188.29.165.108.threembb.co.uk) has quit (Ping timeout: 255 seconds)
2014-10-28 21:10:52		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-10-28 21:11:52		cbot` (~FS@150.108.238.42) has quit (Ping timeout: 240 seconds)
2014-10-28 21:12:50		surd (~surd@unaffiliated/surd) has joined ##c++
2014-10-28 21:13:06		Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has quit (Read error: Connection reset by peer)
2014-10-28 21:13:20		hyperair (hyperair@ubuntu/member/hyperair) has joined ##c++
2014-10-28 21:16:02	o-O-o	!give goldfenrir doesn't work
2014-10-28 21:16:03	nolyc	goldfenrir: Look buddy, doesn't work is a vague statement. Does it sit on the couch all day long? Does it procrastinate doing the dishes? Does it beg on the street for change? Please be specific! Define 'it' and what it isn't doing. Give us more details so we can help you without needing to ask basic questions like what's the error message?
2014-10-28 21:16:07		robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 272 seconds)
2014-10-28 21:16:09		Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-10-28 21:17:21		dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 255 seconds)
2014-10-28 21:17:23		phao (~phao@187-127-41-162.user.veloxzone.com.br) has quit (Ping timeout: 272 seconds)
2014-10-28 21:18:40	goldfenrir	nolyc: sorry, english isn't my natura language
2014-10-28 21:18:44		phao (~phao@200.149.82.88) has joined ##c++
2014-10-28 21:18:57	goldfenrir	sory, english inst my natural languaje
2014-10-28 21:19:22	goldfenrir	first i wrote a binary file
2014-10-28 21:19:47	Shayanjm	binary search requires a sorted set, right? So recursively finding a minimum in a set with n/2 decomposition is impossible without assuming its sorted?
2014-10-28 21:19:52	Shayanjm	or am I missing something?
2014-10-28 21:20:13		gemme (gemme@c75.152.27-202.clta.globetrotter.net) has quit (Quit: gemme)
2014-10-28 21:20:30	goldfenrir	then i am trying to read from the file, therefore, i was putting the input pointer to 0 = outBin1.seekg(0)
2014-10-28 21:20:56		Ulrike_Rayne (~Ulrike_Ra@cpe-65-24-84-7.columbus.res.rr.com) has quit (Read error: Connection reset by peer)
2014-10-28 21:20:57		rcxdude (~rcxdude@cpc14-cmbg15-2-0-cust644.5-4.cable.virginm.net) has joined ##c++
2014-10-28 21:22:57		fluter (~fluter@fedora/fluter) has joined ##c++
2014-10-28 21:23:24	o11c	Shayanjm: binary search requires a sorted set and finds minimum in O(1); minimum of unsorted arrays is O(n)
2014-10-28 21:23:26	Smirnov	use a min heap Shayanjm
2014-10-28 21:23:59	o11c	Shayanjm: what are you really trying to do?
2014-10-28 21:23:59	Smirnov	std::make_heap
2014-10-28 21:24:17	Shayanjm	o11c: literally that. It's part of an assignment
2014-10-28 21:24:26	o11c	what's n/2 decomposition anyway?
2014-10-28 21:24:35	Smirnov	then std::pop_heap to get the minimum
2014-10-28 21:24:55	Shayanjm	n/2 type of decomposition means that you decompose the problem in halves rather than by 1
2014-10-28 21:25:11	o11c	binary tree sounds like it would satisfy that too
2014-10-28 21:25:29		thefamilydog (6cfafa1b@gateway/web/freenode/ip.108.250.250.27) has joined ##c++
2014-10-28 21:25:29		qknight (~joachim@static.188.100.47.78.clients.your-server.de) has quit (Ping timeout: 244 seconds)
2014-10-28 21:25:31		Ulrike_Rayne (~Ulrike_Ra@cpe-65-24-84-7.columbus.res.rr.com) has joined ##c++
2014-10-28 21:25:42	thefamilydog	how can I convert a 'const char*' to a 'const char**'?
2014-10-28 21:26:03	o11c	!xy
2014-10-28 21:26:05	nolyc	You're trying to do X, and you thought of solution Y. So you're asking about solution Y, without even mentioning X. The problem is, there might be a better solution, but we can't know that unless you describe what X is.
2014-10-28 21:26:11		Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-10-28 21:26:14		dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-10-28 21:26:16		Betal (~Beta@unaffiliated/betal) has quit (Disconnected by services)
2014-10-28 21:26:29	o11c	thefamilydog: unary & exists, but the important question is: what does this API need?
2014-10-28 21:26:31		qknight (~joachim@static.188.100.47.78.clients.your-server.de) has joined ##c++
2014-10-28 21:26:42	thefamilydog	the argument to a function needs a 'const char**' and I have an 'std::string'
2014-10-28 21:27:00	thefamilydog	(const char**)&my_string.c_str() is what I tried
2014-10-28 21:27:02	Smirnov	const char * local; call_my_function(&local);
2014-10-28 21:27:25	Smirnov	its either an out-variable or an array of strings
2014-10-28 21:28:16	thefamilydog	can I not convert a std::string to a 'const char**'?
2014-10-28 21:28:54		discipline (~disciplin@65.39.160.230) has joined ##c++
2014-10-28 21:29:17		goldfenrir (beded354@gateway/web/freenode/ip.190.222.211.84) has quit (Quit: Page closed)
2014-10-28 21:29:31	thefamilydog	nevermind I got it
2014-10-28 21:29:39		thefamilydog (6cfafa1b@gateway/web/freenode/ip.108.250.250.27) has quit (Client Quit)
2014-10-28 21:29:46	Smirnov	const char *string_array[] = { my_std_string.c_str(), NULL}; const char ** string_array_ptr = string_array;
2014-10-28 21:29:50		cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-10-28 21:30:11		yayachiken (~yayachike@host-115-67.kawo1.rwth-aachen.de) has quit (Ping timeout: 258 seconds)
2014-10-28 21:30:27		emg (~emg@74.217.148.5) has quit (Quit: emg)
2014-10-28 21:34:08		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-10-28 21:34:14		tiglionabbit (~nickretal@23-126-178-3.lightspeed.sntcca.sbcglobal.net) has quit (Quit: tiglionabbit)
2014-10-28 21:34:27		SlashLife (~slashlife@botters/slashlife) has quit (Ping timeout: 255 seconds)
2014-10-28 21:34:59		Betal (~Beta@unaffiliated/betal) has joined ##c++
2014-10-28 21:35:30	--	irc: disconnected from server
2014-10-30 19:46:30		dagnachew (~dagnachew@bas1-montreal30-2925416228.dsl.bell.ca) has joined ##c++
2014-10-30 19:46:30	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-30 19:46:30	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-30 19:46:30	--	Channel ##c++: 544 nicks (0 ops, 0 voices, 544 normals)
2014-10-30 19:46:31	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-30 19:46:46	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-30 19:46:58		skeuomorf (~skeuomorf@unaffiliated/skeuomorf) has quit (Ping timeout: 244 seconds)
2014-10-30 19:47:29		asakura0 (~asakura@gateway/tor-sasl/asakura) has joined ##c++
2014-10-30 19:48:56	o-O-o	:)
2014-10-30 19:48:58		drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-10-30 19:49:18		MrFlibble (LunarJetma@2.221.166.187) has left ##c++
2014-10-30 19:49:29		BlaXpirit (~blaxpirit@211-62-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-10-30 19:49:34		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-10-30 19:50:45		MrFlibble (LunarJetma@2.221.166.187) has joined ##c++
2014-10-30 19:50:49	--	MrFlibble is now known as LunarJetman
2014-10-30 19:50:50	--	LunarJetman is now known as MrFlibble
2014-10-30 19:51:22		parcs (~patrick@ool-4353af5c.dyn.optonline.net) has joined ##c++
2014-10-30 19:51:23	parcs	hello
2014-10-30 19:52:50		StableEvan (~Thunderbi@dsl-64-246-159-52.bbr0.cxscny.statetel.com) has joined ##c++
2014-10-30 19:53:16	MrFlibble	parcs: do you normally say hello to a room full of 500 people? :)
2014-10-30 19:53:28		kexmex (~kexmex@ool-18b8c568.dyn.optonline.net) has quit (Quit: Computer has gone to sleep.)
2014-10-30 19:54:28	hs_	very polite
2014-10-30 19:54:37	hs_	MrFlibble never says hello..
2014-10-30 19:54:40		robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-10-30 19:54:56	MrFlibble	hs_: red tuba
2014-10-30 19:54:59		robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Client Quit)
2014-10-30 19:55:13		robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-10-30 19:56:15		Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has joined ##c++
2014-10-30 19:57:43	--	irc: disconnected from server
2014-10-30 20:00:48		dagnachew (~dagnachew@bas1-montreal30-2925416228.dsl.bell.ca) has joined ##c++
2014-10-30 20:00:48	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-30 20:00:48	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-30 20:00:48	--	Channel ##c++: 548 nicks (0 ops, 0 voices, 548 normals)
2014-10-30 20:00:48	--	Notice(cameron.freenode.net): [freenode-info] channel trolls and no channel staff around to help? please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
2014-10-30 20:00:48	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-30 20:01:04	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-30 20:01:32	 *	pragma- is getting to be that age where once a day is good enough.
2014-10-30 20:01:36		arescorpio (~arescorpi@227-206-17-190.fibertel.com.ar) has joined ##c++
2014-10-30 20:01:43	MrFlibble	pragma-: no, red tuba: http://www.youtube.com/watch?v=a86R9nmwHj8
2014-10-30 20:01:49	--	irc: disconnected from server
2014-10-30 20:28:15		dagnachew (~dagnachew@bas1-montreal30-2925416228.dsl.bell.ca) has joined ##c++
2014-10-30 20:28:15	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-30 20:28:15	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-30 20:28:15	--	Channel ##c++: 550 nicks (0 ops, 0 voices, 550 normals)
2014-10-30 20:28:16	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-30 20:28:31	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-30 20:28:33		tiqs (d1c34a91@gateway/web/freenode/ip.209.195.74.145) has joined ##c++
2014-10-30 20:28:38	dagnachew	hi all
2014-10-30 20:28:48		hexagoxel_ (~hexagoxel@kiel-4d06735a.pool.mediaWays.net) has joined ##c++
2014-10-30 20:29:04	tiqs	Hey, I'm trying to link to libglib and libffi - linking to both causes a segmentation fault when I start my program
2014-10-30 20:29:13	tiqs	any ideas what might cause this?
2014-10-30 20:29:37		xico (~xico@cpe-66-75-25-39.san.res.rr.com) has quit (Ping timeout: 272 seconds)
2014-10-30 20:31:30		unixpro1970 (~unixpro19@unaffiliated/unixpro1970) has quit (Ping timeout: 255 seconds)
2014-10-30 20:31:44		Stanley00 (~Stanley_0@unaffiliated/stanley00) has joined ##c++
2014-10-30 20:31:57		hexagoxel (~hexagoxel@kiel-d9bf80fe.pool.mediaways.net) has quit (Ping timeout: 264 seconds)
2014-10-30 20:32:35		aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-10-30 20:37:46	o-O-o	!give tiqs general
2014-10-30 20:37:48	nolyc	tiqs: ##c++-general for algorithms, libraries, practices, projects, tools etc. yes two #s.
2014-10-30 20:37:48		degva (~degva@190.234.105.30) has quit (Ping timeout: 255 seconds)
2014-10-30 20:38:29		MKCoin (~MK@unaffiliated/mk/x-7191235) has quit (Ping timeout: 272 seconds)
2014-10-30 20:39:12		tiqs (d1c34a91@gateway/web/freenode/ip.209.195.74.145) has quit (Quit: Page closed)
2014-10-30 20:39:32		MrFlibble (LunarJetma@2.221.166.187) has quit (Quit: MrFlibble)
2014-10-30 20:43:39		drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Ping timeout: 256 seconds)
2014-10-30 20:43:58		techsurvivor (~kvirc@70.114.161.74) has joined ##c++
2014-10-30 20:44:20		EvilPenguin (~EvilPengu@173.247.204.218) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-10-30 20:48:26		Longlius (~longlius@c-69-247-183-18.hsd1.tn.comcast.net) has joined ##c++
2014-10-30 20:50:49		K-ballo (~sonoio@181.228.139.31) has quit (Quit: Bye)
2014-10-30 20:51:37		Garner (uid38417@gateway/web/irccloud.com/x-rkybyfmvkpdupunk) has quit (Quit: Connection closed for inactivity)
2014-10-30 20:53:54		surd (~surd@unaffiliated/surd) has joined ##c++
2014-10-30 20:54:49		surd (~surd@unaffiliated/surd) has quit (Client Quit)
2014-10-30 20:55:28		surd (~surd@unaffiliated/surd) has joined ##c++
2014-10-30 20:58:53		robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Read error: Connection reset by peer)
2014-10-30 20:59:40		fstd_ (~fstd@unaffiliated/fisted) has joined ##c++
2014-10-30 20:59:58		jfeltz (~beefcube@174-16-131-122.hlrn.qwest.net) has joined ##c++
2014-10-30 21:00:21		MKCoin (~MK@unaffiliated/mk/x-7191235) has joined ##c++
2014-10-30 21:01:20		parcs (~patrick@ool-4353af5c.dyn.optonline.net) has left ##c++ ("WeeChat 1.1-dev")
2014-10-30 21:01:49		StableEvan (~Thunderbi@dsl-64-246-159-52.bbr0.cxscny.statetel.com) has quit (Quit: Stuff to do)
2014-10-30 21:02:06	jfeltz	I was thinking about only moving implementation code to a non-header at release time,e.g. lib or binary release, does anyone else do this, and is it practical in-the-large?
2014-10-30 21:02:36		Suchorski (regex@unaffiliated/suchorski) has quit
2014-10-30 21:03:00		fstd (~fstd@unaffiliated/fisted) has quit (Ping timeout: 255 seconds)
2014-10-30 21:03:00	--	fstd_ is now known as fstd
2014-10-30 21:03:29	jfeltz	this is mainly because header <-> source sync maintainance is such a pain
2014-10-30 21:03:43	jfeltz	maintenance*
2014-10-30 21:04:05		Andy-chan2 (~Andy-chan@xdsl-87-78-155-175.netcologne.de) has quit (Ping timeout: 264 seconds)
2014-10-30 21:04:29		desophos_ (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-10-30 21:05:57		lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-10-30 21:07:16		skeuomorf (~skeuomorf@unaffiliated/skeuomorf) has joined ##c++
2014-10-30 21:07:42		desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has quit (Ping timeout: 265 seconds)
2014-10-30 21:08:14		zima (zima@c75.152.27-202.clta.globetrotter.net) has quit (Quit: zima)
2014-10-30 21:08:23		filcab_ (~quassel@sceapdsd43-89.989studios.com) has quit (Read error: Connection reset by peer)
2014-10-30 21:10:18		filcab (~quassel@sceapdsd43-89.989studios.com) has joined ##c++
2014-10-30 21:12:46		confusa-est (~confusaes@CPE00222dd68e90-CM00222dd68e8d.cpe.net.cable.rogers.com) has quit (Remote host closed the connection)
2014-10-30 21:14:25		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 258 seconds)
2014-10-30 21:15:56		vocodork (~vocoder@94-227-99-249.access.telenet.be) has quit (Quit: http://viennaensemblepro.com | http://viennamirpro.com)
2014-10-30 21:16:15		brotatos (~robin@unaffiliated/brotatos) has joined ##c++
2014-10-30 21:16:43	brotatos	Hi all, I want to create a generic function that takes a class type as a parameter and returns the type back as a string. e.g. foo(int) => "int"
2014-10-30 21:16:47	brotatos	How would I go about that using templates?
2014-10-30 21:17:03		Betal (~Beta@unaffiliated/betal) has joined ##c++
2014-10-30 21:19:32		rpag (~rg4@unaffiliated/rg4) has quit (Ping timeout: 245 seconds)
2014-10-30 21:20:02	kalven	brotatos: there's no generic, built-in way for doing that. there's typeid(T).name(), but it can return anything.
2014-10-30 21:20:17	o-O-o	brotatos: yup! the only way to do that is to create a typemap
2014-10-30 21:20:19		dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 265 seconds)
2014-10-30 21:20:29	o-O-o	but that would require previous knowledge of all used types :D
2014-10-30 21:20:37		Carbonflux (~BOB@75-172-120-225.tukw.qwest.net) has joined ##c++
2014-10-30 21:20:46		Streusel (~Anonymous@unaffiliated/streusel) has quit (Quit: Computer has gone to sleep.)
2014-10-30 21:21:12		emg (~emg@74.217.148.5) has quit (Quit: emg)
2014-10-30 21:21:27		hexagoxel_ (~hexagoxel@kiel-4d06735a.pool.mediaWays.net) has quit (Quit: Ex-Chat)
2014-10-30 21:21:31		Streusel (~Anonymous@unaffiliated/streusel) has joined ##c++
2014-10-30 21:22:38		BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has joined ##c++
2014-10-30 21:23:10		Lynxium (~Lonny@bzq-109-64-195-131.red.bezeqint.net) has quit
2014-10-30 21:23:56		Fogger (~Fogger@host86-130-238-76.range86-130.btcentralplus.com) has quit (Read error: Connection reset by peer)
2014-10-30 21:24:10		Soccham (~soccham@cpe-74-138-116-219.swo.res.rr.com) has joined ##c++
2014-10-30 21:25:20		aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-10-30 21:26:00		dunpeal (~dunpeal@unaffiliated/dunpeal) has quit (Ping timeout: 260 seconds)
2014-10-30 21:28:40		jaafar (~quassel@98.240.139.5) has joined ##c++
2014-10-30 21:29:36		BinaryAddicted (~BinaryAdd@194.230.155.182) has quit
2014-10-30 21:29:43		hyperair (hyperair@ubuntu/member/hyperair) has joined ##c++
2014-10-30 21:29:50		jfeltz (~beefcube@174-16-131-122.hlrn.qwest.net) has quit (Ping timeout: 240 seconds)
2014-10-30 21:29:52		jfcaron (~jfcaron@S01063c075411407f.vc.shawcable.net) has joined ##c++
2014-10-30 21:33:36		kailoAtWork (~kailoAtWo@208.184.77.122) has quit (Quit: This computer has gone to sleep)
2014-10-30 21:33:58		Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-10-30 21:39:32		c0le (~c0le@59.99.251.45) has joined ##c++
2014-10-30 21:40:03		jaafar (~quassel@98.240.139.5) has quit (Quit: No Ping reply in 180 seconds.)
2014-10-30 21:41:04		FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has joined ##c++
2014-10-30 21:42:14		fjellfras (~abhijat@122.170.71.193) has joined ##c++
2014-10-30 21:42:15		Stanley00 (~Stanley_0@unaffiliated/stanley00) has quit (Quit: Leaving)
2014-10-30 21:42:20		jaafar (~quassel@c-98-240-139-5.hsd1.mn.comcast.net) has joined ##c++
2014-10-30 21:43:25		jfeltz (~beefcube@174-16-144-43.hlrn.qwest.net) has joined ##c++
2014-10-30 21:46:51		r3g3x (~r3g3x@unaffiliated/r3g3x) has joined ##c++
2014-10-30 21:46:51		c0le (~c0le@59.99.251.45) has quit (Ping timeout: 265 seconds)
2014-10-30 21:46:56		Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-10-30 21:48:41		robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-10-30 21:49:19		aslant (~aslant@5751a00f.skybroadband.com) has quit (Read error: Connection reset by peer)
2014-10-30 21:50:23		aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-10-30 21:51:43		staylor (~staylor@S0106602ad0901f12.cg.shawcable.net) has joined ##c++
2014-10-30 21:51:44		jaafar (~quassel@c-98-240-139-5.hsd1.mn.comcast.net) has quit (Quit: No Ping reply in 180 seconds.)
2014-10-30 21:54:02		jaafar (~quassel@c-98-240-139-5.hsd1.mn.comcast.net) has joined ##c++
2014-10-30 21:54:15	sssilver_	Guys, when is this: `case int( sin( 3.0f ) ):` legal?
2014-10-30 21:54:27	sssilver_	C++11? C++14?
2014-10-30 21:54:31	sssilver_	never?
2014-10-30 21:57:24	Hello71	since always?
2014-10-30 21:57:32	sssilver_	Hello71: definitely not in C++98
2014-10-30 21:57:52		devbug (~quassel@d108-180-247-142.bchsia.telus.net) has joined ##c++
2014-10-30 21:57:57	sssilver_	Hello71: error: a function call cannot appear in a constant-expression
2014-10-30 21:57:58	Hello71	oh, case. I read switch for some reason
2014-10-30 21:58:17	Hello71	I think sin is constexpr in c++11
2014-10-30 21:58:20	sssilver_	I'm able to build it using --std=c++11
2014-10-30 21:58:28		roflin (~dennis@alexstrasza.kassala.de) has quit (Quit: WeeChat 1.0.1)
2014-10-30 21:58:28	sssilver_	using g++ on Linux
2014-10-30 21:58:29	Hello71	which didn't exist before then
2014-10-30 21:58:40	sssilver_	but a friend can't build it using LLVM with the C++11 flag
2014-10-30 21:59:03		roflin (~dennis@alexstrasza.kassala.de) has joined ##c++
2014-10-30 21:59:20	lh_mouse	geordi, -c array<int,  int( sin( 3.0f ) )> a;
2014-10-30 21:59:20	geordi	Success
2014-10-30 21:59:51	lh_mouse	geordi, <<a.size(); array<int,  int( sin( 3.0f ) )> a;
2014-10-30 21:59:51	geordi	0
2014-10-30 22:00:51	lh_mouse	clang, <<a.size(); array<int,  int( sin( 3.0f ) )> a;
2014-10-30 22:00:53	clang	error: non-type template argument is not a constant expression
2014-10-30 22:00:55	lh_mouse	Look ^
2014-10-30 22:01:12	sssilver_	so it's a clang problem?
2014-10-30 22:01:55		jaafar (~quassel@c-98-240-139-5.hsd1.mn.comcast.net) has quit (Quit: No Ping reply in 180 seconds.)
2014-10-30 22:02:37	Hello71	https://stackoverflow.com/questions/17347935/constexpr-math-functions
2014-10-30 22:03:57	Hello71	gcc computes sin(constexpr) at compile time
2014-10-30 22:04:13		jaafar (~quassel@c-98-240-139-5.hsd1.mn.comcast.net) has joined ##c++
2014-10-30 22:04:41	Hello71	which I think is an extension of the standard
2014-10-30 22:05:05	Hello71	geordi: s/3.0f/1\/0/
2014-10-30 22:05:05	geordi	error: Unexpected end of request.
2014-10-30 22:05:17	Hello71	geordi: <<a.size(); array<int,  int( sin( 1/0 ) )> a;
2014-10-30 22:05:17	geordi	error: division by zero is not a constant-expression
2014-10-30 22:05:50		degva (~degva@190.234.105.30) has joined ##c++
2014-10-30 22:06:02		SiGe (~SiGe@usc-secure-wireless-062-006.usc.edu) has joined ##c++
2014-10-30 22:06:23	Hello71	although you are free to write a static inline constexpr sin replacement
2014-10-30 22:07:11		jack_rabbit (~jack_rabb@c-50-148-112-117.hsd1.il.comcast.net) has joined ##c++
2014-10-30 22:07:22	lh_mouse	I don't think it is possible.
2014-10-30 22:07:54	lh_mouse	How would compute its value? Using lookup tables?
2014-10-30 22:08:47	Hello71	with much difficulty
2014-10-30 22:10:23		o-O-o (36f0c4b9@gateway/web/freenode/ip.54.240.196.185) has quit (Ping timeout: 246 seconds)
2014-10-30 22:10:57		SiGe (~SiGe@usc-secure-wireless-062-006.usc.edu) has quit (Ping timeout: 272 seconds)
2014-10-30 22:11:08	lh_mouse	Math functions may be evaluated during compile time but aren't necessarily constexpr.
2014-10-30 22:11:14		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-10-30 22:11:44		saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has joined ##c++
2014-10-30 22:15:40		cale250 (~cale250@12.167.215.2) has joined ##c++
2014-10-30 22:15:50		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 240 seconds)
2014-10-30 22:16:23		ormaaj (~ormaaj@75-168-147-181.mpls.qwest.net) has quit (Ping timeout: 265 seconds)
2014-10-30 22:16:32		medgno (~medgno@67-3-30-215.dlth.qwest.net) has joined ##c++
2014-10-30 22:17:37		kailoAtWork (~kailoAtWo@cpe-23-243-152-183.socal.res.rr.com) has joined ##c++
2014-10-30 22:17:38		kailoAtWork (~kailoAtWo@cpe-23-243-152-183.socal.res.rr.com) has quit (Remote host closed the connection)
2014-10-30 22:18:20		p|q (~plq@212.252.70.110) has quit (Ping timeout: 245 seconds)
2014-10-30 22:22:23		unreal_ (~unreal@unaffiliated/unreal) has joined ##c++
2014-10-30 22:23:30		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-10-30 22:23:57		blenolopes (~blenolope@179.232.19.199) has quit (Quit: http://blenolopes.com)
2014-10-30 22:24:18		robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Quit: Konversation terminated!)
2014-10-30 22:24:45		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-10-30 22:25:21		unreal (~unreal@unaffiliated/unreal) has quit (Ping timeout: 255 seconds)
2014-10-30 22:26:37		delta-nry (~delta-nry@S0106c8fb2658a55a.vc.shawcable.net) has joined ##c++
2014-10-30 22:26:38		SiGe (~SiGe@usc-secure-wireless-062-006.usc.edu) has joined ##c++
2014-10-30 22:27:42		brotatos (~robin@unaffiliated/brotatos) has left ##c++ ("WeeChat 0.4.3")
2014-10-30 22:28:47		jfeltz (~beefcube@174-16-144-43.hlrn.qwest.net) has quit (Quit: Leaving)
2014-10-30 22:32:35		JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-10-30 22:35:37		jaafar (~quassel@c-98-240-139-5.hsd1.mn.comcast.net) has quit (Quit: No Ping reply in 180 seconds.)
2014-10-30 22:37:51		jaafar (~quassel@c-98-240-139-5.hsd1.mn.comcast.net) has joined ##c++
2014-10-30 22:40:00		fjellfras (~abhijat@122.170.71.193) has quit (Quit: fjellfras)
2014-10-30 22:40:47		plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-10-30 22:41:09		shintahW2 (~oer894n@c83-248-102-44.bredband.comhem.se) has joined ##c++
2014-10-30 22:41:58		plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-10-30 22:43:49		fjellfras (~abhijat@122.170.71.193) has joined ##c++
2014-10-30 22:45:29		shintahW (~oer894n@c83-248-102-44.bredband.comhem.se) has quit (Ping timeout: 264 seconds)
2014-10-30 22:45:29	--	shintahW2 is now known as shintahW
2014-10-30 22:45:47		jaafar (~quassel@c-98-240-139-5.hsd1.mn.comcast.net) has quit (Quit: No Ping reply in 180 seconds.)
2014-10-30 22:46:04		fluter (~fluter@fedora/fluter) has joined ##c++
2014-10-30 22:48:06		jaafar (~quassel@c-98-240-139-5.hsd1.mn.comcast.net) has joined ##c++
2014-10-30 22:50:15	--	magic is now known as magic_pumpkin
2014-10-30 22:50:28		dfletcher (~dfletcher@drupal.org/user/72475/view) has quit (Read error: Connection reset by peer)
2014-10-30 22:51:12		Soccham (~soccham@cpe-74-138-116-219.swo.res.rr.com) has quit (Remote host closed the connection)
2014-10-30 22:52:50		dfletcher (~dfletcher@drupal.org/user/72475/view) has joined ##c++
2014-10-30 22:53:03	--	magic_pumpkin is now known as MagicalPumpkin
2014-10-30 22:55:37		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 258 seconds)
2014-10-30 22:56:39		SiGe (~SiGe@usc-secure-wireless-062-006.usc.edu) has quit (Read error: Connection reset by peer)
2014-10-30 22:57:21		cale250 (~cale250@12.167.215.2) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-10-30 22:58:12		Nodd (~Nodd@198.15.118.226) has joined ##c++
2014-10-30 23:01:14		madist (madist@unaffiliated/madist) has joined ##c++
2014-10-30 23:01:38		ikrima (~ikrima@rrcs-76-79-205-82.west.biz.rr.com) has joined ##c++
2014-10-30 23:02:33		c0le (~c0le@59.99.251.45) has joined ##c++
2014-10-30 23:03:05		jaafar (~quassel@c-98-240-139-5.hsd1.mn.comcast.net) has quit (Ping timeout: 255 seconds)
2014-10-30 23:03:06		Streusel (~Anonymous@unaffiliated/streusel) has quit (Remote host closed the connection)
2014-10-30 23:07:02		degva (~degva@190.234.105.30) has quit (Ping timeout: 245 seconds)
2014-10-30 23:07:19		Orion] (~nname@unaffiliated/orion/x-3970838) has quit
2014-10-30 23:08:54		moonchild (~loon@73.13.118.191) has joined ##c++
2014-10-30 23:11:23		uncreative (~uncreativ@c-76-104-233-145.hsd1.wa.comcast.net) has joined ##c++
2014-10-30 23:15:38		ac_slater (~weechat@96.237.110.242) has joined ##c++
2014-10-30 23:17:21		yrter (~yrter@unaffiliated/yrter) has joined ##c++
2014-10-30 23:19:01		fjellfras (~abhijat@122.170.71.193) has quit (Quit: fjellfras)
2014-10-30 23:19:50		degva (~degva@190.234.105.30) has joined ##c++
2014-10-30 23:21:06		Cirus (~Cirus@c-98-210-235-117.hsd1.ca.comcast.net) has joined ##c++
2014-10-30 23:25:35		schleppel (~quassel@141.39.226.237) has quit (Read error: Connection reset by peer)
2014-10-30 23:28:21		rpag (~rg4@unaffiliated/rg4) has joined ##c++
2014-10-30 23:28:27		Fogger (~Fogger@host86-130-238-76.range86-130.btcentralplus.com) has joined ##c++
2014-10-30 23:29:29		Timmy (~quassel@unaffiliated/timmyt) has quit (Remote host closed the connection)
2014-10-30 23:31:03		sixequalszero (~sixequals@unaffiliated/sixequalszero) has joined ##c++
2014-10-30 23:31:15		arescorpio (~arescorpi@227-206-17-190.fibertel.com.ar) has quit (Ping timeout: 245 seconds)
2014-10-30 23:32:42		pnbeast (~pnbeast@c-68-55-196-155.hsd1.md.comcast.net) has left ##c++
2014-10-30 23:33:36		doug64k (~doug@ERMLON6511W-LP130-02-1177804923.dsl.bell.ca) has quit (Read error: Connection reset by peer)
2014-10-30 23:33:44		Barrin6 (~Barrin6@user-0c8gm3t.cable.mindspring.com) has joined ##c++
2014-10-30 23:34:34		robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-10-30 23:35:07		Fogger (~Fogger@host86-130-238-76.range86-130.btcentralplus.com) has quit (Ping timeout: 255 seconds)
2014-10-30 23:35:31		Fogger (~Fogger@host86-144-215-131.range86-144.btcentralplus.com) has joined ##c++
2014-10-30 23:35:35		robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Read error: Connection reset by peer)
2014-10-30 23:35:39		r0bby (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-10-30 23:41:21		immibis (~ChatZill1@122-59-227-101.jetstream.xtra.co.nz) has quit (Ping timeout: 260 seconds)
2014-10-30 23:41:23		immibis_ (~ChatZill1@122-59-227-101.jetstream.xtra.co.nz) has joined ##c++
2014-10-30 23:41:27	--	immibis_ is now known as immibis
2014-10-30 23:41:37		pyon (~user@unaffiliated/pyon) has quit (Ping timeout: 245 seconds)
2014-10-30 23:42:30	ac_slater	:( The cppcon talk on allocators isnt on the github :( It's the only one not on there
2014-10-30 23:42:59		ARCADIVS (~RMM@75-138-6-205.dhcp.mntv.al.charter.com) has joined ##c++
2014-10-30 23:44:31		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-10-30 23:45:59		MINIMAN10000 (~MINIMAN10@c-50-135-64-29.hsd1.wa.comcast.net) has joined ##c++
2014-10-30 23:46:52	MINIMAN10000	So vectors allocate a new larger array in order to accomadate more space and then copy everything over. does the same thing happen when you concatinate a string does the same thing happen?
2014-10-30 23:47:12	MINIMAN10000	that was redundant.
2014-10-30 23:47:18		Buc| (alpha@unaffiliated/iuris) has left ##c++
2014-10-30 23:47:50	ac_slater	MINIMAN10000: it's hard to claim exactly what happens in all cases. Dont forget about compiler optimizations, versions of c++, etc
2014-10-30 23:48:04	ac_slater	you said 'copy' ... you have to be careful with that word
2014-10-30 23:49:02	MINIMAN10000	"which implies allocating a new array and moving all elements to it. " is that not a copy?
2014-10-30 23:49:14		uncreative (~uncreativ@c-76-104-233-145.hsd1.wa.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-10-30 23:49:14		ghenriks (~ghenriks@CPE98fc116ab762-CM68b6fc3d6890.cpe.net.cable.rogers.com) has quit (Remote host closed the connection)
2014-10-30 23:49:18	ac_slater	'moving' is not copying
2014-10-30 23:49:47	ac_slater	copy = deep copy, moving = shallow copy
2014-10-30 23:49:49	moonchild	ac_slater: are vids of those talks around anywhere?
2014-10-30 23:49:53	MINIMAN10000	huh
2014-10-30 23:50:02	ac_slater	moonchild: youtube.com/cppcon
2014-10-30 23:50:10	MINIMAN10000	didnt know deep copy vs shallow copy were unique things.
2014-10-30 23:50:28		kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has joined ##c++
2014-10-30 23:50:49	ac_slater	MINIMAN10000: you should read the C++FAQ at the isocpp site ... or continue with your question and dont let me distract you ;)
2014-10-30 23:51:04	hs_	MINIMAN10000, apparently strings are not required by the standard to be contiguous
2014-10-30 23:51:14	lh_mouse	MINIMAN10000, copying a string = allocate, copy, deallocate   moving a string = swap(*this, rhs)
2014-10-30 23:51:20	MINIMAN10000	oh thats intresting hs_
2014-10-30 23:52:41	o11c	ac_slater: plenty of copies not not deep copies ...
2014-10-30 23:52:45		rawfodog (~rawfodog@modemcable186.163-59-74.mc.videotron.ca) has joined ##c++
2014-10-30 23:52:53	o11c	shared_ptr for example
2014-10-30 23:52:55		arescorpio (~arescorpi@227-206-17-190.fibertel.com.ar) has joined ##c++
2014-10-30 23:52:59	moonchild	ac_slater: thanks
2014-10-30 23:53:00		xico (~xico@cpe-66-75-25-39.san.res.rr.com) has joined ##c++
2014-10-30 23:54:07	MINIMAN10000	seems really weird to me that strings arn't contiguous... i just assumed things with variable length all were.
2014-10-30 23:54:21	Stryyker	strings are
2014-10-30 23:54:47	MINIMAN10000	alright they are - but arn't required it sounds like?
2014-10-30 23:55:02	Stryyker	They are in recent standard
2014-10-30 23:56:18	ac_slater	o11c: true. I was trying to make a quite note for thought... I should know better than to be anything but *very* specific on here
2014-10-30 23:56:31	moonchild	MINIMAN10000: std::string is required to point to contiguous storage
2014-10-30 23:56:35	ac_slater	moonchild: most of the talks are really good ... I just wish the allocator talk had slides :(
2014-10-30 23:57:04	MINIMAN10000	because i just don't really see how you get contiguous and concatination at the same time.
2014-10-30 23:57:29	moonchild	yeah, i've browsed through the slides already, maybe a month+ ago?
2014-10-30 23:57:43	Stryyker	in the last month more slides have been added
2014-10-30 23:57:45		BoredHam1 (~root@gateway/tor-sasl/boredhamster) has quit (Ping timeout: 246 seconds)
2014-10-30 23:57:50		rnickb (~rnickb@ool-44c6f08b.dyn.optonline.net) has joined ##c++
2014-10-30 23:57:51	Stryyker	last I checked a few aren't there
2014-10-30 23:57:55		r0bby_ (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-10-30 23:57:59		r0bby (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 255 seconds)
2014-10-30 23:58:04	hs_	MINIMAN10000, Stryyker is right: C++11 does have a requirement on basic_string
2014-10-30 23:58:17	hs_	21.4.1 "The char-like objects in a basic_string object shall be stored contiguously..."
2014-10-30 23:58:18	MINIMAN10000	basic_string is a thing now?
2014-10-30 23:58:23	MINIMAN10000	i see
2014-10-30 23:58:42	kalven	since 98
2014-10-30 23:58:43	Stryyker	MINIMAN10000: std::string is std::basic_string<char>
2014-10-30 23:58:59		BoredHam1 (~root@gateway/tor-sasl/boredhamster) has joined ##c++
2014-10-30 23:59:04		delta-nry (~delta-nry@S0106c8fb2658a55a.vc.shawcable.net) has left ##c++
2014-10-30 23:59:35	moonchild	std::string is a typedef for std::basic_string<char...>
2014-10-31 00:00:38		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-10-31 00:00:47	rnickb	is there any way to get the mangled name of a function using rtti (non-standard is ok)? it seems like many c++ compilers use it in typeid names so it must be available?
2014-10-31 00:01:19	moonchild	rnickb: typeinfo(foo).name
2014-10-31 18:43:05		dagnachew (~dagnachew@bas1-montreal30-2925416228.dsl.bell.ca) has joined ##c++
2014-10-31 18:43:05	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-10-31 18:43:05	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-10-31 18:43:05	--	Channel ##c++: 569 nicks (0 ops, 0 voices, 569 normals)
2014-10-31 18:43:05	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-10-31 18:43:09	hanshenrik	mm
2014-10-31 18:43:20	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-10-31 18:43:31	AbleBacon	well, note that BITMAPINFOHEADER might be a different size than the bitmap header
2014-10-31 18:43:43	AbleBacon	since one is a C++ object and the other is some bits on a disk, you know?
2014-10-31 18:44:36	AbleBacon	it's just an object that contains info about the file's header such as its size
2014-10-31 18:44:51	AbleBacon	errr contains info from the file such as its header's size
2014-10-31 18:45:01	LunarJetman	sounds like Windows
2014-10-31 18:45:05	AbleBacon	yes ^_^
2014-10-31 18:45:06	LunarJetman	Windows off topic mmkay
2014-10-31 18:45:15	AbleBacon	sorry :(
2014-10-31 18:45:28		bb010g (uid21050@gateway/web/irccloud.com/x-vzcxpmolshedwtzu) has quit (Quit: Connection closed for inactivity)
2014-10-31 18:45:46	hanshenrik	ya know, some of us are using c++ to make stuff for windows :o
2014-10-31 18:45:47	AbleBacon	hans, look at that first code i posted http://ideone.com/XSF440
2014-10-31 18:46:02	AbleBacon	just take out my bullshit about "matrix" and "Bitmap.h" and you have a working bitmap loader
2014-10-31 18:46:14	AbleBacon	oh and my "Color" class
2014-10-31 18:46:34	LunarJetman	hanshenrik: that doesn't make Windows on topic
2014-10-31 18:46:57		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 250 seconds)
2014-10-31 18:47:06		ppf (~Miranda@HSI-KBW-091-089-000-186.hsi2.kabelbw.de) has quit (Read error: Connection reset by peer)
2014-10-31 18:47:49	AbleBacon	my "Color" class is just struct Color { int R, G, B, A } or something like that anyways
2014-10-31 18:48:01	LunarJetman	int? float better
2014-10-31 18:48:37	AbleBacon	nvm i used char
2014-10-31 18:48:39	AbleBacon	0 - 255
2014-10-31 18:48:45		lamefun (~lamefun2@37.113.49.73) has quit (Quit: Leaving)
2014-10-31 18:49:00	LunarJetman	0.0 to 1.0 better for colours; you can use them with matrices
2014-10-31 18:49:13	AbleBacon	yeah--i do just that in my openGL projects
2014-10-31 18:49:27	deathzor	hs_: yeah i wrote a sample and realized the error was between chair and keyboard ( was looping over a tree but not selecting correctly ;) )
2014-10-31 18:49:39		forgottenone (~forgotten@217.131.196.137) has quit (Ping timeout: 264 seconds)
2014-10-31 18:50:01		lamefun (~lamefun2@37.113.49.73) has joined ##c++
2014-10-31 18:50:48	ranu	LunarJetman: Why 0.0 to 1.0 is better for colours?
2014-10-31 18:51:07	ranu	I have always used 0 to 255 e.e
2014-10-31 18:51:26	Griwes	0.0 to 1.0 is horrible, because it's floating point for no reason
2014-10-31 18:51:28	AbleBacon	becuase you can multiply those values together and will never exceed 1.0
2014-10-31 18:51:34	AbleBacon	no no no there's logic
2014-10-31 18:51:57	AbleBacon	255 * 255 = 65025, but 1.0 * 1.0 = 1.0
2014-10-31 18:52:25	AbleBacon	multiply, divide, whatever as long as your starting values are between 0.0f and 1.0f, your results will stay within that range
2014-10-31 18:52:25		KrzaQ (~krzaq@krzaq.cc) has quit (Read error: Connection reset by peer)
2014-10-31 18:52:27	Griwes	it's still horrible
2014-10-31 18:52:33	Griwes	because it's still floating point
2014-10-31 18:52:43		KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-10-31 18:52:59	ranu	That do not justify the use of floating values over integers.
2014-10-31 18:53:04	AbleBacon	aren't computers like... specially designed for floating point operations?
2014-10-31 18:53:19	Griwes	no
2014-10-31 18:53:27	Griwes	they are specially designed for integer operations
2014-10-31 18:53:28	Griwes	:D
2014-10-31 18:53:39	Griwes	floating point units are weird and often horrible
2014-10-31 18:53:50	AbleBacon	yeah but the computer deals with them for you
2014-10-31 18:54:13	ranu	Of course, but it may have a little of overhead, no?
2014-10-31 18:54:30	Griwes	but you lose precision
2014-10-31 18:54:48		Gluesticky (~nobody@unaffiliated/gluesticky) has joined ##c++
2014-10-31 18:54:48	Griwes	...and suddenly you stop hitting any palette with your colors
2014-10-31 18:54:53	AbleBacon	idk. there are specific reasons for keeping to the 0.0 to 1.0 range. i don't recall what they are, but i was convinced by the reasons that i read
2014-10-31 18:55:28	ranu	Ok, I often use floating numbers for the alpha channel
2014-10-31 18:55:30	AbleBacon	well, 0.0f - 1.0f won't lose precision if you're dividing that range up into only 256 pieces
2014-10-31 18:55:34		iFire (~fire@unaffiliated/ifire) has joined ##c++
2014-10-31 18:55:45	AbleBacon	each R, G, B, or A gets its own float
2014-10-31 18:56:01	cbreak	most computer graphics algorithm in CPUs work with 0-1 normalised colors
2014-10-31 18:56:14	cbreak	(because of shaders)
2014-10-31 18:56:14	AbleBacon	and actually, i think the main reason is for the sake of the graphics card
2014-10-31 18:56:20	AbleBacon	yup!
2014-10-31 18:56:31	cbreak	but in CPU, floating point images have comparably high costs
2014-10-31 18:56:39	cbreak	we only use them for really HDR images
2014-10-31 18:56:52	cbreak	and for images we do unpredictable computations with
2014-10-31 18:57:45		bitlord (~bitlord@unaffiliated/bitlord) has quit (Quit: bitlord)
2014-10-31 18:57:49	cbreak	well, of course it depends
2014-10-31 18:58:06	cbreak	for example in Nuke, a popular video effects software, all image data is in floating point
2014-10-31 18:58:43		a_le (~a_le@nat/cisco/x-cvvgyxzikbhpgjkk) has quit (Remote host closed the connection)
2014-10-31 19:00:33		AbleBacon (407e1042@gateway/web/freenode/ip.64.126.16.66) has quit (Ping timeout: 246 seconds)
2014-10-31 19:00:48		Leoneof` (~Leoneof@unaffiliated/leoneof) has quit (Read error: Connection timed out)
2014-10-31 19:01:18	cbreak	well, images are complicated, especially when you go into color spaces, color subsampling and so on. The types themselves are not that hard...
2014-10-31 19:01:31		Leoneof` (~Leoneof@unaffiliated/leoneof) has joined ##c++
2014-10-31 19:01:55		b1rkh0ff (~b1rkh0ff@cable-146-255-146-83.dynamic.telemach.ba) has quit (Ping timeout: 264 seconds)
2014-10-31 19:06:12		jfcaron (~jfcaron@dhcp-128-189-205-175.ubcsecure.wireless.ubc.ca) has joined ##c++
2014-10-31 19:07:56		akiress (~weechat@pdpc/supporter/student/akiress) has joined ##c++
2014-10-31 19:09:30		seishun (~Kakera@46.109.99.94) has quit (Ping timeout: 255 seconds)
2014-10-31 19:09:42		jitta (~jitta@95.91.210.133) has quit (Quit: Stay stressed, then give up.)
2014-10-31 19:13:12	ranu	Thanks to point that out cbreak ;-)
2014-10-31 19:13:58		clandest (~devyn@96-41-44-56.dhcp.mtpk.ca.charter.com) has joined ##c++
2014-10-31 19:14:58	clandest	can anyone point me into the right direction if I wanted to take a sound file and trim it up however I would like?
2014-10-31 19:15:19	Elite6809	audacity?
2014-10-31 19:15:52		surd (~surd@unaffiliated/surd) has quit (Ping timeout: 265 seconds)
2014-10-31 19:15:54	clandest	they have a library?
2014-10-31 19:16:23	clandest	I want to program this.
2014-10-31 19:16:57	Elite6809	Why? Needlessly re-inventing the wheel
2014-10-31 19:17:08		klarrt (~dolmen@46-236-87-230.customer.t3.se) has quit (Ping timeout: 244 seconds)
2014-10-31 19:19:45	clandest	I want to make a application where a file is uploaded, but that file will be manipulated.
2014-10-31 19:20:11	deathzor	question could i duck type 2 classes with a different variable count inside a struct and/or class ?
2014-10-31 19:20:38		xingped (~xingped@ip68-1-72-182.pn.at.cox.net) has joined ##c++
2014-10-31 19:21:40	xingped	is this syntax for a function? (a->b*)(j, k, l)
2014-10-31 19:21:41	cbreak	clandest: if you don't value your sanity, check out ffmpeg
2014-10-31 19:21:56		hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 256 seconds)
2014-10-31 19:22:03		admg (~admg@host86-151-90-210.range86-151.btcentralplus.com) has quit (Quit: Bye)
2014-10-31 19:22:10	cbreak	deathzor: templates? :D
2014-10-31 19:22:30		King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has quit (Ping timeout: 256 seconds)
2014-10-31 19:25:52		shintah (bebble@h-140-107.a336.priv.bahnhof.se) has quit (Read error: Connection reset by peer)
2014-10-31 19:26:14		govg_ (~govg@unaffiliated/govg) has quit (Ping timeout: 244 seconds)
2014-10-31 19:28:34		Sc0tty- (~Scottyyy@86.53.112.194) has quit
2014-10-31 19:28:40		Jesin (~Jesin@r192085.res.Lehigh.EDU) has joined ##c++
2014-10-31 19:30:28		nfk (~nfk@unaffiliated/nfk) has quit (Quit: yawn)
2014-10-31 19:30:54		ac_slater (~weechat@96.237.110.242) has joined ##c++
2014-10-31 19:31:00		k0nichiwa (~jdoe@174.71.181.20) has quit (Ping timeout: 256 seconds)
2014-10-31 19:31:45		Leftas (~leftas@91.228.84.180) has joined ##c++
2014-10-31 19:32:03		nfk (~nfk@unaffiliated/nfk) has joined ##c++
2014-10-31 19:32:05	deathzor	cbreak: i'm trying to find out if its even possible before trying it but i'm gonna take your awnser as a yes its possible ;)
2014-10-31 19:32:48		alcedine (lippinj1@gateway/shell/tkk.fi/x-uwuqfpatmphkiiau) has quit (Ping timeout: 240 seconds)
2014-10-31 19:33:50		deekej (~deekej@195.65.3.245) has quit (Remote host closed the connection)
2014-10-31 19:34:25		lamefun (~lamefun2@37.113.49.73) has quit (Quit: Leaving)
2014-10-31 19:41:30		nfk (~nfk@unaffiliated/nfk) has quit (Quit: yawn)
2014-10-31 19:41:45	--	oleo is now known as Guest59845
2014-10-31 19:42:29		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-10-31 19:42:37		kadoban (~kadoban@ip68-3-81-129.ph.ph.cox.net) has joined ##c++
2014-10-31 19:42:50		Jackneill (~Jackneill@unaffiliated/jackneill) has quit (Remote host closed the connection)
2014-10-31 19:43:23		oleo__ (~oleo@xdsl-78-35-155-7.netcologne.de) has joined ##c++
2014-10-31 19:43:26	hs_	xingped, if a is a pointer to class type and b is a member function pointer of the right type, then (a->*b)(); is a function call
2014-10-31 19:43:28		wakd (~wakd@unaffiliated/wakd) has quit (Quit: Leaving)
2014-10-31 19:43:35		D0cN3x (~Thunderbi@dslb-178-007-222-181.178.007.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2014-10-31 19:43:39		Oxyd (~oxyd@pdpc/supporter/student/oxyd) has joined ##c++
2014-10-31 19:43:42	hs_	{ void (A::*f)() = &A::foo; A* a = new A{}; (a->*f)(); delete a;} struct A { void foo() { BARK; }}; // xingped
2014-10-31 19:43:42	geordi	A::foo()
2014-10-31 19:43:46	xingped	thought so, thanks
2014-10-31 19:43:55		wakd (~wakd@unaffiliated/wakd) has joined ##c++
2014-10-31 19:44:02	--	oleo__ is now known as oleo
2014-10-31 19:44:45		Jesin (~Jesin@r192085.res.Lehigh.EDU) has quit (Quit: Leaving)
2014-10-31 19:45:28		Guest59845 (~oleo@xdsl-78-35-183-52.netcologne.de) has quit (Ping timeout: 264 seconds)
2014-10-31 19:45:33		vieng095 (~vieng095@c-068ce555.05-23-6c6b7013.cust.bredbandsbolaget.se) has quit (Quit: leaving)
2014-10-31 19:47:01		Jesin (~Jesin@r192085.res.Lehigh.EDU) has joined ##c++
2014-10-31 19:50:25		Fogger (~Fogger@host86-140-69-108.range86-140.btcentralplus.com) has joined ##c++
2014-10-31 19:51:20		a_le (~a_le@mobile-166-171-250-122.mycingular.net) has joined ##c++
2014-10-31 19:51:47	hanshenrik	auto a(){std::vector<int> r;r.resize(0xFFFF);return r;}void b(){auto la=a();}              << does b() leak memory?
2014-10-31 19:52:49	hanshenrik	or will that stuff be automatically deleted upon out of scope?
2014-10-31 19:52:57	hanshenrik	/end of function
2014-10-31 19:53:45	LunarJetman	vectors don't leak their elements
2014-10-31 19:54:39		clandest (~devyn@96-41-44-56.dhcp.mtpk.ca.charter.com) has quit (Quit: WeeChat 1.0.1)
2014-10-31 19:54:39	hanshenrik	right..
2014-10-31 19:55:26		surd (~surd@unaffiliated/surd) has joined ##c++
2014-10-31 19:55:29		LazyProgrammer (~gunnar@aftr-88-152-184-151.unity-media.net) has left ##c++ ("WeeChat 0.3.8")
2014-10-31 19:55:41	hanshenrik	so.. i don't need any free(la)   in b() ?
2014-10-31 19:56:05	LunarJetman	free? free is used with malloc
2014-10-31 19:56:09	LunarJetman	I see no malloc there
2014-10-31 19:56:10	phantomcircuit	hanshenrik, no you dont
2014-10-31 19:56:16	hanshenrik	nor delete ?
2014-10-31 19:56:18		drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Ping timeout: 240 seconds)
2014-10-31 19:56:25	phantomcircuit	that is returning a copy of r not r
2014-10-31 19:56:28	LunarJetman	delete is used with new
2014-10-31 19:56:32	LunarJetman	I see no new there
2014-10-31 19:56:36		fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-10-31 19:56:42	phantomcircuit	(although gcc might optimize it to be a reference and not actually put r on the stack)
2014-10-31 19:56:49	hanshenrik	hmm, thanks
2014-10-31 19:56:58		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 260 seconds)
2014-10-31 19:58:16		ARCADIVS (~RMM@75-138-6-205.dhcp.mntv.al.charter.com) has joined ##c++
2014-10-31 19:59:48		lamefun (~lamefun2@37.113.49.73) has joined ##c++
2014-10-31 20:00:31	hanshenrik	vec.resize(length); memcpy(&vec[0], ptr, length);
2014-10-31 20:00:32	hanshenrik	   << that's fine in c++11 right?
2014-10-31 20:00:32	geordi	error: Unexpected end of request. Expected any symbol.
2014-10-31 20:01:00		arescorpio (~arescorpi@227-206-17-190.fibertel.com.ar) has joined ##c++
2014-10-31 20:01:08	LunarJetman	hanshenrik: depends
2014-10-31 20:01:15	hanshenrik	on what? :o
2014-10-31 20:01:21	LunarJetman	you cannot memcpy non-pod
2014-10-31 20:01:27	hanshenrik	pod?
2014-10-31 20:01:31	LunarJetman	!pod
2014-10-31 20:01:33	nolyc	pod is http://www.informit.com/guides/content.aspx?g=cplusplus&seqNum=309 . Scalar types (see !scalar), POD-struct types (see !podstruct), POD-union types, arrays of such types and cv-qualified versions of these types are collectively called POD types. The acronym POD stands for `plain old data.'
2014-10-31 20:01:43		Cirus (~Cirus@2601:9:80:101c:ade5:d63a:aeb9:aba3) has joined ##c++
2014-10-31 20:02:43	hanshenrik	ptr is a void* to unsinged char[length]
2014-10-31 20:02:46	hanshenrik	dunno
2014-10-31 20:03:00	LunarJetman	I am talking about the source not the destination
2014-10-31 20:03:09		comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has quit (Quit: Bye)
2014-10-31 20:03:27	hanshenrik	yes, me too
2014-10-31 20:03:29	LunarJetman	although destination has to be non-pod also
2014-10-31 20:03:44	hanshenrik	memcpy(DESTINATION,SOURCE,LENGTH) :p
2014-10-31 20:03:44		KrzaQ (~krzaq@krzaq.cc) has quit (Disconnected by services)
2014-10-31 20:03:55	LunarJetman	ah yes
2014-10-31 20:04:01		KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-10-31 20:04:01	LunarJetman	not used memcpy for ages
2014-10-31 20:04:23	hanshenrik	as for vec, its std::vector <unsigned char> vec;
2014-10-31 20:04:39	hanshenrik	i have no idea if that's a "POD" or not
2014-10-31 20:04:40	LunarJetman	unsigned char is pod so that is fine
2014-10-31 20:06:54	hanshenrik	hmm, thanks
2014-10-31 20:07:37		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-10-31 20:10:46		ravingraven (~George@p5DC3CC01.dip0.t-ipconnect.de) has joined ##c++
2014-10-31 20:11:18	 *	ravingraven hi all
2014-10-31 20:18:40		sherief (~textual@195.sub-70-197-21.myvzw.com) has quit (Quit: Textual IRC Client: http://www.textualapp.com/)
2014-10-31 20:18:59		ambro718 (~ambro@gentoo/contributor/ambro718) has quit (Ping timeout: 258 seconds)
2014-10-31 20:19:24		FernandoBasso (~Fernando@200-102-88-221.cslce700.dsl.brasiltelecom.net.br) has quit (Quit: leaving)
2014-10-31 20:20:34		PJBoy (~PJBoy@unaffiliated/pjboy) has joined ##c++
2014-10-31 20:20:43		phantomcircuit (~phantomci@blockchain.ceo) has quit (Quit: quit)
2014-10-31 20:21:58		Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-10-31 20:22:23		phantomcircuit (~phantomci@blockchain.ceo) has joined ##c++
2014-10-31 20:25:22		Biohazard (illuminati@188.113.81.176) has left ##c++ ("WeeChat 1.1-dev")
2014-10-31 20:26:55		surd (~surd@unaffiliated/surd) has quit (Ping timeout: 265 seconds)
2014-10-31 20:27:51		Suchorski (regex@unaffiliated/suchorski) has quit
2014-10-31 20:27:57		hexagoxel_ (~hexagoxel@kiel-4d066eb9.pool.mediaways.net) has joined ##c++
2014-10-31 20:28:22		lamefun (~lamefun2@37.113.49.73) has quit (Quit: Leaving)
2014-10-31 20:28:41		BinaryAddicted (~BinaryAdd@194.230.155.182) has joined ##c++
2014-10-31 20:31:19		hexagoxel (~hexagoxel@kiel-4d06735a.pool.mediaWays.net) has quit (Ping timeout: 264 seconds)
2014-10-31 20:32:55		kadoban (~kadoban@ip68-3-81-129.ph.ph.cox.net) has quit (Quit: bye)
2014-10-31 20:33:07		jfcaron (~jfcaron@dhcp-128-189-205-175.ubcsecure.wireless.ubc.ca) has quit (Quit: Leaving)
2014-10-31 20:34:09		BlaXpirit (~blaxpirit@31-74-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-10-31 20:37:32		medgno (~medgno@67-3-30-215.dlth.qwest.net) has joined ##c++
2014-10-31 20:39:16	pi-	I'm writing a Python<-->C++11 bridge.  Python uses function tables, and I can slot in an 'extern C' type function that I supply.  But I want to be able to run myClass.myMethod(). I can't slot it in directly, because of name mangling. How can I do it? When I slot in an entry into the function table, I can also store a couple of pointers with it.
2014-10-31 20:39:59	LunarJetman	Python is off topic thank god.
2014-10-31 20:40:53	pi-	It isn't a Python question.
2014-10-31 20:41:10	LunarJetman	then ask the question again without reference to Python
2014-10-31 20:41:16	cbreak	pi-: member functions aren't compatible with normal functions
2014-10-31 20:41:19	pi-	idiot
2014-10-31 20:41:19		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-10-31 20:41:22	cbreak	pi-: you'll have to write some...
2014-10-31 20:41:25	cbreak	idiot yourself
2014-10-31 20:41:34	pi-	wut? not you!!
2014-10-31 20:41:49		Nando_k (~Nando_k@dslc-082-083-171-134.pools.arcor-ip.net) has quit (Ping timeout: 272 seconds)
2014-10-31 20:42:10	gravy_	well
2014-10-31 20:42:12	pi-	I was chastising Troll
2014-10-31 20:42:15	gravy_	im certainly not using python after this
2014-10-31 20:42:18	LunarJetman	reformulating the question without reference to Python might make you think for yourself what answer is
2014-10-31 20:42:19	cbreak	read up on thunks.
2014-10-31 20:42:25		arescorpio (~arescorpi@227-206-17-190.fibertel.com.ar) has quit (Read error: Connection reset by peer)
2014-10-31 20:42:37		Leftas (~leftas@91.228.84.180) has quit (Read error: Connection reset by peer)
2014-10-31 20:42:44	gravy_	im kidding im sorry
2014-10-31 20:42:58		Leftas (~leftas@91.228.84.180) has joined ##c++
2014-10-31 20:43:06	pi-	LunarJetman: it provides context, at no expense to clarity. I think it was a well formed question.
2014-10-31 20:43:08		lamefun (~lamefun2@37.113.49.73) has joined ##c++
2014-10-31 20:43:19	LunarJetman	such context is irrelevent
2014-10-31 20:43:24	LunarJetman	ask question in C++ terms only
2014-10-31 20:43:36	gravy_	+1, it doesn't matter what the purpose is, only what you're trying to do in terms of C++
2014-10-31 20:43:54	Oxyd	!member function callback in c
2014-10-31 20:43:55	nolyc	If your C API exposes void reg(void(*)(void*),void*); and you want it to call x.f(), define void tramp(void*p){static_cast<X*>(p)->f();} and then do reg(tramp,&x);
2014-10-31 20:43:59	gravy_	Like "I'm trying to pass a class to a function of a class which includes that same class, so does the other"
2014-10-31 20:44:04	Oxyd	Would you look at that, we have a factoid for exactly this.
2014-10-31 20:44:25	gravy_	lol
2014-10-31 20:44:26	gravy_	tramp
2014-10-31 20:44:39	LunarJetman	we are talking about trampolines
2014-10-31 20:44:48	pi-	Thanks Oxyd
2014-10-31 20:45:03	Oxyd	!pthread member function
2014-10-31 20:45:04	nolyc	template <class T, void (T:: * mf) ()> void * thunk (void * const p) { (static_cast<T *>(p)->*mf)(); return 0; } struct S { void f () {} }; int main () { S s; pthread_t t; pthread_create(&t, 0, thunk<S, &S::f>, &s); pthread_join(t, 0); }
2014-10-31 20:45:08	Oxyd	We have two factoids, apparently.
2014-10-31 20:45:17	gravy_	sorry, i havent slept, i thought that was about parameters being passed around
2014-10-31 20:45:19	Oxyd	This is amazing, because I've never seen anyone use them.
2014-10-31 20:45:33	Oxyd	The pthread one is nicely generic.
2014-10-31 20:46:33		a_le (~a_le@mobile-166-171-250-122.mycingular.net) has quit (Read error: Connection reset by peer)
2014-10-31 20:47:42	pi-	Oxyd: that's great! How exciting ;)
2014-10-31 20:48:29		a_le (~a_le@218.sub-70-197-6.myvzw.com) has joined ##c++
2014-10-31 20:49:50	pi-	How do you guys know what keys to feed nolyc?
2014-10-31 20:50:08	Oxyd	There's
2014-10-31 20:50:10	Oxyd	!fs member
2014-10-31 20:50:10	nolyc	Key search for "member" (9 found): "class member initializer", "member function callback in c", "memberpointer", "nonmember", "nonmemberphobia", "pthread member function", "static members", "template member function", and "template virtual member function"
2014-10-31 20:50:28	Oxyd	And also you memorise a factoid after you've seen it fifty times.
2014-10-31 20:51:11		plitter (~plitter@84.48.49.52) has quit (Read error: Connection reset by peer)
2014-10-31 20:52:09		plitter (~plitter@84.48.49.52) has joined ##c++
2014-10-31 20:52:32		hexagoxel_ (~hexagoxel@kiel-4d066eb9.pool.mediaways.net) has quit (Quit: Ex-Chat)
2014-10-31 20:52:50		a_le (~a_le@218.sub-70-197-6.myvzw.com) has quit (Ping timeout: 245 seconds)
2014-10-31 20:53:21		Frisky-Ka (SomeWhere@2.126.50.175) has joined ##c++
2014-10-31 20:53:40	gravy_	So I read someone mention that Visual C++ is not real C++. Why is that so?
2014-10-31 20:53:40		ranu (~RAFAEL@177-190-224-67.mconline.com.br) has quit (Quit: Leaving.)
2014-10-31 20:54:49	Oxyd	Visual C++ is an IDE, and C++ is language.
2014-10-31 20:55:57	gravy_	I think they meant the windows C++ compiler...
2014-10-31 20:55:59		FriskyKat (SomeWhere@94.6.35.28) has quit (Ping timeout: 265 seconds)
2014-10-31 20:56:06	gravy_	however that about puts it into place.
2014-10-31 20:56:40		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-10-31 20:56:53		ranu (~RAFAEL@177-190-224-67.mconline.com.br) has joined ##c++
2014-10-31 20:57:23		Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has quit (Read error: Connection reset by peer)
2014-10-31 20:57:27	ranu	 gravy_ they do not comply completely to the standart
2014-10-31 20:57:37	ranu	And the .net C++ its a little bit different
2014-10-31 20:57:46	ranu	We have more keywords to work with CLR.
2014-10-31 20:58:09	gravy_	ranu, anything that might get noticed?
2014-10-31 20:58:15		zima (zima@c75.152.27-202.clta.globetrotter.net) has quit (Quit: zima)
2014-10-31 20:58:27		fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-10-31 20:58:30	ranu	What do you mean by: ¨might get noticed¨?
2014-10-31 20:58:49	gravy_	If, say, you don't go too deeply would you notice the differences?
2014-10-31 20:59:04	gravy_	I'm not sure how to... I mean, what's different and why is that
2014-10-31 20:59:13		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-10-31 20:59:15		arescorpio (~arescorpi@227-206-17-190.fibertel.com.ar) has joined ##c++
2014-10-31 20:59:37	ranu	No, if you do not go deeply (your definition of deeply could be different than mine) you won't notice anything
2014-10-31 21:00:06		deekej (~deekej@195.65.3.245) has joined ##c++
2014-10-31 21:00:12		Leftas (~leftas@91.228.84.180) has quit (Ping timeout: 255 seconds)
2014-10-31 21:00:55	gravy_	http://msdn.microsoft.com/en-us/library/x84h5b78.aspx I wouldn't notice these.
2014-10-31 21:01:59	Oxyd	Does it do variadic templates already?
2014-10-31 21:02:05	ranu	I dunno
2014-10-31 21:02:09	ranu	gravy_: so go ahead ;)
2014-10-31 21:02:31	Oxyd	Variadic templates are one big C++ feature that Microsoft's compiler didn't support until recently. Maybe they still don't, I don't know.
2014-10-31 21:02:35	gravy_	I just wanted to see if it would be sensible to rip on vc++
2014-10-31 21:02:41		flodin (mattias@codepentry.com) has quit (Ping timeout: 258 seconds)
2014-10-31 21:02:42	ranu	Oxyd: I agree with you
2014-10-31 21:02:51	gravy_	These aren't too bad so I can't really.
2014-10-31 21:02:56	ranu	gravy_: to the C++ world, it is.
2014-10-31 21:03:28	gravy_	I feel like I should learn C before touching C++
2014-10-31 21:03:42	ranu	!C
2014-10-31 21:03:44	nolyc	C is an old byte processing language without templates, exceptions, namespaces, constructors/destructors (and therefore RAII), virtual function polymorphism, references, operator/function overloading, reusable standard generic containers, or explicitly named casts.
2014-10-31 21:03:58	ranu	Do whatever you fell good :p
2014-10-31 21:04:05	gravy_	Or learn all of those.
2014-10-31 21:04:10	Oxyd	Learning C will only teach you C-isms, and then you'll have to bash your head against your desk repeatedly to forget them.
2014-10-31 21:04:14	--	Frisky-Ka is now known as FriskyKat
2014-10-31 21:04:36	gravy_	I take it back then.
2014-10-31 21:05:14	gravy_	I find templates puzzling, I can't think of an example where a template would fit more than anything else yet I am fine with using templates in vectors, it's very strange to me.
2014-10-31 21:05:37	gravy_	oh f*c google contained the world "metaprogramming"
2014-10-31 21:06:22	ranu	Grab a book about C++ templates and you gonna see what it is capable of
2014-10-31 21:07:06	ranu	I have here "C++ Templates The Complete Guide" I think it is on the C++ book list on stackoverflow
2014-10-31 21:07:11	ranu	It's amazing
2014-10-31 21:07:31		Amaranth (~travis@ubuntu/member/Amaranth) has quit (Ping timeout: 265 seconds)
2014-10-31 21:07:44	gravy_	I haven't even read any classical literature to the end :C
2014-10-31 21:08:02	ranu	Exception C++ of Herb Sutter it's also another great book.
2014-10-31 21:08:03	gravy_	SHould just man up and start reading books to the end...
2014-10-31 21:08:38	ranu	Exceptional*
2014-10-31 21:10:06		kailoAtWork (~kailoAtWo@208.184.77.122) has quit (Quit: This computer has gone to sleep)
2014-10-31 21:10:12	gravy_	I'll finish reading Intro to 64 Bit Assembly for Linux.
2014-10-31 21:11:02	gravy_	exceptional C++ sounds woo
2014-10-31 21:11:22		condy (~condy@2001:da8:4004:251:3e97:eff:fe2d:1e82) has joined ##c++
2014-10-31 21:12:09		medgno (~medgno@67-3-30-215.dlth.qwest.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-10-31 21:15:10		Leoneof` (~Leoneof@unaffiliated/leoneof) has quit (Read error: Connection reset by peer)
2014-10-31 21:17:32		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-10-31 21:17:45		nda_ (~nda_@68.216.16.62.customer.cdi.no) has quit (Ping timeout: 255 seconds)
2014-10-31 21:17:46		Leoneof (~Leoneof@unaffiliated/leoneof) has joined ##c++
2014-10-31 21:18:39		Extreme (extreme7@unaffiliated/extreme7) has quit (Ping timeout: 255 seconds)
2014-10-31 21:19:33		surd (~surd@unaffiliated/surd) has joined ##c++
2014-10-31 21:19:34		deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-10-31 21:20:19		codebrainz (~codebrain@S0106687f74ddf92f.vn.shawcable.net) has quit (Read error: Connection reset by peer)
2014-10-31 21:20:47		dardevelin (~dardeveli@unaffiliated/dardevelin) has quit (Quit: Leaving)
2014-10-31 21:20:53		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-10-31 21:21:16		codebrainz (~codebrain@S0106687f74ddf92f.vn.shawcable.net) has joined ##c++
2014-10-31 21:24:11		TomyLobo (~TomyLobo@ip5b417367.dynamic.kabel-deutschland.de) has quit (Quit: Standby mode...)
2014-10-31 21:24:30		j0hnsm1th (~jubei@105-237-236-79.access.mtnbusiness.co.za) has joined ##c++
2014-10-31 21:24:34		Extreme (extreme7@unaffiliated/extreme7) has joined ##c++
2014-10-31 21:26:26		hyperair (~hyperair@ubuntu/member/hyperair) has quit (Ping timeout: 250 seconds)
2014-10-31 21:27:31		surd (~surd@unaffiliated/surd) has quit (Ping timeout: 260 seconds)
2014-10-31 21:29:22		Carbonflux (~BOB@75-172-120-225.tukw.qwest.net) has joined ##c++
2014-10-31 21:31:29		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-10-31 21:34:50		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-10-31 21:35:13	lamefun	can C++ generate default Constructor(member1, member2, ...)?
2014-10-31 21:37:33		Kirrahe (~kirrahe@ip51cc442b.adsl-surfen.hetnet.nl) has quit (Ping timeout: 265 seconds)
2014-10-31 21:38:31	o11c	lamefun: in C++14 NSDMIs no longer prevent aggregate init
2014-10-31 21:38:53	o11c	of course that doesn't help with std::make_*()
2014-10-31 21:40:52		PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Quit: ChatZilla 0.9.91 [Firefox 32.0.3/20140923175406])
2014-10-31 21:41:57		Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-10-31 21:43:29		uncreative (~uncreativ@sea-ex10.sea.popcap.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-10-31 21:43:44		gravy_ (~gravy@89.201.9.229) has quit (Remote host closed the connection)
2014-10-31 21:45:08		LunarJetman (LunarJetma@2.221.166.187) has quit (Quit: LunarJetman)
2014-10-31 21:45:30		ravingraven (~George@p5DC3CC01.dip0.t-ipconnect.de) has quit (Ping timeout: 250 seconds)
2014-10-31 21:47:01		lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-10-31 21:47:44		pfo__ (~pfo@chello084114049188.14.vie.surfer.at) has joined ##c++
2014-10-31 21:50:05		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-10-31 21:53:26		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-10-31 21:57:50		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-10-31 22:00:45		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-10-31 22:02:15		sze (~sze@c-24-19-210-87.hsd1.wa.comcast.net) has joined ##c++
2014-10-31 22:04:13		astrofog (~astrofog@93-87-197-238.dynamic.isp.telekom.rs) has joined ##c++
2014-10-31 22:04:20		Amaranth (~travis@ubuntu/member/Amaranth) has joined ##c++
2014-10-31 22:06:23		k0nichiwa (~jdoe@wsip-174-77-238-66.ga.at.cox.net) has joined ##c++
2014-10-31 22:06:39		elveni (~JM@37.187.216.202) has left ##c++
2014-10-31 22:06:57	k0nichiwa	in a muly-cpu machine , a process with multiple threads must have all thread son the same cpu ?
2014-10-31 22:08:14		leeN (~leeN@e180209035.adsl.alicedsl.de) has quit (Ping timeout: 255 seconds)
2014-10-31 22:08:24		unK_ (~drunK@78.10.94.252) has quit (Quit: KVIrc 4.3.1 Aria http://www.kvirc.net/)
2014-10-31 22:11:16		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-10-31 22:11:34		liberal (~rocketeer@gateway/tor-sasl/rocketeer) has quit (Ping timeout: 246 seconds)
2014-10-31 22:11:36		Garner (uid38417@gateway/web/irccloud.com/x-bmmsaiiahhfndrsz) has quit (Quit: Connection closed for inactivity)
2014-10-31 22:11:37		Kulrak (kulrak@tlug/member/kulrak) has joined ##c++
2014-10-31 22:14:35		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-10-31 22:14:51		unreal_ (~unreal@unaffiliated/unreal) has joined ##c++
2014-10-31 22:16:22		drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-10-31 22:17:08		unreal (~unreal@unaffiliated/unreal) has quit (Ping timeout: 250 seconds)
2014-10-31 22:19:11		lamefun (~lamefun2@37.113.49.73) has quit (Remote host closed the connection)
2014-10-31 22:20:14		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 256 seconds)
2014-10-31 22:21:17		Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has joined ##c++
2014-10-31 22:21:51	immibis	k0nichiwa: not true
2014-10-31 22:23:28	k0nichiwa	im going to run some code on an amazon cloud instance, it might have say 4 vCPU
2014-10-31 22:23:40	k0nichiwa	trying to determine how many threads
2014-10-31 22:23:42	k0nichiwa	i shoudl use
2014-10-31 22:23:53	k0nichiwa	probably 4
2014-10-31 22:24:30	k0nichiwa	i dont see why if a vcpu had 2 cores they wouldnt just call it 2 vcpu
2014-10-31 22:26:46		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-10-31 22:27:59		liberal (~rocketeer@gateway/tor-sasl/rocketeer) has joined ##c++
2014-10-31 22:29:39		Orion] (~nname@unaffiliated/orion/x-3970838) has quit
2014-10-31 22:30:05		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-10-31 22:32:23		akiress (~weechat@pdpc/supporter/student/akiress) has quit (Quit: WeeChat 1.0.1)
2014-10-31 22:32:38		deekej (~deekej@195.65.3.245) has quit (Remote host closed the connection)
2014-10-31 22:35:51		troulouliou_dev (~troulouli@unaffiliated/troulouliou-dev/x-4757952) has joined ##c++
2014-10-31 22:38:08		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-10-31 22:38:35	troulouliou_dev	hi i have those 2 types :  using TStub = Tr (*)(void *, TArgs...); using TFunc = Tr (*)(TArgs...); how can i create a function that take Tfunc as parameter and return a Tsub with the first parameter set to null ?
2014-10-31 22:39:38	Oxyd	What do you mean by "Tsub with the first parameter set to null"?
2014-10-31 22:39:40		PovAddict (~nicolas@kde/developer/nalvarez) has joined ##c++
2014-10-31 22:40:04		k0nichiwa (~jdoe@wsip-174-77-238-66.ga.at.cox.net) has quit (Read error: Connection reset by peer)
2014-10-31 22:40:05	PovAddict	http://paste.kde.org/pqlc97ymi this compiles in gcc, but says "'x' uses undefined class 'Practice::EntryFilter'" in MSVC, which compiler is right?
2014-10-31 22:40:55	troulouliou_dev	Oxyd, i need to retrurn a pointer to a function to will only call Tfunc and have a function type of TSub
2014-10-31 22:40:55		CEnnis91 (uid3543@gateway/web/irccloud.com/x-nvyvexdpkadeypuy) has quit (Quit: Connection closed for inactivity)
2014-10-31 22:41:07	rfk	i pass an object, say of type A, into the constructor of type B. i'd like to copy the object of A and store it in my instance of B. what's the standard way to do this?
2014-10-31 22:41:13		kurahaupo (~kurahaupo@118.148.160.74) has quit (Quit: Bye)
2014-10-31 22:41:19	Oxyd	troulouliou_dev: Okay, wo what do you mean by "Tsub with the first parameter set to null"?
2014-10-31 22:41:34		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-10-31 22:41:44	Oxyd	What type do you want to return? Tsub? Something else?
2014-10-31 22:42:00	troulouliou_dev	Oxyd, Tsub
2014-10-31 22:42:11	Oxyd	Okay, so what do you mean by "with the first parameter set to null"?
2014-10-31 22:42:44	troulouliou_dev	Oxyd, i need a Tsub Function that will only call Tfunc based on a function template without regards to the first Tsub parameter
2014-10-31 22:42:56	troulouliou_dev	Oxyd, first day with function template here :) be nice
2014-10-31 22:43:16		pfo__ (~pfo@chello084114049188.14.vie.surfer.at) has quit (Ping timeout: 245 seconds)
2014-10-31 22:44:25	Oxyd	Okay, so you return a pointer to a function, and that function calls another one -- which one?
2014-10-31 22:45:23		ac_slater (~weechat@96.237.110.242) has quit (Quit: WeeChat 1.0.1)
2014-10-31 22:46:12		KAHR-Alpha (~Alpha@AReims-652-1-160-194.w81-250.abo.wanadoo.fr) has quit (Ping timeout: 258 seconds)
2014-10-31 22:46:46	troulouliou_dev	Oxyd, i have a constructor for a class; that take a function pointer as parameter Tfunc; within the constructor i want to assign a member  : callback_func_
2014-10-31 22:46:58		c0le (~c0le@59.99.251.45) has joined ##c++
2014-10-31 22:47:00	troulouliou_dev	defined like this TStub callback_func_;
2014-10-31 22:47:03		V-ille (~ville@dsl-olubrasgw1-54fb46-165.dhcp.inet.fi) has quit (Quit: Leaving.)
2014-10-31 22:47:31	troulouliou_dev	and i want to assign callback_func_ to a function that will only call the Tfunc parameter from the constructor
2014-10-31 22:48:20	troulouliou_dev	Oxyd, here is my Class constructor : TestDelegate(Tr (*TFunction)(TArgs...))
2014-10-31 22:48:32	troulouliou_dev	Oxyd, do you get it ?
2014-10-31 22:49:31		TeddyMurray (~Teddy@ip68-108-125-254.lv.lv.cox.net) has joined ##c++
2014-10-31 22:49:42		pfo__ (~pfo@chello084114049188.14.vie.surfer.at) has joined ##c++
2014-10-31 22:52:06		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-10-31 22:52:24	Oxyd	Yeah, I don't think you can quite do that. The callback_func_ would have to know which function to call.
2014-10-31 22:53:38	troulouliou_dev	Oxyd, ha ok i was searching for al the combination possible without success
2014-10-31 22:53:56		BinaryAddicted (~BinaryAdd@194.230.155.182) has quit
2014-10-31 22:54:22	Oxyd	If your callback were std::function<Tr(void*, TArgs...)>, then you could pass it a lambda. But not if it's just a pointer to function.
2014-10-31 22:55:21		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-10-31 22:55:23	troulouliou_dev	Oxyd, yes but i need to keep it as function pointer; i found a working exemple but seems a dirty hack of 200 line of code
2014-10-31 22:56:11	Oxyd	I wonder if the hack really works.
2014-10-31 22:58:19		drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Ping timeout: 240 seconds)
2014-10-31 22:59:42	troulouliou_dev	Oxyd, ok migrating from function pointer toi std::function is pretty transparent will do it then
2014-10-31 22:59:45	troulouliou_dev	Oxyd, thanks
2014-10-31 23:01:09	tunage	I am trying to do a strcmp() to bufferdata. no error in code, but strcmp() fails to pattern match  https://bpaste.net/show/bd66fabe68c7   https://bpaste.net/show/8b74fd71df43
2014-10-31 23:03:28		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-10-31 23:05:32		ValicekB (~tbox@dot.snat.baz.cz) has quit (Ping timeout: 264 seconds)
2014-10-31 23:06:12		ValicekB (~tbox@dot.snat.baz.cz) has joined ##c++
2014-10-31 23:06:43		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-10-31 23:07:51		TheBeerinator (~TheBeerin@c-66-41-147-9.hsd1.mn.comcast.net) has quit
2014-10-31 23:10:42		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-10-31 23:11:49		r3g3x (~r3g3x@unaffiliated/r3g3x) has quit (Quit: Leaving)
2014-10-31 23:13:01		jonbo (~Jonbo123@24-179-41-134.dhcp.leds.al.charter.com) has joined ##c++
2014-10-31 23:13:24	troulouliou_dev	Oxyd with my callback_func_ transdormed to a ::std::function<Tr (void *, TArgs...)> callback_func_;
2014-10-31 23:13:37	troulouliou_dev	Oxyd, how can i now call the Tfunc with a lambda ?
2014-10-31 23:13:39		Kn|t3 (~Kn|t3@106.51.135.146) has joined ##c++
2014-10-31 23:13:40	troulouliou_dev	never used those
2014-10-31 23:14:04		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-10-31 23:14:05	Oxyd	Just pass it a [&] (TArgs... args) { the_function_you_got_in_your_ctor(args...); }
2014-10-31 23:16:05	troulouliou_dev	Oxyd, ha  ok
2014-10-31 23:17:45		fjellfras (~abhijat@122.170.71.193) has joined ##c++
2014-10-31 23:19:06	Oxyd	troulouliou_dev: Like so: http://coliru.stacked-crooked.com/a/90fc0d1161e49b97
2014-10-31 23:22:04		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-10-31 23:22:58		ruler501 (~ruler501@pool-71-252-174-45.dllstx.fios.verizon.net) has joined ##c++
2014-10-31 23:23:19		k0nichiwa (~jdoe@wsip-174-77-238-66.ga.at.cox.net) has joined ##c++
2014-10-31 23:23:28	k0nichiwa	ugh whats the channel for tools
2014-10-31 23:24:00	PovAddict	##c++-general?
2014-10-31 23:24:21	PovAddict	or what kind of tools?
2014-10-31 23:24:57	ruler501	I'm getting a seg fault in std::_Rb_treee::_M_begin(this = 0x0) the stack trace leads me back to my code where I use the [] operator on a std::map. Any idea what I'm doing wrong?
2014-10-31 23:25:26		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-10-31 23:25:46		McMAGIC--Copy (~McMAGIC--@gateway/tor-sasl/mcmagic--copy) has quit (Ping timeout: 246 seconds)
2014-10-31 23:26:02		Cirus (~Cirus@2601:9:80:101c:ade5:d63a:aeb9:aba3) has quit (Read error: Connection reset by peer)
2014-10-31 23:26:28		Cirus (~Cirus@2601:9:80:101c:ade5:d63a:aeb9:aba3) has joined ##c++
2014-10-31 23:27:09	k0nichiwa	jus a moment of frustration that installig clang++ didnt give me libc++ or ld
2014-10-31 23:28:22		McMAGIC--Copy (~McMAGIC--@gateway/tor-sasl/mcmagic--copy) has joined ##c++
2014-10-31 23:29:36		Kulrak (kulrak@tlug/member/kulrak) has quit (Ping timeout: 244 seconds)
2014-10-31 23:31:53		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-10-31 23:33:11	troulouliou_dev	Oxyd, doi need to do anything special in the destructor to free the lambda somehow ? or just callback_func = nullptr is ok ?
2014-10-31 23:33:26	Oxyd	troulouliou_dev: You don't need to do anything at all.
2014-10-31 23:33:55		o-O-o (36f0c4b9@gateway/web/freenode/ip.54.240.196.185) has quit (Ping timeout: 246 seconds)
2014-10-31 23:34:12	troulouliou_dev	Oxyd, it is store on some kind of executable heap ? (last question will go on reading further )
2014-10-31 23:34:57	Oxyd	troulouliou_dev: The lambda is stored inside your object. Whatever that lambda does -- whether it allocate some space from somewhere -- is completely unspecified.
2014-10-31 23:35:15		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-10-31 23:35:20		ra4king (~ra4king@unaffiliated/ra4king) has quit (Excess Flood)
2014-10-31 23:35:37		ra4king (~ra4king@unaffiliated/ra4king) has joined ##c++
2014-10-31 23:36:00	troulouliou_dev	Oxyd, big thanks you really helped a lot
2014-10-31 23:36:07	Oxyd	Well, actually I'm talking about std::function here. The lambda itself will be just a struct closure { TFunc f; Tr operator () (void*, TArgs...); };
2014-10-31 23:36:41		Scruffyfurn (~Scruffyfu@CPEb89bc9d1fc50-CMb89bc9d1fc4d.cpe.net.cable.rogers.com) has joined ##c++
2014-10-31 23:36:56	Oxyd	std::function likely will allocate something as part of its type erasure. But that's not for you to care about.
2014-10-31 23:37:27		PovAddict (~nicolas@kde/developer/nalvarez) has quit (Quit: sleep)
2014-10-31 23:39:38		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-10-31 23:42:59		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-10-31 23:43:19		Kulrak (kulrak@tlug/member/kulrak) has joined ##c++
2014-10-31 23:45:03		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-10-31 23:47:23		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-10-31 23:50:34		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-10-31 23:52:16		plitter (~plitter@84.48.49.52) has quit (Read error: Connection reset by peer)
2014-10-31 23:53:19	troulouliou_dev	Oxyd, any ida how i can now compare 2 callback_func within an == operator redifinition ?
2014-10-31 23:53:27		plitter (~plitter@84.48.49.52) has joined ##c++
2014-10-31 23:54:54		schleppel (~quassel@141.39.226.237) has quit (Ping timeout: 255 seconds)
2014-10-31 23:55:18		surd (~surd@unaffiliated/surd) has joined ##c++
2014-10-31 23:55:26		Kulrak (kulrak@tlug/member/kulrak) has quit (Ping timeout: 256 seconds)
2014-10-31 23:55:54		schleppel (~quassel@141.39.226.237) has joined ##c++
2014-10-31 23:56:18	Oxyd	I don't think you can compare std::function's.
2014-10-31 23:57:33	o11c	it doesn't reallly make sense
2014-10-31 23:58:43	--	Draculrike is now known as Ulrike_Rayne
2014-11-01 00:00:05		b0lt (~r00t@unaffiliated/bolt) has quit (Ping timeout: 265 seconds)
2014-11-01 00:00:32		ranu (~RAFAEL@177-190-224-67.mconline.com.br) has quit (Quit: Leaving.)
2014-11-01 00:02:53		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-01 00:02:58		Longlius (~longlius@c-69-247-183-18.hsd1.tn.comcast.net) has joined ##c++
2014-11-01 00:03:56	troulouliou_dev	Oxyd, so i can't comare 2 class that have a std::function<> member  ?
2014-11-01 00:05:04	Oxyd	You can, but the comparison won't include those std::function members.
2014-11-01 00:06:07		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-01 00:06:49	troulouliou_dev	Oxyd, in this constructor: Delegate(Tr (*TFunction)(TArgs...)) : callee_(nullptr), callback_func_{[&] (void*, TArgs... args) { return TFunction; }}{} is there a way to create  a hash based on callback_func or i just used Tfunction as hash parameter
2014-11-01 00:07:18		irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has quit (Quit: Lost terminal)
2014-11-01 00:08:32	Oxyd	You could just store TFunction itself.
2014-11-01 00:09:13	Oxyd	You could perhaps store just TFunction, and then create the std::function with the lambda only when you need it.
2014-11-01 00:09:33	troulouliou_dev	Oxyd, ok
2014-11-01 00:12:04		kadoban (~kadoban@ip68-3-81-129.ph.ph.cox.net) has joined ##c++
2014-11-01 00:12:23		Kulrak (kulrak@tlug/member/kulrak) has joined ##c++
2014-11-01 00:13:06		b0lt (~r00t@unaffiliated/bolt) has joined ##c++
2014-11-01 00:14:02		surd (~surd@unaffiliated/surd) has quit (Ping timeout: 244 seconds)
2014-11-01 00:14:14		surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-01 00:15:30		basic6_ (~basic6@p4FCB41D0.dip0.t-ipconnect.de) has joined ##c++
2014-11-01 00:17:08		jaafar (~quassel@c-98-240-139-5.hsd1.mn.comcast.net) has joined ##c++
2014-11-01 00:17:24		fjellfras (~abhijat@122.170.71.193) has quit (Quit: fjellfras)
2014-11-01 00:18:29		arescorpio (~arescorpi@227-206-17-190.fibertel.com.ar) has quit (Excess Flood)
2014-11-01 00:18:50		Burgundy (~burgundy@188.25.138.224) has quit (Ping timeout: 240 seconds)
2014-11-01 00:19:12		basic6 (~basic6@p4FCB6547.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2014-11-01 00:21:01		hyperair (~hyperair@ubuntu/member/hyperair) has joined ##c++
2014-11-01 00:23:02		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-01 00:23:13		surd (~surd@unaffiliated/surd) has quit (Ping timeout: 256 seconds)
2014-11-01 00:23:23		surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-01 00:25:49		w41_ (~w41@unaffiliated/w41) has quit (Quit: Lost terminal)
2014-11-01 00:26:25		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-01 00:29:54		Streusel (~Anonymous@unaffiliated/streusel) has quit (Ping timeout: 272 seconds)
2014-11-01 00:32:01		mangekyo (~4325tsdf@14-201-217-28.tpgi.com.au) has quit (Ping timeout: 245 seconds)
2014-11-01 00:32:21		rawfodog (~rawfodog@modemcable186.163-59-74.mc.videotron.ca) has joined ##c++
2014-11-01 00:34:55		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-01 00:35:14		titanium17 (~titanium1@cpe-74-74-174-117.rochester.res.rr.com) has joined ##c++
2014-11-01 00:35:50		madiz (madist@unaffiliated/madist) has joined ##c++
2014-11-01 00:36:49		TeddyMurray (~Teddy@ip68-108-125-254.lv.lv.cox.net) has quit (Ping timeout: 265 seconds)
2014-11-01 00:37:51		madist (madist@unaffiliated/madist) has quit (Ping timeout: 245 seconds)
2014-11-01 00:38:14		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-01 00:40:26		mangekyo (~4325tsdf@14-201-217-28.tpgi.com.au) has joined ##c++
2014-11-01 00:43:01	marvimias	Anyone up for a fun challenge? So a tato is an recursive acronym which expands to 'tato and tato only'. http://pastebin.com/Uf8d9MTv Here is my solution: http://pastebin.com/6pLBa8U6
2014-11-01 00:43:03		rawfodog (~rawfodog@modemcable186.163-59-74.mc.videotron.ca) has quit (Ping timeout: 256 seconds)
2014-11-01 00:46:17		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-01 00:46:44		jfeltz (~beefcube@174-16-134-24.hlrn.qwest.net) has joined ##c++
2014-11-01 00:47:00	jfeltz	what is this? "0123456789abcdef"[dist(e)]
2014-11-01 00:47:18	jfeltz	not th result, I'm just wondering what that is syntactically
2014-11-01 00:47:33	moonchild	something that picks a random hex digit
2014-11-01 00:48:08	jfeltz	is [] overloaded or something?
2014-11-01 00:48:19	jfeltz	don't get it :(
2014-11-01 00:48:44	o11c	"" is a const char[17], which you can do operator[] on ...
2014-11-01 00:49:01	o11c	a[b] is equivalent to *(a + b)
2014-11-01 00:49:21	o11c	which decays the first arg into a 'const char *'
2014-11-01 00:49:31	jfeltz	ahhh
2014-11-01 00:49:33	jfeltz	forgot about that
2014-11-01 00:49:37		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-01 00:51:24		govg (~govg@unaffiliated/govg) has joined ##c++
2014-11-01 00:52:47		jaafar (~quassel@c-98-240-139-5.hsd1.mn.comcast.net) has quit (Ping timeout: 244 seconds)
2014-11-01 00:55:46		devbug (~quassel@d108-180-247-142.bchsia.telus.net) has joined ##c++
2014-11-01 00:57:22		vocodork_ (~vocoder@94-227-99-249.access.telenet.be) has quit (Quit: http://viennaensemblepro.com | http://viennamirpro.com)
2014-11-01 00:57:32		SiGe (~SiGe@usc-secure-wireless-088-042.usc.edu) has joined ##c++
2014-11-01 01:00:14		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-01 01:01:37		troulouliou_dev (~troulouli@unaffiliated/troulouliou-dev/x-4757952) has quit (Remote host closed the connection)
2014-11-01 01:01:52		SiGe (~SiGe@usc-secure-wireless-088-042.usc.edu) has quit (Ping timeout: 255 seconds)
2014-11-01 01:01:57		hyperair (~hyperair@ubuntu/member/hyperair) has quit (Ping timeout: 256 seconds)
2014-11-01 01:02:40		fjellfras (~abhijat@122.170.71.193) has joined ##c++
2014-11-01 01:03:32		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-01 01:06:11		skaag (~finux@static-100-32-2-115.lsanca.fios.verizon.net) has joined ##c++
2014-11-01 01:06:32	skaag	This isn't valid in C++?  void set_pwm( address, state ) {}
2014-11-01 01:06:43	skaag	it works in C
2014-11-01 01:07:05	skaag	do I have to specify the types of those function parameters?
2014-11-01 01:07:15	hs_	yes you do
2014-11-01 01:07:21	skaag	gotcha… my bad.
2014-11-01 01:07:45	o-0-o	:D
2014-11-01 01:09:27	skaag	can I link to a .o produced using regular C?
2014-11-01 01:09:27		blackwind_123 (~IceChat9@117.192.148.132) has quit (Read error: Connection reset by peer)
2014-11-01 01:10:00	skaag	I included a header file, and I'm linking with -lm i2c.o and getting this error: undefined reference to `I2C_Open(int*, unsigned char)'
2014-11-01 01:10:09	skaag	I'm not even sure if my questions are proper for this channel tbh
2014-11-01 01:10:17	skaag	so I apologize in advance
2014-11-01 01:10:53		BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has joined ##c++
2014-11-01 01:11:56		BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has quit (Client Quit)
2014-11-01 01:12:18		b1rkh0ff (~b1rkh0ff@cable-146-255-146-83.dynamic.telemach.ba) has joined ##c++
2014-11-01 01:12:40		ObjectiveMatt (~Objective@66.87.151.97) has joined ##c++
2014-11-01 01:12:48		ObjectiveMatt (~Objective@66.87.151.97) has quit (Max SendQ exceeded)
2014-11-01 01:15:30		ObjectiveMatt (~Objective@66.87.151.97) has joined ##c++
2014-11-01 01:15:35		tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has quit (Quit: computer sleeping)
2014-11-01 01:15:39		blackwind_123 (~IceChat9@117.202.30.4) has joined ##c++
2014-11-01 01:15:43		Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 258 seconds)
2014-11-01 01:17:48		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-01 01:18:09		yeticry (~yeticry@60.168.92.92) has quit (Ping timeout: 264 seconds)
2014-11-01 01:18:12		rol31 (~bf3@tsn77-247-182-241.dyn.nltelcom.net) has quit (Quit: leaving)
2014-11-01 01:18:27	skaag	ok it appears to be some binary format incompatibility between .o files compiled with gcc vs. g++
2014-11-01 01:18:39	skaag	I compiled that same i2c.c with g++ into i2c.o and that works
2014-11-01 01:19:23		yeticry (~yeticry@60.168.92.92) has joined ##c++
2014-11-01 01:20:46		k0nichiwa (~jdoe@wsip-174-77-238-66.ga.at.cox.net) has quit (Ping timeout: 255 seconds)
2014-11-01 01:22:07		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-01 01:22:12	skaag	what's wrong with this? ( ( ( (unsigned long) clock() - start_time ) / CLOCKS_PER_SEC) < timeout_seconds )
2014-11-01 01:24:12		Kn|t3 (~Kn|t3@106.51.135.146) has quit (Quit: Kn|t3)
2014-11-01 01:27:58		Kn|t3 (~Kn|t3@106.51.135.146) has joined ##c++
2014-11-01 01:30:09		Textmode (~boneidle@adsl-1-au-2-174.ozonline.com.au) has joined ##c++
2014-11-01 01:30:09		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-01 01:30:34	o-0-o	clock(). argh
2014-11-01 01:31:05		phillips1012 (~phillips1@72.42.104.172) has joined ##c++
2014-11-01 01:31:12		phillips1012 (~phillips1@72.42.104.172) has quit (Max SendQ exceeded)
2014-11-01 01:31:51		surd (~surd@unaffiliated/surd) has quit (Read error: Connection reset by peer)
2014-11-02 11:13:11		dagnachew (~dagnachew@bas1-montreal30-2925416228.dsl.bell.ca) has joined ##c++
2014-11-02 11:13:11	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-11-02 11:13:11	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-11-02 11:13:11	--	Channel ##c++: 554 nicks (0 ops, 0 voices, 554 normals)
2014-11-02 11:13:11	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-11-02 11:13:26	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-11-02 11:13:33		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-02 11:13:39		surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-02 11:13:58		ObjectiveMatt (~Objective@66.87.151.77) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-11-02 11:14:04		Haswell (~Haswell@unaffiliated/haswell) has joined ##c++
2014-11-02 11:14:35		D0cN3x (~Thunderbi@dslb-178-007-222-181.178.007.pools.vodafone-ip.de) has joined ##c++
2014-11-02 11:15:06	Scellow	damn why the fuck in cpp header and source are two separate file arghhh this is killing, always 2 same file ..
2014-11-02 11:15:16		jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has joined ##c++
2014-11-02 11:15:59	Scellow	it's a machine language not for humains
2014-11-02 11:16:10		hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-11-02 11:16:17	TinoDidriksen	You don't have to have 2 separate files. You can make header-only code.
2014-11-02 11:16:40		D0cN3x (~Thunderbi@dslb-178-007-222-181.178.007.pools.vodafone-ip.de) has quit (Client Quit)
2014-11-02 11:16:57	TinoDidriksen	Also, "2 same file" ... the contents should be rather different, or you're doing something odd.
2014-11-02 11:17:22	Scellow	Then why cpp exist if we can use only h ? i don't get that
2014-11-02 11:17:32		FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-02 11:17:32	kevr	is there a way to bind a variadic templated function as a function pointer?
2014-11-02 11:17:47		stdvector (~stdvector@gateway/tor-sasl/stdvector) has quit (Remote host closed the connection)
2014-11-02 11:18:00	kevr	s/as/to/
2014-11-02 11:19:51	seishun	Scellow: if you put a function in a cpp file, it only needs to be compiled once. If you put it in a header, then it would need to be compiled each time it's included somewhere
2014-11-02 11:19:53		S1lent (~MrS1lentc@ip-78-45-166-4.net.upcbroadband.cz) has quit (Read error: Connection reset by peer)
2014-11-02 11:21:47		Scellow (~quassel@ip-249.net-89-2-143.rev.numericable.fr) has quit (Remote host closed the connection)
2014-11-02 11:21:54		rcxdude (~rcxdude@cpc14-cmbg15-2-0-cust644.5-4.cable.virginm.net) has joined ##c++
2014-11-02 11:22:06		Scellow (~quassel@ip-249.net-89-2-143.rev.numericable.fr) has joined ##c++
2014-11-02 11:23:02		Cirus (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has joined ##c++
2014-11-02 11:23:05	Scellow	seishun: hmm i see, how to you manage your workspace then ?  h & cpp side by side , or a folder with headers, and a folder with sources?
2014-11-02 11:23:11	zap0	Scellow, numbers go  0,1,many.    0 copies of something is safe.  1 copy of something is safe. many copies of something is confusing as to which is the right one.
2014-11-02 11:23:16		vocodork (~vocoder@94-227-99-249.access.telenet.be) has joined ##c++
2014-11-02 11:23:47	zap0	Scellow, given you can include a .h into MANY files, that makes it a many-copies problem.
2014-11-02 11:23:58		MrSavage (MrSavage@162.223.44.49) has quit (Read error: Connection reset by peer)
2014-11-02 11:24:04		CalimeroTeknik (~calimero@pradic.tonbnc.fr) has joined ##c++
2014-11-02 11:24:14		MrSavage (MrSavage@162.223.44.49) has joined ##c++
2014-11-02 11:25:13		phao (~phao@186-244-93-36.user.veloxzone.com.br) has joined ##c++
2014-11-02 11:25:21	Scellow	zap0: i see, but it's annoying to manage :/
2014-11-02 11:26:17		SlashLife (~slashlife@botters/slashlife) has quit (Ping timeout: 272 seconds)
2014-11-02 11:26:43	seishun	Scellow: usually .h files go into /include/, source files go into /src/
2014-11-02 11:27:07	seishun	but it's not set in stone
2014-11-02 11:27:10		Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-11-02 11:27:15	vocodork	seishun: some ides don't like that too much in terms of switching between header/source
2014-11-02 11:27:47	vocodork	seishun: makes sense for libs tho
2014-11-02 11:28:02		unknown64 (~unknown64@unaffiliated/unknown64) has joined ##c++
2014-11-02 11:28:39		tz (~tz@zero.tzarc.ninja) has quit (Quit: Someone hacked the Gibson :()
2014-11-02 11:28:50	Scellow	i use to create folders for each specific part of my program, i come from c#, this sound really strange to put them in different location.. this will be hard to manage..
2014-11-02 11:29:10	vocodork	Scellow: you can keep h/cpp together just fine
2014-11-02 11:29:34	TinoDidriksen	How you organize your C++ project is entirely up to you.
2014-11-02 11:29:36		tz (~tz@zero.tzarc.ninja) has joined ##c++
2014-11-02 11:29:38	vocodork	yup
2014-11-02 11:30:12		Loggan (~Loggan@unaffiliated/loggan) has quit (Read error: Connection reset by peer)
2014-11-02 11:30:22	vocodork	Scellow: what concrete issue are you struggling with?
2014-11-02 11:32:29	Scellow	vocodork: workspace management, having to write h + cpp + filling the files + switching both files to check them, is really really really annoying, c# is just one file and tada, i feel like it's not productive at all, i spend more time fixing this than writing real code, i'm learning c++ and it's a brake for me, i might just stick with c# for a bit
2014-11-02 11:32:31		unknown64 (~unknown64@unaffiliated/unknown64) has quit (Client Quit)
2014-11-02 11:33:44		SlashLife (~slashlife@botters/slashlife) has joined ##c++
2014-11-02 11:34:24		fjellfras (~abhijat@122.169.23.245) has joined ##c++
2014-11-02 11:35:06	vocodork	Scellow: most ides offer a quick way to switch between declaration and definition
2014-11-02 11:35:15		snyp (~Snyp@14.99.103.202) has quit (Quit: WeeChat 1.0.1)
2014-11-02 11:35:16	hs_	sounds like whining
2014-11-02 11:35:18		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-02 11:35:20	vocodork	Scellow: try to google 'translation unit c++' or so in google
2014-11-02 11:35:34	vocodork	hs_: nah he's just uninformed and accustomed to something else
2014-11-02 11:35:50	hs_	seems a bad attitude to have while "learning c++"
2014-11-02 11:36:03	vocodork	hs_: most people start out with pretty shoddy learning habits :)
2014-11-02 11:36:11		zima (zima@c75.152.27-202.clta.globetrotter.net) has quit (Quit: zima)
2014-11-02 11:36:22	hs_	I am certain of that =]
2014-11-02 11:36:24	Scellow	hs_:  i started to learn programing with c#, switching to c++ is like learning everythin from scratch again
2014-11-02 11:36:38	vocodork	Scellow: nah you have oop foundations, which is good
2014-11-02 11:37:09	vocodork	Scellow: but c++ is just more low level, more power brings along more responsability
2014-11-02 11:37:18	hs_	Scellow, with simple things you can get away with .h files alone
2014-11-02 11:37:27	hs_	Scellow, (and your main.cpp)
2014-11-02 11:38:19		stakewinner00 (~stakewinn@182.115.15.37.dynamic.jazztel.es) has quit
2014-11-02 11:38:49		tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has quit (Quit: computer sleeping)
2014-11-02 11:39:11		Smjert (~Smjert@2-230-17-181.ip199.fastwebnet.it) has joined ##c++
2014-11-02 11:39:29	vocodork	Scellow: personally i like the standard division between header and source
2014-11-02 11:39:38	vocodork	Scellow: a header makes for great selfdocumentation
2014-11-02 11:39:43		surd (~surd@unaffiliated/surd) has quit (Ping timeout: 256 seconds)
2014-11-02 11:39:44	hiptobecubic	vocodork, why?
2014-11-02 11:39:50		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 255 seconds)
2014-11-02 11:39:52		greenbagels (~gb@cpe-65-25-124-183.neo.res.rr.com) has joined ##c++
2014-11-02 11:39:57	hs_	i do as well
2014-11-02 11:40:11		zima (zima@c75.152.27-202.clta.globetrotter.net) has joined ##c++
2014-11-02 11:40:19	hs_	easy to go through a header to get up to speed on what is happening
2014-11-02 11:40:22	vocodork	yea
2014-11-02 11:40:42	vocodork	c# probably offers some way to separate implementation as well
2014-11-02 11:40:42		Apocalypse (~Apocalyps@unaffiliated/apocalypse) has quit (Ping timeout: 250 seconds)
2014-11-02 11:40:57	vocodork	but since most .net/java/... coders shouldn't be coding in the first place...
2014-11-02 11:41:00	hiptobecubic	you can easily just derive the headers from the source though
2014-11-02 11:41:09	vocodork	hiptobecubic: 'easily'
2014-11-02 11:41:33	vocodork	hiptobecubic: tiny code base sure, huge code base and you'll be very thankful you can quickly skip through headers
2014-11-02 11:41:44		ZeMaster (~Non@unaffiliated/zemaster) has joined ##c++
2014-11-02 11:42:06	hiptobecubic	vocodork, what i mean is that there's no reason other than C++ being impossible to parse correctly that you couldn't have a tool that generates a header from a source file
2014-11-02 11:42:12	ZeMaster	Is there something that can cause a signed/unsigned mismatch in vsprintf?
2014-11-02 11:42:23	vocodork	hiptobecubic: yes but that adds another layer of complexity
2014-11-02 11:42:31	vocodork	hiptobecubic: complexity is the one thing to avoid when developing
2014-11-02 11:42:32	hiptobecubic	vocodork, but it also removes one
2014-11-02 11:42:38		Loggan (~Loggan@unaffiliated/loggan) has joined ##c++
2014-11-02 11:42:42	hiptobecubic	a more annoying one, imo
2014-11-02 11:42:44		Amaranth (~travis@ubuntu/member/Amaranth) has quit (Ping timeout: 260 seconds)
2014-11-02 11:43:00	hs_	what does it remove?
2014-11-02 11:43:00	vocodork	hiptobecubic: there's a reason the separation exists
2014-11-02 11:43:09	vocodork	hiptobecubic: severely reduced build times for one
2014-11-02 11:43:15	--	PJBoy is now known as Guest98529
2014-11-02 11:43:21	hs_	I don't have the source code to lots of the things I use
2014-11-02 11:43:28	hiptobecubic	it removes the need for a copy of the program structure in header files when you already have it in source
2014-11-02 11:43:38		dfletcher (~dfletcher@drupal.org/user/72475/view) has joined ##c++
2014-11-02 11:43:39	vocodork	yea any closed-off library is header-only really
2014-11-02 11:43:41	ZeMaster	"[%p](%p) %ld" prints the pointers correctly, but %ld prints 471102608 instead of 2
2014-11-02 11:43:48	hiptobecubic	somehow other languages manage to use libraries without headers just fine.
2014-11-02 11:43:55	vocodork	hiptobecubic: how long have you been programming in c++?
2014-11-02 11:44:22		Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-11-02 11:44:27	hs_	anyway I don't see the need to defend c++ in ##C++ =]
2014-11-02 11:44:31	vocodork	hiptobecubic: other low level languages?
2014-11-02 11:44:38	hs_	I personally like the separation and structure
2014-11-02 11:44:58	vocodork	yea it has grown on me too
2014-11-02 11:45:03	vocodork	also the level of control it offers is pretty nice
2014-11-02 11:45:15	vocodork	though technically it could be omitted, but the build phase would complicate by quite a lot
2014-11-02 11:45:28		PigFlu (~herp@unaffiliated/pigflu) has quit (Quit: dthdrthdrth)
2014-11-02 11:45:54		Guest98529 (~PJBoy@unaffiliated/pjboy) has quit (Ping timeout: 244 seconds)
2014-11-02 11:45:55	micom	i like c++ ,  it gives me salary every month x)
2014-11-02 11:46:14	vocodork	and a decent one too
2014-11-02 11:46:34	hiptobecubic	vocodork, Fortran essentially generates its header-equivalent doesn't it?
2014-11-02 11:46:37	Scellow	micom: because you spend more time to do the same thing in c++ than in c#  :p
2014-11-02 11:46:55	hs_	see, it literally saved micom from a life of male prostitution
2014-11-02 11:46:59	hs_	thanks C++!!
2014-11-02 11:47:01	micom	Scellow, o really? Try to write a embedded software n c# pale
2014-11-02 11:47:06	ZeMaster	Scellow, the lack of control in C# is absurd.
2014-11-02 11:47:19	micom	being a male prostitution would be a nice experience
2014-11-02 11:47:20	micom	hmm
2014-11-02 11:47:23		FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 245 seconds)
2014-11-02 11:47:44	hs_	dodged a !grab there
2014-11-02 11:47:48	hs_	=]
2014-11-02 11:48:02	micom	gotta protect myself;)
2014-11-02 11:48:13	vocodork	hiptobecubic: incidentally academics also tend to be even worse programmers than .net/java/... coders ;)
2014-11-02 11:48:38	vocodork	hiptobecubic: h/cpp separation translates directly into compiler semantics, it's a form of low level control
2014-11-02 11:48:40	hs_	micom I meant to ask you, you were linking some C++17 "looking forward" notes
2014-11-02 11:48:42	zap0	if they could code they'd have "real" jobs
2014-11-02 11:48:51	Scellow	vocodork: java and .net is good
2014-11-02 11:48:52	micom	hs_, yes, yesterday
2014-11-02 11:48:53	hs_	is C++17 slated to be a "major" update as C++11 was? or is that not yet settled?
2014-11-02 11:49:07	Scellow	the language is much more humain readable than c++ imo
2014-11-02 11:49:09	vocodork	Scellow: it's decent for the purpose
2014-11-02 11:49:16	micom	hs_, as far as i know it will be major one,  look at the TS from c++14;)
2014-11-02 11:49:17	vocodork	Scellow: which is software that is not time critical
2014-11-02 11:49:30		adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has joined ##c++
2014-11-02 11:49:31	vocodork	Scellow: rapid deployment of mostly extremely boring applications :)
2014-11-02 11:49:35		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-02 11:50:04	ZeMaster	C# is the language of GUIs, simply put. If you need something that looks nice and is easy to make, C# is your thing
2014-11-02 11:50:14	micom	i plan to be a manager rather than software developer in 2017, so im not into c++17 much
2014-11-02 11:50:16	ZeMaster	But if you need something that looks nice and performs well, then C# sure as hell isn't.
2014-11-02 11:50:17	vocodork	ZeMaster: or Qt if you're using C++
2014-11-02 11:50:26	ZeMaster	I agree vocodork
2014-11-02 11:50:44	ZeMaster	Though since I'm mostly programming in a windows environment, I use the win32 api.
2014-11-02 11:51:00		nyqiust (~nyquist@46.165.210.13) has quit (Remote host closed the connection)
2014-11-02 11:51:04	micom	language which is 100% in private company? You have to be kidding me, dont want to repeat  object-C history
2014-11-02 11:51:27	Scellow	i just wanted to make the comparaison between the syntax, i prefer to write in c# than in c++ FOR SURE!
2014-11-02 11:51:27	ZeMaster	vocodork, another major downside of c# is that it's reflectable.
2014-11-02 11:51:44	vocodork	ZeMaster: how is that a downside? (just curious)
2014-11-02 11:51:51	ZeMaster	Encryption software.
2014-11-02 11:52:18	vocodork	hm are you talking about type reflection then?
2014-11-02 11:52:23	vocodork	not sure i grasp what you're saying
2014-11-02 11:52:25	ZeMaster	Hmm... Perhaps.
2014-11-02 11:52:33	ZeMaster	Not sure what the right term for it is
2014-11-02 11:52:44		nyqiust (~nyquist@178.162.205.28) has joined ##c++
2014-11-02 11:52:47	zap0	micom, i bet you have a nice collection of tin foil hats
2014-11-02 11:52:47	ZeMaster	You can recover the code used in a C# application is what I mean.
2014-11-02 11:53:17	vocodork	yea
2014-11-02 11:53:21	vocodork	though obfuscators exist
2014-11-02 11:53:30	ZeMaster	To the trained eye, they're rather useless.
2014-11-02 11:53:44	vocodork	technically you can disassemble c++ apps too of course
2014-11-02 11:53:51	ZeMaster	Of course
2014-11-02 11:53:53		WormDrink (~WormDrink@unaffiliated/wormdrink) has quit (Ping timeout: 256 seconds)
2014-11-02 11:53:55	micom	zap0, im not a weirdo, just a pragmatic one : (
2014-11-02 11:53:57	micom	guy
2014-11-02 11:54:00	ZeMaster	Though clang makes a gigantic mess of the assembly, lol
2014-11-02 11:54:05	vocodork	it's just that c# intermediate language is closer to the actual language i suppose :)
2014-11-02 11:55:13		vieng095 (~vieng095@c-068ce555.05-23-6c6b7013.cust.bredbandsbolaget.se) has quit (Ping timeout: 265 seconds)
2014-11-02 11:55:42	hiptobecubic	micom, you're *planning* on being one of those managers that doesn't understand what his team is writing?
2014-11-02 11:56:14	micom	hiptobecubic, in my company managers do not look into the code
2014-11-02 11:56:16		Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Ping timeout: 264 seconds)
2014-11-02 11:56:16		MrFlibble (LunarJetma@2.221.166.187) has joined ##c++
2014-11-02 11:56:19	vocodork	hopefully he'll be one of those managers that discourages the use of atrocities like obj-c as much as possible
2014-11-02 11:56:19	--	MrFlibble is now known as LunarJetman
2014-11-02 11:56:20	--	LunarJetman is now known as MrFlibble
2014-11-02 11:56:58		vieng095 (~vieng095@c-068ce555.05-23-6c6b7013.cust.bredbandsbolaget.se) has joined ##c++
2014-11-02 11:57:13	hiptobecubic	micom, sounds great. Presumably there are real managers managing the programmers then? And you're talking about managers managing teams of managers?
2014-11-02 11:57:28	Eelis	!focus
2014-11-02 11:57:29	nolyc	##c++ focuses on C++. Discuss offtopic things elsewhere; ##c++-general or ##c++-social
2014-11-02 11:57:33	micom	hiptobecubic, agile, ok offtopic
2014-11-02 11:57:44	zap0	yo dawg.. managers
2014-11-02 11:58:12		deanrock0 (~deanrock0@cpe-77.38.57.189.cable.t-1.si) has joined ##c++
2014-11-02 11:58:21	Scellow	Eelis: we talk about difference between c++ and c# i still c++ topic
2014-11-02 11:58:30	Scellow	it's
2014-11-02 11:58:33	kevr	c# is alright
2014-11-02 11:58:37	kevr	its better than java
2014-11-02 11:58:43	micom	still retarded
2014-11-02 11:58:46	kevr	and its almost the same
2014-11-02 11:59:02	Scellow	kevr: java is nice ! it works everywhere for free
2014-11-02 11:59:09	Eelis	Scellow: manager culture is offtopic in ##c++
2014-11-02 11:59:17	kevr	tell that to the java mysql library devs
2014-11-02 11:59:26	kevr	that went corp
2014-11-02 11:59:56		Lencl (~Aven@ip68-106-223-14.oc.oc.cox.net) has quit (Ping timeout: 245 seconds)
2014-11-02 12:00:24	Scellow	mysql i hate that too, i hate it much more than having to write h + cpp for the same thing haha
2014-11-02 12:00:31	kevr	=p
2014-11-02 12:00:35	V-ille	which part of !focus do you people not understand?
2014-11-02 12:00:51	kevr	sorry, i'm tired, didn't see.
2014-11-02 12:00:55	 *	kevr shuts the - up
2014-11-02 12:01:21	hiptobecubic	My favorite part of the C++ standard is how the java devs went corp
2014-11-02 12:01:32	Scellow	topic derivation isn't a bad things, let's discuss
2014-11-02 12:01:49		Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-11-02 12:02:25	micom	after one year of war  static_if vs concepts lite i still dont understand why there is no static_if in c++14
2014-11-02 12:02:43	Eelis	because enable_if is so much fun!
2014-11-02 12:04:09		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-02 12:05:10		lamefun (~lamefun2@37.113.49.73) has joined ##c++
2014-11-02 12:05:18		HaltingState (~HaltingSt@unaffiliated/haltingstate) has quit (Ping timeout: 265 seconds)
2014-11-02 12:05:47		lamefun (~lamefun2@37.113.49.73) has quit (Client Quit)
2014-11-02 12:06:05		zap0 (~moofy@123-243-103-30.static.tpgi.com.au) has quit (Quit: zap0)
2014-11-02 12:07:28		plitter (~plitter@84.48.49.52) has quit (Read error: Connection reset by peer)
2014-11-02 12:08:32		pcreighton (~phil@173-26-150-107.client.mchsi.com) has quit (Remote host closed the connection)
2014-11-02 12:08:39		plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-02 12:08:41		nyqiust (~nyquist@178.162.205.28) has quit (Remote host closed the connection)
2014-11-02 12:09:02		Dr_Coke (~Dr_Coke@60-242-153-150.static.tpgi.com.au) has quit (Quit: Leaving)
2014-11-02 12:11:03		nyqiust (~nyquist@178.162.201.97) has joined ##c++
2014-11-02 12:12:14		thecha (tehcha@unaffiliated/thecha) has quit (Ping timeout: 256 seconds)
2014-11-02 12:14:56		rol31 (~bf3@91.108.183.74) has quit (*.net *.split)
2014-11-02 12:14:56		bmt (~bmt@afoh112.neoplus.adsl.tpnet.pl) has quit (*.net *.split)
2014-11-02 12:14:56		basic6 (~basic6@p3E9EE407.dip0.t-ipconnect.de) has quit (*.net *.split)
2014-11-02 12:14:56		Yepoleb (~quassel@178-190-228-72.adsl.highway.telekom.at) has quit (*.net *.split)
2014-11-02 12:14:56		dardevelin (~dardeveli@unaffiliated/dardevelin) has quit (*.net *.split)
2014-11-02 12:14:56		chewyDelicious (~nooblet@124-197-46-119.callplus.net.nz) has quit (*.net *.split)
2014-11-02 12:14:57		ValicekB (~tbox@dot.snat.baz.cz) has quit (*.net *.split)
2014-11-02 12:14:57		pfo__ (~pfo@chello084114049188.14.vie.surfer.at) has quit (*.net *.split)
2014-11-02 12:14:57		xenoph (~module@89.11.172.72) has quit (*.net *.split)
2014-11-02 12:14:57		vol4ko (null@unaffiliated/vol4ko) has quit (*.net *.split)
2014-11-02 12:14:57		aboudreault (~aboudreau@osgeo/member/aboudreault) has quit (*.net *.split)
2014-11-02 12:14:57		gaqwas (~tubi_ga@195.37.61.177) has quit (*.net *.split)
2014-11-02 12:14:57		simius (~simius@h-88-117.a230.priv.bahnhof.se) has quit (*.net *.split)
2014-11-02 12:14:57		Natch (~Natch@c-0ecce155.25-4-64736c10.cust.bredbandsbolaget.se) has quit (*.net *.split)
2014-11-02 12:14:57		Marquel (~Marquel@fuchsfanclub/allerdings/marquel) has quit (*.net *.split)
2014-11-02 12:14:57		McMAGIC--Copy (~McMAGIC--@gateway/tor-sasl/mcmagic--copy) has quit (*.net *.split)
2014-11-02 12:14:57		only_the_bear (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has quit (*.net *.split)
2014-11-02 12:14:57		rocketeer (~rocketeer@gateway/tor-sasl/rocketeer) has quit (*.net *.split)
2014-11-02 12:14:57		rfreeman_w (~rfreeman@gateway/tor-sasl/rfreemanw) has quit (*.net *.split)
2014-11-02 12:14:57		echelon (~echelon@gateway/tor-sasl/harel) has quit (*.net *.split)
2014-11-02 12:14:57		asakura0 (~asakura@gateway/tor-sasl/asakura) has quit (*.net *.split)
2014-11-02 12:14:57		BoredHam1 (~root@gateway/tor-sasl/boredhamster) has quit (*.net *.split)
2014-11-02 12:16:12		clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-02 12:17:05	--	Scarifino is now known as vifino
2014-11-02 12:17:11		klarrt (~dolmen@46-236-87-230.customer.t3.se) has joined ##c++
2014-11-02 12:18:07		fjellfras (~abhijat@122.169.23.245) has quit (Quit: fjellfras)
2014-11-02 12:18:27		rol31 (~bf3@91.108.183.74) has joined ##c++
2014-11-02 12:18:27		bmt (~bmt@afoh112.neoplus.adsl.tpnet.pl) has joined ##c++
2014-11-02 12:18:27		basic6 (~basic6@p3E9EE407.dip0.t-ipconnect.de) has joined ##c++
2014-11-02 12:18:27		Yepoleb (~quassel@178-190-228-72.adsl.highway.telekom.at) has joined ##c++
2014-11-02 12:18:27		rocketeer (~rocketeer@gateway/tor-sasl/rocketeer) has joined ##c++
2014-11-02 12:18:27		dardevelin (~dardeveli@unaffiliated/dardevelin) has joined ##c++
2014-11-02 12:18:27		chewyDelicious (~nooblet@124-197-46-119.callplus.net.nz) has joined ##c++
2014-11-02 12:18:27		20WAADKBL (~pfo@chello084114049188.14.vie.surfer.at) has joined ##c++
2014-11-02 12:18:27		xenoph (~module@89.11.172.72) has joined ##c++
2014-11-02 12:18:27		vol4ko (null@unaffiliated/vol4ko) has joined ##c++
2014-11-02 12:18:27		aboudreault (~aboudreau@osgeo/member/aboudreault) has joined ##c++
2014-11-02 12:18:27		gaqwas (~tubi_ga@195.37.61.177) has joined ##c++
2014-11-02 12:18:27		simius (~simius@h-88-117.a230.priv.bahnhof.se) has joined ##c++
2014-11-02 12:18:27		Natch (~Natch@c-0ecce155.25-4-64736c10.cust.bredbandsbolaget.se) has joined ##c++
2014-11-02 12:18:33		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 255 seconds)
2014-11-02 12:18:40		dardevelin (~dardeveli@unaffiliated/dardevelin) has quit (Max SendQ exceeded)
2014-11-02 12:18:53		rocketeer (~rocketeer@gateway/tor-sasl/rocketeer) has quit (Max SendQ exceeded)
2014-11-02 12:18:56		gelignite (~gelignite@i5387AF8D.versanet.de) has joined ##c++
2014-11-02 12:19:08		dardevelin (~dardeveli@unaffiliated/dardevelin) has joined ##c++
2014-11-02 12:21:33		RangerBob (~bmaddox@pool-173-72-144-130.clppva.fios.verizon.net) has joined ##c++
2014-11-02 12:21:33		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-02 12:21:40		fjellfras (~abhijat@122.169.23.245) has joined ##c++
2014-11-02 12:21:40		simius (~simius@h-88-117.a230.priv.bahnhof.se) has quit (Ping timeout: 256 seconds)
2014-11-02 12:22:49		xenoph (~module@89.11.172.72) has quit (Read error: Connection reset by peer)
2014-11-02 12:24:17		DEElekgolo (~DEElekgol@76-217-145-230.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-02 12:24:49		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-02 12:25:12		HaltingState (~HaltingSt@unaffiliated/haltingstate) has joined ##c++
2014-11-02 12:25:21		Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2014-11-02 12:26:51		yayachiken (~yayachike@host-115-67.kawo1.rwth-aachen.de) has joined ##c++
2014-11-02 12:27:14	V-ille	micom: there is no war, nobody is pushing static_if
2014-11-02 12:27:38	V-ille	and thanks for the reminder, I should do something about that :)
2014-11-02 12:28:23	gravy_	hey
2014-11-02 12:28:25	gravy_	hey guys
2014-11-02 12:28:25	gravy_	https://89.201.9.229/b/uploads/f9d1907069f3c8ca5f01633a474df5f8c725aeb8.png
2014-11-02 12:29:52		ValicekB (~tbox@dot.snat.baz.cz) has joined ##c++
2014-11-02 12:30:10		solrize (~solrize@unaffiliated/solrize) has joined ##c++
2014-11-02 12:30:42		delta-nry (~delta-nry@S0106c8fb2658a55a.vc.shawcable.net) has joined ##c++
2014-11-02 12:31:57	V-ille	!give gravy_ testcase
2014-11-02 12:31:58	nolyc	gravy_: A testcase is the _least_ amount of code that explains your problem, paste it to http://ideone.com and give us the link. Do _not_ paste to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2014-11-02 12:32:15		echelon (~echelon@gateway/tor-sasl/harel) has joined ##c++
2014-11-02 12:32:19	gravy_	Touche V-ille.
2014-11-02 12:34:12		Lowl3v3l (~Lowl3v3l@95.91.248.61) has quit (Quit: Leaving)
2014-11-02 12:34:37	o-0-o	!touch V-ille
2014-11-02 12:34:37	 *	nolyc touches V-ille in a manly way
2014-11-02 12:35:34	o-0-o	gravy_: also C# is off topic here
2014-11-02 12:37:00	gravy_	Sorry :D
2014-11-02 12:38:05		voidstar (~voidptr@unaffiliated/voidstar) has quit (Quit: All great C programmers never die; they are simply cast into void.)
2014-11-02 12:40:20		TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2014-11-02 12:41:06		w4|k3r (~AndChat13@106.51.142.75) has joined ##c++
2014-11-02 12:41:22		McMAGIC--Copy (~McMAGIC--@gateway/tor-sasl/mcmagic--copy) has joined ##c++
2014-11-02 12:43:25		micom (~micom@unaffiliated/micom) has left ##c++ ("Leaving")
2014-11-02 12:43:28		micom (~micom@unaffiliated/micom) has joined ##c++
2014-11-02 12:45:47	micom	https://groups.google.com/a/isocpp.org/forum/?fromgroups#!topic/std-discussion/GpAuzvaqlKE hmm
2014-11-02 12:46:27	Scellow	!touch Scellow
2014-11-02 12:46:28	 *	nolyc touches Scellow in a manly way
2014-11-02 12:46:40		sigvatr (~sigvatr@ppp118-208-137-206.lns20.bne7.internode.on.net) has joined ##c++
2014-11-02 12:47:04	Scellow	well i give up with c++ i'll stick with c#, can't support the change
2014-11-02 12:47:26	hs_	cool story
2014-11-02 12:47:58	micom	Scellow, good choice, leave c++ to professionals
2014-11-02 12:48:19	Scellow	wow, is this chanel full of kids too ? ..
2014-11-02 12:48:44	o11c	change?
2014-11-02 12:48:59		w4|k3r (~AndChat13@106.51.142.75) has quit (Quit: Bye)
2014-11-02 12:49:11	gravy_	C# isn't actually anything like C++, it just pretends like it is.
2014-11-02 12:49:13	Scellow	o11c:  i'm french, sorry about my weird english, i meant the changement
2014-11-02 12:49:20	o11c	from micom's link, std::function definitely needs to be split into borrowed_function, unique_function, shared_function, copy_function
2014-11-02 12:49:28	o11c	Scellow: which change?
2014-11-02 12:49:32	micom	weak_function
2014-11-02 12:49:43		MKCoin (~MK@unaffiliated/mk/x-7191235) has joined ##c++
2014-11-02 12:49:45	micom	ok borrowed can be weak
2014-11-02 12:49:52	Scellow	o11c: habits
2014-11-02 12:51:16		xenoph (~module@89.11.172.72) has joined ##c++
2014-11-02 12:51:19		vieng095 (~vieng095@c-068ce555.05-23-6c6b7013.cust.bredbandsbolaget.se) has quit (Quit: leaving)
2014-11-02 12:53:17		r3m1 (~remi@92.103.19.16) has quit (Ping timeout: 240 seconds)
2014-11-02 12:54:14		scai (~scai@p54B62AD0.dip0.t-ipconnect.de) has joined ##c++
2014-11-02 12:54:30		Anodl (~Anodl@p5DC5A532.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-11-02 12:54:31		gravy_ (~gravy@89.201.9.229) has quit (Remote host closed the connection)
2014-11-02 12:54:39		Orion] (~nname@unaffiliated/orion/x-3970838) has joined ##c++
2014-11-02 12:54:49		notpara (~para@213.187.75.26) has joined ##c++
2014-11-02 12:55:18		tz (~tz@zero.tzarc.ninja) has quit (Ping timeout: 256 seconds)
2014-11-02 12:56:08		hexagoxel_ (~hexagoxel@kiel-d9bfdcbc.pool.mediaWays.net) has joined ##c++
2014-11-02 12:57:21		PSG_Luna (uid48908@gateway/web/irccloud.com/x-hsxjplwwjmmgacuf) has joined ##c++
2014-11-02 12:59:11	Loggan	I've changed some stuff up from before if you've seen this code before, anyways, would like a quick codereview again if it is not too much to ask: https://github.com/Loggan08/LoLUpdater/blob/master/LoLUpdater.cpp
2014-11-02 12:59:19		deanrock0 (~deanrock0@cpe-77.38.57.189.cable.t-1.si) has quit (Remote host closed the connection)
2014-11-02 12:59:30		hexagoxel (~hexagoxel@kiel-5f768cb2.pool.mediaWays.net) has quit (Ping timeout: 264 seconds)
2014-11-02 12:59:39	hs_	"using namespace std;"
2014-11-02 12:59:40		deanrock0 (~deanrock0@cpe-77.38.57.189.cable.t-1.si) has joined ##c++
2014-11-02 12:59:40		deanrock0 (~deanrock0@cpe-77.38.57.189.cable.t-1.si) has quit (Remote host closed the connection)
2014-11-02 13:00:04	micom	int _tmain(int argc, _TCHAR* argv[]) is too long, REJECTED
2014-11-02 13:00:06	micom	!next
2014-11-02 13:00:07	nolyc	Another satisfied customer, next!
2014-11-02 13:01:14	Loggan	hs_ what is wrong with that`
2014-11-02 13:01:19	Loggan	micom reely?`
2014-11-02 13:01:38		Plasmastar (Plasma@unaffiliated/plasmastar) has quit (Ping timeout: 244 seconds)
2014-11-02 13:01:41	V-ille	!using namespace std
2014-11-02 13:01:42	nolyc	Importing the entire std namespace into the global scope brings in a lot more symbols than vector and list; it also brings in standard library implementational details. C++ headers are allowed to include other C++ headers, so there is no way of knowing just what symbols got pulled into global scope. It's best not to use 'using namespace std;'. See also http://stackoverflow.com/q/1452721/809387
2014-11-02 13:02:00	micom	max length of function is 15 lines in my reviews.
2014-11-02 13:02:11		JohnnyL (~john@ool-457a8633.dyn.optonline.net) has quit (Quit: leaving)
2014-11-02 13:02:43	Loggan	V-ille that might be why VS eats up so much more ram after adding that, im on a potato laptop
2014-11-02 13:04:40		Longlius (~longlius@68.170.238.146) has quit (Remote host closed the connection)
2014-11-02 13:04:49		Plasmastar (Plasma@unaffiliated/plasmastar) has joined ##c++
2014-11-02 13:06:24		Longlius (~longlius@68.170.238.146) has joined ##c++
2014-11-02 13:09:47		drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has joined ##c++
2014-11-02 13:12:11		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-02 13:15:31		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-02 13:16:19		seishun (~Kakera@87.110.104.55) has quit (Ping timeout: 244 seconds)
2014-11-02 13:16:34		K-ballo (~sonoio@ip-64-134-160-40.public.wayport.net) has joined ##c++
2014-11-02 13:17:52		vocodork (~vocoder@94-227-99-249.access.telenet.be) has quit (Ping timeout: 264 seconds)
2014-11-02 13:19:11		SlashLife_ (~slashlife@botters/slashlife) has joined ##c++
2014-11-02 13:19:31		apparle (~quassel@174.109.74.132) has joined ##c++
2014-11-02 13:19:33		FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-02 13:19:47		deanrock (deanrock@2a01:7e00::f03c:91ff:fe56:e0ed) has joined ##c++
2014-11-02 13:21:15		vocodork (~vocoder@94-227-99-249.access.telenet.be) has joined ##c++
2014-11-02 13:21:48		vocodork (~vocoder@94-227-99-249.access.telenet.be) has quit (Client Quit)
2014-11-02 13:21:58		scai (~scai@p54B62AD0.dip0.t-ipconnect.de) has left ##c++ ("[IRSSI]")
2014-11-02 13:22:18		SlashLife (~slashlife@botters/slashlife) has quit (Ping timeout: 264 seconds)
2014-11-02 13:23:49		sigvatr (~sigvatr@ppp118-208-137-206.lns20.bne7.internode.on.net) has quit (Remote host closed the connection)
2014-11-02 13:24:28		CornishPasty (cornish@unaffiliated/cornishpasty) has joined ##c++
2014-11-02 13:25:51		tz (~tz@zero.tzarc.ninja) has joined ##c++
2014-11-02 13:26:50		20WAADKBL (~pfo@chello084114049188.14.vie.surfer.at) has quit (Ping timeout: 256 seconds)
2014-11-02 13:28:40		pfo__ (~pfo@chello084114049188.14.vie.surfer.at) has joined ##c++
2014-11-02 13:31:27		bitlord (~nick@unaffiliated/bitlord) has joined ##c++
2014-11-02 13:32:01		scwizard (45cef629@gateway/web/freenode/ip.69.206.246.41) has joined ##c++
2014-11-02 13:32:21		nyqiust (~nyquist@178.162.201.97) has quit (Ping timeout: 255 seconds)
2014-11-02 13:32:28	scwizard	I have a C compatability question, once I get ExternalProject_Add figured out
2014-11-02 13:32:33	scwizard	*cmake's ExternalProject_Add
2014-11-02 13:32:38		ambro718 (~ambro@gentoo/contributor/ambro718) has quit (Ping timeout: 244 seconds)
2014-11-02 13:33:00		miha (59d4cc27@gateway/web/freenode/ip.89.212.204.39) has quit (Quit: Page closed)
2014-11-02 13:34:15		MrSavage (MrSavage@162.223.44.49) has quit (Remote host closed the connection)
2014-11-02 13:35:16		Smjert (~Smjert@2-230-17-181.ip199.fastwebnet.it) has quit
2014-11-02 13:37:04	newguise1234	thoughts on passing vectors into functions by value?
2014-11-02 13:37:43	hs_	what are you doing with the vector in the function?
2014-11-02 13:37:57	newguise1234	iterate through it
2014-11-02 13:38:07	newguise1234	I'm not modifying values
2014-11-02 13:38:08	hs_	read only?
2014-11-02 13:38:11	newguise1234	yes
2014-11-02 13:38:16	hs_	pass by const&
2014-11-02 13:38:22		deanrock (deanrock@2a01:7e00::f03c:91ff:fe56:e0ed) has quit (Ping timeout: 256 seconds)
2014-11-02 13:38:57	hs_	or even pass iterators
2014-11-02 13:39:05		sigvatr (~sigvatr@ppp118-208-137-206.lns20.bne7.internode.on.net) has joined ##c++
2014-11-02 13:39:12		jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-02 13:39:36	newguise1234	thanks, I guess I was thinking that 12 bytes was not that much overhead, but it would be better to just pass a const&
2014-11-02 13:39:54	hs_	12 bytes?
2014-11-02 13:40:13	newguise1234	sizeof(vector<char>) gave me 12 bytes
2014-11-02 13:40:18		deekej (~deekej@195.65.3.245) has quit (Ping timeout: 264 seconds)
2014-11-02 13:40:22		iron_hou1 (~houzi@cm-84.211.65.20.getinternet.no) has quit (Ping timeout: 245 seconds)
2014-11-02 13:40:39	hs_	vector does dynamic allocation internally
2014-11-02 13:41:10	newguise1234	so data would be a pointer to where thats located? and shouldn't be affected by a copy, is what my thought was
2014-11-02 13:41:31	hs_	it won't copy the pointer, it will copy the data it points to
2014-11-02 13:41:41	newguise1234	mm alright then
2014-11-02 13:42:38	Eelis	unfortunately C++ does not provide a good way to pass read-only contiguous data to functions out of the box. there are proposals to fix this, for example with array_ref
2014-11-02 13:43:10	Eelis	in the mean time, you can pass two pointers or a pointer+size
2014-11-02 13:43:18		lamefun (~lamefun2@37.113.49.73) has joined ##c++
2014-11-02 13:44:03		lamefun (~lamefun2@37.113.49.73) has quit (Client Quit)
2014-11-02 13:44:15		ZeMaster (~Non@unaffiliated/zemaster) has quit (Quit: —I-n-v-i-s-i-o-n— 3.3 (November '11))
2014-11-02 13:44:27	newguise1234	Thanks
2014-11-02 13:44:43		only_the_bear (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has joined ##c++
2014-11-02 13:46:27		nyqiust (~nyquist@213162068082.public.t-mobile.at) has joined ##c++
2014-11-02 13:47:44		Sauvin (~Sauvin@about/linux/staff/sauvin) has quit (Remote host closed the connection)
2014-11-02 13:47:50	CalimeroTeknik	hum, I wrote struct node {  struct node* children[26] = { NULL }; bool flag; } node;
2014-11-02 13:48:04	Eelis	bleh, my implementation of checked dereference conditions doesn't handle   if (auto x : e)  , and i don't know how to fix it because i can't make much sense of how clang does auto. i wish C++'s type inference wasn't so hacky and ad hoc. then maybe i could understand it
2014-11-02 13:48:07	CalimeroTeknik	and when I create an instance of the struct the array of pointers is actually not at all initialized to NULLs
2014-11-02 13:48:40		r3g3x (~r3g3x@unaffiliated/r3g3x) has joined ##c++
2014-11-02 13:48:53	Eelis	{ struct node {  struct node* children[26] = { NULL }; bool flag; } node; cout << node.children; }
2014-11-02 13:48:54	geordi	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
2014-11-02 13:48:56	Eelis	works for me
2014-11-02 13:49:01	Eelis	so make a testcase
2014-11-02 13:49:03	Eelis	!testcase
2014-11-02 13:49:04	nolyc	A testcase is the _least_ amount of code that explains your problem, paste it to http://ideone.com and give us the link. Do _not_ paste to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2014-11-02 13:49:11	imMute	Eelis: for that particular compiler and opimization settings.
2014-11-02 13:49:29		kurahaupo (~kurahaupo@118.148.161.234) has joined ##c++
2014-11-02 13:49:35	Eelis	imMute: right, so if anything, his problem depends on /his/ compiler and optimization settings, which is why it's so important that he make a proper testcase. do you disagree?
2014-11-02 13:50:03		koderok (~koderok@223.180.120.139) has joined ##c++
2014-11-02 13:50:06		zyrox (~zyrox@cm-84.208.166.208.getinternet.no) has joined ##c++
2014-11-02 13:50:10		koderok (~koderok@223.180.120.139) has quit (Client Quit)
2014-11-02 13:50:23	imMute	{ struct node {  struct node* children[26] = { NULL }; bool flag; } node;  struct node nod2;  cout << node2.children; }
2014-11-02 13:50:23	geordi	error: 'node2' was not declared in this scope
2014-11-02 13:50:29	imMute	{ struct node {  struct node* children[26] = { NULL }; bool flag; } node;  struct node node2;  cout << node2.children; }
2014-11-02 13:50:30	geordi	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
2014-11-02 13:50:51	CalimeroTeknik	isn't the memory initialized to zeroes in that bot?
2014-11-02 13:50:52	imMute	okay, that's not an explanation.
2014-11-02 13:51:04	Eelis	{ int i; cout << i; }
2014-11-02 13:51:04	geordi	warning: 'i' is used uninitialized in this function
2014-11-02 13:51:06	CalimeroTeknik	I used new node
2014-11-02 13:51:07	Eelis	geordi, use -w
2014-11-02 13:51:07	geordi	32767
2014-11-02 13:51:14	CalimeroTeknik	new struct node n;
2014-11-02 13:51:44	Eelis	<< (new struct node)->children; struct node {  struct node* children[26] = { NULL }; bool flag; };
2014-11-02 13:51:45	geordi	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
2014-11-02 13:51:48	Eelis	works for me, too
2014-11-02 13:52:05		McMAGIC--Copy (~McMAGIC--@gateway/tor-sasl/mcmagic--copy) has quit (Ping timeout: 246 seconds)
2014-11-02 13:52:10	Eelis	<< *new int
2014-11-02 13:52:10	geordi	-1819044973
2014-11-02 13:52:28	CalimeroTeknik	hmm
2014-11-02 13:52:39	imMute	either way, CalimeroTeknik: in C++ structs and classes are identical except that the default .. uh, don't know the word, is public for structs and private for classes.
2014-11-02 13:52:46		zyrox (~zyrox@cm-84.208.166.208.getinternet.no) has quit (Client Quit)
2014-11-02 13:52:54	Eelis	!struct
2014-11-02 13:52:56	nolyc	The only difference between classes and structs is that the former default to private members and bases, while the latter default to public members and bases.
2014-11-02 13:52:56	imMute	CalimeroTeknik: solution would be to make a constructor that initializes the pointers to NULL
2014-11-02 13:53:11	Eelis	no, he already has that. that's what NSDMI does
2014-11-02 13:53:12	Eelis	his code his fine
2014-11-02 13:53:24	Eelis	but he is confused about how he's observing it or something
2014-11-02 13:53:31		D0cN3x (~Thunderbi@dslb-178-007-222-181.178.007.pools.vodafone-ip.de) has joined ##c++
2014-11-02 13:53:35	Eelis	which is why he needs to make a
2014-11-02 13:53:36	Eelis	!testcase
2014-11-02 13:53:38	nolyc	A testcase is the _least_ amount of code that explains your problem, paste it to http://ideone.com and give us the link. Do _not_ paste to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
2014-11-02 13:54:21	imMute	Eelis: okay, I didn't know about NSDMI.  TIL.
2014-11-02 13:54:46		ObjectiveMatt (~Objective@66.87.151.77) has joined ##c++
2014-11-02 13:54:56		Anodl (~Anodl@p5DC5A532.dip0.t-ipconnect.de) has joined ##c++
2014-11-02 13:54:59	Eelis	the day you learn about NSDMI is a good day!
2014-11-02 13:55:07	CalimeroTeknik	I'll check my pointers and for sure the problem is in there!
2014-11-02 13:55:17		hachidorii (~hachidori@96.247.57.41) has quit (Ping timeout: 240 seconds)
2014-11-02 13:57:09		Jubb (~Jubb@pool-72-66-106-10.washdc.fios.verizon.net) has quit (Remote host closed the connection)
2014-11-02 13:57:31		hachidorii (~hachidori@96.247.57.41) has joined ##c++
2014-11-02 13:57:34	hs_	you can also just do "node* children[26]{};"
2014-11-02 13:57:40	CalimeroTeknik	actually my issue was that I was iterating on sizeof children
2014-11-02 13:58:05	hs_	or better, array<node*,26> children{};
2014-11-02 13:58:45	Eelis	CalimeroTeknik: right, so like i said, the problem was with how you're observing it, and it was not in the code you showed. do you see why we keep insisting on testcases?
2014-11-02 13:58:57	CalimeroTeknik	of course
2014-11-02 13:59:18		fjellfras (~abhijat@122.169.23.245) has quit (Quit: fjellfras)
2014-11-02 13:59:23		Anodl (~Anodl@p5DC5A532.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2014-11-02 13:59:32		stakewinner00 (~stakewinn@182.115.15.37.dynamic.jazztel.es) has joined ##c++
2014-11-02 13:59:39	CalimeroTeknik	should I define a constant instead of hardcoding 26 and use it everywhere? or is there a way I can get the number of elements of an array?
2014-11-02 14:00:01	CalimeroTeknik	in either case 26 will be in only one place in the code.
2014-11-02 14:00:02	Eelis	how did you arrive at the number 26?
2014-11-02 14:00:12	CalimeroTeknik	a trie for the English language
2014-11-02 14:00:26	Eelis	no punctuation?
2014-11-02 14:00:28		apparle (~quassel@174.109.74.132) has quit (Ping timeout: 264 seconds)
2014-11-02 14:00:32	CalimeroTeknik	no, only word prediction
2014-11-02 14:00:42	CalimeroTeknik	like what was used in nokia phones :)
2014-11-02 14:00:46		Leoneof` (~Leoneof@unaffiliated/leoneof) has quit (Read error: Connection reset by peer)
2014-11-02 14:00:51	CalimeroTeknik	T9
2014-11-02 14:00:52	Eelis	<< sizeof("abcdefghijklmnopqrstuvwxyz")-1 // then i would use this
2014-11-02 14:00:52	geordi	26
2014-11-02 14:00:53	stakewinner00	CalimeroTeknik: constant or constexpr (in c++11) ¿?
2014-11-02 14:00:55	hs_	CalimeroTeknik, if the array type hasn't been converted to node** you can get iterators (auto& i: children) { .. do stuff with i...}
2014-11-02 14:01:15	Eelis	instead of "26"
2014-11-02 14:01:17	hs_	std::array<node*,26> will keep its type and you won't have problems with begin(array) end(array) etc
2014-11-02 14:01:40		apparle (~quassel@cpe-174-109-074-132.nc.res.rr.com) has joined ##c++
2014-11-02 14:01:43	CalimeroTeknik	I also need to know at which index I am hs_, due to the trie implementation
2014-11-02 14:01:51	hs_	array has .size()
2014-11-02 14:01:59	CalimeroTeknik	ah, that's not bad
2014-11-02 14:02:09		Leoneof (~Leoneof@unaffiliated/leoneof) has joined ##c++
2014-11-02 14:02:30	hs_	and you can also deduce the size from the template parameter
2014-11-02 14:02:37	hs_	in case you are a magician
2014-11-02 14:02:58	hs_	although you can deduce the array size too.. but its uglier =]
2014-11-02 14:03:19		Leoneof (~Leoneof@unaffiliated/leoneof) has quit (Read error: Connection reset by peer)
2014-11-02 14:03:21	Eelis	you can also just parameterize the trie implementation on the node split size and pass 26 later as a template argument
2014-11-02 14:04:33		Dumblez0r (~Dumblez0r@80-254-69-35.dynamic.monzoon.net) has joined ##c++
2014-11-02 14:04:49		bollullera (~ana@95.63.152.106) has joined ##c++
2014-11-02 14:05:10	Eelis	hm, [n4249] describes the problem of a name clash, but rather than proposing to rename, it proposes to strike. weird
2014-11-02 14:05:10	npaperbot	N4249: [Library] Networking Primitives: std::experimental::network::htonl Considered Harmful <http://bit.ly/1wXds6l> (by A. Meredith, J. Burley, A. Martin, D. Chisnall, et al.)
2014-11-02 14:05:11		sigvatr (~sigvatr@ppp118-208-137-206.lns20.bne7.internode.on.net) has left ##c++
2014-11-02 14:05:20	CalimeroTeknik	well with C there is a way
2014-11-02 14:05:31	Eelis	!native arrays
2014-11-02 14:05:32	nolyc	Native arrays are very inflexible: they cannot be copied, returned from functions, resized, stored in containers, initialized as data members, or treated as containers by generic code. Hence, std::array and/or std::vector are to be preferred in virtually all cases.
2014-11-02 14:05:33	CalimeroTeknik	sizeof array / sizeof array[0]
2014-11-02 14:05:41	Eelis	avoid native arrays in C++
2014-11-02 14:05:55	hs_	you can do that in C++ too
2014-11-02 14:05:59	hs_	_can_
2014-11-02 14:06:04	CalimeroTeknik	yeah but that's hackish
2014-11-02 14:06:31	CalimeroTeknik	using an std::array isn't a bad idea
2014-11-02 14:08:45		plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-02 14:09:53		plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-02 14:10:08		Dumblez0r (~Dumblez0r@80-254-69-35.dynamic.monzoon.net) has quit (Quit: Dumblez0r)
2014-11-02 14:10:43		BadQuanta (~badquanta@c-98-246-171-233.hsd1.or.comcast.net) has joined ##c++
2014-11-02 14:11:18	hs_	CalimeroTeknik, just so you are clear on the earlier issue though, arrays are aggregate types, which are not initialized automatically.. blah arraytype{}; does value initialization for each element; and in the case of pointers, value initialization is zero initialization (nullptr)
2014-11-02 14:11:28	hs_	(I think that's all correct anyway..)
2014-11-02 14:11:31		bmt (~bmt@afoh112.neoplus.adsl.tpnet.pl) has quit (Read error: Connection reset by peer)
2014-11-02 14:11:52		Natch (~Natch@c-0ecce155.25-4-64736c10.cust.bredbandsbolaget.se) has quit (Read error: Connection reset by peer)
2014-11-02 14:11:59		bmt (~bmt@afoh112.neoplus.adsl.tpnet.pl) has joined ##c++
2014-11-02 14:12:41	hs_	you could also do arraytype[5]{nullptr,nullptr,nullptr}; which will copy initialize the first 3 arraytypes with nullptr, while the last 2 are value initialized to nullptr
2014-11-02 14:12:50	hs_	(same effect)
2014-11-02 14:13:10	--	stakewinner00 is now known as stakewinner00|AF
2014-11-02 14:13:47	CalimeroTeknik	okay, omitted values are nullptrs
2014-11-02 14:14:09		Yepoleb (~quassel@178-190-228-72.adsl.highway.telekom.at) has quit (Quit: No Ping reply in 180 seconds.)
2014-11-02 14:14:15		Leoneof (~Leoneof@unaffiliated/leoneof) has joined ##c++
2014-11-02 14:14:15		vol4ko (null@unaffiliated/vol4ko) has quit (Read error: Connection reset by peer)
2014-11-02 14:14:31	hs_	it happens to be.. they are "value initialized" and in the case of pointers, that means "zero initialized"
2014-11-02 14:14:48		basic6_ (~basic6@p3E9EE407.dip0.t-ipconnect.de) has joined ##c++
2014-11-02 14:14:50		vol4ko (null@unaffiliated/vol4ko) has joined ##c++
2014-11-02 14:15:11		echelon (~echelon@gateway/tor-sasl/harel) has quit (Ping timeout: 246 seconds)
2014-11-02 14:15:14	hs_	if you were constructing lots of these objects though and cared a lot about performance, you might avoid doing array{}; to avoid initializing
2014-11-02 14:15:18		gaqwas (~tubi_ga@195.37.61.177) has quit (Remote host closed the connection)
2014-11-02 14:15:24	hs_	(say if you were going to initialize anyway with something more interesting)
2014-11-02 14:15:25		Yepoleb (~quassel@178-190-228-72.adsl.highway.telekom.at) has joined ##c++
2014-11-02 14:15:32		only_the_bear (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has quit (Ping timeout: 246 seconds)
2014-11-02 14:16:04	micom	memset for structure > 5mb can take almost 1sec
2014-11-02 14:16:16	cbreak	whoa
2014-11-02 14:16:25	micom	yea, i was so suprised
2014-11-02 14:16:26	cbreak	you're running on a wristwatch?
2014-11-02 14:16:40		Sculptor (~Sculptor@trivialand/master/sculptor) has quit (Read error: Connection reset by peer)
2014-11-02 14:16:42		Longlius (~longlius@68.170.238.146) has quit (Ping timeout: 256 seconds)
2014-11-02 14:16:58	hs_	it sends a request to the pentagon for each assignment
2014-11-02 14:16:59	micom	solving bug reported by client, new programmer followed  good practice guidance
2014-11-02 14:17:36		Twey (~twey@unaffiliated/twey) has quit (Ping timeout: 244 seconds)
2014-11-02 14:17:42	micom	it was gcc 4.3 as far as i remember
2014-11-02 14:17:48	cbreak	at work I deal with lots of data that's much bigger, and writing gigabytes barely takes any time at all
2014-11-02 14:17:48		basic6 (~basic6@p3E9EE407.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2014-11-02 14:18:03	cbreak	of course I don't use memset
2014-11-02 14:18:03		Longlius (~longlius@68.170.238.146) has joined ##c++
2014-11-02 14:18:06	cbreak	I use std::fill
2014-11-02 14:18:09	cbreak	but still...
2014-11-02 14:18:10	micom	it was some kind of 3gpp structure ~8mb
2014-11-02 14:18:12		hamid (~nithp@unaffiliated/hamid) has joined ##c++
2014-11-02 14:18:25	cbreak	I do it for images and matrixes
2014-11-02 14:18:49		Sculptor (~Sculptor@trivialand/master/sculptor) has joined ##c++
2014-11-02 14:18:57	micom	maybe platform or compiler bug...
2014-11-02 14:19:02		solrize (~solrize@unaffiliated/solrize) has quit (Remote host closed the connection)
2014-11-02 14:19:29	hs_	yeah that sounds unusual
2014-11-02 14:19:33	cbreak	were those 5mb on some usb1 memory stick?
2014-11-02 14:19:46		lolek (~lolek@unaffiliated/marcin) has joined ##c++
2014-11-02 14:19:46	micom	as far as i know RAM
2014-11-02 14:20:20		Twey (~twey@unaffiliated/twey) has joined ##c++
2014-11-02 14:21:36		Gluesticky (~nobody@unaffiliated/gluesticky) has joined ##c++
2014-11-02 14:22:16		iron_houzi (~houzi@cm-84.211.65.20.getinternet.no) has joined ##c++
2014-11-02 14:22:24	micom	cbreak, what do you think about https://groups.google.com/a/isocpp.org/forum/?fromgroups#!topic/std-discussion/GpAuzvaqlKE ?
2014-11-02 14:23:03		cubik (~cubik@2601:a:4f80:1e0:5d2:d5f:9c92:b49b) has joined ##c++
2014-11-02 14:23:43		tz (~tz@zero.tzarc.ninja) has quit (Ping timeout: 256 seconds)
2014-11-02 14:24:04		ObjectiveMatt (~Objective@66.87.151.77) has quit (Ping timeout: 250 seconds)
2014-11-02 14:24:17		RangerBob (~bmaddox@pool-173-72-144-130.clppva.fios.verizon.net) has quit (Quit: Help Help I'm being repressed!)
2014-11-02 14:24:18		D0cN3x (~Thunderbi@dslb-178-007-222-181.178.007.pools.vodafone-ip.de) has quit (Quit: D0cN3x)
2014-11-02 14:24:26		tz (~tz@zero.tzarc.ninja) has joined ##c++
2014-11-02 14:24:49	cbreak	sounds reasonable.
2014-11-02 14:24:54	cbreak	unique_function!
2014-11-02 14:25:36	stakewinner00|AF	in c++11 auto keyword is evaluated in compile time?
2014-11-02 14:25:40	--	stakewinner00|AF is now known as stakewinner00
2014-11-02 14:25:42	micom	make_function<>()
2014-11-02 14:25:54	micom	stakewinner00, sure
2014-11-02 14:26:04		ranu (~RAFAEL@177-190-224-67.mconline.com.br) has joined ##c++
2014-11-02 14:26:44		Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-11-02 14:27:35		Natch (~Natch@c-0ecce155.25-4-64736c10.cust.bredbandsbolaget.se) has joined ##c++
2014-11-02 14:27:47	cbreak	stakewinner00: of course
2014-11-02 14:27:55		Mio-chan (sid46333@gateway/web/irccloud.com/x-ypbbndlxcrqokdnm) has quit
2014-11-02 14:27:57	cbreak	stakewinner00: anything else would be impossible :)
2014-11-02 14:28:03	hs_	stakewinner00, all keywords are evaluated at compile time
2014-11-02 14:28:26	cbreak	hs_: typeinfo... maybe not
2014-11-02 14:28:36	hs_	no, I am pretty sure that word is evaluated =]
2014-11-02 14:28:36		bollullera (~ana@95.63.152.106) has quit (Quit: Leaving.)
2014-11-02 14:28:46		Cirus_ (~Cirus@c-98-210-235-117.hsd1.ca.comcast.net) has joined ##c++
2014-11-02 14:28:47		BlackHorn (5ad4e802@gateway/web/freenode/ip.90.212.232.2) has joined ##c++
2014-11-02 14:28:50	BlackHorn	i'm using scanf_s to scan a string (char array) from user input, but for some reason, it's just getting a null character ('\0'). I tried initialising the variable with "Test" to see what happened. Upon getting input from the user, it changes the char array to '\0', 'e', 's', 't', rather than getting the input. Does anyone know why this might be happening?
2014-11-02 14:28:54	hs_	(a trivial joke..)
2014-11-02 14:28:59	BlackHorn	I'm using C, but i expect you'll know due to knowing C++
2014-11-02 14:29:00	micom	BlackHorn, join ##c
2014-11-02 14:29:03	BlackHorn	oh, thanks
2014-11-02 14:29:12	BlackHorn	for some reason, it wasn't searching properly for C
2014-11-02 14:29:14		junaidnaseer2 (~junaid@212.101.43.131) has joined ##c++
2014-11-02 14:29:18		junaidnaseer2 (~junaid@212.101.43.131) has quit (Max SendQ exceeded)
2014-11-02 14:29:24		Cirus (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has quit (Ping timeout: 265 seconds)
2014-11-02 14:29:43	Eelis	+1 for unique_function
2014-11-02 14:29:45		Cirus__ (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has joined ##c++
2014-11-02 14:29:50		kaffeetrauma (~Thunderbi@ip-109-91-255-2.hsi12.unitymediagroup.de) has quit (Quit: kaffeetrauma)
2014-11-02 14:30:28	micom	std::pure_function  you can bind only pure functions to it
2014-11-02 14:30:43	hs_	pure == no capture?
2014-11-02 14:31:23	micom	no side effect, the same result for the same arguments always
2014-11-02 14:31:33		yorick (~yorick@oftn/member/yorick) has quit (Read error: Connection reset by peer)
2014-11-02 14:31:35		Garner (uid38417@gateway/web/irccloud.com/x-fmtedrcvjzjjjshv) has quit (Quit: Connection closed for inactivity)
2014-11-02 14:31:36	hs_	ah
2014-11-02 14:32:41	--	SlashLife_ is now known as SlashLife
2014-11-02 14:32:48		lolek (~lolek@unaffiliated/marcin) has left ##c++
2014-11-02 14:32:49		Cirus_ (~Cirus@c-98-210-235-117.hsd1.ca.comcast.net) has quit (Ping timeout: 245 seconds)
2014-11-02 14:33:23		jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Remote host closed the connection)
2014-11-02 14:33:36		KAHR-Alpha (~Alpha@AReims-652-1-160-194.w81-250.abo.wanadoo.fr) has quit (Read error: Connection reset by peer)
2014-11-02 14:34:02		KAHR-Alpha (~Alpha@AReims-652-1-160-194.w81-250.abo.wanadoo.fr) has joined ##c++
2014-11-02 14:34:09		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-11-02 14:36:25		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-02 14:36:59		yorick (~yorick@oftn/member/yorick) has joined ##c++
2014-11-02 14:38:09		BlackHorn (5ad4e802@gateway/web/freenode/ip.90.212.232.2) has quit (Quit: Page closed)
2014-11-02 14:39:26		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-02 14:39:28		KrzaQ (~krzaq@krzaq.cc) has quit (Read error: Connection reset by peer)
2014-11-02 14:39:46		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-02 14:39:56		KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-02 14:42:24		TzilTzal (~yh@203.126.56.18) has quit (Ping timeout: 244 seconds)
2014-11-02 14:44:15		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-11-02 14:44:54		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-02 14:45:22		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-11-02 14:45:41		bmt (~bmt@afoh112.neoplus.adsl.tpnet.pl) has quit (Quit: Leaving)
2014-11-02 14:46:27		a_le (~a_le@nat/cisco/x-kuswqludfrfjtrtg) has joined ##c++
2014-11-02 14:46:39		heiner (~heiner@p50857E87.dip0.t-ipconnect.de) has joined ##c++
2014-11-02 14:47:15		DTSCode (~DTSCode@unaffiliated/dtscode) has joined ##c++
2014-11-02 14:47:36		seishun (~Kakera@46.109.118.32) has joined ##c++
2014-11-02 14:48:05		a_le (~a_le@nat/cisco/x-kuswqludfrfjtrtg) has quit (Read error: Connection reset by peer)
2014-11-02 14:49:02		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-02 14:52:26		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-02 14:54:07		zyrox (~zyrox@cm-84.208.166.208.getinternet.no) has joined ##c++
2014-11-02 14:55:34	V-ille	ville: where's the renaming wording for htonl and others? ;)
2014-11-02 14:55:34		echelon (~echelon@gateway/tor-sasl/harel) has joined ##c++
2014-11-02 14:55:36		delta-nry (~delta-nry@S0106c8fb2658a55a.vc.shawcable.net) has left ##c++
2014-11-02 14:55:45		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-02 14:56:01	V-ille	I heard further rumors that N3922 is going to be discussed further
2014-11-02 14:56:16	V-ille	not that the people wanting to do that have written any papers, apparently they have better things to do
2014-11-02 14:56:46		Leftas (~leftas@91.228.84.180) has quit (Ping timeout: 258 seconds)
2014-11-02 14:57:08		TzilTzal (~yh@203.126.56.18) has joined ##c++
2014-11-02 14:57:28	cbreak	renaming?
2014-11-02 14:57:34	cbreak	at the moment we don't even have that
2014-11-02 14:57:50	cbreak	or did they sneak it into the standard via c as usual?
2014-11-02 14:59:02		schleppel (~quassel@141.39.226.237) has joined ##c++
2014-11-02 14:59:04		Jackneill (~Jackneill@unaffiliated/jackneill) has quit (Remote host closed the connection)
2014-11-02 14:59:45		w41 (~w41@unaffiliated/w41) has joined ##c++
2014-11-02 15:01:12		s1dev (~s1dev@199.241.28.135) has quit (Ping timeout: 245 seconds)
2014-11-02 15:01:19		cale250 (~cale250@173-17-30-173.client.mchsi.com) has joined ##c++
2014-11-02 15:03:48		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-02 15:03:49		s1dev (~s1dev@199.241.28.135) has joined ##c++
2014-11-02 15:04:00		w41 (~w41@unaffiliated/w41) has quit (Client Quit)
2014-11-02 15:04:13		ObjectiveMatt (~Objective@66.87.150.215) has joined ##c++
2014-11-02 15:04:17	scwizard	Ok so C compatability question. I see in C sometimes stuff like:
2014-11-02 15:04:21		cale250_ (~cale250@173-17-30-173.client.mchsi.com) has joined ##c++
2014-11-02 15:04:35	scwizard	enumtype x = (ENUM_A | ENUM_B)
2014-11-02 15:04:38		tesuji (~tesuji@unaffiliated/tesuji) has quit (Ping timeout: 265 seconds)
2014-11-02 15:04:46	 *	ObjectiveMatt can someone help explain to me the process of building a binary search tree from an array, reading right to left?
2014-11-02 15:04:50		Cust0sLim3n (~CustosLim@unaffiliated/wormdrink) has joined ##c++
2014-11-02 15:04:51		w41 (~w41@unaffiliated/w41) has joined ##c++
2014-11-02 15:05:09	cbreak	scwizard: static_cast :)
2014-11-02 15:05:22		nyqiust (~nyquist@213162068082.public.t-mobile.at) has quit (Remote host closed the connection)
2014-11-02 15:05:44	hs_	ObjectiveMatt, you've been here long enough to know the answer to that, and that you shouldn't be asking that here
2014-11-02 15:05:54		cale250 (~cale250@173-17-30-173.client.mchsi.com) has quit (Read error: Connection reset by peer)
2014-11-02 15:06:03	scwizard	cbreak: apparently you can also overload operator |
2014-11-02 15:06:09	ObjectiveMatt	why and why to both of those hs_?
2014-11-02 15:06:12	scwizard	but that seems remarkably silly
2014-11-02 15:06:15	--	cale250_ is now known as cale250
2014-11-02 15:06:27	cbreak	scwizard: sure. If you want.
2014-11-02 15:06:52		nyqiust (~nyquist@178.162.205.2) has joined ##c++
2014-11-02 15:06:57	cbreak	might make sense for enum classes
2014-11-02 15:07:04		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-02 15:07:07		nug700 (~nug700@71-35-50-37.phnx.qwest.net) has joined ##c++
2014-11-02 15:08:39		ambro718 (~ambro@gentoo/contributor/ambro718) has joined ##c++
2014-11-02 15:09:03		K-ballo (~sonoio@ip-64-134-160-40.public.wayport.net) has quit (Ping timeout: 256 seconds)
2014-11-02 15:09:10	scwizard	TermKeyFormat tk_format = static_cast<TermKeyFormat>((static_cast<int>(TERMKEY_FORMAT_LONGMOD) | static_cast<int>(TERMKEY_FORMAT_WRAPBRACKET)));
2014-11-02 15:09:24	scwizard	seems kinda, I dunno
2014-11-02 15:09:31	cbreak	scwizard: unless you use enum class, enums convert to int
2014-11-02 15:09:45	cbreak	or their respective underlying type's promotion candidate
2014-11-02 15:09:58	cbreak	you only need one single cast
2014-11-02 15:10:03	cbreak	scwizard: and that cast is risky
2014-11-02 15:10:39	scwizard	cbreak: so if I go into the header, and convert "typedef enum" to "class enum" then I won't need those casts?
2014-11-02 15:10:44	cbreak	scwizard: enum E { a = 1, b = 2 }; a | b, which E is this?
2014-11-02 15:10:55	cbreak	scwizard: no
2014-11-02 15:11:02	cbreak	scwizard: you won't need most of those casts. Period.
2014-11-02 15:11:08		surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-02 15:11:22	cbreak	scwizard: the only cast you need is to tell C++ that, yes, you are sure you want to pretend 3 is a valid E
2014-11-02 15:11:44		Gluesticky (~nobody@unaffiliated/gluesticky) has quit (Quit: This is the end. Goodbye cruel world!)
2014-11-02 15:11:46	cbreak	C isn't type safe
2014-11-02 15:11:55	cbreak	it doesn't give a fuck that this is obviously nonsense in general
2014-11-02 15:12:05		K-ballo (~sonoio@ip-64-134-160-40.public.wayport.net) has joined ##c++
2014-11-02 15:12:22	cbreak	but in C++ the compiler catches such errors and you have to tell it that you know what you're doing :)
2014-11-02 15:13:10		FreezingCold (~FreezingC@135.0.41.14) has quit (Remote host closed the connection)
2014-11-02 15:13:20		Garner (uid38417@gateway/web/irccloud.com/x-cigbngfddodxufnl) has joined ##c++
2014-11-02 15:14:00		Cust0sLim3n (~CustosLim@unaffiliated/wormdrink) has quit (Changing host)
2014-11-02 15:14:01		Cust0sLim3n (~CustosLim@unaffiliated/cust0slim3n) has joined ##c++
2014-11-02 15:14:10	Eelis	don't use an enum if you intend to use non-enumerator values...
2014-11-02 15:14:50	scwizard	ahh so the enum is casted to int implictly already
2014-11-02 15:14:55	scwizard	so you only need one explicit cast
2014-11-02 15:14:57	scwizard	which is the unsafe one
2014-11-02 15:14:58	scwizard	i see
2014-11-02 15:15:11	MrFlibble	nothing wrong with using an enum to represent bit pattern values
2014-11-02 15:15:23	cbreak	as long as you're fine with casts...
2014-11-02 15:15:28	MrFlibble	indeed
2014-11-02 15:15:34	Eelis	as long as you don't convert combined flags back to the enum type
2014-11-02 15:15:36	hs_	scwizard, why enumtype x = enum_1 | enum_2; ? why enumtype x?
2014-11-02 15:15:50	scwizard	hs_: because interfacing with C library
2014-11-02 15:15:57	hs_	if you just want a flag or whatever, use the underlying type for x
2014-11-02 15:16:20	Eelis	and even using an enum for bit pattern values is a pointless hack
2014-11-02 15:16:30	Eelis	that does more harm than good
2014-11-02 15:16:32	cbreak	it's better than using int for it
2014-11-02 15:16:37	MrFlibble	nah
2014-11-02 15:16:42	MrFlibble	enum fine.
2014-11-02 15:16:42	Eelis	cbreak: no
2014-11-02 15:17:00	cbreak	because you give up any type checking
2014-11-02 15:17:00	scwizard	well the way I see it, is this type of static cast is silly, but for the lowest level layer that's interfacing with C libraries and stuff
2014-11-02 15:17:08		PierreZ (~PierreZ@ns506154.ip-198-100-148.net) has joined ##c++
2014-11-02 15:17:13	scwizard	it's sometimes necesary to have code that is in effect mostly C
2014-11-02 15:17:17	cbreak	(not that the type checking does much, but at least the programmer has to look what he passes)
2014-11-02 15:17:18		FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-02 15:17:25	scwizard	and that's fine so long as you get that abstracted and get away with it asap
2014-11-02 15:17:29	Eelis	cbreak: lying about types is worse than not having types
2014-11-02 15:17:32		apparle (~quassel@cpe-174-109-074-132.nc.res.rr.com) has quit (Ping timeout: 244 seconds)
2014-11-02 15:17:42	scwizard	Eelis: but C lies about types all the time
2014-11-02 15:17:44	cbreak	Eelis: it's not really lying about the types
2014-11-02 15:17:48	scwizard	so if you're working with C code effectively
2014-11-02 15:17:54	hs_	enum blah : unsigned int { A, B }; unsigned int x = A | B; ... what's the problem?
2014-11-02 15:17:55	cbreak	Eelis: it's more lying about the enum definition
2014-11-02 15:18:09	cbreak	Eelis: because most programmers are too lazy to also put the combinations of the bit patterns into the enum definition
2014-11-02 15:18:13	MrFlibble	hs_: there is no problem.
2014-11-02 15:18:16	cbreak	even if they consider them part
2014-11-02 15:18:18	Eelis	hs_: it suggests that something like    switch (a_blah) { case A: ...   case B: ...   }  is meaningful
2014-11-02 15:18:21	Eelis	hs_: so it's misleading
2014-11-02 15:18:23	Eelis	hs_: so it's lying.
2014-11-02 15:18:42	cbreak	Eelis: and unfortunately there's no easy way to do this
2014-11-02 15:19:04		KrzaQ (~krzaq@krzaq.cc) has quit (Read error: Connection reset by peer)
2014-11-02 15:19:07	Eelis	constexpr int blah_A = 1, blah_B = 2;  no more lying
2014-11-02 15:19:13	scwizard	is Eelis suggesting that I jsut do: unsigned int x = (enum_1 | enum_2);
2014-11-02 15:19:20	cbreak	scwizard: yes
2014-11-02 15:19:28		KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-02 15:19:42	scwizard	cbreak: that's silly I'd still need to cast when I passed x to a library function that wants a TermKeyFormat\
2014-11-02 15:19:51	cbreak	yes.
2014-11-02 15:20:01	hs_	what do you expect A | B to return?
2014-11-02 15:20:14	scwizard	hs_: a TermKeyFormat
2014-11-02 15:20:16	cbreak	it's supposed to return int
2014-11-02 15:20:20	hs_	how can it return that?
2014-11-02 15:20:31	cbreak	but it could be something bigger, if the underlying type is bigger
2014-11-02 15:20:34	Eelis	scwizard: i'm saying it's terrible to use an enum type for non-enumerator values. if it's the C library that's doing that, then the C library is crap. if it's you doing it, you're crap. :)
2014-11-02 15:20:40	Eelis	i don't care which of the two it is
2014-11-02 15:20:52		PlasmaHH (~kvirc@speedy.projectiwear.org) has joined ##c++
2014-11-02 15:20:57	scwizard	Eelis: people need to work with crap C libraries sometimes
2014-11-02 15:20:58	scwizard	that's life
2014-11-02 15:21:07	cbreak	scwizard: that's why C++ has static_cast
2014-11-02 15:21:07	Eelis	<youdontsayface>
2014-11-02 15:21:17		Gluesticky (~nobody@unaffiliated/gluesticky) has joined ##c++
2014-11-02 15:21:18	cbreak	and const cast
2014-11-02 15:21:21	cbreak	and reinterpret_cast
2014-11-02 15:21:22		heiner (~heiner@p50857E87.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2014-11-02 15:21:26	hs_	even if A and B are of enum type X, A | B needn't be of enum type X..
2014-11-02 15:21:28	SlashLife	and dynamic_cast
2014-11-02 15:21:30	SlashLife	What do I win? :D
2014-11-02 15:21:35	cbreak	SlashLife: nah
2014-11-02 15:21:36	micom	segfault
2014-11-02 15:21:40	cbreak	SlashLife: that's for crappy C++ libraries
2014-11-02 15:21:57		Fogger (~Fogger@host86-140-69-108.range86-140.btcentralplus.com) has quit (Read error: Connection reset by peer)
2014-11-02 15:22:24	Eelis	hs_: giving A and B that enum type doesn't buy you anything if you still need to make all the places that accept such things "int" on account of combinations being valid as well
2014-11-02 15:22:29	cbreak	I've had to deal with a crappy C++ library where I had to use const_cast AND reinterpret_cast for almost every damn function cast
2014-11-02 15:22:46	cbreak	because they used unsigned char * in a place where they expected string literal parameters
2014-11-02 15:22:51	Eelis	hs_: giving A and B that enum type is only useful if you then actually use that type in places
2014-11-02 15:23:00		surd (~surd@unaffiliated/surd) has quit (Ping timeout: 256 seconds)
2014-11-02 15:23:01	MrFlibble	you are supposed to abstract all the things though.
2014-11-02 15:23:07	Eelis	(unused types are useless!)
2014-11-02 15:23:30	SlashLife	No, they're luxury.
2014-11-02 15:23:40	Eelis	or they're phantom types
2014-11-02 15:23:41	SlashLife	"What do you want with that type." - "Well ... HAVE it, obviously!"
2014-11-02 15:23:46	cbreak	or they are typos
2014-11-02 15:23:52	SlashLife	typeos?
2014-11-02 15:24:30	MrFlibble	if underlying type of enum is uint32_t will e | e have type uint32_t?
2014-11-02 15:24:54		ObjectiveMatt (~Objective@66.87.150.215) has quit (Ping timeout: 245 seconds)
2014-11-02 15:25:18	hs_	yes
2014-11-02 15:25:21	MrFlibble	neat
2014-11-02 15:25:31	MrFlibble	sounds perfect for bit patterns then
2014-11-02 15:25:48	Eelis	what do you expect to gain from using an enum for bit patterns?
2014-11-02 15:25:58	hs_	I think it is fine for bitpatterns, but the result must be treated as a uint32_t and not an enum
2014-11-02 15:26:10	Eelis	it's delusional at best
2014-11-02 15:26:42		ac_slater (~weechat@96.237.110.242) has joined ##c++
2014-11-02 15:26:51	MrFlibble	the main thing you gain is more friendly debugger output if value is an enumerator
2014-11-02 15:26:55	o11c	for enum class you can define your own |
2014-11-02 15:27:10	o11c	actually maybe even for plain enum
2014-11-02 15:27:15	o11c	not sure exactly how the decay works
2014-11-02 15:27:29	o11c	the disadvantage of enum class is no conversion to bool
2014-11-02 15:27:49	o11c	that said, if I were to do it all over again, I would use a python script to generate a class that only *acts* like an enum
2014-11-02 15:27:49		Cirus__ (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has quit (Read error: Connection reset by peer)
2014-11-02 15:28:32	o11c	that would probably also make it easier to handle both single-value and bitmask of the same type - sometimes I need both
2014-11-02 15:29:05	o11c	e.g. "each entity is a pc, a mob, or an npc" vs "iterate over all entities whose type matches this bitmask"
2014-11-02 15:29:17	o11c	MrFlibble: gdb pretty-printers ftw
2014-11-02 15:29:49	o11c	MrFlibble: I've even written a pretty-printer that matches all pointers, and can tell if it's stack/heap/static
2014-11-02 15:30:10	hs_	I think the main issue is thinking a|b has type (enum,enum) -> enum
2014-11-02 15:30:19	hs_	or could have that meaningfully
2014-11-02 15:30:23		Cirus__ (~Cirus@c-98-210-235-117.hsd1.ca.comcast.net) has joined ##c++
2014-11-02 15:31:25		cale250 (~cale250@173-17-30-173.client.mchsi.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-11-02 15:32:56	o11c	it's well-defined for enums with a base type
2014-11-02 15:33:08	o11c	(to store non-enumerated values I mean)
2014-11-02 15:33:31		ObjectiveMatt (~Objective@66.87.150.215) has joined ##c++
2014-11-02 15:33:55	hs_	it is well-defined in terms of bits and bytes, but not semantically
2014-11-02 15:33:58		bb010g (uid21050@gateway/web/irccloud.com/x-jdngvpazredwryef) has joined ##c++
2014-11-02 15:34:55	hs_	Eelis has a good example.. a switch on some enum with cases for each _ought_ to trigger at least one
2014-11-02 15:34:57	o11c	it's perfectly obvious semantically
2014-11-02 15:35:14	o11c	it's just not ideal
2014-11-02 15:35:27	o11c	I'm starting to realize that code generation has a lot of advantages
2014-11-02 15:35:33		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-11-02 15:36:02	hs_	is your code going to generate the closure over enum|enum ?
2014-11-02 15:36:08	hs_	that's called "unsigned int"
2014-11-02 15:36:14	hs_	so use unsigned int
2014-11-02 15:37:16	hs_	enums are types, not sets of int values
2014-11-02 15:37:32	hs_	you can use them as sets of int values, but that's a one-way road
2014-11-02 15:39:06		TomyLobo (~TomyLobo@ip5b417367.dynamic.kabel-deutschland.de) has quit (Quit: Standby mode...)
2014-11-02 15:39:08	o11c	as I said, I'll probably generate a class so no one can bitch about it
2014-11-02 15:39:39		cale250 (~cale250@173-17-30-173.client.mchsi.com) has joined ##c++
2014-11-02 15:39:40	o11c	but the only real problem with enums is that they can't have member functions (including operator bool)
2014-11-02 15:39:54		rpag (~rg4@unaffiliated/rg4) has joined ##c++
2014-11-02 15:40:42	MrFlibble	o11c: how can you differentiate between stack and heap pointer?
2014-11-02 15:41:24	o11c	MrFlibble: check if it's within 8MB of $sp (gdb's pseudoregister that works on all arches fr $rsp or whatever)
2014-11-02 15:41:27		cale250 (~cale250@173-17-30-173.client.mchsi.com) has quit (Client Quit)
2014-11-02 15:41:36	o11c	for statics, I look up the symbol table
2014-11-02 15:41:39	MrFlibble	ah
2014-11-02 15:41:46	MrFlibble	neat
2014-11-02 15:43:34		cale250 (~cale250@173-17-30-173.client.mchsi.com) has joined ##c++
2014-11-02 15:44:49	scwizard	how often do people come here and say silly things like "why would I run std:string("foo") because then the program has to make two copies of the string and run this constructor function and that sounds really slow
2014-11-02 15:44:58		ac_slater (~weechat@96.237.110.242) has quit (Ping timeout: 260 seconds)
2014-11-02 15:45:09	o11c	latest version isn't in my repo, so I made a gist (GPL3): https://gist.github.com/o11c/f6f66d4f1b7301884429
2014-11-02 15:45:18	o11c	scwizard: I made my own string classes to solve that problem
2014-11-02 15:45:44	o11c	scwizard: the tbh the real motivator was free *slicing* and opt-in SSO
2014-11-02 15:45:48	V-ille	scwizard: we have string_view for that
2014-11-02 15:46:00	o11c	string_view is still pretty limited compared to what I have
2014-11-02 15:46:15	scwizard	ollc: i really didn't think it was a problem, I thought it was a problem the compiler solve :|
2014-11-02 15:46:39		mentoc (~lmn@unaffiliated/mentoc) has joined ##c++
2014-11-02 15:46:46	o11c	I have separate slices for NUL-terminated or not, separate classes for string literals vs not, refcounted vs sso, fixed size, ...
2014-11-02 15:46:55	o11c	scwizard: nah, the compiler's job is to be pretty dumb
2014-11-02 15:47:13	MrFlibble	o11c: sounds terrible; you want one string class that does all of that IMO.
2014-11-02 15:47:54	o11c	MrFlibble: you most certainly do not!
2014-11-02 15:48:01	MrFlibble	you most certainly do
2014-11-02 15:48:01		BhAwN (~abhyuditj@49.207.20.31) has joined ##c++
2014-11-02 15:48:05	o11c	that would be just plain dumb
2014-11-02 15:48:08	MrFlibble	having ten different string classes is plain dumb
2014-11-02 15:48:17	scwizard	uh oh what have I started :eek:
2014-11-02 15:48:29	o11c	you say which one you want, and it does implicit conversions if it is safe
2014-11-02 15:48:37	MrFlibble	plain dumb.
2014-11-02 15:48:46	o11c	and they all offer the same functions (if safe for that type)
2014-11-02 15:48:50	mentoc	I keep getting a std::system_error thrown. #22: invalid argument. http://pastebin.com/QRhq2YUr The catch handles the exception, but without it, it would terminate
2014-11-02 15:48:52	scwizard	the point I was trying to make
2014-11-02 15:49:05	scwizard	is that C++ isn't really a language where you have to worry about abstraction being slow
2014-11-02 15:49:08	o11c	e.g. only types that guarantee a trailing '\0' offer .c_str()
2014-11-02 15:49:12	scwizard	because the compiler does such a good job
2014-11-02 15:49:20	MrFlibble	I repeat: having ten different string classes is plain dumb
2014-11-02 15:49:26	o11c	scwizard: my classes offer much better zero-cost abstractions
2014-11-02 15:49:34	o11c	MrFlibble requires expensive abstractions
2014-11-02 15:49:41	MrFlibble	no it doesn't
2014-11-02 15:49:46	scwizard	the compiler makes many abstractions zero cost
2014-11-02 15:49:51	hs_	mentoc, try .emplace_back(f);
2014-11-02 15:49:54	o11c	scwizard: sure, I use them
2014-11-02 15:49:59		ikrima (~ikrima@cpe-142-129-15-14.socal.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-11-02 15:50:02	o11c	but not *all* abstractions
2014-11-02 15:50:06	mentoc	hs_: instead of push_back?
2014-11-02 15:50:10	hs_	mentoc, yes
2014-11-02 15:50:15	o11c	it can't make .substring() zero-cost, for example
2014-11-02 15:50:19		HaltingState (~HaltingSt@unaffiliated/haltingstate) has quit (Read error: Connection reset by peer)
2014-11-02 15:50:28	o11c	or std::string(literal)
2014-11-02 15:50:33	o11c	I can, and I have
2014-11-02 15:50:41	scwizard	i don't see why it can't make those things zero cost
2014-11-02 15:50:49	o11c	because allocators
2014-11-02 15:50:53	scwizard	I'm pretty sure the compiler makes std:string(literal) zero cost
2014-11-02 15:50:56	o11c	nope
2014-11-02 15:51:05	o11c	you're completely and utterly wrong (sorry)
2014-11-02 15:51:13	o11c	the compiler is not smart enough to detect a string literal
2014-11-02 15:51:21		BadQuanta (~badquanta@c-98-246-171-233.hsd1.or.comcast.net) has quit (Ping timeout: 256 seconds)
2014-11-02 15:51:24		HaltingState (~HaltingSt@unaffiliated/haltingstate) has joined ##c++
2014-11-02 15:51:32	scwizard	really?
2014-11-02 15:51:39	MrFlibble	<< decltype("hello");
2014-11-02 15:51:39	geordi	error: expected primary-expression before 'decltype'
2014-11-02 15:51:43	o11c	std::string(literal) is *required* to allocate (unless you use SSO, which has its own drawbacks)
2014-11-02 15:51:54	seishun	it's dumb to rely on compiler optimizations
2014-11-02 15:52:08	--	irc: disconnected from server
2014-11-02 16:43:48		dagnachew (~dagnachew@bas1-montreal30-2925416228.dsl.bell.ca) has joined ##c++
2014-11-02 16:43:48	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-11-02 16:43:48	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-11-02 16:43:48	--	Channel ##c++: 561 nicks (0 ops, 0 voices, 561 normals)
2014-11-02 16:43:49	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-11-02 16:44:04	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-11-02 16:44:35		stdvector (~stdvector@gateway/tor-sasl/stdvector) has joined ##c++
2014-11-02 16:46:20	mentoc	I replaced the vector::push_back function to emplace_back, but it's still throwing a std::system_error (invalid argument #22). Anybody have an ideas? http://pastebin.com/3XGxEzkp
2014-11-02 16:48:05		Amaranth (~travis@ubuntu/member/Amaranth) has joined ##c++
2014-11-02 16:48:52	--	DTSCode is now known as dTSCode
2014-11-02 16:49:01		KAHR-Alpha (~Alpha@AReims-652-1-160-194.w81-250.abo.wanadoo.fr) has quit (Read error: Connection reset by peer)
2014-11-02 16:49:34	V-ille	mentoc: well, if you join on the first round of the loop and then join again on the next round...
2014-11-02 16:50:21	mentoc	V-ille: Ah, I see what you're saying
2014-11-02 16:51:38		asakura0 (~asakura@gateway/tor-sasl/asakura) has joined ##c++
2014-11-02 16:52:27		micom (~micom@unaffiliated/micom) has quit (Remote host closed the connection)
2014-11-02 16:53:52		phantomcircuit (~phantomci@blockchain.ceo) has quit (Quit: quit)
2014-11-02 16:54:10		phantomcircuit (~phantomci@smartcontracts.us) has joined ##c++
2014-11-02 16:54:56		stakewinner00 (~stakewinn@182.115.15.37.dynamic.jazztel.es) has quit
2014-11-02 16:55:20		jaafar (~quassel@adsl-76-232-9-184.dsl.pltn13.sbcglobal.net) has joined ##c++
2014-11-02 16:55:51		adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has quit (Quit: adu)
2014-11-02 16:55:58	scwizard	why doesn't this work? http://codepad.org/J6aSQeAU
2014-11-02 16:56:21		Mio-chan (sid46333@gateway/web/irccloud.com/x-lsabtgxzrrolzxnv) has joined ##c++
2014-11-02 16:56:24	scwizard	it works as expected if you do std::string(rob)
2014-11-02 16:56:37	scwizard	but shouldn't that conversion happen implicitly?
2014-11-02 16:57:53		Mio-chan (sid46333@gateway/web/irccloud.com/x-lsabtgxzrrolzxnv) has quit (Client Quit)
2014-11-02 16:58:08	V-ille	no, because the stream inserter for string is a template
2014-11-02 16:58:33	scwizard	i don't understand, care to elaborate
2014-11-02 16:58:49		KAHR-Alpha (~Alpha@AReims-652-1-160-194.w81-250.abo.wanadoo.fr) has joined ##c++
2014-11-02 16:58:57	V-ille	oh wait
2014-11-02 16:59:25	V-ille	yeah, the stream inserter will not match, as far as I can see
2014-11-02 16:59:48	scwizard	well yeah it doesn't, as we can see from the Line 19: error: no match for 'operator<<' in 'std::cout << rob'
2014-11-02 16:59:54	scwizard	but my question is why
2014-11-02 17:00:16	scwizard	since calling the conversion operator would cause it to match, why isn't the conversion operator called implicitly?
2014-11-02 17:00:20		admg (~admg@host86-151-90-210.range86-151.btcentralplus.com) has quit (Quit: Bye)
2014-11-02 17:00:23	scwizard	if you call the conversion operator explicitly then it matches
2014-11-02 17:00:54		Phixyn (~phixyn@cpc16-colc7-2-0-cust260.7-4.cable.virginm.net) has left ##c++
2014-11-02 17:03:06		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-02 17:04:01		BoredHam1 (~root@gateway/tor-sasl/boredhamster) has joined ##c++
2014-11-02 17:05:06		armyriad (~armyriad@198.23.71.94-static.reverse.softlayer.com) has joined ##c++
2014-11-02 17:05:06		mentoc (~lmn@unaffiliated/mentoc) has quit (Quit: leaving)
2014-11-02 17:06:16	scwizard	oh wait I think I know "The program is well-formed (compiles) only if there exists one unambiguous implicit conversion sequence from T1 to T2. "
2014-11-02 17:06:24		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-02 17:06:25	scwizard	and it would take two unambigous implict conversions
2014-11-02 17:06:32	scwizard	wait but they said one sequence im confuse
2014-11-02 17:08:50		FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 264 seconds)
2014-11-02 17:10:01		plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-02 17:11:09		plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-02 17:11:09	V-ille	the problem is that there's an insertion template
2014-11-02 17:11:20	V-ille	that will perfectly match your type, but then can't output it
2014-11-02 17:11:59	V-ille	hmm, that shouldn't match since it takes a stream by rvalue reference
2014-11-02 17:12:37	scwizard	well it doesn't match
2014-11-02 17:15:49	scwizard	ok now I'm really confused
2014-11-02 17:15:51		rufianw (~ntrrgc@212.183.221.145.dyn.user.ono.com) has quit (Read error: Connection reset by peer)
2014-11-02 17:15:53	scwizard	why does this return garbage? http://codepad.org/vFI6UhL6
2014-11-02 17:16:02	scwizard	*output garbage
2014-11-02 17:16:08		rufianw (~ntrrgc@212.183.221.145.dyn.user.ono.com) has joined ##c++
2014-11-02 17:17:11	Eelis	scwizard: because by the time the operator char const* returns, the data is already gone, because it was owned by result, which was a local variable
2014-11-02 17:17:14	V-ille	regarding the original problem, http://stackoverflow.com/questions/13883067/implicit-conversion-to-stdstring
2014-11-02 17:17:20	scwizard	oh derp
2014-11-02 17:17:30	scwizard	duh
2014-11-02 17:17:50	scwizard	V-ille: tyvm
2014-11-02 17:18:50		ObjectiveMatt (~Objective@66.87.150.215) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-11-02 17:18:54	V-ille	and that's because the stream inserter for string is a template ;)
2014-11-02 17:19:27		Munnu (~timo@91-158-128-16.elisa-laajakaista.fi) has quit (Remote host closed the connection)
2014-11-02 17:20:00	scwizard	"user defined conversions are not considered during template argument deduction" oh wow interesting
2014-11-02 17:21:07	V-ille	most users run into something like
2014-11-02 17:21:09	V-ille	geordi: template <class T> void f(const basic_string<T>& foo) {BARK;} int main() {f("what?");}
2014-11-02 17:21:09	geordi	error: no matching function for call to 'f(const char [6])'
2014-11-02 17:21:18	V-ille	geordi: template <class T> void f(const basic_string<T>& foo) {BARK;} int main() {f(string("what?"));}
2014-11-02 17:21:18	geordi	f(const basic_string<_CharT>&) [with T = char]
2014-11-02 17:22:00		w41 (~w41@unaffiliated/w41) has quit (Ping timeout: 258 seconds)
2014-11-02 17:22:04	V-ille	I wonder if it would kill anyone to add non-template stream inserters for string
2014-11-02 17:23:18	V-ille	then again, implicit conversions to string in such an extractor cause memory allocations, so I'd expect opposition
2014-11-02 17:23:29	V-ille	s/extractor/inserter/
2014-11-02 17:23:56		dardevelin (~dardeveli@unaffiliated/dardevelin) has quit (Quit: Leaving)
2014-11-02 17:24:05	scwizard	so why aren't user defined conversions considered during template argument deduction?
2014-11-02 17:24:15	scwizard	I expected that they would be
2014-11-02 17:26:52		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-02 17:27:25		Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-11-02 17:28:26		deekej (~deekej@195.65.3.245) has joined ##c++
2014-11-02 17:28:35		FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-02 17:29:02		dardevelin (~dardeveli@unaffiliated/dardevelin) has joined ##c++
2014-11-02 17:29:22	V-ille	because that would cause other problems, mostly ambiguities
2014-11-02 17:30:15		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-02 17:30:25		gelignite (~gelignite@i5387AF8D.versanet.de) has quit (Quit: http://bit.ly/nkczDT)
2014-11-02 17:32:16		BinaryAddicted (~BinaryAdd@194.230.155.143) has quit
2014-11-02 17:34:37		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-02 17:34:56	scwizard	V-ille: how and why does it lead to ambiguities?
2014-11-02 17:35:44	scwizard	also do you think concepts will allow implicit conversion to be performed on function arguments?
2014-11-02 17:35:57	V-ille	if you have multiple templates and your type can convert to the parameter types of many of them, you get ambiguities
2014-11-02 17:36:10	V-ille	but.. I guess it's probably really about the cost of instantiating such templates
2014-11-02 17:36:31	V-ille	scwizard: note that templates _do_ allow implicit conversions
2014-11-02 17:36:44	V-ille	geordi: template <class T> void f(const basic_string<T>& foo) {BARK;} int main() {f<string>("what?");}
2014-11-02 17:36:44	geordi	error: no matching function for call to 'f(const char [6])'
2014-11-02 17:36:44	scwizard	but not user defined ones?
2014-11-02 17:36:47	V-ille	oops
2014-11-02 17:36:54	V-ille	geordi: template <class T> void f(const basic_string<T>& foo) {BARK;} int main() {f<char>("what?");}
2014-11-02 17:36:55	geordi	f(const basic_string<_CharT>&) [with T = char]
2014-11-02 17:36:58	V-ille	atta boy
2014-11-02 17:37:38	V-ille	scwizard: implicit conversions are ok, it's just that the template will not perform conversions when _deducing types_
2014-11-02 17:37:39		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-02 17:38:19	V-ille	once the right template specialization has been decided, implicit conversions work fine. The problem is that deduction is an oft-used mechanism for deciding the right specialization ;)
2014-11-02 17:38:52	V-ille	I don't expect concepts to change any of this
2014-11-02 17:38:54		ObjectiveMatt (~Objective@66-87-150-215.pools.spcsdns.net) has joined ##c++
2014-11-02 17:39:02		drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Ping timeout: 250 seconds)
2014-11-02 17:39:22	scwizard	ok let me see if I'm following this
2014-11-02 17:39:43	scwizard	so a template needs to know it's types before it can instantiate
2014-11-02 17:39:51		Gentilhomme (~Gentilhom@unaffiliated/gentilhomme) has joined ##c++
2014-11-02 17:40:44	scwizard	but those types need to be explicit, they can't be implicit conversions
2014-11-02 17:41:05	scwizard	because otherwise you could have a class that converts into a int and into a string
2014-11-02 17:41:17	scwizard	and the template won't know which was to instantiate
2014-11-02 17:41:22	scwizard	*which way
2014-11-02 17:41:33	scwizard	did I get that right?
2014-11-02 17:43:55		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-02 17:44:55	Eelis	if geordi times out a lot tonight it's because i'm bisecting to find out which configure options break clang under docker
2014-11-02 17:45:33		yayachiken (~yayachike@host-115-67.kawo1.rwth-aachen.de) has quit (Remote host closed the connection)
2014-11-02 17:46:11	scwizard	V-ille: wait why does this compile then? http://codepad.org/Lh7DWXit
2014-11-02 17:46:37	scwizard	if operatior<< is a template, why does the implict conversion to int work?
2014-11-02 17:46:38		karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-02 17:47:12		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-02 17:47:44		nyqiust (~nyquist@46.165.208.194) has quit (Remote host closed the connection)
2014-11-02 17:47:47	cbreak	{ int i = operator<<; }
2014-11-02 17:47:50	geordi	error: cannot resolve overloaded function 'operator<<' based on conversion to type 'int'
2014-11-02 17:47:50	scwizard	does thee operator << for int not contain template paramters
2014-11-02 17:48:05	cbreak	scwizard: which operator<< for int?
2014-11-02 17:48:11	scwizard	I'm not sure
2014-11-02 17:48:17	cbreak	scwizard: you can't overload functions for primitive types only
2014-11-02 17:48:23	cbreak	so there must be an other type involved
2014-11-02 17:48:41	cbreak	or do you mean the builtin operator<<?
2014-11-02 17:48:46		yayachiken (~yayachike@host-115-67.kawo1.rwth-aachen.de) has joined ##c++
2014-11-02 17:48:58	K-ballo	I think he means these http://en.cppreference.com/w/cpp/io/basic_ostream/operator_ltlt
2014-11-02 17:49:13	refp	scwizard: the `operator<<` invoked for `some_ostream << int{}` is not a template, no.
2014-11-02 17:49:25	scwizard	ahh
2014-11-02 17:49:27		Yoofie (~chatzilla@107-147-214-101.res.bhn.net) has joined ##c++
2014-11-02 17:49:42	scwizard	ok that makes sense then
2014-11-02 17:51:00	refp	scwizard: the `operator<<` involved in `some_ostream << std::string {};` is however templated on std::basic_string, which explains the behavior you pasted
2014-11-02 17:51:19	scwizard	yeah V-ille  was explaining that to me a bit earlier
2014-11-02 17:51:58	darkerstar	i'm a little stuck on the differences between future and shared_future - with shared_future, get() can be called multiple times (because it returns a reference, rather than moving the value), right?
2014-11-02 17:53:03		hamid (~nithp@unaffiliated/hamid) has quit (Quit: leaving)
2014-11-02 17:55:18		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-02 17:56:14		sparetire_ (~sparetire@unaffiliated/sparetire) has quit (Quit: sparetire_)
2014-11-02 17:56:43		Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has quit (Quit: ZNC - http://znc.sourceforge.net)
2014-11-02 17:56:52		contempt (contempt@unaffiliated/contempt) has quit (Quit: Lost terminal)
2014-11-02 17:56:53		zyrox (~zyrox@cm-84.208.166.208.getinternet.no) has quit (Quit: Leaving)
2014-11-02 17:57:40		seishun (~Kakera@46.109.118.32) has quit (Ping timeout: 272 seconds)
2014-11-02 17:58:48		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-02 17:59:05	refp	darkerstar: yes, std::future::get will return the stored value as `std::move(value)`. since shared_future supports concurrent access to this object (through shared_future::get) a reference to the object within is retrieved
2014-11-02 17:59:19	scwizard	refp: Why don't implicit type conversions apply during template argument deduction? If they did what would the disadvantage of that be?
2014-11-02 18:00:09	K-ballo	scwizard: it comes to mind that that would require instantiating pretty much everything, just to see if there is an implicit conversion that could be called
2014-11-02 18:00:15		hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 240 seconds)
2014-11-02 18:00:51	scwizard	K-ballo: ok, so basically it's an implmentation problem mainly
2014-11-02 18:01:12	K-ballo	not necessarily, that's just something that immediately came to mind and I wouldn't want
2014-11-02 18:02:02		deekej (~deekej@195.65.3.245) has quit (Quit: See ya! Bye!)
2014-11-02 18:02:23	darkerstar	refp, that sounds already like the answer i was looking for - so i can call get() for the same shared_future multiple times, from multiple threads? (assuming there's no chance of race conditions with the way i'm using the result)
2014-11-02 18:02:41		Betal (~Beta@unaffiliated/betal) has joined ##c++
2014-11-02 18:03:26	darkerstar	as in, i can share the shared_future between threads - i don't need a shared_future for each thread?
2014-11-02 18:05:24	K-ballo	darkerstar: you can, actually, but you better share it (that's what it is for anyways)
2014-11-02 18:06:30	darkerstar	i can share a single shared_future? or create one for each thread?
2014-11-02 18:07:21	K-ballo	you can share a single shared_future, but you probably don't want to, you can give each thread a copy and they will all share the result
2014-11-02 18:07:25	refp	darkerstar: access to the underlying object is not synchronized, this pretty much means that you may only read from the data (ie. do nothing that would introduce a race on the value)
2014-11-02 18:07:40	refp	darkerstar: the problem with sharing a single shared_future is that if the last shared_future goes out of scope, the value is gone
2014-11-02 18:07:52		KrzaQ (~krzaq@krzaq.cc) has quit (Read error: Connection reset by peer)
2014-11-02 18:07:56		d_s_ (~dupasmoka@gateway/shell/mydevil.net/x-lfuskmjlmprcwycb) has joined ##c++
2014-11-02 18:08:09	darkerstar	yeah, reading is all i want to do - okay, sounds like multiple shared_futures sharing the state is probably the better option
2014-11-02 18:08:16	refp	darkerstar: it sure is
2014-11-02 18:08:53	darkerstar	thanks!
2014-11-02 18:09:04		titanium17 (~titanium1@2604:6000:6440:2200:7dc0:c1af:c173:3810) has quit (Ping timeout: 272 seconds)
2014-11-02 18:09:30		lamefun (~lamefun2@37.113.49.73) has quit (Ping timeout: 245 seconds)
2014-11-02 18:09:30		d_s (~dupasmoka@gateway/shell/mydevil.net/x-romqbkecnrzbjdrm) has quit (Ping timeout: 245 seconds)
2014-11-02 18:09:45		BlaXpirit (~blaxpirit@247-77-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-11-02 18:10:34		lamefun (~lamefun2@37.113.49.73) has joined ##c++
2014-11-02 18:11:52		ppf (~Miranda@HSI-KBW-091-089-000-186.hsi2.kabelbw.de) has quit (Read error: Connection reset by peer)
2014-11-02 18:15:23		paul424 (~chatzilla@91.207.69.217) has quit (Quit: ChatZilla 0.9.91 [Firefox 31.1.0/2014082900])
2014-11-02 18:15:23		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-02 18:15:40	scwizard	i wonder why std::string doesn't have a conversion operator to const char *
2014-11-02 18:15:41	ranu	Hello, a function with this signature: ¨Vector2D& Vector2D::cross(const Vector2D& Vector2D_other)¨
2014-11-02 18:15:41	ranu	 would return the adress of the vector?
2014-11-02 18:15:55	ranu	scwizard: c_str()
2014-11-02 18:16:00		k4r1m (uid40122@gateway/web/irccloud.com/x-jpwxvdvvmiscczwt) has joined ##c++
2014-11-02 18:16:00		PlasmaHH (~kvirc@speedy.projectiwear.org) has quit (Ping timeout: 265 seconds)
2014-11-02 18:16:16	scwizard	ranu: yeah I know, I'm just curious why theree isn't also a conversion operator
2014-11-02 18:16:39	ranu	Why do you mean by a: ¨conversion operator¨?
2014-11-02 18:16:50	ranu	What it woud like to be an conversion operator?
2014-11-02 18:16:58	scwizard	you can look it up in your C++ book
2014-11-02 18:17:21	ranu	would*
2014-11-02 18:18:09	--	vol4ko is now known as vol4ko[0]
2014-11-02 18:18:10	ranu	Sorry if I look like an ignorant with you.
2014-11-02 18:18:13	refp	scwizard: the alternative would be a much more complex developer environment
2014-11-02 18:18:20	--	vol4ko[0] is now known as vol4ko[1]
2014-11-02 18:18:23	--	vol4ko[1] is now known as vol4ko
2014-11-02 18:18:35		skeuomorf (~skeuomorf@unaffiliated/skeuomorf) has joined ##c++
2014-11-02 18:18:39	K-ballo	scwizard: implicit conversions is not something we want more of
2014-11-02 18:18:44		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-02 18:20:06		ambro718 (~ambro@gentoo/contributor/ambro718) has quit (Ping timeout: 244 seconds)
2014-11-02 18:22:02	scwizard	I like implicit conversions though :(
2014-11-02 18:22:45	cbreak	scwizard: just wait until they bite you in the ass
2014-11-02 18:23:06	cbreak	scwizard: for example std::string s("foo"); foo + 2; // what is this?
2014-11-02 18:23:30		Balzy (~Balzy@host190-163-dynamic.8-87-r.retail.telecomitalia.it) has quit (Ping timeout: 244 seconds)
2014-11-02 18:23:39	scwizard	in my mind: "foo2"
2014-11-02 18:23:47	cbreak	scwizard: it could be "o"
2014-11-02 18:23:57	K-ballo	<< std::string("foo") + 2
2014-11-02 18:23:58	cbreak	scwizard: if you had implicit conversion to char * :)
2014-11-02 18:23:59	geordi	error: no match for 'operator+' (operand types are 'string {aka string}' and 'int')
2014-11-02 18:24:15		Amaranth (~travis@ubuntu/member/Amaranth) has quit (Remote host closed the connection)
2014-11-02 18:24:27	cbreak	<< ("foo" + 2)
2014-11-02 18:24:35	cbreak	scwizard: neat, isn't it? :)
2014-11-02 18:24:36	geordi	o
2014-11-02 18:24:47	K-ballo	{ string foo = 2; cout << foo; }
2014-11-02 18:24:47	geordi	error: conversion from 'int' to non-scalar type 'string {aka string}' requested
2014-11-02 18:25:02	K-ballo	wasn't there an implicit conversion from int to string?
2014-11-02 18:25:13	cbreak	K-ballo: what is this, php?
2014-11-02 18:25:27	talisein	you can go from int to char :)
2014-11-02 18:25:43	scwizard	even python doesn't like implicit conversions as much as I do >_> http://codepad.org/fYlOxas4
2014-11-02 18:26:48	K-ballo	{ string s; s = 2; cout << s; } // cbreak: http://cplusplus.github.io/LWG/lwg-active.html#2372
2014-11-02 18:26:51	geordi	<no output>
2014-11-02 18:27:48		Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Ping timeout: 260 seconds)
2014-11-02 18:28:00	plash	yuck
2014-11-02 18:28:11	cbreak	K-ballo: I am sure that'll be a lot of fun with std::string s; s = toupper('k')
2014-11-02 18:28:20		PSG_Luna (uid48908@gateway/web/irccloud.com/x-hsxjplwwjmmgacuf) has quit (Quit: Connection closed for inactivity)
2014-11-02 18:28:47		Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-11-02 18:29:58	scwizard	i think the moral of this story is that explicit is better than implicit
2014-11-02 18:30:24		blackwind_123 (~IceChat9@117.192.134.135) has joined ##c++
2014-11-02 18:30:35	scwizard	usually
2014-11-02 18:31:38	K-ballo	"promotions" are usually fine, like short -> int and char* -> string
2014-11-02 18:31:49		W0rmDr1nk (~wormdrink@unaffiliated/cust0slim3n) has joined ##c++
2014-11-02 18:32:18	scwizard	that makes sense, if you think about language
2014-11-02 18:32:32	--	irc: disconnected from server
2014-11-02 18:34:51		dagnachew (~dagnachew@bas1-montreal30-2925416228.dsl.bell.ca) has joined ##c++
2014-11-02 18:34:51	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-11-02 18:34:51	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-11-02 18:34:51	--	Channel ##c++: 546 nicks (0 ops, 0 voices, 546 normals)
2014-11-02 18:34:51	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-11-02 18:35:07	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-11-02 18:36:11	scwizard	in practice char* is often pointing to something bigger than a single char
2014-11-02 18:36:14	scwizard	sometimes much bigger
2014-11-02 18:38:28		scwizard (45cef629@gateway/web/freenode/ip.69.206.246.41) has quit (Quit: Page closed)
2014-11-02 18:41:17		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-02 18:41:28	Loggan	Could someone remind me, with c++/CLI WPF is available right?
2014-11-02 18:41:50		Unhek (~Unhek@5468F7BA.cm-12-1d.dynamic.ziggo.nl) has joined ##c++
2014-11-02 18:43:25	Vinnie_win	At what point during the destructor of an object managed by a shared_ptr, does a call to lock() on a weak_ptr to that object return nullptr?
2014-11-02 18:44:11		ObjectiveMatt (~Objective@66-87-150-215.pools.spcsdns.net) has quit (Ping timeout: 255 seconds)
2014-11-02 18:44:33		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-02 18:45:08		shintah (bebble@h-140-107.a336.priv.bahnhof.se) has quit (Quit: Hejdå!)
2014-11-02 18:48:04		hyperair (~hyperair@ubuntu/member/hyperair) has quit (Ping timeout: 264 seconds)
2014-11-02 18:50:35		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-02 18:51:59	Eelis	Vinnie_win: "during the destructor"? what do you mean?
2014-11-02 18:52:34	V-ille	Vinnie_win: the weak_ptr doesn't point to that object. ;) I would expect that as soon as an object held by a shared state of a shared_ptr begins to be destroyed, all weak_ptrs pointing to that shared state are already null.
2014-11-02 18:52:37	Eelis	lock isn't going to return a shared_ptr to an already destructed object, if that's what you mean
2014-11-02 18:53:29		Albori (~Albori@64-251-150-248.fidnet.com) has quit
2014-11-02 18:53:51		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-02 18:55:50		Albori (~Albori@64-251-150-248.fidnet.com) has joined ##c++
2014-11-02 18:57:13		Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has quit (Read error: Connection reset by peer)
2014-11-02 18:57:47		Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has joined ##c++
2014-11-02 18:57:58		blenolopes (~blenolope@179.232.19.199) has joined ##c++
2014-11-02 18:58:36		W0rmDr1nk (~wormdrink@unaffiliated/cust0slim3n) has quit (Quit: Leaving)
2014-11-02 18:58:44		Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2014-11-02 18:59:08		tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has joined ##c++
2014-11-02 18:59:22		stdvector (~stdvector@gateway/tor-sasl/stdvector) has quit (Remote host closed the connection)
2014-11-02 18:59:24		Jubb (~Jubb@pool-72-66-106-10.washdc.fios.verizon.net) has joined ##c++
2014-11-02 19:00:34	SlashLife	Vinnie_win: It basically doesn't matter. You may only encounter this during a race condition between the destructor of the last shared_ptr and another thread locking a weak_ptr - and since it's a race condition it doesn't matter where exactly in the destructor the point of no return is, as seeing it from the destructing thread, the destructor is atomic.
2014-11-02 19:00:56		CustosLimen (~CustosLim@unaffiliated/cust0slim3n) has joined ##c++
2014-11-02 19:00:58	V-ille	SlashLife: there's no race - weak_ptr::lock() is atomic
2014-11-02 19:01:09	SlashLife	V-ille: Bear with me. :P
2014-11-02 19:01:23		nug700|2 (~nug700@71-35-50-37.phnx.qwest.net) has joined ##c++
2014-11-02 19:01:23	V-ille	as is, I believe, the decrement of the reference count in shared_ptr's destructor
2014-11-02 19:01:23	SlashLife	So the destructing thread neither knows nor cares whether the destructor just started, is somewhere in between, or ran completely but didn't return yet.
2014-11-02 19:01:28		jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has quit (Quit: leaving)
2014-11-02 19:01:35	Vinnie_win	So weak_ptr::lock() will always return nullptr when destruction of the managed object is inevitable
2014-11-02 19:01:38		King_Hual (~Hual@unaffiliated/king-hual/x-1207580) has quit (Ping timeout: 272 seconds)
2014-11-02 19:01:55		oberstein (~ober@2605:6400:20:748::ddee:deee) has quit (Ping timeout: 256 seconds)
2014-11-02 19:02:38	V-ille	As soon as the refcount drops below one, I think lock() will return a nullptr, regardless of how far into the target object's own destructor you are.
2014-11-02 19:03:14	SlashLife	The locking thread however does not care about the destruction in progress, either. It only cares about whether the weak_ptr is still lockable or not. And when the destructor running is for the last shared_ptr to it, then the fact whether it is lockable or not will change atomically.
2014-11-02 19:03:33	SlashLife	At *some* point during the destructor. It doesn't really matter at which point exactly.
2014-11-02 19:03:37		Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has quit (Read error: Connection reset by peer)
2014-11-02 19:03:47	SlashLife	Either weak_ptr::lock will find a lockable object - or not.
2014-11-02 19:04:09	V-ille	I would expect ~shared_ptr to do an atomic decrement
2014-11-02 19:04:10		nug700 (~nug700@71-35-50-37.phnx.qwest.net) has quit (Ping timeout: 272 seconds)
2014-11-02 19:04:58		echelon (~echelon@gateway/tor-sasl/harel) has left ##c++
2014-11-02 19:04:58	V-ille	so, if a weak_ptr::lock happens after that, you'll get a nullptr
2014-11-02 19:04:59	SlashLife	Mhh ...
2014-11-02 19:05:13	plash	what if it gets it right before ~shared_ptr
2014-11-02 19:05:14	SlashLife	Are you sure about the atomic decrement?
2014-11-02 19:05:27	SlashLife	Instinctively I'd go for a compare and exchange.
2014-11-02 19:05:34	plash	then goes to the ~shared_ptr, thus making your newly acquired weak_ptr now invalid
2014-11-02 19:06:02	V-ille	plash: well, no, because your weak_ptr::lock just increased the refcount
2014-11-02 19:06:19	plash	oh that's right
2014-11-02 19:06:22	plash	nevermind me
2014-11-02 19:07:14		kadoban (~kadoban@ip68-3-81-129.ph.ph.cox.net) has joined ##c++
2014-11-02 19:07:46		only_the_bear (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has quit (Ping timeout: 246 seconds)
2014-11-02 19:08:31	V-ille	so, if shared_ptr decreases the refcount first, weak_ptr will give you a nullptr. If weak_ptr locks first, ~shared_ptr will not destroy your object because its refcount is >1.
2014-11-02 19:09:10	SlashLife	Mhh ... ok, atomic_decrement would be ok; but atomic_increment would be problematic.
2014-11-02 19:09:22	SlashLife	(on locking)
2014-11-02 19:09:48	SlashLife	... if I think of this correctly.
2014-11-02 19:09:52		only_the_bear (~only_the_@gateway/tor-sasl/onlythebear/x-52658424) has joined ##c++
2014-11-02 19:10:02		Burgundy (~burgundy@5-12-46-60.residential.rdsnet.ro) has quit (Remote host closed the connection)
2014-11-02 19:10:35	V-ille	how is it problematic?
2014-11-02 19:10:38	SlashLife	A: ~shared: dec 1 -> 0 // B: lock(): inc 0 -> 1 // C: lock(): inc 1 -> 2
2014-11-02 19:11:00	SlashLife	Thread B would then notice that it incremented a zero refcount and decrement it again ...
2014-11-02 19:11:01	V-ille	Right. lock() will not merely do a blind inc.
2014-11-02 19:11:02		Burgundy (~burgundy@188.26.170.28) has joined ##c++
2014-11-02 19:11:15	SlashLife	... however by that time, C already thinks it has a valid reference.
2014-11-02 19:11:42	V-ille	well, not right
2014-11-02 19:12:01	V-ille	B's lock will not do that. If the refcount is zero, it'll give you a nullptr.
2014-11-02 19:12:13	V-ille	assuming that A did the decrement first.
2014-11-02 19:12:17	SlashLife	How would B know that it is 0? It's a race condition.
2014-11-02 19:12:24	SlashLife	Yes, B will give you a nullptr, C will not.
2014-11-02 19:12:33	V-ille	that depends on when C runs
2014-11-02 19:12:37	SlashLife	B will only know it after incrementing - if you use an atomic increment.
2014-11-02 19:12:54	V-ille	well, I guess it'll not do atomic operations, but will actually use a mutex.
2014-11-02 19:13:04	SlashLife	So locking would probably need to be implementing with compare&exchange or similar.
2014-11-02 19:13:37		bollullera (~ana@95.63.152.106) has joined ##c++
2014-11-02 19:15:34		hexagoxel_ (~hexagoxel@kiel-d9bfdcbc.pool.mediaWays.net) has quit (Quit: Ex-Chat)
2014-11-02 19:16:38		hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-11-02 19:17:47		Kulrak (kulrak@tlug/member/kulrak) has quit (Ping timeout: 245 seconds)
2014-11-02 19:19:03		arescorpio (~arescorpi@227-206-17-190.fibertel.com.ar) has joined ##c++
2014-11-02 19:22:16		nda_ (~nda_@68.216.16.62.customer.cdi.no) has quit (Read error: Connection reset by peer)
2014-11-02 19:22:59		nda_ (~nda_@68.216.16.62.customer.cdi.no) has joined ##c++
2014-11-02 19:24:35		Siberian_Tiger (~Nicholas@199-96-202-110.fidnet.com) has joined ##c++
2014-11-02 19:25:57		chrelad (~chrisdale@71-8-128-67.dhcp.stcd.mn.charter.com) has joined ##c++
2014-11-02 19:25:59		chrelad (~chrisdale@71-8-128-67.dhcp.stcd.mn.charter.com) has left ##c++
2014-11-02 19:26:53		yayachiken (~yayachike@host-115-67.kawo1.rwth-aachen.de) has quit (Remote host closed the connection)
2014-11-02 19:28:33		Gluesticky (~nobody@unaffiliated/gluesticky) has joined ##c++
2014-11-02 19:28:56		swaaws (~swaaws@2a01:1e8:e100:8553:f1c0:a7ee:1bb3:348c) has joined ##c++
2014-11-02 19:28:58		MrFlibble (LunarJetma@2.221.166.187) has quit (Quit: MrFlibble)
2014-11-02 19:32:57		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-02 19:35:14		swaaws (~swaaws@2a01:1e8:e100:8553:f1c0:a7ee:1bb3:348c) has quit (Quit: Linkinus - http://linkinus.com)
2014-11-02 19:35:51		Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Ping timeout: 272 seconds)
2014-11-02 19:36:11		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-02 19:37:07		Motig (~Motig@unaffiliated/motig) has quit (Quit: Bye)
2014-11-02 19:37:11		nfk (~nfk@unaffiliated/nfk) has quit (Quit: yawn)
2014-11-02 19:37:37		Motig (~Motig@unaffiliated/motig) has joined ##c++
2014-11-02 19:38:03		cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-02 19:39:31		Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-11-02 19:42:07		oberstein (~ober@2605:6400:20:748::ddee:deee) has joined ##c++
2014-11-02 19:44:19		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-02 19:44:27		LBV_User (~leonardo@177.18.182.35) has quit (Ping timeout: 265 seconds)
2014-11-02 19:45:52		LBV_User (~leonardo@177.18.96.49) has joined ##c++
2014-11-02 19:47:38		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-02 19:51:33		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-02 19:52:15		bollullera (~ana@95.63.152.106) has left ##c++
2014-11-02 19:53:29		Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Ping timeout: 264 seconds)
2014-11-02 19:54:53		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-02 19:57:19		Carbonflux (~BOB@75-172-120-225.tukw.qwest.net) has joined ##c++
2014-11-02 19:58:25		fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-02 19:58:46		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-02 19:59:05		pcfreak30 (~mint@cpe-075-177-116-215.triad.res.rr.com) has joined ##c++
2014-11-02 20:01:22		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-02 20:02:15		adam007 (67e96402@gateway/web/freenode/ip.103.233.100.2) has joined ##c++
2014-11-02 20:02:21		Scellow (~quassel@ip-249.net-89-2-143.rev.numericable.fr) has quit (Remote host closed the connection)
2014-11-02 20:02:22		BoredHam1 (~root@gateway/tor-sasl/boredhamster) has quit (Ping timeout: 246 seconds)
2014-11-02 20:02:22		asakura0 (~asakura@gateway/tor-sasl/asakura) has quit (Ping timeout: 246 seconds)
2014-11-02 20:02:29	adam007	how you sort from stack ?
2014-11-02 20:04:02		hz (~username@unaffiliated/hz) has quit (Quit: Leaving.)
2014-11-02 20:04:34		JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-11-02 20:04:41		kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has joined ##c++
2014-11-02 20:04:41		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-02 20:05:10	pcfreak30	Novice question that is really giving me trouble. I am compiling two libraries inside of  one project with an app. Everything compiles but i get "fatal error LNK1120: 37 unresolved externals" on linking. Using MS compiler/VS2010. Any help?
2014-11-02 20:05:42		Nando_k (~Nando_k@dslc-082-083-017-000.pools.arcor-ip.net) has quit (Ping timeout: 258 seconds)
2014-11-02 20:06:55		McMAGIC--Copy (~McMAGIC--@gateway/tor-sasl/mcmagic--copy) has quit (Ping timeout: 246 seconds)
2014-11-02 20:08:33		BoredHam1 (~root@gateway/tor-sasl/boredhamster) has joined ##c++
2014-11-02 20:10:40		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-02 20:13:45		vol4ko (null@unaffiliated/vol4ko) has quit (Remote host closed the connection)
2014-11-02 20:13:54		blippyp (~cen@S0106602ad06f7c30.su.shawcable.net) has joined ##c++
2014-11-02 20:13:57		vol4ko (null@unaffiliated/vol4ko) has joined ##c++
2014-11-02 20:14:01		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-02 20:15:44		Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-11-02 20:16:39		rpag (~rg4@unaffiliated/rg4) has quit (Quit: Leaving)
2014-11-02 20:17:00		adam007 (67e96402@gateway/web/freenode/ip.103.233.100.2) has quit (Quit: Page closed)
2014-11-02 20:18:43		ac_slater (~weechat@96.237.110.242) has quit (Ping timeout: 244 seconds)
2014-11-02 20:22:09		deSilva (~deSilva@c83-254-208-59.bredband.comhem.se) has quit
2014-11-02 20:24:15		irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has quit (Quit: Lost terminal)
2014-11-02 20:24:43		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-02 20:25:43		milesrout (~user@unaffiliated/mrout) has joined ##c++
2014-11-02 20:25:59	milesrout	I have someone interested in learning C++. They know C. What's the current recommendation for books?
2014-11-02 20:26:10	milesrout	Is it still C++ Primer Plus?
2014-11-02 20:26:13	introom	hi. regarding the grammar itself, why `i= i++` is considered ambiguous?
2014-11-02 20:26:15	milesrout	Or C++ Primer?
2014-11-02 20:26:32	hs_	wave of questions!
2014-11-02 20:26:37		immibis (~ChatZill1@122-59-227-101.jetstream.xtra.co.nz) has joined ##c++
2014-11-02 20:26:39	introom	it's something about sequence point.
2014-11-02 20:26:45	milesrout	introom: because it's undefined (because you don't know whether the increment happens before or after the assignment)
2014-11-02 20:26:51	hs_	pcfreak30, make sure you are linking properly.. add the .lib file to the project, etc.. (also not on topic ##here)
2014-11-02 20:26:56	hs_	milesrout, see !books
2014-11-02 20:27:00	hs_	!books
2014-11-02 20:27:02	nolyc	The Definitive C++ Book Guide and List -> http://stackoverflow.com/q/388242/1090079
2014-11-02 20:27:04	milesrout	ty
2014-11-02 20:27:23	hs_	Internet13, i=i++ is undefined behavior
2014-11-02 20:27:26	introom	milesrout: yup. but `i = j++` works fine.
2014-11-02 20:27:28	hs_	er, introom
2014-11-02 20:27:49	introom	++ has a higher precedence of =, why the order is undefined?
2014-11-02 20:27:59	hs_	because the (eventual) increment of i is not guaranteed to occur either before or after the assignment
2014-11-02 20:28:17	introom	hs_: cool.
2014-11-02 20:28:22	introom	understands.
2014-11-02 20:28:45	introom	that's why the call `side effeces`, and that's why the introduction of sequence point.
2014-11-02 20:28:59	introom	actually I come across this article, http://en.wikipedia.org/wiki/Sequence_point
2014-11-02 20:29:00	pcfreak30	hs_ um they are not separate projects so they would not be creating their own .libs
2014-11-02 20:29:16	pcfreak30	its all one code base
2014-11-02 20:30:57	hs_	introom, "sequence point" is not in C++11 terminology anymore, but there is sequencing
2014-11-02 20:31:20		Haswell (~Haswell@unaffiliated/haswell) has quit (Quit: Haswell)
2014-11-02 20:31:30		ac_slater (~weechat@96.237.110.242) has joined ##c++
2014-11-02 20:32:41	introom	hs_: wait I am still confused. `i = i++`, first evaluate i++, but the result is still the orignial i, not (i+1). No matter the lefthande side i is of i or i+1 or not, it's still assigned back to i.
2014-11-02 20:32:46		Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-02 20:32:50	introom	what's the ambiguity here?
2014-11-02 20:33:28	pcfreak30	introom: i = ++i;
2014-11-02 20:33:38	introom	pcfreak30: this will pass.
2014-11-02 20:33:50	pcfreak30	your assigns then increases
2014-11-02 20:33:58	introom	en.
2014-11-02 20:34:00	pcfreak30	++i increases then assigns
2014-11-02 20:34:07	introom	then what about i = i++ ?
2014-11-02 20:34:15	pcfreak30	that will increase after
2014-11-02 20:34:20	pcfreak30	i = 1
2014-11-02 20:34:23	pcfreak30	i = i++
2014-11-02 20:34:31	pcfreak30	i is still 1, but print i
2014-11-02 20:34:33	pcfreak30	its 2
2014-11-02 20:35:06	pcfreak30	i++ sets after, ++i sets before
2014-11-02 20:35:07		Stanley00 (~Stanley_0@unaffiliated/stanley00) has joined ##c++
2014-11-02 20:35:19	introom	yup. I know the difference.
2014-11-02 20:36:06	--	inf-groupoid is now known as pyon
2014-11-02 20:36:24	introom	milesrout: I know what you mean. It's like i++ gives the orignial i, but whether i be set to (i+1) or i = original_i is evaluated first is ub.
2014-11-02 20:39:05		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-02 20:39:11		pfo__ (~pfo@chello084114049188.14.vie.surfer.at) has quit (Ping timeout: 272 seconds)
2014-11-02 20:39:15		leeN (~leeN@e181197072.adsl.alicedsl.de) has quit (Read error: Connection reset by peer)
2014-11-02 20:40:02		Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-11-02 20:40:37		FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 250 seconds)
2014-11-02 20:42:14		Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-11-02 20:42:25		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-02 20:42:34		SlashLife_ (~slashlife@botters/slashlife) has joined ##c++
2014-11-02 20:43:13	hs_	introom, suppose i == 0.. i = i++ could go (temp = i; ++i; i = temp;), so the result would be i == 0.. or it could go (temp = i; i = temp; ++i;) so i == 1
2014-11-02 20:44:17	hs_	I think those cases work
2014-11-02 20:45:08		schleppel (~quassel@141.39.226.237) has quit (Read error: Connection reset by peer)
2014-11-02 20:45:19	LBV_User	hs_: your second example doesnt make much sense to me because:
2014-11-02 20:45:21	LBV_User	geordi: --precedence i=i++
2014-11-02 20:45:22	geordi	i=(i++)
2014-11-02 20:45:38		SlashLife (~slashlife@botters/slashlife) has quit (Ping timeout: 256 seconds)
2014-11-02 20:45:47	LBV_User	but that's why it is an UB :)
2014-11-02 20:47:14		lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-11-02 20:47:28	hs_	afaik the compiler is free to rewrite "i=(i++);" as "temp = i; i = temp; ++i;"
2014-11-02 20:47:58		pfo__ (~pfo@chello084114049188.14.vie.surfer.at) has joined ##c++
2014-11-02 20:48:21	LBV_User	I see... but makes me wonder what is the point on "i = temp"...
2014-11-02 20:48:40		ra4king (~ra4king@unaffiliated/ra4king) has quit (Excess Flood)
2014-11-02 20:48:45	LBV_User	because of the assignment part?
2014-11-02 20:49:09		ra4king (~ra4king@unaffiliated/ra4king) has joined ##c++
2014-11-02 20:49:44	hs_	yeah, "i = sometemporary;" is the straightforward reading of i=x++;
2014-11-02 20:50:22	hs_	so you would ordinarily have i = x++; --> "temp = x; i = x; ++x;"
2014-11-02 20:51:20		SlashLife (~slashlife@botters/slashlife) has joined ##c++
2014-11-02 20:51:35		Garner (uid38417@gateway/web/irccloud.com/x-cigbngfddodxufnl) has quit (Quit: Connection closed for inactivity)
2014-11-02 20:51:42		SlashLife_ (~slashlife@botters/slashlife) has quit (Ping timeout: 265 seconds)
2014-11-02 20:52:09		slkwd (8a1a4135@gateway/web/freenode/ip.138.26.65.53) has joined ##c++
2014-11-02 20:52:10		geordi (~geordi@vps38193.public.cloudvps.com) has quit (Remote host closed the connection)
2014-11-02 20:53:25		geordi (~geordi@vps38193.public.cloudvps.com) has joined ##c++
2014-11-02 20:54:01	slkwd	can anyone tell me why this regex isnt matching? http://pastebin.com/yYzAfLQj
2014-11-02 20:54:05	LBV_User	does geordi's tracked classes have the postfix increment and assignment operators?
2014-11-02 20:54:24	slkwd	I've used two regex matchers and they said it should match
2014-11-02 20:54:29	hs_	{ tracked::B b; ++b; b++; }
2014-11-02 20:54:31		geordi (~geordi@vps38193.public.cloudvps.com) has quit (Remote host closed the connection)
2014-11-02 20:54:38	hs_	clang, { tracked::B b; ++b; b++; }
2014-11-02 20:54:40	clang	)B0*))++B0))B1*(B0)))++B0))B1~))B0~)
2014-11-02 20:55:43		geordi (~geordi@vps38193.public.cloudvps.com) has joined ##c++
2014-11-02 20:56:27		lamefun (~lamefun2@37.113.49.73) has quit (Quit: Leaving)
2014-11-02 20:56:48	LBV_User	slkwd: try using extended...
2014-11-02 20:56:52		vol4ko (null@unaffiliated/vol4ko) has quit (Ping timeout: 255 seconds)
2014-11-02 20:56:55		unK_ (~drunK@62.87.155.235) has quit (Quit: KVIrc 4.3.1 Aria http://www.kvirc.net/)
2014-11-02 20:57:31		geordi (~geordi@vps38193.public.cloudvps.com) has quit (Remote host closed the connection)
2014-11-02 20:57:32	slkwd	LBV_User: will do
2014-11-02 20:58:28	slkwd	LBV_User: didn't work :/
2014-11-02 20:59:04		geordi (~geordi@vps38193.public.cloudvps.com) has joined ##c++
2014-11-02 20:59:16		geordi (~geordi@vps38193.public.cloudvps.com) has quit (Remote host closed the connection)
2014-11-02 20:59:41	slkwd	LBV_User: All I did was change "basic" to "extended".  I believe that is what you meant? http://pastebin.com/6Gw7cqAS
2014-11-02 21:00:06	LBV_User	yes
2014-11-02 21:00:29		geordi (~geordi@vps38193.public.cloudvps.com) has joined ##c++
2014-11-02 21:00:48	slkwd	hmm
2014-11-02 21:01:50		ObjectiveMatt (~Objective@66.87.150.215) has joined ##c++
2014-11-02 21:02:05		scwizard (45cef629@gateway/web/freenode/ip.69.206.246.41) has joined ##c++
2014-11-02 21:02:12		Alextrovert (~Alextrove@108-162-178-107.cable.teksavvy.com) has joined ##c++
2014-11-02 21:02:21		SlashLife_ (~slashlife@botters/slashlife) has joined ##c++
2014-11-02 21:02:30	LBV_User	slkwd: but why an regext just to seek an _ ?
2014-11-02 21:02:36	scwizard	this is going to sound dumb... I have a singleton. If the singleton isn't destroyed before the program stops running then the users terminal can get messed up somehow
2014-11-02 21:03:08	scwizard	What's the best I can do to make sure I destroy this thing before the program ends?
2014-11-02 21:03:26		SlashLife_ (~slashlife@botters/slashlife) has quit (Read error: Connection reset by peer)
2014-11-02 21:03:57		SlashLife_ (~slashlife@botters/slashlife) has joined ##c++
2014-11-02 21:04:11	slkwd	LBV_User: It does a bit more than that.  It should match strings that represent an underscored variable name like "this_is_underscored".  I also want to match camel case variable names("thisIsCamelCase"), but that isn't working either.
2014-11-02 21:04:12		mxiia (~mxiia@unaffiliated/mxiia) has joined ##c++
2014-11-02 21:04:24	hs_	scwizard, what do you mean "destroyed"?
2014-11-02 21:04:40	scwizard	hs_: the last line of my program is: delete TermKey::instance();
2014-11-02 21:04:44		SlashLife (~slashlife@botters/slashlife) has quit (Ping timeout: 258 seconds)
2014-11-02 21:04:53	scwizard	if I comment out this line, then when I run the program wierd things happen to the terminal
2014-11-02 21:04:58	scwizard	and I need to kill the tmux pane :(
2014-11-02 21:05:17	hs_	if you need dynamic allocation, use a unique_ptr instead of your probably not unique_ptr that you are using now
2014-11-02 21:05:27	hs_	otherwise why not just make it a local object in main?
2014-11-02 21:06:12	hs_	a global object with static storage will destruct properly too
2014-11-02 21:07:06	scwizard	hmm
2014-11-02 21:07:26	LBV_User	slkwd: for me, your code worked fine on gcc...
2014-11-02 21:07:33	LBV_User	slkwd: are you using -std=c++11?
2014-11-02 21:07:45	slkwd	hmm
2014-11-02 21:08:28	LBV_User	with extended, with basic it didn't find anyway
2014-11-02 21:08:33	slkwd	heh. doesnt look like it.
2014-11-02 21:08:38		cubik (~cubik@2601:a:4f80:1e0:fc67:6014:a547:3862) has quit (Read error: Connection reset by peer)
2014-11-02 21:08:57		jrgill (~jrgill@unaffiliated/jrgill) has quit (Read error: Connection reset by peer)
2014-11-02 21:09:32	scwizard	anyone have a C++ design patterns book recommendation?
2014-11-02 21:09:39	slkwd	LBV_User: Do you happen to know what variable I need to set in a Makefile to set compile flags?
2014-11-02 21:09:56	slkwd	LBV_User: Is it CXX_FLAGS....?
2014-11-02 21:10:17	LBV_User	slkwd: it seems so... I never used makefiles directly :)
2014-11-02 21:10:43	slkwd	alright. thanks! I'll let you know if that works for me
2014-11-02 21:10:49	LBV_User	;)
2014-11-02 21:11:14		plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-02 21:11:15		cubik (~cubik@c-68-48-89-76.hsd1.dc.comcast.net) has joined ##c++
2014-11-02 21:11:24		SlashLife (~slashlife@botters/slashlife) has joined ##c++
2014-11-02 21:12:27		plitter (~plitter@52.84-48-49.nextgentel.com) has joined ##c++
2014-11-02 21:12:41	scwizard	‘unique_ptr’ in namespace ‘std’ does not name a type when will C++11 be the default :<
2014-11-02 21:12:45		SlashLife_ (~slashlife@botters/slashlife) has quit (Ping timeout: 272 seconds)
2014-11-02 21:13:41		Kitt3n (red@unaffiliated/kitt3n) has quit (Read error: Connection reset by peer)
2014-11-02 21:14:31		pi- (~Ohmu@cpc69129-oxfd25-2-0-cust987.4-3.cable.virginm.net) has quit
2014-11-02 21:15:05		kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has quit (Ping timeout: 264 seconds)
2014-11-02 21:15:17		CodeJunkyJay (~CodeJunky@184.91.52.202) has quit (Ping timeout: 250 seconds)
2014-11-02 21:15:47		K3|Chris (~ChrisK3@unaffiliated/krill3) has quit (Remote host closed the connection)
2014-11-02 21:17:22		saint-ron (~rons@bb219-74-71-79.singnet.com.sg) has quit (Ping timeout: 256 seconds)
2014-11-02 21:18:02		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-02 21:18:47		jrgill (~jrgill@unaffiliated/jrgill) has joined ##c++
2014-11-02 21:19:41		V-ille (~ville@ip-64-134-160-40.public.wayport.net) has quit (Ping timeout: 265 seconds)
2014-11-02 21:20:00		Yoofie (~chatzilla@107-147-214-101.res.bhn.net) has quit (Quit: ChatZilla 0.9.91-rdmsoft [XULRunner 32.0.3/20140923175406])
2014-11-02 21:20:07	slkwd	LBV_User: sett CFLAGS and CXXFLAGS didn't seem to help.  I'll keep playing with it though.  I'm sure that's where my problem is coming from
2014-11-02 21:20:12	slkwd	thanks
2014-11-02 21:20:30		linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:c9f1:107c:ee07:af97) has joined ##c++
2014-11-02 21:20:52		Shayanjm (~Shayanjm@67.222.130.131) has quit (Quit: ZNC - http://znc.in)
2014-11-02 21:21:14	LBV_User	slkwd: idk if clang would not give an error, since regex is an c++11 feature
2014-11-02 21:21:47	slkwd	idk.  Im new to C++ :P
2014-11-02 21:22:06	LBV_User	slkwd: try updating your compiler(s)
2014-11-02 21:24:48	scwizard	TermKey::instance_p = new TermKey; <- if instance_p is a unique_ptr is this the right syntax?
2014-11-02 21:25:29	scwizard	error: no match for ‘operator=’ (operand types are ‘std::unique_ptr<TermKey>’ and ‘TermKey*’) <- I'm getting this
2014-11-02 21:26:57		linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:c9f1:107c:ee07:af97) has quit (Quit: Leaving)
2014-11-02 21:27:02	hs_	where are you doing this?
2014-11-02 21:27:08		hyperair (~hyperair@ubuntu/member/hyperair) has joined ##c++
2014-11-02 21:27:32	scwizard	http://codepad.org/T4Ro1eP3
2014-11-02 21:27:35	Stanley00	scwizard: you should use TermKey::intance_p.reset(new Termkey);
2014-11-02 21:28:21	Stanley00	scwizard: or better, with constructor, eg  std::unique_ptr<int> pointer{new int};
2014-11-02 21:28:43	scwizard	curly brackets???
2014-11-02 21:28:55	scwizard	what kind of syntax is that I don't understand
2014-11-02 21:29:07	Stanley00	scwizard: yep, c++11 style for constructor =]]
2014-11-02 21:29:08	hs_	yep, c++11's new "uniform" initialization
2014-11-02 21:29:22	scwizard	wow never heard of that before
2014-11-02 21:29:35	scwizard	so what is "pointer" is it a keyword?
2014-11-02 21:29:37		rnickb (~rnickb@ool-44c6f08b.dyn.optonline.net) has joined ##c++
2014-11-02 21:29:46	hs_	no, that's the name of the unique_ptr
2014-11-02 21:29:49	Stanley00	scwizard: it's variable name
2014-11-02 21:29:52	scwizard	oh
2014-11-02 21:30:16	rnickb	when would you want to use forceinline instead of inline?
2014-11-02 21:31:03	scwizard	what would be easiest
2014-11-02 21:31:12	scwizard	would be if I just saw a example of a singleton using unique_ptr
2014-11-02 21:31:21		McMAGIC--Copy (~McMAGIC--@gateway/tor-sasl/mcmagic--copy) has joined ##c++
2014-11-02 21:31:32		ranu (~RAFAEL@177-190-224-67.mconline.com.br) has left ##c++
2014-11-02 21:31:43		rufianw (~ntrrgc@212.183.221.145.dyn.user.ono.com) has quit (Quit: Konversation terminated!)
2014-11-02 21:32:25	hs_	singleton is not typically recommended
2014-11-02 21:32:35	hs_	!singleton
2014-11-02 21:32:36	nolyc	In most cases singletons should be avoided, they often make non-trivial programs clunky and difficult to maintain. If you really are considering using a singleton, you should first read http://molecularmusings.wordpress.com/2011/11/11/singleton-is-an-anti-pattern/, http://www.ibm.com/developerworks/library/co-single.html and http://www.ddj.com/cpp/184401625 before doing so.
2014-11-02 21:32:58		dansan (~daniel@99-70-244-137.lightspeed.rcsntx.sbcglobal.net) has quit (Remote host closed the connection)
2014-11-02 21:33:01	scwizard	yeah I read all that stuff
2014-11-02 21:33:10		Orion] (~nname@unaffiliated/orion/x-3970838) has quit
2014-11-02 21:33:24		dansan (~daniel@99-70-244-137.lightspeed.rcsntx.sbcglobal.net) has joined ##c++
2014-11-02 21:33:39	scwizard	in this case it's sort of an inhertited pattern though
2014-11-02 21:34:51	hs_	nothing about unique_ptr lends itself directly to "singleton"
2014-11-02 21:35:09	scwizard	I don't understand...
2014-11-02 21:35:19	scwizard	the reason I even started on unique pointer was because my original problem was:
2014-11-02 21:35:35	scwizard	[21:04] <scwizard> this is going to sound dumb... I have a singleton. If the singleton isn't destroyed before the program stops running then the users terminal can get messed up somehow [21:04] <scwizard> What's the best I can do to make sure I destroy this thing before the program ends?
2014-11-02 21:35:51	hs_	how were you allocating the "singleton" before?
2014-11-02 21:36:03	hs_	what did your previous code look like?
2014-11-02 21:36:44	scwizard	hs_: like so: http://codepad.org/pjXtOXHV
2014-11-02 21:37:17	hs_	I see
2014-11-02 21:37:32	scwizard	now so long as I do delete TermKey::instance();
2014-11-02 21:37:48	hs_	do you need to have a pointer type? you could always just do static TermKey& getInstance() { static TermKey blah{}; return blah; }
2014-11-02 21:37:49	scwizard	before the program ends there's no problem. But if that doesn't happen, then things get screwed up
2014-11-02 21:37:51		Orbitrix (~Huevos@c-76-113-30-226.hsd1.nm.comcast.net) has joined ##c++
2014-11-02 21:37:52		Orbitrix (~Huevos@c-76-113-30-226.hsd1.nm.comcast.net) has quit (Excess Flood)
2014-11-02 21:37:58		Sauvin (~Sauvin@about/linux/staff/sauvin) has joined ##c++
2014-11-02 21:38:12	hs_	that creates and initializes a statically allocated TermKey, and returns a reference to it
2014-11-02 21:38:21	hs_	and any subsequent calls skip the initialization and just return the reference
2014-11-02 21:38:24		Orbitrix (~Huevos@c-76-113-30-226.hsd1.nm.comcast.net) has joined ##c++
2014-11-02 21:38:30	hs_	and it is automatically deleted at the end of the program
2014-11-02 21:38:44	scwizard	that's very intersting
2014-11-02 21:39:08	scwizard	I mean "don't return references to local vars" is something that is nailed into you
2014-11-02 21:39:18	hs_	_otherwise_ you would want to do something like make TermKey::instance_p a unique_ptr
2014-11-02 21:39:20	scwizard	but in that case it makes sense
2014-11-02 21:40:02	hs_	and instead of "TermKey::instance_p = new TermKey;" do "TermKey::instance_p.reset(new TermKey);"
2014-11-02 21:40:29	hs_	the reference returner might be nicer
2014-11-02 21:41:42		ObjectiveMatt (~Objective@66.87.150.215) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-11-02 21:42:04		asakura0 (~asakura@gateway/tor-sasl/asakura) has joined ##c++
2014-11-02 21:44:43		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-02 21:48:03		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-02 21:48:06		r_rios (~quassel@hyadesinc/pub/oa) has joined ##c++
2014-11-02 21:49:17	scwizard	hs_: the static handle method, seems like a much simpler and cleaner way of doing a singleton than messing around with new
2014-11-02 21:49:40	scwizard	*the technique where you return a handle to a static
2014-11-02 21:50:06		k0nichiwa (~jdoe@174.71.181.20) has joined ##c++
2014-11-02 21:50:09	scwizard	sorta makes me wonder why people would ever do things the way with new and all
2014-11-02 21:52:28		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-02 21:53:09		FreezingCold (~FreezingC@135.0.41.14) has joined ##c++
2014-11-02 21:54:32		shirt (~shirt@adsl-v01-3db14831dc15da1b.tau.ac.il) has quit (Ping timeout: 265 seconds)
2014-11-02 21:55:00	hs_	you don't have much control of the destruction order of the function level static
2014-11-02 21:55:31		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-02 21:55:46		apparle (~quassel@cpe-174-109-074-132.nc.res.rr.com) has joined ##c++
2014-11-02 21:55:53	hs_	but otherwise.. who knows
2014-11-02 21:56:39		ac_slater_ (~weechat@96.237.110.242) has joined ##c++
2014-11-02 21:57:35	scwizard	since singletons are generally disliked I wonder...
2014-11-02 21:57:54	scwizard	It's a very common problem: you have an input buffer, and you want to grab from it
2014-11-02 21:58:30		LBV_User (~leonardo@177.18.96.49) has quit (Quit: Konversation terminated!)
2014-11-02 21:58:55	scwizard	to me it makes sense to have some kind of global thingy that manages that
2014-11-02 22:01:40		armyriad (~armyriad@198.23.71.94-static.reverse.softlayer.com) has quit (Ping timeout: 264 seconds)
2014-11-02 22:02:38		armyriad (~armyriad@pool-71-160-141-93.lsanca.fios.verizon.net) has joined ##c++
2014-11-02 22:03:33		Shayanjm (~Shayanjm@67.222.130.131) has joined ##c++
2014-11-02 22:03:37	scwizard	the reason I think "singleton" is because I think "what happens if termkey_new() is called more than once? Everything breaks"
2014-11-02 22:05:54		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-02 22:06:09		fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-02 22:06:26		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-02 22:06:38		geordi (~geordi@vps38193.public.cloudvps.com) has quit (Remote host closed the connection)
2014-11-02 22:08:07		slkwd (8a1a4135@gateway/web/freenode/ip.138.26.65.53) has quit (Ping timeout: 246 seconds)
2014-11-02 22:09:13		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-02 22:09:31		geordi (~geordi@vps38193.public.cloudvps.com) has joined ##c++
2014-11-02 22:09:37		geordi (~geordi@vps38193.public.cloudvps.com) has quit (Remote host closed the connection)
2014-11-02 22:10:44		geordi (~geordi@vps38193.public.cloudvps.com) has joined ##c++
2014-11-02 22:10:58		geordi (~geordi@vps38193.public.cloudvps.com) has quit (Remote host closed the connection)
2014-11-02 22:11:22		shintahW2 (~oer894n@c83-248-102-44.bredband.comhem.se) has joined ##c++
2014-11-02 22:12:05		geordi (~geordi@vps38193.public.cloudvps.com) has joined ##c++
2014-11-02 22:12:37		geordi (~geordi@vps38193.public.cloudvps.com) has quit (Remote host closed the connection)
2014-11-02 22:13:43		geordi (~geordi@vps38193.public.cloudvps.com) has joined ##c++
2014-11-02 22:16:05		shintahW (~oer894n@c83-248-102-44.bredband.comhem.se) has quit (Ping timeout: 272 seconds)
2014-11-02 22:16:05	--	shintahW2 is now known as shintahW
2014-11-02 22:17:09		govg (~govg@unaffiliated/govg) has quit (Quit: Lost terminal)
2014-11-02 22:17:28		geordi (~geordi@vps38193.public.cloudvps.com) has quit (Remote host closed the connection)
2014-11-02 22:18:35		geordi (~geordi@vps38193.public.cloudvps.com) has joined ##c++
2014-11-02 22:19:30		ObjectiveMatt (~Objective@66-87-150-215.pools.spcsdns.net) has joined ##c++
2014-11-02 22:20:53		ObjectiveMatt (~Objective@66-87-150-215.pools.spcsdns.net) has quit (Read error: Connection reset by peer)
2014-11-02 22:23:28		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has quit (Read error: Connection reset by peer)
2014-11-02 22:24:24		govg (~govg@unaffiliated/govg) has joined ##c++
2014-11-02 22:25:50		ac_slater_ (~weechat@96.237.110.242) has quit (Ping timeout: 244 seconds)
2014-11-02 22:26:46		armyriad (~armyriad@pool-71-160-141-93.lsanca.fios.verizon.net) has quit (Ping timeout: 258 seconds)
2014-11-02 22:26:47		zwf (~Thunderbi@modemcable169.140-19-135.mc.videotron.ca) has joined ##c++
2014-11-02 22:27:09		scwizard (45cef629@gateway/web/freenode/ip.69.206.246.41) has quit (Quit: Page closed)
2014-11-02 22:27:12		zima (zima@c75.152.27-202.clta.globetrotter.net) has quit (Quit: zima)
2014-11-02 22:27:57		Gentilhomme (~Gentilhom@unaffiliated/gentilhomme) has quit (Remote host closed the connection)
2014-11-02 22:28:02		armyriad (~armyriad@pool-71-160-141-93.lsanca.fios.verizon.net) has joined ##c++
2014-11-02 22:28:41		k0nichiwa (~jdoe@174.71.181.20) has quit (Ping timeout: 258 seconds)
2014-11-02 22:28:43	--	irc: disconnected from server
2014-11-03 19:03:38		dagnachew (~dagnachew@bas1-montreal30-2925416228.dsl.bell.ca) has joined ##c++
2014-11-03 19:03:38	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-11-03 19:03:38	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-11-03 19:03:38	--	Channel ##c++: 530 nicks (0 ops, 0 voices, 530 normals)
2014-11-03 19:03:38	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-11-03 19:03:53	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-11-03 19:04:48	o-O-o	is condition variable moveable? then just generate a default move ctor
2014-11-03 19:05:01	davek	I should mention the actual issue is that GCC 4.8.2 keeps deleting my move constructor because std::condition_variable_any has a deleted copy constructor. I've tried explicitly initializing it in the move constructors initialization list with m_cv(std::move(o.m_cv)) and no dice.
2014-11-03 19:05:08		ARM9 (~ARM9@46-236-101-75.customer.t3.se) has joined ##c++
2014-11-03 19:05:57	davek	o-0-o, the default gets deleted. The docs don't say that CV is immovable, the only thing it indicates is that the copy constructor is deleted. Wouldn't that mean it fits the bill implicit move construction?
2014-11-03 19:06:03	doug64k	davek: use shared_ptr if you must move it, or otherwise store it such that it never moves the actual condition variable
2014-11-03 19:06:05	davek	o-0-o*
2014-11-03 19:06:08		ormaaj (~ormaaj@75-168-147-181.mpls.qwest.net) has quit (Quit: WeeChat 1.1-dev)
2014-11-03 19:06:48		Hannibal_Smith (~Hannibal_@host24-29-dynamic.35-79-r.retail.telecomitalia.it) has quit (Quit: Sto andando via)
2014-11-03 19:06:57		k0nichiwa (~jdoe@wsip-174-77-237-196.ga.at.cox.net) has quit (Ping timeout: 250 seconds)
2014-11-03 19:07:18		voidah (~voidah@184.151.127.140) has joined ##c++
2014-11-03 19:07:31		jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-03 19:07:37	davek	doug64k, trying to avoid the use of pointers. How might that latter concept be implemented without that? With my limited knowledge, it would appear that it can't be implemented but perhaps there's some pattern or concept I'm missing.
2014-11-03 19:09:48	davek	You know what, this feels wrong and these members don't necessarily need to be initialized at construction so I'm just going to move them into the function where they are actually used.
2014-11-03 19:10:32		saedelaere (~quassel@unaffiliated/saedelaere) has quit (Read error: Connection reset by peer)
2014-11-03 19:11:43		dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 250 seconds)
2014-11-03 19:12:02		jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Ping timeout: 255 seconds)
2014-11-03 19:13:24		Nando_k (~Nando_k@dslb-178-003-168-164.178.003.pools.vodafone-ip.de) has quit (Ping timeout: 265 seconds)
2014-11-03 19:14:49		dfletcher (~dfletcher@drupal.org/user/72475/view) has quit (Ping timeout: 256 seconds)
2014-11-03 19:15:15	doug64k	davek: how else can you make sure that other threads don't have the object "move" unexpectedly out from under them when they are doing something concurrently with you. you either add some sort of garbage collection system that keeps the old copy alive long enough for the other thread to survive its access to the stale version or you outlaw moving it
2014-11-03 19:16:20		Viata (~ViataTrib@177.156.84.150) has joined ##c++
2014-11-03 19:17:23		SHLV (~ViataTrib@201.47.78.53.dynamic.adsl.gvt.net.br) has quit (Ping timeout: 245 seconds)
2014-11-03 19:18:21		cbreak (~cbreak@77-58-205-66.dclient.hispeed.ch) has joined ##c++
2014-11-03 19:19:13		tz (~tz@zero.tzarc.ninja) has quit (Ping timeout: 244 seconds)
2014-11-03 19:19:38		Zifre (~Zifre@unaffiliated/zifre) has joined ##c++
2014-11-03 19:19:46	davek	doug64k, yeah the motivations make sense to me now. Since the members in question are irrelevant outside of the class's main loop function I'm just going to initialize them in the function before the loop.
2014-11-03 19:20:05		tz (~tz@zero.tzarc.ninja) has joined ##c++
2014-11-03 19:20:14	davek	Thank you for explaining that doug64k!
2014-11-03 19:21:42		Longlius (~longlius@68.170.238.146) has joined ##c++
2014-11-03 19:22:28		Aranshada|W (~Aranshada@rrcs-74-62-96-10.west.biz.rr.com) has joined ##c++
2014-11-03 19:23:05	--	irc: disconnected from server
2014-11-03 19:24:42		dagnachew (~dagnachew@bas1-montreal30-2925416228.dsl.bell.ca) has joined ##c++
2014-11-03 19:24:42	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-11-03 19:24:42	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-11-03 19:24:42	--	Channel ##c++: 529 nicks (0 ops, 0 voices, 529 normals)
2014-11-03 19:24:42	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-11-03 19:24:56	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-11-03 19:25:47		dfletcher (~dfletcher@drupal.org/user/72475/view) has joined ##c++
2014-11-03 19:26:21		a_le (~a_le@166.170.38.192) has joined ##c++
2014-11-03 19:29:10		ARM9 (~ARM9@46-236-101-75.customer.t3.se) has quit (Quit: swi 0x06)
2014-11-03 19:29:32		dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-11-03 19:30:08		Yoofie (~chatzilla@107-147-214-101.res.bhn.net) has joined ##c++
2014-11-03 19:30:19		crewshin (~crewshin@pool-74-100-141-7.lsanca.fios.verizon.net) has joined ##c++
2014-11-03 19:30:57		linuxuz3r (~linuxuz3r@2602:306:bd2a:a160:dc83:ab44:da66:140a) has quit (Quit: Leaving)
2014-11-03 19:31:13		Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-11-03 19:34:03		Number2 (~JS@unaffiliated/number2) has joined ##c++
2014-11-03 19:34:18		comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has quit (Quit: Bye)
2014-11-03 19:34:30		Viata (~ViataTrib@177.156.84.150) has quit (Read error: Connection reset by peer)
2014-11-03 19:35:12		Viata (~ViataTrib@177.156.84.150) has joined ##c++
2014-11-03 19:36:35		Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Ping timeout: 265 seconds)
2014-11-03 19:36:54		the_file (4cad2665@gateway/web/freenode/ip.76.173.38.101) has joined ##c++
2014-11-03 19:37:39		the_file (4cad2665@gateway/web/freenode/ip.76.173.38.101) has left ##c++
2014-11-03 19:39:38		Anoniem4l (~Anoniem4l@unaffiliated/anoniem4l) has quit (Quit: say wat)
2014-11-03 19:40:15		Anoniem4l (~Anoniem4l@unaffiliated/anoniem4l) has joined ##c++
2014-11-03 19:40:48		dfletcher (~dfletcher@drupal.org/user/72475/view) has quit (Read error: Connection reset by peer)
2014-11-03 19:40:54		doug64k (~doug@ERMLON6511W-LP130-02-1177804923.dsl.bell.ca) has quit (Ping timeout: 244 seconds)
2014-11-03 19:41:47		hexagoxel_ (~hexagoxel@kiel-4d0665e6.pool.mediaways.net) has joined ##c++
2014-11-03 19:42:38		Scellow (~quassel@ip-249.net-89-2-143.rev.numericable.fr) has quit (Remote host closed the connection)
2014-11-03 19:44:57		Stanley00 (~Stanley_0@unaffiliated/stanley00) has joined ##c++
2014-11-03 19:45:02		hexagoxel (~hexagoxel@kiel-5f77c602.pool.mediaWays.net) has quit (Ping timeout: 264 seconds)
2014-11-03 19:45:48		cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-03 19:46:48	MrFlibble	stop trying to move all the things.
2014-11-03 19:48:18		davidstone (~david@184-96-181-40.hlrn.qwest.net) has joined ##c++
2014-11-03 19:51:39		Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined ##c++
2014-11-03 19:53:16		vocodork (~vocoder@94-227-99-249.access.telenet.be) has joined ##c++
2014-11-03 19:57:55		apparle (~quassel@cpe-174-109-074-132.nc.res.rr.com) has joined ##c++
2014-11-03 19:58:22		fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-03 19:58:43		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-03 20:04:57		aslant (~aslant@5751a00f.skybroadband.com) has quit (Remote host closed the connection)
2014-11-03 20:08:16		aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-11-03 20:09:06		MrFlibble (LunarJetma@2.221.166.187) has quit (Quit: MrFlibble)
2014-11-03 20:12:26		dardevelin (~dardeveli@unaffiliated/dardevelin) has quit (Read error: Connection timed out)
2014-11-03 20:12:59		delta-nry (~delta-nry@S0106c8fb2658a55a.vc.shawcable.net) has joined ##c++
2014-11-03 20:13:14		hexagoxel_ (~hexagoxel@kiel-4d0665e6.pool.mediaways.net) has quit (Ping timeout: 264 seconds)
2014-11-03 20:14:09		Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has joined ##c++
2014-11-03 20:15:58		matt90 (~matt90@149-169-159-208.nat.asu.edu) has quit (Quit: Leaving)
2014-11-03 20:17:29		vocodork_ (~vocoder@94-227-99-249.access.telenet.be) has joined ##c++
2014-11-03 20:17:36		rpag (~rg4@unaffiliated/rg4) has joined ##c++
2014-11-03 20:18:04		vocodork (~vocoder@94-227-99-249.access.telenet.be) has quit (Ping timeout: 256 seconds)
2014-11-03 20:18:43		Dessimat0r (~Dessimat0@btcw.me) has joined ##c++
2014-11-03 20:19:18		BinaryAddicted (~BinaryAdd@194.230.155.143) has joined ##c++
2014-11-03 20:20:12		BinaryAddicted (~BinaryAdd@194.230.155.143) has quit (Client Quit)
2014-11-03 20:21:43		jbeaudry (~jbeaudry@209.136.132.18) has quit (Remote host closed the connection)
2014-11-03 20:24:30		robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 256 seconds)
2014-11-03 20:26:17		vocodork (~vocoder@94-227-99-249.access.telenet.be) has joined ##c++
2014-11-03 20:26:18		xico (~xico@cpe-66-75-25-39.san.res.rr.com) has quit (Ping timeout: 265 seconds)
2014-11-03 20:26:46		vocodork_ (~vocoder@94-227-99-249.access.telenet.be) has quit (Ping timeout: 256 seconds)
2014-11-03 20:28:32		SibTiger|Laptop (~Nicholas@199-96-202-110.fidnet.com) has joined ##c++
2014-11-03 20:30:22		arescorpio (~arescorpi@227-206-17-190.fibertel.com.ar) has joined ##c++
2014-11-03 20:31:34		robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-11-03 20:31:35		aslant (~aslant@5751a00f.skybroadband.com) has quit (Remote host closed the connection)
2014-11-03 20:32:03		robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Client Quit)
2014-11-03 20:32:40		SibTiger|Laptop (~Nicholas@199-96-202-110.fidnet.com) has quit (Client Quit)
2014-11-03 20:32:59		lamefun (~lamefun2@37.113.49.110) has joined ##c++
2014-11-03 20:34:11	lamefun	hell
2014-11-03 20:34:59	lamefun	http://ideone.com/eC3KW4 - I hope when people start running away to Apple Swift, C++ compiler developers will come to their senses and NOT expand all layers of templates in error messages...
2014-11-03 20:35:13	lamefun	All praise Apple! All praise PROprietary software! All praise sanity!
2014-11-03 20:35:40		webshinra (~shinra@6cn77-1-88-186-244-116.fbx.proxad.net) has quit (Ping timeout: 244 seconds)
2014-11-03 20:35:52	o11c	last I checked "swift" and "sanity" don't belong in the same sentence
2014-11-03 20:36:07	delta-nry	you could be using objc
2014-11-03 20:36:09	o11c	lamefun: and as of a couple years ago, C++ compilers don't expand all template layers
2014-11-03 20:36:22		Alextrovert (~Alextrove@108.162.178.107) has joined ##c++
2014-11-03 20:36:53		Carbonflux (~BOB@75-172-120-225.tukw.qwest.net) has joined ##c++
2014-11-03 20:36:58	lamefun	o11c, how Swift isn't the sanest language there is?
2014-11-03 20:37:17	delta-nry	sane is subjective ;)
2014-11-03 20:37:35		immibis (~ChatZill1@122-59-227-101.jetstream.xtra.co.nz) has joined ##c++
2014-11-03 20:38:00		EvilPenguin (~EvilPengu@173.247.204.218) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2014-11-03 20:39:16		VladolfPutler (~jasper@5ED7DF59.cm-7-8d.dynamic.ziggo.nl) has joined ##c++
2014-11-03 20:39:29	kalven	lamefun: o11c's definition of sane languages: is it rust? then yes, else no.
2014-11-03 20:40:58	VladolfPutler	so, I tried Microsoft's .NET CLR/C++, but isn't it a bit... awful?
2014-11-03 20:41:02		aslant (~aslant@5751a00f.skybroadband.com) has joined ##c++
2014-11-03 20:41:11		ac_slater_ (~weechat@dhcp89-69-173.bbn.com) has quit (Quit: WeeChat 1.0.1)
2014-11-03 20:41:21	delta-nry	clang: {o11c { return isRust ? true : false}}
2014-11-03 20:41:22		a_le (~a_le@166.170.38.192) has quit (Remote host closed the connection)
2014-11-03 20:41:23	clang	error: use of undeclared identifier 'o11c'
2014-11-03 20:41:57		a_le (~a_le@mobile-166-171-248-195.mycingular.net) has joined ##c++
2014-11-03 20:42:10	lamefun	Apple innovates! Apple is best! Apple saves!
2014-11-03 20:42:36	VladolfPutler	this sounds like an ad to me...
2014-11-03 20:42:42		mikroflops (~yogurt@178.174.137.62) has quit (Ping timeout: 250 seconds)
2014-11-03 20:43:08	lamefun	And it's also the truth.
2014-11-03 20:43:26		Artpicre (~Artpicre@unaffiliated/artpicre) has quit (Ping timeout: 244 seconds)
2014-11-03 20:44:43		mikroflops (~yogurt@178.174.137.62) has joined ##c++
2014-11-03 20:45:06		Cirus (~Cirus@2601:9:80:101c:94b:2c5:bc2b:1b9c) has joined ##c++
2014-11-03 20:46:08	lamefun	Is boost variant used in real projects?
2014-11-03 20:46:10		a_le (~a_le@mobile-166-171-248-195.mycingular.net) has quit (Ping timeout: 250 seconds)
2014-11-03 20:50:28		hx0 (~hx0@unaffiliated/hx0) has joined ##c++
2014-11-03 20:54:10	Betal	there is a 'better' way of doing this? http://ideone.com/PLd7Ff - the idea is that the derived classes should 'autoregister' itself, so it can be called using a string
2014-11-03 20:54:35		SlashLife (~slashlife@botters/slashlife) has joined ##c++
2014-11-03 20:56:15		Orion] (~nname@unaffiliated/orion/x-3970838) has quit
2014-11-03 20:56:37		CodeJunkyJay (~kvirc@184.91.52.202) has quit (Ping timeout: 256 seconds)
2014-11-03 20:57:19	davidstone	lamefun: I'm going to be testing out boost::variant at my job for handling storage of network messages
2014-11-03 20:57:59		Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-03 20:58:10		JohnnyL (~john@ool-457a8633.dyn.optonline.net) has quit (Ping timeout: 245 seconds)
2014-11-03 20:58:17		Anoniem4l (~Anoniem4l@unaffiliated/anoniem4l) has quit (Quit: say wat)
2014-11-03 20:58:32		yayachiken (~yayachike@host-115-67.kawo1.rwth-aachen.de) has quit (Remote host closed the connection)
2014-11-03 20:58:52		Anoniem4l (~Anoniem4l@unaffiliated/anoniem4l) has joined ##c++
2014-11-03 20:59:16		lamefun (~lamefun2@37.113.49.110) has quit (Remote host closed the connection)
2014-11-03 21:03:40		dfletcher_ (~dfletcher@drupal.org/user/72475/view) has joined ##c++
2014-11-03 21:03:46		Taywee (~taylor@2601:1:8b80:595:1136:a3e7:c884:b18f) has joined ##c++
2014-11-03 21:05:43		notpara (~para@213.187.75.26) has quit (Ping timeout: 240 seconds)
2014-11-03 21:06:21	--	dfletcher_ is now known as dfletcher
2014-11-03 21:07:11		snakenerd (~Thunderbi@177.40.236.9) has joined ##c++
2014-11-03 21:07:24		oberstein (~ober@2605:6400:20:748::ddee:deee) has joined ##c++
2014-11-03 21:07:28		Haswell (~Haswell@unaffiliated/haswell) has quit (Quit: Haswell)
2014-11-03 21:08:34		robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-11-03 21:08:35		robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Remote host closed the connection)
2014-11-03 21:09:12		cubik (~cubik@2601:a:4f80:1e0:1805:f93d:9c69:229) has quit (Read error: Connection reset by peer)
2014-11-03 21:09:52		voidah (~voidah@184.151.127.140) has quit (Ping timeout: 255 seconds)
2014-11-03 21:11:48		snakenerd (~Thunderbi@177.40.236.9) has quit (Client Quit)
2014-11-03 21:11:48		zima (zima@c75.152.27-202.clta.globetrotter.net) has quit (Quit: zima)
2014-11-03 21:11:49		cubik (~cubik@c-68-48-89-76.hsd1.dc.comcast.net) has joined ##c++
2014-11-03 21:15:16		Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-11-03 21:15:26		ValicekB (~tbox@dot.snat.baz.cz) has quit (Ping timeout: 272 seconds)
2014-11-03 21:16:03		ValicekB (~tbox@dot.snat.baz.cz) has joined ##c++
2014-11-03 21:17:05	--	oleo is now known as Guest29468
2014-11-03 21:17:33		KAHR-Alpha (~Alpha@AReims-652-1-160-194.w81-250.abo.wanadoo.fr) has quit (Ping timeout: 265 seconds)
2014-11-03 21:19:02		oleo__ (~oleo@xdsl-78-35-143-184.netcologne.de) has joined ##c++
2014-11-03 21:19:56		leeN (~leeN@e180187116.adsl.alicedsl.de) has quit (Read error: Connection reset by peer)
2014-11-03 21:20:30		Guest29468 (~oleo@xdsl-78-35-189-63.netcologne.de) has quit (Ping timeout: 272 seconds)
2014-11-03 21:25:19		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-03 21:27:12		Alextrovert (~Alextrove@108.162.178.107) has quit (Quit: Leaving)
2014-11-03 21:36:17		schleppel (~quassel@141.39.226.237) has quit (Remote host closed the connection)
2014-11-03 21:41:22		the_file (4cad2665@gateway/web/freenode/ip.76.173.38.101) has joined ##c++
2014-11-03 21:41:27	the_file	whats wrong with this code http://dpaste.com/3NQJS7D
2014-11-03 21:42:38		SibTiger|Laptop (~Nicholas@199-96-202-110.fidnet.com) has joined ##c++
2014-11-03 21:43:23		robink (~quassel@unaffilated/robink) has joined ##c++
2014-11-03 21:43:45		KAHR-Alpha (~Alpha@AReims-652-1-160-194.w81-250.abo.wanadoo.fr) has joined ##c++
2014-11-03 21:44:02	Stanley00	the_file: the wrong is... it's not c++ :3
2014-11-03 21:44:16	Stanley00	the_file: it's the java style, I think
2014-11-03 21:44:24	the_file	=/
2014-11-03 21:44:27		Yoofie (~chatzilla@107-147-214-101.res.bhn.net) has quit (Quit: ChatZilla 0.9.91-rdmsoft [XULRunner 32.0.3/20140923175406])
2014-11-03 21:44:32	delta-nry	this is a joke, right
2014-11-03 21:45:14	delta-nry	there is no System.out.println() in c++
2014-11-03 21:47:02	the_file	how can is this fixed?
2014-11-03 21:47:11	the_file	with a cout << ?
2014-11-03 21:47:22	delta-nry	yes
2014-11-03 21:47:25	delta-nry	!using
2014-11-03 21:47:26	nolyc	ISO 14882:2003 17.4.4.1.1 `A C++ header may include other C++ headers.' . If you include any C++ header in your program and then do using namespace std; in some scope, you might be bringing every C++ standard library identifier into that scope. There is no way of portably knowing which ones.
2014-11-03 21:48:13	delta-nry	essentially prefer to use std::cout and remove “using” declarations whenever possible
2014-11-03 21:48:19	the_file	delta-nry: like this? http://dpaste.com/2ND9E9A
2014-11-03 21:48:34		robink (~quassel@unaffilated/robink) has quit (Ping timeout: 258 seconds)
2014-11-03 21:48:46	delta-nry	the_file: the second line
2014-11-03 21:49:00	the_file	delta-nry: i should have put from, to
2014-11-03 21:49:09	the_file	delta-nry: is the cmath header valid?
2014-11-03 21:49:25		SibTiger|Laptop (~Nicholas@199-96-202-110.fidnet.com) has quit (Quit: Everyone, I have a very dramatic announcement. So anyone with a weak heart should leave now. Goodbye.)
2014-11-03 21:50:06		JohnnyL (~john@ool-457a8633.dyn.optonline.net) has joined ##c++
2014-11-03 21:50:43	delta-nry	the_file: yes. Using a c++ header over a c header is recommended though
2014-11-03 21:50:54		wto (~wto@h-141-69.a336.priv.bahnhof.se) has quit (Ping timeout: 265 seconds)
2014-11-03 21:51:15	the_file	delta-nry: how is this line changed to c++ ? http://dpaste.com/305VT4X
2014-11-03 21:51:29		robink (~quassel@unaffilated/robink) has joined ##c++
2014-11-03 21:51:32		wto (~wto@h-141-69.a336.priv.bahnhof.se) has joined ##c++
2014-11-03 21:52:29		koderok (~koderok@14.141.153.182) has joined ##c++
2014-11-03 21:52:29	delta-nry	the_file: try using something similar to the other cout statement you created
2014-11-03 21:52:43	delta-nry	have to go now
2014-11-03 21:52:48		delta-nry (~delta-nry@S0106c8fb2658a55a.vc.shawcable.net) has left ##c++
2014-11-03 21:55:21		CustosLimen (~CustosLim@unaffiliated/cust0slim3n) has joined ##c++
2014-11-03 21:59:26		Cl-Martin (uid36038@gateway/web/irccloud.com/x-zdgarenniyrdwjxe) has quit (Quit: Connection closed for inactivity)
2014-11-03 22:01:11	the_file	damn
2014-11-03 22:01:31	the_file	i got trolled by a person who was helping me do this lab, apparently i didn't even know he wrote his thing in java
2014-11-03 22:01:32	the_file	lol
2014-11-03 22:01:58		hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 244 seconds)
2014-11-03 22:02:02	the_file	isn't java unpopular among c programers?
2014-11-03 22:02:12	the_file	seems like it is
2014-11-03 22:03:14	kadoban	A lot of programmers pick one language and hate all others. They also tend to be the loudest voices. So most languages are unpopular amongst the users of other languages.
2014-11-03 22:03:56	the_file	does that even go for people whom predominantly use interpreted languages?
2014-11-03 22:04:09		SibTiger|Laptop (~Nicholas@199-96-202-110.fidnet.com) has joined ##c++
2014-11-03 22:04:51	kadoban	To some extent, sure. It depends on the language though.
2014-11-03 22:07:32	the_file	it seems to me perl/php/shell/python people get along well
2014-11-03 22:07:41		Trondby (~Trondby@unaffiliated/trondby) has joined ##c++
2014-11-03 22:08:03	the_file	just for some reason ruby is unpopular among a lot of programers
2014-11-03 22:08:11	kadoban	Well, everyone hates PHP...but that includes most of the people who use it too
2014-11-03 22:08:34	the_file	haha
2014-11-03 22:10:02	the_file	why is that?
2014-11-03 22:11:57	kadoban	It's a pretty horribly designed language. People only use it because it's convenient for what it does (generate HTML nicely).
2014-11-03 22:12:36	the_file	are webpages written in c/c++ ?
2014-11-03 22:12:46	the_file	cause isn't that what cgi allows you to do?
2014-11-03 22:13:11		JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-11-03 22:13:17	kadoban	You can use them for CGI, sure. It's not as simple as PHP though.
2014-11-03 22:15:49		SneakyMoose (~Alextrove@108.162.178.107) has joined ##c++
2014-11-03 22:17:00		arescorpio (~arescorpi@227-206-17-190.fibertel.com.ar) has quit (Excess Flood)
2014-11-03 22:17:17		lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-11-03 22:18:08		cubik (~cubik@c-68-48-89-76.hsd1.dc.comcast.net) has quit (Ping timeout: 272 seconds)
2014-11-03 22:19:29		Viata (~ViataTrib@177.156.84.150) has quit (Ping timeout: 265 seconds)
2014-11-03 22:19:44		taplaptap (~lol@unaffiliated/tapout) has joined ##c++
2014-11-03 22:19:54	the_file	doesen't writing a website in a compiled language make it safer? cause that way there are no source files, if the box was rooted
2014-11-03 22:20:12	the_file	altho speed might be different
2014-11-03 22:20:47		JohnnyL (~john@ool-457a8633.dyn.optonline.net) has quit (Ping timeout: 244 seconds)
2014-11-03 22:20:52	taplaptap	does Bo Qian come into these channels?
2014-11-03 22:20:53		lamefun (~lamefun2@37.113.49.110) has joined ##c++
2014-11-03 22:21:08		SibTiger|Laptop (~Nicholas@199-96-202-110.fidnet.com) has quit (Quit: Everyone, I have a very dramatic announcement. So anyone with a weak heart should leave now. Goodbye.)
2014-11-03 22:24:40		sparetire_ (~sparetire@unaffiliated/sparetire) has quit (Quit: sparetire_)
2014-11-03 22:27:14		Aranshada|W (~Aranshada@rrcs-74-62-96-10.west.biz.rr.com) has left ##c++
2014-11-03 22:27:47		VladolfPutler (~jasper@5ED7DF59.cm-7-8d.dynamic.ziggo.nl) has quit (Ping timeout: 255 seconds)
2014-11-03 22:30:03		dropdrive (~dropdrive@cpe-72-229-31-172.nyc.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-11-03 22:31:03		vocodork (~vocoder@94-227-99-249.access.telenet.be) has quit (Ping timeout: 264 seconds)
2014-11-03 22:31:24		vocodork (~vocoder@94-227-99-249.access.telenet.be) has joined ##c++
2014-11-03 22:31:51		vol4ko (null@unaffiliated/vol4ko) has quit (Remote host closed the connection)
2014-11-03 22:31:58		vol4ko_g (null@unaffiliated/vol4ko) has joined ##c++
2014-11-03 22:32:39		Lutece (~Lutece@95.211.190.205) has joined ##c++
2014-11-03 22:32:45		astrofog (~astrofog@79-101-184-176.dynamic.isp.telekom.rs) has joined ##c++
2014-11-03 22:34:20		RussellLoewe (~russ@static-50-43-34-237.bvtn.or.frontiernet.net) has joined ##c++
2014-11-03 22:35:07		whoever (~trevor@cpe-70-112-251-98.austin.res.rr.com) has joined ##c++
2014-11-03 22:35:54	whoever	hi all here is my code that i am convering from java to c++ and i am gett MAth not declared in scope error , can some one assist
2014-11-03 22:36:00	whoever	http://pastebin.com/nAQUAvPE
2014-11-03 22:36:03		vol4ko (null@unaffiliated/vol4ko) has joined ##c++
2014-11-03 22:36:29		jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-03 22:37:20	milesrout	there's no such thing as Math.ceil in C++.
2014-11-03 22:37:49	Lutece	whoever: you do not need Math.
2014-11-03 22:37:58	Lutece	just including the header file gives you access to the functions
2014-11-03 22:38:05	Lutece	example: http://www.cplusplus.com/reference/cmath/logb/
2014-11-03 22:38:26	milesrout	Lutece: cppreference is better than cplusplus.com btw
2014-11-03 22:38:36	Stryyker	Lutece: Is your nick a refernce to Bioshock?
2014-11-03 22:38:38		vol4ko_g (null@unaffiliated/vol4ko) has quit (Ping timeout: 245 seconds)
2014-11-03 22:38:42	Lutece	maybe >.>
2014-11-03 22:38:49	Lutece	Yeah
2014-11-03 22:38:51	Stryyker	freaky
2014-11-03 22:39:00	Stryyker	both male and female at the same time
2014-11-03 22:39:10	Stryyker	whoever: ceil()
2014-11-03 22:39:18	whoever	Lutece: so i just need the header for cmath? and can then int =ciel(Math.sqrt())  ?
2014-11-03 22:39:37	Stryyker	No, stop prefixing mathematical things with Math.
2014-11-03 22:39:38	milesrout	whoever: no, you don't put "Math." before anything.
2014-11-03 22:39:55	Lutece	ceil(sqrt(int));
2014-11-03 22:40:05	milesrout	Lutece: read that again
2014-11-03 22:40:14	whoever	MissionCritical: ah, did you notice my op, i said converting from java .thx
2014-11-03 22:40:15		hmmmm (~sdfgsf@pool-96-253-200-77.sctnpa.east.verizon.net) has joined ##c++
2014-11-03 22:40:23	Lutece	I just stole it from his code and removed math...
2014-11-03 22:40:26	Lutece	oh wow
2014-11-03 22:40:28	Lutece	ok
2014-11-03 22:40:44	hmmmm	hi, is there some sort of STL thing i can use to zero out a new element in a std::vector?
2014-11-03 22:40:57	Lutece	whoever: line 13 should not be a thing
2014-11-03 22:41:14	milesrout	hmmmm: you awnt to do what, now?
2014-11-03 22:41:26		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has quit (Ping timeout: 264 seconds)
2014-11-03 22:41:28	hmmmm	basically i want to preserve a slot for something by allocating the additional memory, set it to 0, and THEN increment the size counter
2014-11-03 22:41:31	hmmmm	in that order
2014-11-03 22:41:52	Stryyker	What are you putting in the vector? It may already be 0
2014-11-03 22:41:55	hmmmm	trying to do a lock-free, wait-free multiple reader/single writer setup on a std::vector
2014-11-03 22:42:36		Kn|t3 (~Kn|t3@metro29st13.m.subnet.rcn.com) has joined ##c++
2014-11-03 22:43:26		irrenhaus3 (~xenon@hms3141.wh-hms.uni-ulm.de) has joined ##c++
2014-11-03 22:43:37	whoever	i am  using g++ and not sure how to get rid of this error/warning http://pastebin.com/w1jNZvav
2014-11-03 22:44:22		sze (~sze@c-24-19-210-87.hsd1.wa.comcast.net) has joined ##c++
2014-11-03 22:44:24	milesrout	whoever: did you read it? It says "must be enabled with the -std=c++11 or -std=gnu++11 compiler options."
2014-11-03 22:44:24	davek	whoever, uhh enable the -std=c++11 flag?
2014-11-03 22:45:18		vol4ko (null@unaffiliated/vol4ko) has quit (Ping timeout: 258 seconds)
2014-11-03 22:45:59	whoever	milesrout: davek i did read it , but i don't get that error when i compile a simple hellowold  so that why i thaught it may be compaining for some oter reason ie : include not needed
2014-11-03 22:46:07		o-O-o (36f0c4b9@gateway/web/freenode/ip.54.240.196.185) has quit (Ping timeout: 246 seconds)
2014-11-03 22:46:23		vol4ko (null@unaffiliated/vol4ko) has joined ##c++
2014-11-03 22:46:24	milesrout	whoever: what is the file that you wanted to compile?
2014-11-03 22:47:09	davek	whoever, so the compiler tells you that something in your included file requires C++11. You compile another program that does not include that file and get no such error. How does this demonstrate anything other than what the compiler was already saying?
2014-11-03 22:47:14	Stryyker	simple hello world uses stuff from older C++ standard
2014-11-03 22:47:36	Lutece	whoever: you don't get that error with a helloworld becuase it uses more basic C++ functions, with your other file you are tying to use a C++11 feature, which some compilers need speicified... as said above :)
2014-11-03 22:47:49		Betal (~Beta@unaffiliated/betal) has quit (Remote host closed the connection)
2014-11-03 22:48:14	whoever	davek: thx that actualy made it clear  as to how i was getting the error thx
2014-11-03 22:48:48		vocodork_ (~vocoder@94-227-99-249.access.telenet.be) has joined ##c++
2014-11-03 22:50:10		vocodork (~vocoder@94-227-99-249.access.telenet.be) has quit (Ping timeout: 260 seconds)
2014-11-03 22:53:01		vocodork_ (~vocoder@94-227-99-249.access.telenet.be) has quit (Client Quit)
2014-11-03 22:54:12		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-03 22:55:23	davek	I'll go ahead and share that with Stryyker, Lutece etc who all offered more comprehensive and patient answers :P
2014-11-03 22:55:57	 *	Lutece dries eyes a little
2014-11-03 22:56:57		hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-11-03 22:57:02		kailoAtWork (~kailoAtWo@208.184.77.122) has quit (Quit: This computer has gone to sleep)
2014-11-03 22:59:20		dropdrive (~dropdrive@cpe-72-229-31-172.nyc.res.rr.com) has joined ##c++
2014-11-03 23:00:37	the_file	can anybody tell me how to fix this syntax error? http://dpaste.com/1KJCMJR
2014-11-03 23:01:41	Lutece	that line is the error on?
2014-11-03 23:02:06	Stryyker	line 16?
2014-11-03 23:02:17	Lutece	thought as much
2014-11-03 23:02:18	hs_	the_file, there is UB
2014-11-03 23:02:28	hs_	beyond syntax errors
2014-11-03 23:02:41	hs_	you can't do "int a; int b = a;" a is uninitialized
2014-11-03 23:02:41	the_file	ahh
2014-11-03 23:03:37	the_file	now what? http://dpaste.com/2JGY62F
2014-11-03 23:03:54	Stryyker	same issue
2014-11-03 23:03:59		vol4ko (null@unaffiliated/vol4ko) has quit (Ping timeout: 250 seconds)
2014-11-03 23:04:19	Lutece	He inits it with a cin
2014-11-04 20:24:50		dagnachew (~dagnachew@bas1-montreal30-2925416228.dsl.bell.ca) has joined ##c++
2014-11-04 20:24:50	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-11-04 20:24:50	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-11-04 20:24:50	--	Channel ##c++: 537 nicks (0 ops, 0 voices, 537 normals)
2014-11-04 20:24:50	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-11-04 20:25:07	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-11-04 20:27:03		a_le (~a_le@252.sub-70-197-2.myvzw.com) has quit (Remote host closed the connection)
2014-11-04 20:28:12		lamefun (~lamefun2@37.113.49.110) has quit (Quit: Leaving)
2014-11-04 20:30:55	Eelis	nolyc: haha, that made me laught
2014-11-04 20:30:57	Eelis	*laugh
2014-11-04 20:33:41		TheTeapot (~TheTeapot@129.78.56.198) has quit (Quit: Quitting)
2014-11-04 20:34:30	SlashLife	Does it randomly quote from the standard?
2014-11-04 20:35:32	Eelis	it sure does!
2014-11-04 20:35:53		altin (~altin@flossk/altin) has quit (Ping timeout: 265 seconds)
2014-11-04 20:36:24	Eelis	nolyc, did you know that the injected-class-name of a class is also considered to be a member of that class for the purposes of name hiding and lookup?
2014-11-04 20:36:25	nolyc	I did you know that the injected-class-name of a class is also considered to be a member of that class for the purposes of name hiding and lookup?!
2014-11-04 20:36:35	Eelis	yes!
2014-11-04 20:36:56	Eelis	well?
2014-11-04 20:38:38		z|Andy (~amale@pool-71-184-246-124.bstnma.fios.verizon.net) has quit
2014-11-04 20:39:14		staylor (~staylor@S0106602ad0901f12.cg.shawcable.net) has joined ##c++
2014-11-04 20:39:37		AndyP2 (~Andy-chan@xdsl-87-78-155-13.netcologne.de) has quit (Ping timeout: 260 seconds)
2014-11-04 20:39:54		BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has joined ##c++
2014-11-04 20:40:00	SlashLife	I just googled to find out what that means ... and whom did I find replying to the SO question? PlasmaHH.
2014-11-04 20:40:06	SlashLife	This channel is everywhere!
2014-11-04 20:40:16	SlashLife	If it's not PlasmaHH, it's litb.
2014-11-04 20:40:53		drale2k (~drale2k@chello213047091195.1.14.vie.surfer.at) has quit (Read error: Connection reset by peer)
2014-11-04 20:43:19		altin (~altin@flossk/altin) has joined ##c++
2014-11-04 20:44:49		Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-11-04 20:46:20		alex10791 (~alex10791@0189800493.0.fullrate.dk) has joined ##c++
2014-11-04 20:47:58		altin (~altin@flossk/altin) has quit (Ping timeout: 265 seconds)
2014-11-04 20:51:20		freebird2 (~freebird_@191.180.37.15) has joined ##c++
2014-11-04 20:51:24	freebird2	hi, please, why servent struct shows me a sizeof 32bytes, when the sum of all wont pass 28 please ?   char *s_name; char **s_aliases; int s_port; char *s_proto;     each pointer has 8 bytes, and the int, 4 bytes, but when I sizeof servent, it shows me 32, help please ??
2014-11-04 20:51:40	Serus	SlashLife: http://ideone.com/HVJgjU better now?
2014-11-04 20:52:31		alex10791 (~alex10791@0189800493.0.fullrate.dk) has quit (Quit: Leaving)
2014-11-04 20:53:30		CEnnis91 (uid3543@gateway/web/irccloud.com/x-tthipaskdzkyztce) has joined ##c++
2014-11-04 20:54:36		Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-11-04 20:57:51	SlashLife	Serus: No unnecessary instances. Great. :)
2014-11-04 20:58:07	Serus	Aaand, the output is now accurate
2014-11-04 20:58:10		lh_mouse_ (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-11-04 20:58:15	Serus	the inaccuracy was a bug
2014-11-04 20:58:31	--	lh_mouse_ is now known as lh_mouse
2014-11-04 20:58:35	Serus	anyway, it's 3 AM, I'll be late tomorrow
2014-11-04 20:58:38	SlashLife	Ah, I didn't even see that. Great. :)
2014-11-04 20:58:49		jbeaudry (~jbeaudry@64-79-123-18.static.wiline.com) has quit (Quit: My <insert popular, and unnecessary technology reference> has gone to sleep.)
2014-11-04 20:58:49	SlashLife	I wonder though whether there is a nice way to get the log10 for integers.
2014-11-04 20:59:42		n0vacane (~kvirc@unaffiliated/n0vacane) has joined ##c++
2014-11-04 21:00:56		yuriks (~quassel@opentyrian/developer/yuriks) has quit (Remote host closed the connection)
2014-11-04 21:01:06		yuriks_ (~quassel@opentyrian/developer/yuriks) has joined ##c++
2014-11-04 21:01:37		CodeJunkyJay (~CodeJunky@184.91.52.202) has quit (Ping timeout: 256 seconds)
2014-11-04 21:03:53		Langdal (~anon@85.14.200.37.customer.cdi.no) has quit (Read error: Connection reset by peer)
2014-11-04 21:05:27		freebird2 (~freebird_@191.180.37.15) has quit (Remote host closed the connection)
2014-11-04 21:06:35	--	yuriks_ is now known as yuriks
2014-11-04 21:08:21	Taywee	https://en.wikipedia.org/wiki/List_of_logarithmic_identities#Changing_the_base
2014-11-04 21:09:13	Taywee	Oh wait, I misinterpreted the question, I think.
2014-11-04 21:09:54		staylor (~staylor@S0106602ad0901f12.cg.shawcable.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-11-04 21:11:25	n0vacane	ok gentlemen i have a somewhat serious question. if i already am comfortable with c, would it make more sense to learn java or c++ ? ive been learning java for the last few weeks but recently looked at a book on c++ and its only slightly more complicated looking
2014-11-04 21:11:57	quaz0r	troll++
2014-11-04 21:12:02	Stanley00	n0vacane: c, C++ and java are three difference things.
2014-11-04 21:12:09		desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-04 21:12:14	n0vacane	i know, not being a troll
2014-11-04 21:12:17	Taywee	n0vacane: This isn't really the channel for that.  Try ##C++-general.
2014-11-04 21:12:20	n0vacane	ok
2014-11-04 21:13:43		TheTeapot (~TheTeapot@129.78.56.198) has joined ##c++
2014-11-04 21:14:22		DTSCode (~DTSCode@unaffiliated/dtscode) has quit (Ping timeout: 272 seconds)
2014-11-04 21:14:30	n0vacane	is the channel called something else?
2014-11-04 21:14:45	n0vacane	nm got it
2014-11-04 21:15:07		Kevin-_- (~kevinmelk@mo-66-86-135-95.dhcp.embarqhsd.net) has joined ##c++
2014-11-04 21:18:14		Streusel (~Anonymous@unaffiliated/streusel) has quit (Ping timeout: 272 seconds)
2014-11-04 21:19:23		cbot` (~FS@150.108.238.42) has quit (Ping timeout: 255 seconds)
2014-11-04 21:20:04		FabTG (~ftg@AAnnecy-651-1-398-15.w90-41.abo.wanadoo.fr) has quit (Ping timeout: 272 seconds)
2014-11-04 21:20:41		wakd_ (~wakd@unaffiliated/wakd) has joined ##c++
2014-11-04 21:20:49		darkerstar (~indi@d24-141-157-125.home.cgocable.net) has joined ##c++
2014-11-04 21:20:52		vocodork (~vocoder@94-227-99-249.access.telenet.be) has joined ##c++
2014-11-04 21:21:12		FabTG (~ftg@AAnnecy-651-1-64-15.w86-209.abo.wanadoo.fr) has joined ##c++
2014-11-04 21:22:05		wakd (~wakd@unaffiliated/wakd) has quit (Ping timeout: 255 seconds)
2014-11-04 21:22:18		vocodork_ (~vocoder@94-227-99-249.access.telenet.be) has quit (Ping timeout: 258 seconds)
2014-11-04 21:23:44		Rickmasta (~Rick@pool-108-41-62-242.nycmny.fios.verizon.net) has joined ##c++
2014-11-04 21:25:18		lmat (~lmat@c-50-129-81-232.hsd1.il.comcast.net) has quit (Ping timeout: 245 seconds)
2014-11-04 21:25:57		vocodork (~vocoder@94-227-99-249.access.telenet.be) has quit (Quit: http://viennaensemblepro.com | http://viennamirpro.com)
2014-11-04 21:26:02		RussellLoewe (~russ@static-50-43-34-237.bvtn.or.frontiernet.net) has joined ##c++
2014-11-04 21:26:07		a_le (~a_le@12.177.140.3) has joined ##c++
2014-11-04 21:27:05		MulleDK19 (~MulleDK19@0120000080.0.fullrate.dk) has quit
2014-11-04 21:27:24		jbeaudry (~jbeaudry@172.56.39.208) has joined ##c++
2014-11-04 21:28:46		staylor (~staylor@S0106602ad0901f12.cg.shawcable.net) has joined ##c++
2014-11-04 21:28:57		jbeaudry (~jbeaudry@172.56.39.208) has quit (Client Quit)
2014-11-04 21:29:17		cbot` (~FS@ool-2f12e4fc.dyn.optonline.net) has joined ##c++
2014-11-04 21:29:52		shintahW2 (~oer894n@c83-248-102-44.bredband.comhem.se) has joined ##c++
2014-11-04 21:31:30		a_le (~a_le@12.177.140.3) has quit (Remote host closed the connection)
2014-11-04 21:31:49		o-O-o (36f0c4b9@gateway/web/freenode/ip.54.240.196.185) has quit (Ping timeout: 246 seconds)
2014-11-04 21:33:02		shintahW (~oer894n@c83-248-102-44.bredband.comhem.se) has quit (Ping timeout: 264 seconds)
2014-11-04 21:33:03	--	shintahW2 is now known as shintahW
2014-11-04 21:34:03		Gentilhomme (~Gentilhom@unaffiliated/gentilhomme) has joined ##c++
2014-11-04 21:34:49		a_le (~a_le@12.177.140.3) has joined ##c++
2014-11-04 21:35:13		Cirus (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has joined ##c++
2014-11-04 21:35:33		RussellLoewe (~russ@static-50-43-34-237.bvtn.or.frontiernet.net) has left ##c++
2014-11-04 21:38:46		shintahW2 (~oer894n@c83-248-102-44.bredband.comhem.se) has joined ##c++
2014-11-04 21:41:51		a_le (~a_le@12.177.140.3) has quit (Remote host closed the connection)
2014-11-04 21:41:53		shintahW (~oer894n@c83-248-102-44.bredband.comhem.se) has quit (Ping timeout: 255 seconds)
2014-11-04 21:41:53	--	shintahW2 is now known as shintahW
2014-11-04 21:44:56		schleppel (~quassel@141.39.226.237) has quit (Read error: Connection reset by peer)
2014-11-04 21:45:00		n0vacane (~kvirc@unaffiliated/n0vacane) has quit (Ping timeout: 250 seconds)
2014-11-04 21:47:25		BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has quit (Ping timeout: 265 seconds)
2014-11-04 21:49:37		cnnsnts (~cnsnnts@80.82.65.248) has joined ##c++
2014-11-04 21:50:43	cnnsnts	can i add two INT_MINs together? example:
2014-11-04 21:50:48	cnnsnts	long long n = INT_MIN + INT_MIN;
2014-11-04 21:51:01		BSWolf (~bs_wolf@cpe-76-167-251-16.san.res.rr.com) has joined ##c++
2014-11-04 21:51:04	cnnsnts	it's giving me 0
2014-11-04 21:51:08	cnnsnts	(for n)
2014-11-04 21:51:41	cnnsnts	oh, this worked for me:
2014-11-04 21:51:51	cnnsnts	long long n = (long long)INT_MIN + INT_MIN
2014-11-04 21:52:24	cnnsnts	Looks like it needs an explicit cast
2014-11-04 21:53:10		DTSCode (~DTSCode@unaffiliated/dtscode) has joined ##c++
2014-11-04 21:54:10		dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 244 seconds)
2014-11-04 22:00:33		madist (madist@unaffiliated/madist) has joined ##c++
2014-11-04 22:07:36	--	wakd_ is now known as wakd
2014-11-04 22:11:17		Orion] (~nname@unaffiliated/orion/x-3970838) has quit
2014-11-04 22:11:40		bulldog (~diego@nat-130-132-173-174.central.yale.edu) has joined ##c++
2014-11-04 22:13:02		Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-04 22:13:10		Warfront1 (~Warfront1@c-71-59-94-99.hsd1.pa.comcast.net) has joined ##c++
2014-11-04 22:15:06	Warfront1	What is the difference between a char* and a char[]? Are they both character arrays
2014-11-04 22:15:07		scwizard (45cef629@gateway/web/freenode/ip.69.206.246.41) has joined ##c++
2014-11-04 22:15:37	scwizard	when reading TC++PL  I saw you don't need to use a static_cast to convert a int into an enum
2014-11-04 22:15:57	scwizard	you can just do Flag(FLAG_A | FLAG_B)
2014-11-04 22:16:38		nevodka (~nevodka@stupool3.seattleu.edu) has joined ##c++
2014-11-04 22:17:13		z|Andy (~amale@pool-71-184-246-124.bstnma.fios.verizon.net) has joined ##c++
2014-11-04 22:17:37	nevodka	I have a class inheriting from two classes that have members with the same type and name
2014-11-04 22:18:36	nevodka	id have to override the methods that call them to specify which i want to be used, dont i...
2014-11-04 22:18:48		JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-11-04 22:18:51	nevodka	or is there a quick and dirty way of saying default to this one
2014-11-04 22:19:08	nevodka	without having to override the methods and basically copy and paste everything
2014-11-04 22:19:39		DTSCode (~DTSCode@unaffiliated/dtscode) has quit (Read error: Connection reset by peer)
2014-11-04 22:20:59	nevodka	;\
2014-11-04 22:21:02		bulldog (~diego@nat-130-132-173-174.central.yale.edu) has quit (Ping timeout: 255 seconds)
2014-11-04 22:21:05	jeaye	scwizard: If it's an enum class you do.
2014-11-04 22:21:23	scwizard	ahh
2014-11-04 22:21:53		DTSCode (~DTSCode@unaffiliated/dtscode) has joined ##c++
2014-11-04 22:22:40		pepper_chico (~textual@189-46-216-155.dsl.telesp.net.br) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-11-04 22:24:03		Sadale (~Sadale@unaffiliated/sadale) has quit (Quit: bye)
2014-11-04 22:25:17		zima (zima@c75.152.27-202.clta.globetrotter.net) has quit (Quit: zima)
2014-11-04 22:26:17		eean (~quassel@amarok/developer/eean) has quit (Read error: Connection reset by peer)
2014-11-04 22:28:18		PSG_Luna (uid48908@gateway/web/irccloud.com/x-giudgwkkxglkplmw) has quit (Quit: Connection closed for inactivity)
2014-11-04 22:28:36		honyuc (~honyu@n218250048215.netvigator.com) has joined ##c++
2014-11-04 22:28:47		tyyx (~lol@unaffiliated/tapout) has quit
2014-11-04 22:28:53		MulleDK19 (~MulleDK19@0120000080.0.fullrate.dk) has joined ##c++
2014-11-04 22:29:26		Lokomotiv (~ASAP@unaffiliated/lokomotiv) has quit (Ping timeout: 264 seconds)
2014-11-04 22:30:26		c0le (~c0le@59.99.251.45) has joined ##c++
2014-11-04 22:31:55		bulldog (~diego@nat-130-132-173-174.central.yale.edu) has joined ##c++
2014-11-04 22:32:20	bulldog	Warfront1: Depending on the use case, there are some subtle differences. But in most cases, they are the same.
2014-11-04 22:32:50	bulldog	Warfront1: Both can be used to create a character array.
2014-11-04 22:33:03		bulldog (~diego@nat-130-132-173-174.central.yale.edu) has left ##c++
2014-11-04 22:33:10		bulldog (~diego@nat-130-132-173-174.central.yale.edu) has joined ##c++
2014-11-04 22:35:30		Lokomotiv (~ASAP@unaffiliated/lokomotiv) has joined ##c++
2014-11-04 22:36:25		sparetire_ (~sparetire@unaffiliated/sparetire) has quit (Quit: sparetire_)
2014-11-04 22:36:43		Burgundy (~burgundy@188.25.137.130) has quit (Remote host closed the connection)
2014-11-04 22:39:57		scwizard (45cef629@gateway/web/freenode/ip.69.206.246.41) has quit (Quit: Page closed)
2014-11-04 22:40:13	--	oleo is now known as Guest78399
2014-11-04 22:41:26		Anoniem4l (~Anoniem4l@unaffiliated/anoniem4l) has quit (Ping timeout: 260 seconds)
2014-11-04 22:41:56		aslant (~aslant@37.157.33.76) has quit (Remote host closed the connection)
2014-11-04 22:42:09		oleo__ (~oleo@xdsl-78-35-153-132.netcologne.de) has joined ##c++
2014-11-04 22:42:50	hs_	nevodka, with struct A { void foo(); }; struct B { void foo(); }; struct C : B,A { using B::foo; }; // allows C c; c.foo(); to call c.B::foo();
2014-11-04 22:43:28		Guest78399 (~oleo@xdsl-78-35-165-39.netcologne.de) has quit (Ping timeout: 244 seconds)
2014-11-04 22:45:01	nevodka	hs_, i understand how to resolve methods but there are no overlapping methods, its my protected members that are overlapping
2014-11-04 22:45:13	nevodka	i want them to be consolidated
2014-11-04 22:45:56	hs_	i don't quite follow.. testcase?
2014-11-04 22:46:05		Albori (~Albori@64-251-150-248.fidnet.com) has joined ##c++
2014-11-04 22:46:24	nevodka	class A has protected member std::stringinputWord and so does class B
2014-11-04 22:46:29	nevodka	i have class C inheriting from A and B
2014-11-04 22:46:52	nevodka	A.foo() calls inputWord and B.bar() calls inputWord as well
2014-11-04 22:46:59	nevodka	but they are calling different inputWords
2014-11-04 22:47:08	nevodka	not calling, but modifying
2014-11-04 22:47:27	nevodka	A.foo() is modifying A::inputWord and B.bar() is modifying B::inputWord
2014-11-04 22:47:40	nevodka	but since C is inheriting from both i just want them to modify C::inputWord
2014-11-04 22:47:54	nevodka	does it do that automatically?
2014-11-04 22:48:09		Burgundy (~burgundy@86.127.135.165) has joined ##c++
2014-11-04 22:48:14		madist (madist@unaffiliated/madist) has left ##c++ ("Leaving")
2014-11-04 22:48:17		Stanley00 (~Stanley_0@unaffiliated/stanley00) has quit (Remote host closed the connection)
2014-11-04 22:48:17	hs_	no
2014-11-04 22:48:42	nevodka	how can i do that without overriding the methods?
2014-11-04 22:49:38		JohnnyL (~john@ool-457a8633.dyn.optonline.net) has joined ##c++
2014-11-04 22:51:17	hs_	well, one way (maybe bad) is to have both A and B inherit from something that contains the actual data
2014-11-04 22:51:24	hs_	inherit virtually
2014-11-04 22:51:33		DTSCode (~DTSCode@unaffiliated/dtscode) has quit (Ping timeout: 245 seconds)
2014-11-04 22:52:11	hs_	{ C c; c.blah(); } struct data { int i=10; }; struct A: virtual data { void foo() { cout << i,"A",""; }}; struct B : virtual data { void foo() { cout << i,"B",""; }}; struct C : A, B { void blah() { i = 5; A::foo(); B::foo(); }}; // this kind of mess
2014-11-04 22:52:12	geordi	5, A, 5, B,
2014-11-04 22:52:47	hs_	virtual inheritance prevents two instances of data in C
2014-11-04 22:52:56		Kulrak (kulrak@tlug/member/kulrak) has joined ##c++
2014-11-04 22:53:15		cnnsnts (~cnsnnts@80.82.65.248) has quit (Quit: Leaving.)
2014-11-04 22:54:03	hs_	an alternative is to get your data from a virtual member function
2014-11-04 22:54:08	hs_	that you override
2014-11-04 22:54:55	hs_	I don't like the virtual inheritance idea though.. that's spooky OO magic
2014-11-04 22:55:01		dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2014-11-04 22:55:40	nevodka	looks like virtual inheritance is the only thing i can do
2014-11-04 22:58:31		PSG_Luna (uid48908@gateway/web/irccloud.com/x-jsrzhmfruxfbthfk) has joined ##c++
2014-11-04 23:00:09		ac_slater (~weechat@96.237.110.242) has joined ##c++
2014-11-04 23:01:37	lh_mouse	It is reasonable if your virtual base is stateless.
2014-11-04 23:01:51		nevodka (~nevodka@stupool3.seattleu.edu) has quit (Ping timeout: 244 seconds)
2014-11-04 23:01:55		JohnnyL (~john@ool-457a8633.dyn.optonline.net) has quit (Ping timeout: 255 seconds)
2014-11-04 23:02:53	Warfront1	I'm attempting to add #include <regex>
2014-11-04 23:03:04	Warfront1	but it's then throwing all kinds of errors
2014-11-04 23:03:32	kadoban	k
2014-11-04 23:03:57	Warfront1	I'm doing the same exact thing in a blank project, and it works fine. Any ideas?
2014-11-04 23:05:33	kadoban	I suggest you look at the error messages, try to figure out why they're happening, and go from there. Or make the blank project closer and closer to the failing project until you get your answer.
2014-11-04 23:06:34		sze (~sze@c-24-19-210-87.hsd1.wa.comcast.net) has joined ##c++
2014-11-04 23:06:37	Warfront1	Error	4	error C2065: 'string' : undeclared identifier	C:\Users\joe\Documents\Visual Studio 2013\Projects\Teamspeak 3 Bot\src\plugin.c	805	1	test_plugin
2014-11-04 23:07:13	lh_mouse	Warfront1, .c !
2014-11-04 23:07:37	Warfront1	1h_mouse, I don't comphrend?
2014-11-04 23:08:01	kadoban	1l1l1
2014-11-04 23:08:15		ac_slate1 (~weechat@96.237.110.242) has joined ##c++
2014-11-04 23:08:16	Warfront1	comprehend
2014-11-04 23:08:26	kadoban	Warfront1: He's pointing out that that's the traditional extension for C code...
2014-11-04 23:08:35	kadoban	Warfront1: Is this actually C++ you're modifying?
2014-11-04 23:08:58	Warfront1	I'm a java developer. Touching c++ for the first time as of 4 hours ago
2014-11-04 23:09:08		Gentilhomme (~Gentilhom@unaffiliated/gentilhomme) has quit (Remote host closed the connection)
2014-11-04 23:09:17	Warfront1	ya this is .c
2014-11-04 23:09:27	lh_mouse	Warfront1, you are #include'ing a C++ header in a C source file.
2014-11-04 23:09:30	kadoban	Warfront1: Ah. Then I envision a book in your future...you can't just guess at it and hope for the best
2014-11-04 23:09:50	Warfront1	Lol it's been hell over the past few hours I can attest to that
2014-11-04 23:09:52	kadoban	Also, yeah figuring out what language the code you're messing with is in would be a bonus...
2014-11-04 23:10:22		ac_slater (~weechat@96.237.110.242) has quit (Ping timeout: 250 seconds)
2014-11-04 23:12:14		jumbers (~jumbers@fsf/member/jumbers) has quit (Ping timeout: 240 seconds)
2014-11-04 23:12:36		DTSCode (~DTSCode@unaffiliated/dtscode) has joined ##c++
2014-11-04 23:13:29		cnnsnts (~cnsnnts@80.82.65.248) has joined ##c++
2014-11-04 23:13:51	cnnsnts	coming from a C background, are virtual functions similar to function pointers?
2014-11-04 23:14:26		Stanley00 (~Stanley_0@unaffiliated/stanley00) has joined ##c++
2014-11-04 23:15:02	kadoban	cnnsnts: Not so much, no.
2014-11-04 23:15:58	kadoban	cnnsnts: They're functions that will use dynamic dispatch in a subclass relationship
2014-11-04 23:17:16		z|Andy (~amale@pool-71-184-246-124.bstnma.fios.verizon.net) has quit (Ping timeout: 264 seconds)
2014-11-04 23:17:23	kadoban	Which probably isn't very helpful. They have meaning in C++'s version of object oriented programming and polymorphism.
2014-11-04 23:17:51	Warfront1	I may just abuse the system command, and offload everything to a java application
2014-11-04 23:19:25		Burgundy (~burgundy@86.127.135.165) has quit (Ping timeout: 244 seconds)
2014-11-04 23:19:25		KAHR-Alpha (~Alpha@AReims-652-1-160-194.w81-250.abo.wanadoo.fr) has quit (Ping timeout: 245 seconds)
2014-11-04 23:20:42	cnnsnts	kadoban:  thanks. So, from an implementation perspective, classes have a table of functions which contain two types of entries (lets say), virtual and non-virtual. On compile time, the non-virtual functions are resolved. But the virtual functions are not and are resolved during run time? So that would mean, there is just a placeholder for them in the function table with a "pointer"?
2014-11-04 23:20:52	cnnsnts	that might be a little convoluted
2014-11-04 23:21:02		jumbers (~jumbers@fsf/member/jumbers) has joined ##c++
2014-11-04 23:21:19		eean (~quassel@amarok/developer/eean) has joined ##c++
2014-11-04 23:21:27		robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-11-04 23:22:54	Warfront1	so regex in c isn't a thing?
2014-11-04 23:23:06		z|Andy (~amale@pool-71-184-246-124.bstnma.fios.verizon.net) has joined ##c++
2014-11-04 23:24:08	cnnsnts	kadoban: I found this link (http://yosefk.com/c++fqa/inheritance-virtual.html#fqa-20.3) and it clarifies a lot of my thinking.
2014-11-04 23:26:15	kadoban	cnnsnts: Ah, good.
2014-11-04 23:26:59	cnnsnts	basically two levels of indirection as overhead (at the least)
2014-11-04 23:30:46		eean (~quassel@amarok/developer/eean) has quit (Read error: Connection reset by peer)
2014-11-04 23:30:51	lh_mouse	Warfront1, there is regex.h.
2014-11-04 23:31:08	Warfront1	I'm looking into the beast as we speak
2014-11-04 23:31:09	Warfront1	thank you
2014-11-04 23:31:11	lh_mouse	But they are completely different things.
2014-11-04 23:31:31		z|Andy (~amale@pool-71-184-246-124.bstnma.fios.verizon.net) has quit (Ping timeout: 244 seconds)
2014-11-04 23:37:13		pyon (~user@unaffiliated/pyon) has joined ##c++
2014-11-04 23:39:00		JamesNZ (~james@fedora/JamesNZ) has quit (Remote host closed the connection)
2014-11-04 23:43:51	Warfront1	I can't even find the option to create a new .c file
2014-11-04 23:43:52	Warfront1	to test in
2014-11-05 17:52:30		dagnachew (~dagnachew@bas1-montreal30-2925416228.dsl.bell.ca) has joined ##c++
2014-11-05 17:52:30	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-11-05 17:52:30	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-11-05 17:52:30	--	Channel ##c++: 571 nicks (0 ops, 0 voices, 571 normals)
2014-11-05 17:52:30	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-11-05 17:52:37		stakewinner00 (~stakewinn@25.104.15.37.dynamic.jazztel.es) has quit
2014-11-05 17:52:44	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-11-05 17:53:34		crewshin (~crewshin@pool-74-100-141-7.lsanca.fios.verizon.net) has quit (Read error: Connection reset by peer)
2014-11-05 17:58:33		SiGe (~SiGe@usc-secure-wireless-088-003.usc.edu) has joined ##c++
2014-11-05 17:59:04		KrzaQ (~krzaq@krzaq.cc) has quit (Disconnected by services)
2014-11-05 17:59:11		surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-05 17:59:21		KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-05 17:59:51		Andy-chan (~Andy-chan@xdsl-84-44-171-88.netcologne.de) has joined ##c++
2014-11-05 17:59:52		AndyP2 (~Andy-chan@xdsl-84-44-171-88.netcologne.de) has quit (Read error: Connection reset by peer)
2014-11-05 18:00:06	ac_slater_	something about this code is really confusing
2014-11-05 18:00:11	ac_slater_	even though it's really simple
2014-11-05 18:01:59		Leucomelas (~Leucomela@2a02:1205:5030:5c0:2831:69fb:7a5e:756b) has quit (Ping timeout: 260 seconds)
2014-11-05 18:02:28	--	irc: disconnected from server
2014-11-06 21:11:51		dagnachew (~dagnachew@bas1-montreal30-2925416228.dsl.bell.ca) has joined ##c++
2014-11-06 21:11:51	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-11-06 21:11:51	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-11-06 21:11:51	--	Channel ##c++: 563 nicks (0 ops, 0 voices, 563 normals)
2014-11-06 21:11:51	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-11-06 21:11:51	o-O-o	!stdref getline
2014-11-06 21:11:51	nolyc	http://en.cppreference.com/w/cpp/string/basic_string/getline
2014-11-06 21:12:06	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-11-06 21:13:19		kailoAtWork (~kailoAtWo@cpe-23-243-152-183.socal.res.rr.com) has joined ##c++
2014-11-06 21:13:34	SlashLife_	pepper_chico: It's amazing with what energy you try to hold on to using something that is undefined behaviour ...
2014-11-06 21:13:43	SlashLife_	(... not in a good way, though ...)
2014-11-06 21:14:07	o-O-o	UB is exciting :D
2014-11-06 21:14:11	wheals	is there any way i can change http://ideone.com/BbTPxH to get it to compile?
2014-11-06 21:14:17	M-ou-se	pepper_chico: i don't think that reinterpret_cast is supposed to work there. i think geordi is right.
2014-11-06 21:14:20		thomedy (~thomedy@50-83-164-141.client.mchsi.com) has joined ##c++
2014-11-06 21:14:34	o-O-o	pepper_chico: lemme see your example again, plz
2014-11-06 21:14:48	o-O-o	webchat sucks for logging
2014-11-06 21:14:51		Andy-chan (~Andy-chan@xdsl-87-78-159-202.netcologne.de) has quit (Ping timeout: 255 seconds)
2014-11-06 21:15:10	jeaye	wheals: http://ideone.com/DTsS4I
2014-11-06 21:15:38	wheals	i was worried that was the only solution :P
2014-11-06 21:16:06	pepper_chico	o-O-o http://bl.ocks.org/anonymous/raw/c53463b3dd417a10aff5/
2014-11-06 21:16:07		rawfodog (~rawfodog@modemcable186.163-59-74.mc.videotron.ca) has joined ##c++
2014-11-06 21:16:11	wheals	no way to do aggregate initialisation if it has a constructor?
2014-11-06 21:16:24	jeaye	wheals: http://ideone.com/NzHGDu
2014-11-06 21:16:24		comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has quit (Quit: Bye)
2014-11-06 21:16:36	jeaye	wheals: There is, just provide a matching ctor.
2014-11-06 21:16:44	o-O-o	pepper_chico: why are you doing that?
2014-11-06 21:16:48	jeaye	And it'll call the ctor instead of aggregate initialization.
2014-11-06 21:16:55	pepper_chico	o-O-o compiles on clang latest and on gcc 4.9
2014-11-06 21:16:56	wheals	oh, i see, cool
2014-11-06 21:17:03	jeaye	wheals: move semantics not necessary for this to work.
2014-11-06 21:17:06	thomedy	just so its clear it has been soooooo long since i have written in c++ and i am only pseudo coding right now but man i missed this
2014-11-06 21:17:18		jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-06 21:17:27	o-O-o	pepper_chico: jesus christ. I really don't know how to comment on this
2014-11-06 21:17:28	pepper_chico	o-O-o question is not why, as I don't use such code, question is whether it can compile by standard, and if yes, whether it's UB
2014-11-06 21:17:30	o-O-o	better I forget it
2014-11-06 21:18:33	jeaye	{ foo({ "1", 2 }); } struct bar{ bar(string const &s, int const i) : s_{ s }, i_{ i } {} }; void foo(bar const &b){ BARK; }
2014-11-06 21:18:34	geordi	error: class 'bar' does not have any field named 's_'
2014-11-06 21:18:36		titanium17 (~titanium1@cpe-74-74-174-117.rochester.res.rr.com) has joined ##c++
2014-11-06 21:18:44		SpikeMaster (~user@pool-74-110-73-154.hgrtmd.east.verizon.net) has left ##c++ ("ERC Version 5.3 (IRC client for Emacs)")
2014-11-06 21:18:58	jeaye	{ foo({ "1", 2 }); } struct bar{ bar(string const &s, int const i) : s_{ s }, i_{ i } {} string s_; int i_; }; void foo(bar const &b){ BARK; } // wheals
2014-11-06 21:18:58	geordi	foo(const bar&)
2014-11-06 21:19:04	jeaye	same deal
2014-11-06 21:19:24	o-O-o	jeaye: you don't need to rename the fields
2014-11-06 21:19:32	o-O-o	they can be s and i, respectively
2014-11-06 21:19:39	jeaye	o-O-o: I don't want them to be.
2014-11-06 21:19:45	jeaye	So they're not.
2014-11-06 21:19:50	o-O-o	because you like awful syntax?
2014-11-06 21:20:00	jeaye	Because it's my code.
2014-11-06 21:20:04	o-O-o	s{s} is much better to read than s_{ s }
2014-11-06 21:20:06	o-O-o	YUCK
2014-11-06 21:20:12	jeaye	Objectively? No, it's not.
2014-11-06 21:20:21	o-O-o	because you have issues
2014-11-06 21:20:33		ObjectiveMatt (~Objective@66.87.150.17) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-11-06 21:20:55	jeaye	That is the least of my issues.
2014-11-06 21:21:02	o-O-o	I believe you
2014-11-06 21:21:17	o-O-o	you need some level of dementia to like code using underscores like that
2014-11-06 21:22:39		jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Ping timeout: 264 seconds)
2014-11-06 21:22:45		LEU (~kvirc@79.117.187.4) has joined ##c++
2014-11-06 21:23:03		esas (~esas@unaffiliated/esas) has quit
2014-11-06 21:23:31	pepper_chico	M-ou-se, sorry!, false alarm, gcc in osx here is alias for clang =/ I have g++-4.9 at my command-line, which doesn't compile that in truth
2014-11-06 21:23:32	hs_	pepper_chico, were you asking if that thing you linked is UB?
2014-11-06 21:24:04	pepper_chico	hs_ whether it's legal, I guess it's not, though last clang compile it
2014-11-06 21:24:12	pepper_chico	hs_, so I'm not sure
2014-11-06 21:24:23	wheals	anyway, thanks a ton jeaye
2014-11-06 21:25:31		jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-06 21:25:55	pepper_chico	hs_ do you have an opnion on that?
2014-11-06 21:26:39	jeaye	wheals: sure thing
2014-11-06 21:29:05		Kulrak (kulrak@tlug/member/kulrak) has joined ##c++
2014-11-06 21:30:25		adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has quit (Quit: adu)
2014-11-06 21:31:08		cubik (~cubik@2601:a:4f80:1e0:58dd:128a:6f4:b811) has quit (Ping timeout: 265 seconds)
2014-11-06 21:31:26	pepper_chico	http://stackoverflow.com/q/26793072/1000282
2014-11-06 21:31:31		cubik (~cubik@2601:a:4f80:1e0:58dd:128a:6f4:b811) has joined ##c++
2014-11-06 21:33:18		Betal (~Beta@unaffiliated/betal) has joined ##c++
2014-11-06 21:34:46		devbug (~quassel@d108-180-247-142.bchsia.telus.net) has joined ##c++
2014-11-06 21:34:55		thomedy (~thomedy@50-83-164-141.client.mchsi.com) has quit (Quit: Leaving)
2014-11-06 21:35:18	hs_	pepper_chico, I think it is UB.. I don't see anything that allows conversion of xvalues to lvalues
2014-11-06 21:36:09		vinleod (~vinleod@c-76-105-158-189.hsd1.or.comcast.net) has quit (Read error: Connection reset by peer)
2014-11-06 21:36:12		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-11-06 21:36:50		vinleod (~vinleod@c-76-105-158-189.hsd1.or.comcast.net) has joined ##c++
2014-11-06 21:37:16		Extreme (extreme7@unaffiliated/extreme7) has quit (Ping timeout: 255 seconds)
2014-11-06 21:37:58		Viata (~ViataTrib@189.115.90.110) has quit (Quit: Leaving)
2014-11-06 21:38:52		BinaryAddicted (~BinaryAdd@194.230.159.215) has joined ##c++
2014-11-06 21:39:14		adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has joined ##c++
2014-11-06 21:39:23	hs_	I suspect it is a clang bug
2014-11-06 21:39:26	hs_	<< TYPE(reinterpret_cast<int&>(5));
2014-11-06 21:39:26	geordi	error: invalid cast of an rvalue expression of type 'int' to type 'int&'
2014-11-06 21:39:29		BinaryAddicted (~BinaryAdd@194.230.159.215) has quit (Client Quit)
2014-11-06 21:39:35		Stanley00 (~Stanley_0@unaffiliated/stanley00) has quit (Read error: Connection reset by peer)
2014-11-06 21:40:01	hs_	it won't allow "rvalue expression" to convert, but it does allow xvalue expression
2014-11-06 21:40:12		hx0 (~hx0@unaffiliated/hx0) has quit (Ping timeout: 264 seconds)
2014-11-06 21:40:18	hs_	even though xvalues are rvalues
2014-11-06 21:41:44		Extreme (extreme7@unaffiliated/extreme7) has joined ##c++
2014-11-06 21:42:16	hs_	er
2014-11-06 21:42:26		Sculptor (~Sculptor@trivialand/master/sculptor) has joined ##c++
2014-11-06 21:42:38	hs_	clang, << TYPE(reinterpret_cast<int&>(5));
2014-11-06 21:42:41	clang	error: reinterpret_cast from rvalue to reference type 'int &'
2014-11-06 21:42:50	hs_	same difference =]
2014-11-06 21:43:46	hs_	clang, << TYPE(reinterpret_cast<float&>(foo()));  float&& foo();
2014-11-06 21:43:49	clang	lvalue float
2014-11-06 21:43:51	hs_	<< TYPE(reinterpret_cast<float&>(foo()));  float&& foo();
2014-11-06 21:43:51	geordi	error: invalid cast of an rvalue expression of type 'float' to type 'float&'
2014-11-06 21:44:00	hs_	that seems to be it
2014-11-06 21:44:51		apparle (~quassel@ncsu-nat1-2.ncstate.net) has quit (Ping timeout: 258 seconds)
2014-11-06 21:49:42	pepper_chico	hs_, it's just not 5
2014-11-06 21:49:53	pepper_chico	hs_, it's std::move(5)
2014-11-06 21:50:09	pepper_chico	clang, << TYPE(reinterpret_cast<int&>(std::move(5)));
2014-11-06 21:50:11	clang	lvalue int
2014-11-06 21:50:17	pepper_chico	clang, << TYPE(reinterpret_cast<int&>(5));
2014-11-06 21:50:20	clang	error: reinterpret_cast from rvalue to reference type 'int &'
2014-11-06 21:50:27	pepper_chico	hs_ ^
2014-11-06 21:50:33	hs_	no, I know, my point is that it says "can't cast rvalue to reference type"
2014-11-06 21:50:38	wheals	!stdref move
2014-11-06 21:50:39	nolyc	http://en.cppreference.com/w/cpp/utility/move
2014-11-06 21:50:42	hs_	but it does cast xvalues to reference type
2014-11-06 21:50:45	hs_	and xvalues are rvalues
2014-11-06 21:52:39		KAHR-Alpha (~Alpha@AReims-652-1-94-158.w86-192.abo.wanadoo.fr) has quit (Ping timeout: 264 seconds)
2014-11-06 21:53:17		ThatOneGuy (~ThatOneGu@unaffiliated/thatoneguy) has quit
2014-11-06 21:53:19	pepper_chico	hs_ check discussion on SO, it's getting interesting
2014-11-06 21:53:20		pussygladiator (~csguest@128.153.144.159) has quit (Quit: Leaving)
2014-11-06 21:53:23	pepper_chico	=)
2014-11-06 21:53:28		dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 255 seconds)
2014-11-06 21:55:57	hs_	there is a proposal to change the wording in the standard to glvalue
2014-11-06 21:56:19	hs_	and it has "Additional note, January, 2012: An objection has been raised to the proposal..."
2014-11-06 21:56:21	SlashLife_	I had a great idea tonight.
2014-11-06 21:56:22		SockMonster (~SockMonst@93-143-122-190.adsl.net.t-com.hr) has joined ##c++
2014-11-06 21:56:27	SlashLife_	I considered writing a proposal for it.
2014-11-06 21:56:31	hs_	http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#1268
2014-11-06 21:56:39	SlashLife_	Then I found out someone had that idea in August already.
2014-11-06 21:57:01	SockMonster	is there a way to shorten something like this... if(index == 1 || index == 2 etc... till 50);
2014-11-06 21:57:34	SockMonster	nevermind
2014-11-06 21:57:37	SlashLife_	... and that in a discussion about it, it was considered to rather mark the library feature the proposal was supposed to improve usability for deprecated in favor of lambdas. :(
2014-11-06 21:57:54	SlashLife_	SockMonster: 1 <= index && index <= 50? :P
2014-11-06 21:58:24	SockMonster	i dont want floors though
2014-11-06 21:58:31	SockMonster	wouldnt they trigger for that too
2014-11-06 21:58:43	SlashLife_	floors?
2014-11-06 21:58:46		vinleod (~vinleod@c-76-105-158-189.hsd1.or.comcast.net) has quit (Read error: Connection reset by peer)
2014-11-06 21:59:05	SlashLife_	Does index happen to be of a floating point type?
2014-11-06 21:59:12	SockMonster	http://www.cplusplus.com/reference/cmath/floor/
2014-11-06 21:59:24	SockMonster	it can be floating or integer
2014-11-06 21:59:36	SlashLife_	ARGH!
2014-11-06 21:59:38	SlashLife_	Evil page!
2014-11-06 22:00:03	SlashLife_	Mh. I could write a Firefox extension to redirect cplusplus.com to cppreference.
2014-11-06 22:00:13	SockMonster	index = ((i_top - d_top) - 15) / 13;
2014-11-06 22:00:29	SlashLife_	What type is index?
2014-11-06 22:01:22	SockMonster	its int but if you divide 3 with 2 wouldnt it still return 1.5?
2014-11-06 22:01:32	SlashLife_	<< 3 / 2
2014-11-06 22:01:33	geordi	1
2014-11-06 22:01:38	SlashLife_	:)
2014-11-06 22:01:45	SockMonster	o )
2014-11-06 22:01:53	--	SlashLife_ is now known as SlashLife
2014-11-06 22:02:04		govg (~govg@unaffiliated/govg) has joined ##c++
2014-11-06 22:02:20		ObjectiveMatt (~Objective@66.87.150.17) has joined ##c++
2014-11-06 22:02:32	SockMonster	i was calling ceilf to verify
2014-11-06 22:02:48	SockMonster	ahh i learn something new every day
2014-11-06 22:02:58		mxiia (~mxiia@unaffiliated/mxiia) has quit (Ping timeout: 265 seconds)
2014-11-06 22:04:47		eXeC64 (~eXeC64@exec64.co.uk) has quit (Ping timeout: 260 seconds)
2014-11-06 22:05:22		vs73nx (~vs73nx@unaffiliated/vs73nx) has joined ##c++
2014-11-06 22:08:35		robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 245 seconds)
2014-11-06 22:09:37		SlashLife_ (~slashlife@botters/slashlife) has joined ##c++
2014-11-06 22:10:50	hs_	pepper_chico, I posted a response
2014-11-06 22:10:54	hs_	go vote for it! =]
2014-11-06 22:11:32		dunkelschub (~dunkelsch@cpe-74-74-177-194.rochester.res.rr.com) has joined ##c++
2014-11-06 22:12:20		JamesNZ (~james@fedora/JamesNZ) has joined ##c++
2014-11-06 22:12:49		SlashLife (~slashlife@botters/slashlife) has quit (Ping timeout: 255 seconds)
2014-11-06 22:15:42		Stanley00 (~Stanley_0@unaffiliated/stanley00) has joined ##c++
2014-11-06 22:16:58	Betal	how I can make a custom operator<< for an enum?
2014-11-06 22:18:27	pepper_chico	hs_ I saw it, nice
2014-11-06 22:18:36		wox (~bartleby@unaffiliated/scroy) has quit (Ping timeout: 264 seconds)
2014-11-06 22:18:43	hs_	those guys keep quoting "A glvalue expression..."
2014-11-06 22:18:44	pepper_chico	hs_ but, your paragraph mention only talks about lvalues
2014-11-06 22:18:48	hs_	but the standard says lvalue
2014-11-06 22:18:53	hs_	I don't know where they are getting their text
2014-11-06 22:19:02	pepper_chico	hs_ github?
2014-11-06 22:19:13	hs_	the actual c++11 standard uses the terminology "lvalue"
2014-11-06 22:19:26	hs_	and the proposal to change to glvalue was objected to
2014-11-06 22:19:32	hs_	look at the defect report
2014-11-06 22:20:31	hs_	5.2.10.11, have anyone else here look at it
2014-11-06 22:20:49	pepper_chico	hs_ have you checked  c++14 too?
2014-11-06 22:21:16	pepper_chico	I'll take a look at github...
2014-11-06 22:21:22	hs_	I haven't looked at drafts for it no
2014-11-06 22:21:24		P1RATEZ (~piratez@CPEbc1401e23523-CMbc1401e23520.cpe.net.cable.rogers.com) has quit
2014-11-06 22:21:54	hs_	the date on this defect report is 10/13/2014
2014-11-06 22:22:09	hs_	anyway i'll keep my eye on updates there
2014-11-06 22:23:06	pepper_chico	hs_, checked
2014-11-06 22:23:12	pepper_chico	hs_, it's on draft
2014-11-06 22:23:27	pepper_chico	https://github.com/cplusplus/draft/blob/master/source/expressions.tex#L2281
2014-11-06 22:23:31	pepper_chico	hs_ ^
2014-11-06 22:24:18	pepper_chico	so, if in c++11 that wording was c++11, it's illegal on c++11
2014-11-06 22:24:27	pepper_chico	but not on c++14 :-S
2014-11-06 22:24:38	hs_	drafts are not standards
2014-11-06 22:24:41	--	SlashLife_ is now known as SlashLife
2014-11-06 22:24:50	pepper_chico	but c++14 is around the corner
2014-11-06 22:25:08	hs_	and it isn't clear that the draft takes into account the "additional note" that says the proposal was sent back to review
2014-11-06 22:25:36	pepper_chico	ah, so, the link you just sent, about the defect
2014-11-06 22:25:51	hs_	but I do not know how those are worked out or where it would report the current status of the proposal
2014-11-06 22:26:08	pepper_chico	it's not standard yet, although the draft incorporates it already, the draft that's base for c++14
2014-11-06 22:26:16	pepper_chico	ok
2014-11-06 22:26:21	pepper_chico	confuse!!
2014-11-06 22:26:41		adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has quit (Quit: adu)
2014-11-06 22:27:14		dardevelin (~dardeveli@unaffiliated/dardevelin) has quit (Quit: Leaving)
2014-11-06 22:28:39		Plasmastar (Plasma@unaffiliated/plasmastar) has quit (Ping timeout: 265 seconds)
2014-11-06 22:32:31		Plasmastar (Plasma@unaffiliated/plasmastar) has joined ##c++
2014-11-06 22:34:23		adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has joined ##c++
2014-11-06 22:34:58		wakd (~wakd@unaffiliated/wakd) has quit (Remote host closed the connection)
2014-11-06 22:36:40		Stryyker (stryyker16@about/windows/staff/stryyker) has quit (Disconnected by services)
2014-11-06 22:36:55		stryyker2 (stryyker16@about/windows/staff/stryyker) has joined ##c++
2014-11-06 22:37:37	--	bb010g_ is now known as bb010g
2014-11-06 22:38:01		xrlk (~xrlk@216-58-27-26.cpe.distributel.net) has quit (Quit: allahu akbar)
2014-11-06 22:38:55		paper_ziggurat (~ppr_zggrt@c-75-64-4-133.hsd1.tn.comcast.net) has quit (Quit: Leaving)
2014-11-06 22:39:01		SpikeMaster (~user@pool-74-110-73-154.hgrtmd.east.verizon.net) has joined ##c++
2014-11-06 22:40:08		medgno (~medgno@67-7-237-81.dlth.qwest.net) has joined ##c++
2014-11-06 22:42:06		wakd (~wakd@unaffiliated/wakd) has joined ##c++
2014-11-06 22:43:43		SpikeMaster (~user@pool-74-110-73-154.hgrtmd.east.verizon.net) has quit (Remote host closed the connection)
2014-11-06 22:49:21	--	irc: disconnected from server
2014-11-07 17:43:20		dagnachew (~dagnachew@bas1-montreal30-2925416228.dsl.bell.ca) has joined ##c++
2014-11-07 17:43:20	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-11-07 17:43:20	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-11-07 17:43:20	--	Channel ##c++: 554 nicks (1 op, 0 voices, 553 normals)
2014-11-07 17:43:21	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-11-07 17:43:21		kurahaupo (~kurahaupo@118.148.197.165) has quit (Ping timeout: 244 seconds)
2014-11-07 17:43:35	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-11-07 17:44:27		elsewho (~elsewho@139.20.16.239) has joined ##c++
2014-11-07 17:44:31	elsewho	hi
2014-11-07 17:44:47	elsewho	can i capture all variables as ref and only one as copy in a lambda?
2014-11-07 17:46:27	Oxyd	Yes.
2014-11-07 17:46:37		lord4163 (~lord4163@81-232-61-81-no226.tbcn.telia.com) has quit (Ping timeout: 265 seconds)
2014-11-07 17:46:47	Oxyd	Just say [&, that_one_variable_to_copy]
2014-11-07 17:47:14		ThatOneGuy (~ThatOneGu@unaffiliated/thatoneguy) has quit (Quit: My computer has gone to sleep. ZZZzzz…)
2014-11-07 17:47:43		kurahaupo (~kurahaupo@118.148.246.125) has joined ##c++
2014-11-07 17:47:52		micom (~micom@unaffiliated/micom) has quit (Ping timeout: 250 seconds)
2014-11-07 17:48:32	elsewho	Oxyd, thanks, i had the order wrong --
2014-11-07 17:49:09		kurahaupo (~kurahaupo@118.148.246.125) has left ##c++
2014-11-07 17:49:28		clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-07 17:50:17		lord4163 (~lord4163@81-232-61-81-no226.tbcn.telia.com) has joined ##c++
2014-11-07 17:50:45		ThatOneGuy (~ThatOneGu@unaffiliated/thatoneguy) has joined ##c++
2014-11-07 17:51:53		KrzaQ (~krzaq@krzaq.cc) has quit (Disconnected by services)
2014-11-07 17:52:07		KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-07 17:52:46		edward-san (~Edward`sa@host155-8-dynamic.22-79-r.retail.telecomitalia.it) has quit (Quit: "Ma Watt a Fahrad in Coulomb! Un Volt, due Volt, tre Volt ... e con un Ohm!" "Così t'Ampère!")
2014-11-07 17:54:10		biglama (~Day_dream@gar31-4-82-240-199-124.fbx.proxad.net) has quit (Remote host closed the connection)
2014-11-07 17:54:51		surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-07 17:56:46		lord4163 (~lord4163@81-232-61-81-no226.tbcn.telia.com) has quit (Ping timeout: 265 seconds)
2014-11-07 17:56:47		txomon|home (~txomon@unaffiliated/txomon) has quit (Ping timeout: 244 seconds)
2014-11-07 17:57:15		ThatOneGuy (~ThatOneGu@unaffiliated/thatoneguy) has quit
2014-11-07 17:58:00		scai (~scai@pD9EA6B46.dip0.t-ipconnect.de) has left ##c++ ("[IRSSI]")
2014-11-07 17:59:04		Andy-chan (~Andy-chan@xdsl-84-44-171-238.netcologne.de) has quit (Read error: Connection reset by peer)
2014-11-07 17:59:22		hexagoxel (~hexagoxel@p4FCCD175.dip0.t-ipconnect.de) has joined ##c++
2014-11-07 17:59:30		Andy-chan (~Andy-chan@xdsl-84-44-171-238.netcologne.de) has joined ##c++
2014-11-07 18:00:28		Kicer86 (~Kicer86@109241199226.rudaslaska.vectranet.pl) has quit (Quit: ZNC - http://znc.sourceforge.net)
2014-11-07 18:00:36		dfletcher (~dfletcher@drupal.org/user/72475/view) has joined ##c++
2014-11-07 18:01:19		leen^| (~leeN@f050216169.adsl.alicedsl.de) has quit (Read error: Connection reset by peer)
2014-11-07 18:01:28		ncd|leeN (~leeN@f050216169.adsl.alicedsl.de) has joined ##c++
2014-11-07 18:02:09		plitter (~plitter@52.84-48-49.nextgentel.com) has quit (Read error: Connection reset by peer)
2014-11-07 18:02:17		lord4163 (~lord4163@81-232-61-81-no226.tbcn.telia.com) has joined ##c++
2014-11-07 18:03:06		plitter (~plitter@84.48.49.52) has joined ##c++
2014-11-07 18:04:15		AbleBacon (407e1042@gateway/web/freenode/ip.64.126.16.66) has quit (Ping timeout: 246 seconds)
2014-11-07 18:05:03		jfcaron (~jfcaron@dhcp-128-189-204-161.ubcsecure.wireless.ubc.ca) has quit (Quit: Leaving)
2014-11-07 18:07:54		lord4163 (~lord4163@81-232-61-81-no226.tbcn.telia.com) has quit (Ping timeout: 265 seconds)
2014-11-07 18:11:47		lord4163 (~lord4163@81-232-61-81-no226.tbcn.telia.com) has joined ##c++
2014-11-07 18:13:04		txomon|home (~txomon@unaffiliated/txomon) has joined ##c++
2014-11-07 18:13:55		Cirus (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has joined ##c++
2014-11-07 18:17:00		lamefun (~lamefun2@94.181.170.88) has joined ##c++
2014-11-07 18:19:33		adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has joined ##c++
2014-11-07 18:20:15		stakewinner00 (~stakewinn@25.104.15.37.dynamic.jazztel.es) has quit (Read error: Connection reset by peer)
2014-11-07 18:20:28		PlasmaHH (~kvirc@speedy.projectiwear.org) has quit (Ping timeout: 265 seconds)
2014-11-07 18:20:31		esas (~esas@unaffiliated/esas) has quit
2014-11-07 18:20:38		KrzaQ (~krzaq@krzaq.cc) has quit (Read error: Connection reset by peer)
2014-11-07 18:21:03		KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-07 18:21:04		stakewinner00 (~stakewinn@25.104.15.37.dynamic.jazztel.es) has joined ##c++
2014-11-07 18:23:59		TViernion (~TViernion@38.107.244.132) has quit (Ping timeout: 245 seconds)
2014-11-07 18:24:15		queelius (~Spinoza@2602:306:bdb8:6840:6149:65b1:7433:2d93) has joined ##c++
2014-11-07 18:24:21		Alina-malina (~Alina-mal@unaffiliated/alina-malina) has quit (Ping timeout: 245 seconds)
2014-11-07 18:25:02		luny (~luny@unaffiliated/luny) has quit (Ping timeout: 264 seconds)
2014-11-07 18:25:21		Alina-malina (~Alina-mal@unaffiliated/alina-malina) has joined ##c++
2014-11-07 18:26:36		Nodd (~Nodd@ppp-43-24.grapevine.net.au) has joined ##c++
2014-11-07 18:27:43		lord4163 (~lord4163@81-232-61-81-no226.tbcn.telia.com) has quit (Ping timeout: 265 seconds)
2014-11-07 18:29:26		BlaXpirit-UA (~blaxpirit@72-86-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-11-07 18:32:47		lord4163 (~lord4163@81-232-61-81-no226.tbcn.telia.com) has joined ##c++
2014-11-07 18:35:41		pi- (~Ohmu@cpc69129-oxfd25-2-0-cust987.4-3.cable.virginm.net) has quit
2014-11-07 18:36:39		admg (~admg@host86-151-90-210.range86-151.btcentralplus.com) has quit (Quit: Laptop gone to sleep...)
2014-11-07 18:36:52		magic (~magic@unaffiliated/auv5) has quit (Read error: Connection reset by peer)
2014-11-07 18:37:48		desophos (~desophos@108-205-152-216.lightspeed.irvnca.sbcglobal.net) has joined ##c++
2014-11-07 18:38:21		lord4163 (~lord4163@81-232-61-81-no226.tbcn.telia.com) has quit (Ping timeout: 265 seconds)
2014-11-07 18:38:37		staylor (~staylor@mail.au-zone.com) has quit (Ping timeout: 260 seconds)
2014-11-07 18:40:03		Jesin (~Jesin@r192085.res.Lehigh.EDU) has quit (Quit: Leaving)
2014-11-07 18:41:47		lord4163 (~lord4163@81-232-61-81-no226.tbcn.telia.com) has joined ##c++
2014-11-07 18:41:55		magic (~magic@unaffiliated/auv5) has joined ##c++
2014-11-07 18:42:38		Jesin (~Jesin@r192085.res.Lehigh.EDU) has joined ##c++
2014-11-07 18:48:01		lord4163 (~lord4163@81-232-61-81-no226.tbcn.telia.com) has quit (Ping timeout: 265 seconds)
2014-11-07 18:49:17		magic (~magic@unaffiliated/auv5) has quit (Disconnected by services)
2014-11-07 18:49:47		lord4163 (~lord4163@81-232-61-81-no226.tbcn.telia.com) has joined ##c++
2014-11-07 18:50:38		deekej (~deekej@77-57-67-41.dclient.hispeed.ch) has quit (Ping timeout: 250 seconds)
2014-11-07 18:51:13		siriusbtx (~siriusbtx@2a02:1810:4f0e:3400:76e5:43ff:fe5e:7ca4) has quit (Ping timeout: 260 seconds)
2014-11-07 18:51:34		surd (~surd@unaffiliated/surd) has quit (Ping timeout: 264 seconds)
2014-11-07 18:51:40		soulcake (~soulcake@unaffiliated/soulcake) has joined ##c++
2014-11-07 18:51:54		bladerunner (exzeerex@2001:470:1f11:201::dead:c0de) has quit (Quit: Quit: Quit: Quit: Quit: Quit: Quit)
2014-11-07 18:52:24		soulcake (~soulcake@unaffiliated/soulcake) has quit (Client Quit)
2014-11-07 18:52:54		soulcake (~soulcake@unaffiliated/soulcake) has joined ##c++
2014-11-07 18:53:04		parcs (~patrick@ool-4353af5c.dyn.optonline.net) has joined ##c++
2014-11-07 18:54:25		soulcake (~soulcake@unaffiliated/soulcake) has quit (Client Quit)
2014-11-07 18:54:56		soulcake (~soulcake@unaffiliated/soulcake) has joined ##c++
2014-11-07 18:55:12		soulcake (~soulcake@unaffiliated/soulcake) has quit (Client Quit)
2014-11-07 18:56:14		lord4163 (~lord4163@81-232-61-81-no226.tbcn.telia.com) has quit (Ping timeout: 265 seconds)
2014-11-07 18:56:21		Nemus (~Nemus@unaffiliated/nemus) has quit (Ping timeout: 250 seconds)
2014-11-07 18:56:33		soulcake (~soulcake@unaffiliated/soulcake) has joined ##c++
2014-11-07 18:56:34		soulcake (~soulcake@unaffiliated/soulcake) has quit (Remote host closed the connection)
2014-11-07 18:57:08		Nodd (~Nodd@ppp-43-24.grapevine.net.au) has quit (Quit:  HydraIRC -> http://www.hydrairc.com <- Like it?  Visit #hydrairc on EFNet)
2014-11-07 18:57:32		soulcake (~soulcake@unaffiliated/soulcake) has joined ##c++
2014-11-07 18:57:44		soulcake (~soulcake@unaffiliated/soulcake) has quit (Client Quit)
2014-11-07 18:58:33		soulcake (~soulcake@unaffiliated/soulcake) has joined ##c++
2014-11-07 18:59:01		Nemus (~Nemus@unaffiliated/nemus) has joined ##c++
2014-11-07 18:59:26		soulcake (~soulcake@unaffiliated/soulcake) has quit (Client Quit)
2014-11-07 19:00:06		nfk (~nfk@unaffiliated/nfk) has quit (Quit: yawn)
2014-11-07 19:02:12		soulcake (~soulcake@unaffiliated/soulcake) has joined ##c++
2014-11-07 19:02:25		soulcake (~soulcake@unaffiliated/soulcake) has left ##c++
2014-11-07 19:03:10		wox (~bartleby@unaffiliated/scroy) has quit (Ping timeout: 272 seconds)
2014-11-07 19:03:43		deekej (~deekej@77-57-67-41.dclient.hispeed.ch) has joined ##c++
2014-11-07 19:04:11		wox (~bartleby@unaffiliated/scroy) has joined ##c++
2014-11-07 19:04:35		govg (~govg@unaffiliated/govg) has quit (Ping timeout: 250 seconds)
2014-11-07 19:07:44		SlashLife_ (~slashlife@botters/slashlife) has joined ##c++
2014-11-07 19:10:17		lord4163 (~lord4163@81-232-61-81-no226.tbcn.telia.com) has joined ##c++
2014-11-07 19:10:18		ppf (~Miranda@HSI-KBW-095-208-002-008.hsi5.kabel-badenwuerttemberg.de) has quit (Read error: Connection reset by peer)
2014-11-07 19:10:45		Orion] (~nname@unaffiliated/orion/x-3970838) has quit (Ping timeout: 256 seconds)
2014-11-07 19:10:47		SlashLife (~slashlife@botters/slashlife) has quit (Ping timeout: 265 seconds)
2014-11-07 19:14:01		tcsc (~tcsc@c-76-118-148-98.hsd1.ma.comcast.net) has joined ##c++
2014-11-07 19:14:33		shintah (bebble@h-140-107.a336.priv.bahnhof.se) has quit (Read error: Connection reset by peer)
2014-11-07 19:15:08		hightower4 (~hightower@213.147.97.222) has joined ##c++
2014-11-07 19:15:13		hiptobecubic (~john@unaffiliated/hiptobecubic) has joined ##c++
2014-11-07 19:16:02		Phlow (~Kiss@c-98-192-129-67.hsd1.fl.comcast.net) has joined ##c++
2014-11-07 19:16:39		PhlowHome (~Kiss@c-98-192-129-67.hsd1.fl.comcast.net) has quit (Ping timeout: 240 seconds)
2014-11-07 19:16:51		surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-07 19:17:41		soulcake (~soulcake@unaffiliated/soulcake) has joined ##c++
2014-11-07 19:18:39		jonbo (~Jonbo123@24-179-41-134.dhcp.leds.al.charter.com) has quit (Ping timeout: 244 seconds)
2014-11-07 19:20:46		chartractegg (~chartract@ip68-231-150-90.tc.ph.cox.net) has joined ##c++
2014-11-07 19:20:54		KrzaQ (~krzaq@krzaq.cc) has quit (Disconnected by services)
2014-11-07 19:21:09		KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-07 19:21:30		bladerunner (blade@2001:470:1f11:201::dead:c0de) has joined ##c++
2014-11-07 19:21:38		chartractegg (~chartract@ip68-231-150-90.tc.ph.cox.net) has quit (Client Quit)
2014-11-07 19:21:51		lord4163 (~lord4163@81-232-61-81-no226.tbcn.telia.com) has quit (Ping timeout: 265 seconds)
2014-11-07 19:23:09		davek (~tracekill@unaffiliated/tracekill) has joined ##c++
2014-11-07 19:23:47		lord4163 (~lord4163@81-232-61-81-no226.tbcn.telia.com) has joined ##c++
2014-11-07 19:24:48		FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has quit (Remote host closed the connection)
2014-11-07 19:25:19		peteros (~asakharov@24.60.79.55) has joined ##c++
2014-11-07 19:25:58		iptable (~iptable@81.149.85.42) has quit (Ping timeout: 272 seconds)
2014-11-07 19:26:41		FlorianJW-terra (~florian@2a01:488:66:1000:523:f0b9:0:1) has joined ##c++
2014-11-07 19:28:02		BigDru (~quassel@108.175.226.98) has joined ##c++
2014-11-07 19:28:25	davek	I'm having a bit of a problem with some templating/TMP stuff: http://stackoverflow.com/questions/26811519/varying-the-parameter-list-of-an-function-based-on-template-parameter
2014-11-07 19:28:41	davek	Hoping someone might be able to help out. I'm totally out of ideas.
2014-11-07 19:30:27		BigDru (~quassel@108.175.226.98) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2014-11-07 19:30:33		lord4163 (~lord4163@81-232-61-81-no226.tbcn.telia.com) has quit (Ping timeout: 265 seconds)
2014-11-07 19:30:51		TViernion (~TViernion@38.107.244.132) has joined ##c++
2014-11-07 19:31:46		hz (~username@unaffiliated/hz) has quit (Quit: Leaving.)
2014-11-07 19:33:07		TzilTzal (~yh@203.126.56.18) has quit (Ping timeout: 244 seconds)
2014-11-07 19:33:24	soulcake	System Information: Model: iMac (27-inch Late 2013) • OS: OS X 10.10 (Yosemite) (Build 14A389)
2014-11-07 19:33:33	--	irc: disconnected from server
2014-11-07 19:34:07		dagnachew (~dagnachew@bas1-montreal30-2925416228.dsl.bell.ca) has joined ##c++
2014-11-07 19:34:07	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-11-07 19:34:07	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-11-07 19:34:07	--	Channel ##c++: 544 nicks (1 op, 0 voices, 543 normals)
2014-11-07 19:34:08	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-11-07 19:34:08		BigDru (~quassel@108.175.226.98) has joined ##c++
2014-11-07 19:34:22	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-11-07 19:35:21		Orion] (~nname@unaffiliated/orion/x-3970838) has joined ##c++
2014-11-07 19:35:23		lru (~lru@digon.foursquare.net) has joined ##c++
2014-11-07 19:36:41		Scellow (~quassel@ip-249.net-89-2-143.rev.numericable.fr) has joined ##c++
2014-11-07 19:37:53		QualityAddict (~QualityAd@ip68-102-62-117.ks.ok.cox.net) has joined ##c++
2014-11-07 19:38:01		TzilTzal (~yh@203.126.56.18) has joined ##c++
2014-11-07 19:39:29		comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has quit (Quit: Bye)
2014-11-07 19:39:45		iptable (~iptable@81.149.85.42) has joined ##c++
2014-11-07 19:40:08		stakewinner00 (~stakewinn@25.104.15.37.dynamic.jazztel.es) has quit (Remote host closed the connection)
2014-11-07 19:40:18		KDLGates (~KDLGates@173.168.88.166) has quit (Quit: Leaving)
2014-11-07 19:41:03		Albori (~Albori@64-251-150-248.fidnet.com) has quit
2014-11-07 19:41:23		sze (~sze@c-24-19-210-87.hsd1.wa.comcast.net) has joined ##c++
2014-11-07 19:43:10		hexagoxel (~hexagoxel@p4FCCD175.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2014-11-07 19:44:29		plamen (user@nat/mslo/x-gzpenwoxjocourjm) has quit (Quit: ERC Version 5.3 (IRC client for Emacs))
2014-11-07 19:44:49		KrzaQ (~krzaq@krzaq.cc) has quit (Read error: Connection reset by peer)
2014-11-07 19:45:13		KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-07 19:45:21		SlashLife (~slashlife@botters/slashlife) has joined ##c++
2014-11-07 19:47:00		KrzaQ (~krzaq@krzaq.cc) has quit (Disconnected by services)
2014-11-07 19:47:15		KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-07 19:48:08		SlashLife_ (~slashlife@botters/slashlife) has quit (Ping timeout: 272 seconds)
2014-11-07 19:48:22		kadoban_ (~kadoban@ip68-3-81-129.ph.ph.cox.net) has quit (Quit: bye)
2014-11-07 19:50:02		Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:5034:5820:efd0:3b9a) has quit (Ping timeout: 260 seconds)
2014-11-07 19:56:10		KrzaQ (~krzaq@krzaq.cc) has quit (Disconnected by services)
2014-11-07 19:56:13		Henke37 (~Henrik@h23n2-ks-d3.ias.bredband.telia.com) has quit (Read error: Connection reset by peer)
2014-11-07 19:56:25		KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-07 19:57:08		ambro718 (~ambro@gentoo/contributor/ambro718) has quit (Ping timeout: 265 seconds)
2014-11-07 19:58:18		fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2014-11-07 19:58:39		fstd (~fstd@unaffiliated/fisted) has joined ##c++
2014-11-07 20:00:10		parcs (~patrick@ool-4353af5c.dyn.optonline.net) has left ##c++ ("WeeChat 1.1-dev")
2014-11-07 20:00:48		Hannibal_Smith (~Hannibal_@host216-4-dynamic.43-79-r.retail.telecomitalia.it) has quit (Quit: Sto andando via)
2014-11-07 20:01:24		Gluesticky (~nobody@unaffiliated/gluesticky) has quit (Ping timeout: 255 seconds)
2014-11-07 20:05:05		Cirus_ (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has joined ##c++
2014-11-07 20:08:25		Cirus (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has quit (Ping timeout: 272 seconds)
2014-11-07 20:08:44		TomyLobo (~TomyLobo@ip5b417367.dynamic.kabel-deutschland.de) has quit (Quit: Standby mode...)
2014-11-07 20:12:58		lmat (~lmat@c-50-129-81-232.hsd1.il.comcast.net) has joined ##c++
2014-11-07 20:14:19		delta-nry (~delta-nry@dhcp-128-189-67-215.ubcsecure.wireless.ubc.ca) has joined ##c++
2014-11-07 20:14:38		lamefun (~lamefun2@94.181.170.88) has quit (Quit: Leaving)
2014-11-07 20:16:38		leen^| (~leeN@f050216169.adsl.alicedsl.de) has joined ##c++
2014-11-07 20:16:44		chewyDelicious (~nooblet@124-197-46-119.callplus.net.nz) has quit (Disconnected by services)
2014-11-07 20:17:38		dfletcher_ (~dfletcher@drupal.org/user/72475/view) has joined ##c++
2014-11-07 20:18:14		Gluesticky (~nobody@unaffiliated/gluesticky) has joined ##c++
2014-11-07 20:19:05		ruediger_ (~quassel@ptmx.org) has joined ##c++
2014-11-07 20:19:07		Timmy (~Timmy@unaffiliated/timmyt) has joined ##c++
2014-11-07 20:19:28		fahadash_ (~fahadash@unaffiliated/fahadash) has joined ##c++
2014-11-07 20:20:10		tachoknight (~tachoknig@71.201.47.228) has quit (Ping timeout: 244 seconds)
2014-11-07 20:20:10		Devtron (~Devtron@x1-6-20-4e-7f-c8-cd-f2.cpe.webspeed.dk) has quit (Ping timeout: 244 seconds)
2014-11-07 20:20:10		u-foka (~u-foka@shost-57E562A6.sigmanet.hu) has quit (Ping timeout: 244 seconds)
2014-11-07 20:20:11		FabTG (~ftg@AAnnecy-651-1-64-15.w86-209.abo.wanadoo.fr) has quit (Ping timeout: 244 seconds)
2014-11-07 20:20:11		Heartbroken (Heartbroke@gateway/shell/trekweb.org/x-imeiutxfwktikhdf) has quit (Ping timeout: 244 seconds)
2014-11-07 20:20:11		Timmy` (~Timmy@unaffiliated/timmyt) has quit (Ping timeout: 244 seconds)
2014-11-07 20:20:12		jalcine (~znc@unaffiliated/webjadmin) has quit (Ping timeout: 244 seconds)
2014-11-07 20:20:12		VeXocide (vexocide@unaffiliated/vexocide) has quit (Ping timeout: 244 seconds)
2014-11-07 20:20:12		guitarman0831 (~guitarman@oinoe.bytesized-hosting.com) has quit (Ping timeout: 244 seconds)
2014-11-07 20:20:12		decent (~decent@213-67-227-15-no157.tbcn.telia.com) has quit (Ping timeout: 244 seconds)
2014-11-07 20:20:12		ncd|leeN (~leeN@f050216169.adsl.alicedsl.de) has quit (Ping timeout: 244 seconds)
2014-11-07 20:20:12		dfletcher (~dfletcher@drupal.org/user/72475/view) has quit (Ping timeout: 244 seconds)
2014-11-07 20:20:12		Ulrike_Rayne (~Ulrike_Ra@cpe-65-24-84-7.columbus.res.rr.com) has quit (Ping timeout: 244 seconds)
2014-11-07 20:20:12		fahadash (~fahadash@unaffiliated/fahadash) has quit (Ping timeout: 244 seconds)
2014-11-07 20:20:12		phao (~phao@200-149-81-112.user.veloxzone.com.br) has quit (Ping timeout: 244 seconds)
2014-11-07 20:20:13		simius (~simius@h-88-117.a230.priv.bahnhof.se) has quit (Ping timeout: 244 seconds)
2014-11-07 20:20:13		ruediger (~quassel@ptmx.org) has quit (Ping timeout: 244 seconds)
2014-11-07 20:20:13		notker (notker@vanu.org) has quit (Ping timeout: 244 seconds)
2014-11-07 20:20:15	--	dfletcher_ is now known as dfletcher
2014-11-07 20:20:33		FabTG (~ftg@AAnnecy-651-1-64-15.w86-209.abo.wanadoo.fr) has joined ##c++
2014-11-07 20:20:41		guitarman0831 (~guitarman@oinoe.bytesized-hosting.com) has joined ##c++
2014-11-07 20:20:45		lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has joined ##c++
2014-11-07 20:21:32		Amaranth (~travis@ubuntu/member/Amaranth) has joined ##c++
2014-11-07 20:21:54		phao (~phao@200-149-81-112.user.veloxzone.com.br) has joined ##c++
2014-11-07 20:23:16		Carbonflux (~BOB@174-21-15-29.tukw.qwest.net) has joined ##c++
2014-11-07 20:23:37		Amaranthus (~travis@ubuntu/member/Amaranth) has quit (Ping timeout: 272 seconds)
2014-11-07 20:24:44		jackyalcine (~znc@unaffiliated/webjadmin) has joined ##c++
2014-11-07 20:26:20		Heartbroken (Heartbroke@gateway/shell/trekweb.org/x-epqysaeusjimuwmu) has joined ##c++
2014-11-07 20:31:08		Smjert (~Smjert@2-230-17-181.ip199.fastwebnet.it) has quit
2014-11-07 20:32:00		wox (~bartleby@unaffiliated/scroy) has quit (Ping timeout: 255 seconds)
2014-11-07 20:32:30	BigDru	Wow. and here i was thinking this channel would be filled with spirited debate
2014-11-07 20:33:21		Sadale (~Sadale@unaffiliated/sadale) has joined ##c++
2014-11-07 20:35:19		ObjectiveMatt (~Objective@66.87.151.150) has joined ##c++
2014-11-07 20:36:04		Rudolf (~rodolfo@unaffiliated/rudolf) has quit (Quit: [IRSSI])
2014-11-07 20:37:41		EvilPenguin (~EvilPengu@173.247.204.218) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-11-07 20:43:06	BigDru	Anyone ever have an issue with VS2013 where you build and run your win32 console app and it terminates like 30sec in and then restarts?
2014-11-07 20:43:16		arescorpio (~arescorpi@227-206-17-190.fibertel.com.ar) has joined ##c++
2014-11-07 20:44:11		astrofog (~astrofog@unaffiliated/astrofog) has quit (Quit: Quite)
2014-11-07 20:44:34		necrogami (~necrogami@unaffiliated/necrogami) has quit (Ping timeout: 265 seconds)
2014-11-07 20:44:51		adu (~ajr@c-69-243-56-49.hsd1.md.comcast.net) has quit (Quit: adu)
2014-11-07 20:46:22		Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-11-07 20:46:26		SoylentYellow (~SoylentYe@209-234-137-234.static.twtelecom.net) has quit (Ping timeout: 245 seconds)
2014-11-07 20:47:55		Sc0tty- (~Scottyyy@86.53.112.194) has quit
2014-11-07 20:48:05		LetoThe2nd (~jd@unaffiliated/letothe2nd) has quit (Remote host closed the connection)
2014-11-07 20:50:38		PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Quit: ChatZilla 0.9.91 [Firefox 32.0.3/20140923175406])
2014-11-07 20:50:40		immibis (~ChatZill1@122-59-227-101.jetstream.xtra.co.nz) has quit (Ping timeout: 240 seconds)
2014-11-07 20:51:52		immibis (~ChatZill1@122-59-227-101.jetstream.xtra.co.nz) has joined ##c++
2014-11-07 20:56:02		delta-nry (~delta-nry@dhcp-128-189-67-215.ubcsecure.wireless.ubc.ca) has quit (Quit: delta-nry)
2014-11-07 20:56:37	lmat	BigDru: debate about what?
2014-11-07 20:56:38		necrogami (~necrogami@unaffiliated/necrogami) has joined ##c++
2014-11-07 20:56:49		Haswell (~Haswell@unaffiliated/haswell) has joined ##c++
2014-11-07 20:57:22	lh_mouse	completely not about msvc and win32.
2014-11-07 21:00:29		chewyDelicious (~nooblet@124-197-46-119.callplus.net.nz) has joined ##c++
2014-11-07 21:00:34		Andy-chan (~Andy-chan@xdsl-84-44-171-238.netcologne.de) has quit (Ping timeout: 258 seconds)
2014-11-07 21:02:24		Streusel (~Anonymous@unaffiliated/streusel) has quit (Remote host closed the connection)
2014-11-07 21:03:03		pmenso57 (c730c6e4@gateway/web/freenode/ip.199.48.198.228) has joined ##c++
2014-11-07 21:03:29		Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2014-11-07 21:05:44		astrofog (~astrofog@unaffiliated/astrofog) has joined ##c++
2014-11-07 21:06:19		surd (~surd@unaffiliated/surd) has quit (Ping timeout: 258 seconds)
2014-11-07 21:07:04		astrofog (~astrofog@unaffiliated/astrofog) has quit (Client Quit)
2014-11-07 21:07:05		Haswell (~Haswell@unaffiliated/haswell) has quit (Quit: Saliendo)
2014-11-07 21:07:25		Haswell (~Haswell@unaffiliated/haswell) has joined ##c++
2014-11-07 21:08:22		astrofog (~astrofog@unaffiliated/astrofog) has joined ##c++
2014-11-07 21:09:41		akiress (~weechat@pdpc/supporter/student/akiress) has joined ##c++
2014-11-07 21:09:45		astrofog (~astrofog@unaffiliated/astrofog) has quit (Remote host closed the connection)
2014-11-07 21:10:49	BigDru	yea sorry about that. Won't happen again :)
2014-11-07 21:11:28		Garner (uid38417@gateway/web/irccloud.com/x-dyaaqmplzptjqafl) has quit (Quit: Connection closed for inactivity)
2014-11-07 21:11:37		riotz (riotz@unaffiliated/riotz) has quit (Quit: ZNC - http://znc.sourceforge.net)
2014-11-07 21:12:25		Gentilhomme (~Gentilhom@unaffiliated/gentilhomme) has joined ##c++
2014-11-07 21:15:57		lduros (~user@fsf/member/lduros) has quit (Read error: Connection reset by peer)
2014-11-07 21:18:34		Scellow (~quassel@ip-249.net-89-2-143.rev.numericable.fr) has quit (Remote host closed the connection)
2014-11-07 21:30:17		akiress (~weechat@pdpc/supporter/student/akiress) has quit (Quit: WeeChat 1.0.1)
2014-11-07 21:30:45		Cirus_ (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has quit (Read error: Connection reset by peer)
2014-11-07 21:32:19		Albori (~Albori@64-251-150-248.fidnet.com) has joined ##c++
2014-11-07 21:33:22		ObjectiveMatt (~Objective@66.87.151.150) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-11-07 21:34:01		Gluesticky (~nobody@unaffiliated/gluesticky) has quit (Quit: This is the end. Goodbye cruel world!)
2014-11-07 21:38:05		kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has joined ##c++
2014-11-07 21:38:57		SoylentYellow (~SoylentYe@130.164.63.85) has joined ##c++
2014-11-07 21:39:11		Timmy (~Timmy@unaffiliated/timmyt) has quit (Ping timeout: 265 seconds)
2014-11-07 21:39:43		rnickb (~rnickb@ool-44c6f08b.dyn.optonline.net) has joined ##c++
2014-11-07 21:42:16		TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2014-11-07 21:43:39		KAHR-Alpha (~Alpha@AReims-652-1-94-158.w86-192.abo.wanadoo.fr) has quit (Ping timeout: 264 seconds)
2014-11-07 21:47:17		m0shbear (~011899988@servbox.moshbear.net) has joined ##c++
2014-11-07 21:50:44		immibis (~ChatZill1@122-59-227-101.jetstream.xtra.co.nz) has quit (Ping timeout: 265 seconds)
2014-11-07 21:51:49		immibis (~ChatZill1@122-59-227-101.jetstream.xtra.co.nz) has joined ##c++
2014-11-07 21:52:42		necrogami (~necrogami@unaffiliated/necrogami) has quit (Ping timeout: 258 seconds)
2014-11-07 21:53:02		BigDru (~quassel@108.175.226.98) has quit (Ping timeout: 256 seconds)
2014-11-07 21:57:19		rnickb (~rnickb@ool-44c6f08b.dyn.optonline.net) has quit (Quit: rnickb)
2014-11-07 21:57:42		rnickb (~rnickb@ool-44c6f08b.dyn.optonline.net) has joined ##c++
2014-11-07 22:00:14		WalrusPony (~retep998@pool-173-76-142-231.bstnma.east.verizon.net) has joined ##c++
2014-11-07 22:00:40		WalrustPony (~retep998@pool-173-76-142-231.bstnma.east.verizon.net) has quit (Ping timeout: 245 seconds)
2014-11-07 22:01:23		surd (~surd@unaffiliated/surd) has joined ##c++
2014-11-07 22:02:22		zima (zima@c75.152.27-202.clta.globetrotter.net) has quit (Quit: zima)
2014-11-07 22:04:00		necrogami (~necrogami@unaffiliated/necrogami) has joined ##c++
2014-11-07 22:08:21		ObjectiveMatt (~Objective@66.87.151.150) has joined ##c++
2014-11-07 22:17:54		LunarJetman (LunarJetma@2.221.166.187) has quit (Quit: LunarJetman)
2014-11-07 22:22:58		ObjectiveMatt (~Objective@66.87.151.150) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-11-07 22:23:52		necrogami (~necrogami@unaffiliated/necrogami) has quit (Ping timeout: 264 seconds)
2014-11-07 22:27:02		blipped (~quassel@119.130.113.27) has joined ##c++
2014-11-07 22:28:44		TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Read error: Connection reset by peer)
2014-11-07 22:28:55		TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2014-11-07 22:29:31		deekej (~deekej@77-57-67-41.dclient.hispeed.ch) has quit (Remote host closed the connection)
2014-11-07 22:30:08		kadoban (~kadoban@ip68-3-81-129.ph.ph.cox.net) has joined ##c++
2014-11-07 22:30:22		TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Read error: Connection reset by peer)
2014-11-07 22:30:53		TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2014-11-07 22:32:27		Burga (~andrewm@124-170-147-120.dyn.iinet.net.au) has joined ##c++
2014-11-07 22:32:42		devbug (~quassel@d108-180-247-142.bchsia.telus.net) has joined ##c++
2014-11-07 22:34:55		necrogami (~necrogami@unaffiliated/necrogami) has joined ##c++
2014-11-07 22:37:29		ObjectiveMatt (~Objective@66.87.151.150) has joined ##c++
2014-11-07 22:41:50		YarnFive8 (YarnFive8@unaffiliated/yarnfive8) has quit
2014-11-07 22:41:54		saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has joined ##c++
2014-11-07 22:43:45		sparetire_ (~sparetire@unaffiliated/sparetire) has quit (Quit: sparetire_)
2014-11-07 22:43:47		KrzaQ (~krzaq@krzaq.cc) has quit (Disconnected by services)
2014-11-07 22:44:01		KrzaQ (~krzaq@krzaq.cc) has joined ##c++
2014-11-07 22:48:20		Twinklebear (~Twinklebe@c-98-202-129-89.hsd1.ut.comcast.net) has joined ##c++
2014-11-07 22:50:10		qis (~qis@ip-176-199-139-35.hsi06.unitymediagroup.de) has quit (Ping timeout: 260 seconds)
2014-11-07 22:52:00		croutonage (~croutonag@unaffiliated/croutonage) has joined ##c++
2014-11-07 22:52:27		necrogami (~necrogami@unaffiliated/necrogami) has quit (Ping timeout: 250 seconds)
2014-11-07 22:53:34		Jesin (~Jesin@r192085.res.Lehigh.EDU) has quit (Quit: Leaving)
2014-11-07 22:57:39		degva (~degva@181.64.192.138) has joined ##c++
2014-11-07 22:57:46		delta-nry (~delta-nry@S0106c8fb2658a55a.vc.shawcable.net) has joined ##c++
2014-11-07 22:57:48		lamefun (~lamefun2@94.181.170.88) has joined ##c++
2014-11-07 22:58:08		Orion] (~nname@unaffiliated/orion/x-3970838) has quit (Read error: Connection reset by peer)
2014-11-07 22:58:10		antons__ (~antons@199.48.120.2) has quit (Read error: Connection reset by peer)
2014-11-07 22:58:27		antons__ (~antons@199.48.120.2) has joined ##c++
2014-11-07 22:58:52		ncd|leeN (~leeN@e180209197.adsl.alicedsl.de) has joined ##c++
2014-11-07 22:59:10		Raziel (~Raziel@cpc16-broo8-2-0-cust158.14-2.cable.virginm.net) has quit (Ping timeout: 255 seconds)
2014-11-07 23:00:10		Burga (~andrewm@124-170-147-120.dyn.iinet.net.au) has quit (Ping timeout: 240 seconds)
2014-11-07 23:00:17		ObjectiveMatt (~Objective@66.87.151.150) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-11-07 23:01:38		ObjectiveMatt (~Objective@66-87-151-150.pools.spcsdns.net) has joined ##c++
2014-11-07 23:01:39		ObjectiveMatt (~Objective@66-87-151-150.pools.spcsdns.net) has quit (Client Quit)
2014-11-07 23:02:23		leen^| (~leeN@f050216169.adsl.alicedsl.de) has quit (Ping timeout: 255 seconds)
2014-11-07 23:04:00		moonchild (~loon@73.13.118.191) has joined ##c++
2014-11-07 23:04:36		lru (~lru@digon.foursquare.net) has left ##c++
2014-11-07 23:04:43		necrogami (~necrogami@unaffiliated/necrogami) has joined ##c++
2014-11-07 23:05:53	moonchild	hey guys, does anyone know the status of the network working group's work?
2014-11-07 23:06:23	moonchild	...like have they published some draft api's or are they still bickering about what to copy out of boost?
2014-11-07 23:07:05	 *	moonchild could google it, but i'd rather get the scoop here
2014-11-07 23:08:01		Albori (~Albori@64-251-150-248.fidnet.com) has quit
2014-11-07 23:09:48	kalven	I think the latest is that they decided to stop wasting time on an ip class and just copy things en masse from asio
2014-11-07 23:10:12	moonchild	not sure that's the right tact
2014-11-07 23:10:56	moonchild	i've been working on some stuff myself w/o looking at the group-think in what's happening btw boost and there
2014-11-07 23:11:57		kurahaupo_ (~kurahaupo@118.148.221.3) has joined ##c++
2014-11-07 23:12:02	moonchild	i've been heavily influenced by having implemented a near-comple version of the filesystem proposal
2014-11-07 23:12:23	kalven	I dunno, asio works, it's established
2014-11-07 23:12:34	moonchild	yeah, but it sucks
2014-11-07 23:12:42	--	kurahaupo_ is now known as kurahaupo
2014-11-07 23:12:58	moonchild	actually, it sucked last i looked at it a year or two ago
2014-11-07 23:13:21	moonchild	i *really* can't comment on the current state of affairs with it
2014-11-07 23:13:49	det	Im not sure this is something that needs standardization
2014-11-07 23:14:53		mattallmill (~mattallmi@129.130.175.155) has quit (Quit: Konversation terminated!)
2014-11-07 23:15:22	det	epoll and iocp are very different for example
2014-11-07 23:15:27	moonchild	det: i can argue both sides of that... on one hand you can point to the success of languages like java and python that have rich libraries
2014-11-07 23:16:07	moonchild	on the other hand, there's the imperfect mapping that those high-level api's have to os-specific primitives
2014-11-07 23:17:23	moonchild	by that, i mean, a lot of the reason to use c or c++ for stuff is because you can get at stuff like accepting a socket connection and making it non-blocking with a single system call vs two
2014-11-07 23:18:25		kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has quit (Ping timeout: 272 seconds)
2014-11-07 23:18:44	moonchild	i don't believe either school of thought has a better point, its just whether you're doing high perf or rapid app development
2014-11-07 23:18:54		c0le (~c0le@59.99.251.45) has joined ##c++
2014-11-07 23:19:11	moonchild	i do think there's a middle ground, but i feel that copying asio for that is a mistake
2014-11-07 23:19:14		Styxem (~Styxem@99-34-121-1.lightspeed.clmboh.sbcglobal.net) has joined ##c++
2014-11-07 23:19:19	kalven	why?
2014-11-07 23:20:03	moonchild	brb and i'll exp[lain
2014-11-07 23:20:15		necrogami (~necrogami@unaffiliated/necrogami) has quit (Ping timeout: 244 seconds)
2014-11-07 23:21:58		condy (~condy@2001:da8:4004:251:3e97:eff:fe2d:1e82) has joined ##c++
2014-11-07 23:22:01	moonchild	back
2014-11-07 23:22:47		Burgundy (~burgundy@188.25.249.69) has quit (Ping timeout: 264 seconds)
2014-11-07 23:23:08	moonchild	kalven: i've been doing a lot of experimentation with wrapping from the ground-up linux api's in oo classes w/o trying to really conform to any api standards
2014-11-07 23:23:35		chartractegg (~chartract@ip68-231-150-90.tc.ph.cox.net) has joined ##c++
2014-11-07 23:23:58	moonchild	some stuff makes a lot of sense to do, like creating an raii class around your native fd/socket handles as a base class for everything else
2014-11-07 23:24:19		lamefun (~lamefun2@94.181.170.88) has quit (Quit: Leaving)
2014-11-07 23:24:51	moonchild	i'm finding that a lot of these god-api's miss implementing levels of abstraction that allow programmers to get at useful os primitives
2014-11-07 23:25:20	moonchild	functions like ioctl and setsockopt end up falling out of the api's
2014-11-07 23:25:48	--	srjek_ is now known as srjek
2014-11-07 23:25:51	kalven	there's always the native_handle escape hatch
2014-11-07 23:25:53	moonchild	(keep in mind i'm strictly a unix-side-of-things programmer)
2014-11-07 23:26:07	moonchild	yeah, but what i'm finding
2014-11-07 23:26:39		Jesin (~Jesin@Dyn132028.cc.lehigh.edu) has joined ##c++
2014-11-07 23:26:41	moonchild	in kinda stumbling through figuring out how to implement posix from the ground up w/ raii wrappers
2014-11-07 23:26:55		Haswell (~Haswell@unaffiliated/haswell) has quit (Quit: Saliendo)
2014-11-07 23:27:08	moonchild	is that you *really* don't want to access the native handle *ever*
2014-11-07 23:27:17		chartractegg (~chartract@ip68-231-150-90.tc.ph.cox.net) has quit (Read error: Connection reset by peer)
2014-11-07 23:27:45		aizo (~aizo@ns100.rhodes.edu) has joined ##c++
2014-11-07 23:27:45	moonchild	you want to give someone a way of doing the same thing they could with the native handle, but with less code
2014-11-07 23:27:57	aizo	Howdy all.
2014-11-07 23:28:18	aizo	I feel like I'm bashing my head against a wall over and over. Been trying so many different methods of approaching this problem but I'm just... stuck.
2014-11-07 23:28:56	kalven	moonchild: but, the thing should still be cross platform
2014-11-07 23:28:59	aizo	I'm trying to make a simple hangman game but every time I have the board redrawn, if the letter the player enters is in the puzzle, it will ONLY show THAT letter. I'm having trouble make it keep track of the letters that were guessed previously.
2014-11-07 23:29:19	kalven	I don't think it's a failure of the API if you happen to need native_handle for slightly esoteric things
2014-11-07 23:29:27	moonchild	kalven: cross plat abstractions can be built on top
2014-11-07 23:29:45		cale250 (~cale250@173-17-30-173.client.mchsi.com) has left ##c++ ("Textual IRC Client: www.textualapp.com")
2014-11-07 23:30:00	aizo	I'd rather not have to keep track of previously guessed letters, and just have the underscores update to reflect the relevant changes as needed.
2014-11-07 23:30:33	moonchild	aizo: is the problem in the underlying data structures or in your drawing routines?
2014-11-07 23:30:45	aizo	I'm not actually drawing anything out, this is all in the console.
2014-11-07 23:30:53	moonchild	haha, ok
2014-11-07 23:30:57	aizo	But it takes a phrase, turns it into underscores, and spits it out
2014-11-07 23:31:07	aizo	If you guess the letter, it updates the relevant underscore and makes it that letter
2014-11-07 23:31:24	kalven	moonchild: then the cross-platform thing is what potentially would be interesting from a standards viewpoint
2014-11-07 23:31:30	aizo	It's so freaking simple, I just can't seem to make it work the same way it worked in Python
2014-11-07 23:31:44	aizo	And I spent way too much time fiddling with vectors because I thought it would make my life so much simpler
2014-11-07 23:32:20	moonchild	kalven: what interests me is how practical problems in programming should be the driving force for standards
2014-11-07 23:33:12		ncd|leeN (~leeN@e180209197.adsl.alicedsl.de) has quit (Ping timeout: 265 seconds)
2014-11-07 23:33:14		necrogami (~necrogami@unaffiliated/necrogami) has joined ##c++
2014-11-07 23:33:22	moonchild	aizo: ask yourself, is there a problem with your representation
2014-11-07 23:33:41	kalven	moonchild: standardization is about standardizing best practice
2014-11-07 23:34:35	moonchild	kalven, we could be up all night debating what's been standardized and how it isn't the best practice
2014-11-07 23:35:33	kalven	adopting a well-established lib is one way of doing it
2014-11-07 23:35:34	moonchild	a very good example of that is file/io with binary vs ascii mode
2014-11-07 23:35:51	moonchild	like libc?
2014-11-07 23:36:52	moonchild	i think what i'm advocating is that there should be a low-level api underneath the portable api
2014-11-07 23:37:32		mxiia (~mxiia@unaffiliated/mxiia) has joined ##c++
2014-11-07 23:37:35	moonchild	and *both* should be standardized, but perhaps by different bodies/consortiums
2014-11-07 23:39:05	moonchild	i'm personally sick of the higher level api's that don't let you get at things like epoll in edge trigger mode
2014-11-07 23:39:26		ChoiKyuSang (~AdiIRC@unaffiliated/choikyusang) has quit (Quit: Going offline, see ya! ( www.adiirc.com)
2014-11-07 23:40:11	moonchild	i may be off-base, i don't know yet
2014-11-07 23:40:12		Cirus (~Cirus@2601:9:80:101c:e841:672:584e:7ab) has joined ##c++
2014-11-07 23:40:26		ChoiKyuSang (~AdiIRC@unaffiliated/choikyusang) has joined ##c++
2014-11-07 23:40:44	moonchild	i am however writing a lot of experimental code to figure that out
2014-11-07 23:41:02		degva (~degva@181.64.192.138) has quit (Ping timeout: 245 seconds)
2014-11-07 23:41:06	kalven	I see it as two different things, if you want a low-level, system-specific api then that's perfectly fine. something in the standard needs to be fairly portable.
2014-11-07 23:41:37	moonchild	i don't believe that's incompatible with what i'm saying
2014-11-07 23:42:08	kalven	the file io support in the standard is a pretty good example. it's good for run of the mill file access. if you want to do something other than that, you need to use os-specific stuff, and I think that's fine
2014-11-07 23:42:10		basic6_ (~basic6@p4FCB44A9.dip0.t-ipconnect.de) has joined ##c++
2014-11-07 23:42:19	kalven	I'd rather have fstream than nothing
2014-11-07 23:42:50	moonchild	actually, every time i try to use iostreams, or even stdio, i run into issues
2014-11-07 23:43:29		voidah (~voidah@infosth.com) has joined ##c++
2014-11-07 23:43:32	--	pragma- is now known as p
2014-11-07 23:43:45		PSG_Luna (uid48908@gateway/web/irccloud.com/x-kldejclvhsfhvimg) has joined ##c++
2014-11-07 23:43:47	moonchild	...all of a sudden i want to dup the underlying descriptor or pass the output through gzip or something, and have to re-write the entire thing with naked file descriptors
2014-11-07 23:43:59	--	p is now known as pragma-
2014-11-07 23:45:34	moonchild	i can conclusively say that the only thing that iostreams are really ok for doing is reading line-oriented input
2014-11-07 23:45:50		basic6 (~basic6@p4FCB46F9.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2014-11-07 23:45:54	moonchild	i.e. getline(istream, string)
2014-11-07 23:47:03	kalven	right, but I'd rather have that than having to reach for some 3rd party lib every time
2014-11-07 23:47:25	moonchild	you & me both
2014-11-07 23:47:39	moonchild	i'd rather have something in the std that can be used
2014-11-07 23:48:07		QualityAddict (~QualityAd@ip68-102-62-117.ks.ok.cox.net) has quit (Ping timeout: 245 seconds)
2014-11-07 23:48:41	moonchild	btw, i still prefer to do i/o with printf for console stuff
2014-11-07 23:49:18	moonchild	the reason for that is 1) its easier to format and 2) i can get at the native handle portably
2014-11-07 23:50:16	moonchild	(although with low-level code, why does it need to be portable?)
2014-11-07 23:50:45	--	irc: disconnected from server
2014-11-08 09:02:44		dagnachew (~dagnachew@bas1-montreal30-2925416228.dsl.bell.ca) has joined ##c++
2014-11-08 09:02:44	--	Topic for ##c++ is "##C++ is a topical channel for discussing standard C++ specifications and code. || Current standard: ISO/IEC 14882:2014 (a.k.a. C++14) || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/"
2014-11-08 09:02:44	--	Topic set by Adrinael (~adrinael@barrel.rolli.org) on Wed, 20 Aug 2014 06:01:38
2014-11-08 09:02:44	--	Channel ##c++: 530 nicks (1 op, 0 voices, 529 normals)
2014-11-08 09:02:45	--	PvNotice(ChanServ): a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
2014-11-08 09:02:57	dobby156	well then you need to make your error object sufficiently complex enough to represent those cases
2014-11-08 09:03:00	--	Channel created on Fri, 14 Sep 2001 23:15:35
2014-11-08 09:03:04	erikj	Yeah, I was just wondering if people had come to a consensus of the "nicest" way of doing something like that. Or if I just being stupid and should go and sit in the naughty corner
2014-11-08 09:03:32	dobby156	either by runtime (inheritence) polymorphism or some sort of internal varient<string, code...>
2014-11-08 09:04:32		r0bby_ (~wakawaka@guifications/user/r0bby) has quit (Read error: Connection reset by peer)
2014-11-08 09:04:50		r0bby_ (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-11-08 09:05:35		delicado (~delicado@203.111.224.80) has quit (Read error: Connection reset by peer)
2014-11-08 09:07:41		robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2014-11-08 09:09:46		anders0 (~anders0@213.47.181.68) has quit (Quit: *** Prelude.undefined)
2014-11-08 09:11:51		r0bby_ (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 256 seconds)
2014-11-08 09:14:53		KAHR-Alpha (~Alpha@AReims-652-1-94-158.w86-192.abo.wanadoo.fr) has quit (Remote host closed the connection)
2014-11-08 09:15:24		deekej (~deekej@77-57-67-41.dclient.hispeed.ch) has quit (Remote host closed the connection)
2014-11-08 09:16:08		hexagoxel (~hexagoxel@p4FCCCEC6.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2014-11-08 09:21:36		tesuji (~tesuji@unaffiliated/tesuji) has joined ##c++
2014-11-08 09:23:18		sparetire_ (~sparetire@unaffiliated/sparetire) has joined ##c++
2014-11-08 09:23:18		Jeeb_ (~Jeeb_@u193-11-162-37.studentnatet.se) has joined ##c++
2014-11-08 09:23:26		jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has joined ##c++
2014-11-08 09:24:32		PJBoy (~PJBoy@unaffiliated/pjboy) has joined ##c++
2014-11-08 09:26:17		condy (~condy@2001:da8:4004:251:3e97:eff:fe2d:1e82) has quit (Quit: leaving)
2014-11-08 09:26:55		Errorical (~Errorical@213.128.190.150) has quit (Remote host closed the connection)
2014-11-08 09:27:30		kamalmarhubi_ (sid26581@gateway/web/irccloud.com/x-nldjprsayllrvpou) has joined ##c++
2014-11-08 09:28:37		jarrod_ (~jarrod@pdpc/supporter/active/jarrod) has quit (Ping timeout: 265 seconds)
2014-11-08 09:29:23		davidstone (~david@184-96-181-40.hlrn.qwest.net) has joined ##c++
2014-11-08 09:30:08		cubik (~cubik@2601:a:4f80:1e0:58dd:128a:6f4:b811) has joined ##c++
2014-11-08 09:30:18		Lowl3v3l (~Lowl3v3l@2a02:810a:8380:92c:7954:7611:b6a1:7d14) has quit (Quit: Leaving)
2014-11-08 09:32:31		lh_mouse (~lh_mouse@unaffiliated/lh-mouse/x-3986007) has quit (Read error: Connection reset by peer)
2014-11-08 09:34:04		int0x27h (~int0x27h@unaffiliated/int0x27h) has joined ##c++
2014-11-08 09:35:44		Hannibal_Smith (~Hannibal_@host216-4-dynamic.43-79-r.retail.telecomitalia.it) has quit (Quit: Sto andando via)
2014-11-08 09:36:12		Leoneof` (~Leoneof@unaffiliated/leoneof) has joined ##c++
2014-11-08 09:36:58		JohnnyL (~john@ool-45782e83.dyn.optonline.net) has joined ##c++
2014-11-08 09:37:54		iveevue (~na@unaffiliated/iveevue) has joined ##c++
2014-11-08 09:38:24		Leoneof (~Leoneof@unaffiliated/leoneof) has quit (Ping timeout: 272 seconds)
2014-11-08 09:40:32		JohnnyL (~john@ool-45782e83.dyn.optonline.net) has quit (Client Quit)
2014-11-08 09:40:44		clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Ping timeout: 264 seconds)
2014-11-08 09:41:58		detrino (~chris@unaffiliated/det) has quit (Ping timeout: 250 seconds)
2014-11-08 09:42:04		mattallmill (~mattallmi@129.130.175.155) has joined ##c++
2014-11-08 09:45:42		zima (zima@c75.152.27-202.clta.globetrotter.net) has joined ##c++
2014-11-08 09:45:58		clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined ##c++
2014-11-08 09:49:17		saml_ (~saml@pool-71-190-3-251.nycmny.east.verizon.net) has joined ##c++
2014-11-08 09:50:28		blipped_away (~quassel@119.130.113.27) has quit (Read error: Connection reset by peer)
2014-11-08 09:53:50		reVrost (~reVrost@CPE-58-172-99-21.mqzo1.cht.bigpond.net.au) has joined ##c++
2014-11-08 09:57:11		iveevue (~na@unaffiliated/iveevue) has quit (Quit: Leaving)
2014-11-08 09:59:46		licnep (uid4387@gateway/web/irccloud.com/x-znhotltsnguatwna) has joined ##c++
2014-11-08 09:59:50		deekej (~deekej@77-57-67-41.dclient.hispeed.ch) has joined ##c++
2014-11-08 09:59:59		Ulrike_Rayne (~Ulrike_Ra@cpe-65-24-84-7.columbus.res.rr.com) has joined ##c++
2014-11-08 10:00:03		a_le (~a_le@c-98-210-111-144.hsd1.ca.comcast.net) has joined ##c++
2014-11-08 10:00:23		soulcake (~soulcake@unaffiliated/soulcake) has quit (Quit: Quack.)
